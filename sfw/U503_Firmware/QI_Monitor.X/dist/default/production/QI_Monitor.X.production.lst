

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 17:22:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1,inline
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   175                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   176                           	psect	text149,global,reloc=2,class=CODE,delta=1
   177                           	psect	text150,global,reloc=2,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=2,class=CODE,delta=1
   182                           	psect	text155,global,reloc=2,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=2,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1
   186                           	psect	text159,global,reloc=2,class=CODE,delta=1
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1
   188                           	psect	text161,global,reloc=2,class=CODE,delta=1
   189                           	psect	text162,global,reloc=2,class=CODE,delta=1
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1
   191                           	psect	text164,global,reloc=2,class=CODE,delta=1
   192                           	psect	text165,global,reloc=2,class=CODE,delta=1
   193                           	psect	text166,global,reloc=2,class=CODE,delta=1
   194                           	psect	text167,global,reloc=2,class=CODE,delta=1
   195                           	psect	text168,global,reloc=2,class=CODE,delta=1
   196                           	psect	text169,global,reloc=2,class=CODE,delta=1
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	text171,global,reloc=2,class=CODE,delta=1
   199                           	psect	text172,global,reloc=2,class=CODE,delta=1
   200                           	psect	text173,global,reloc=2,class=CODE,delta=1
   201                           	psect	text174,global,reloc=2,class=CODE,delta=1
   202                           	psect	text175,global,reloc=2,class=CODE,delta=1
   203                           	psect	text176,global,reloc=2,class=CODE,delta=1
   204                           	psect	text177,global,reloc=2,class=CODE,delta=1
   205                           	psect	text178,global,reloc=2,class=CODE,delta=1
   206                           	psect	text179,global,reloc=2,class=CODE,delta=1
   207                           	psect	text180,global,reloc=2,class=CODE,delta=1
   208                           	psect	text181,global,reloc=2,class=CODE,delta=1
   209                           	psect	text182,global,reloc=2,class=CODE,delta=1
   210                           	psect	text183,global,reloc=2,class=CODE,delta=1
   211                           	psect	text184,global,reloc=2,class=CODE,delta=1
   212                           	psect	text185,global,reloc=2,class=CODE,delta=1
   213                           	psect	text186,global,reloc=2,class=CODE,delta=1
   214                           	psect	text187,global,reloc=2,class=CODE,delta=1
   215                           	psect	text188,global,reloc=2,class=CODE,delta=1
   216                           	psect	text189,global,reloc=2,class=CODE,delta=1
   217                           	psect	text190,global,reloc=2,class=CODE,delta=1
   218                           	psect	text191,global,reloc=2,class=CODE,delta=1
   219                           	psect	text192,global,reloc=2,class=CODE,delta=1
   220                           	psect	text193,global,reloc=2,class=CODE,delta=1
   221                           	psect	text194,global,reloc=2,class=CODE,delta=1
   222                           	psect	text195,global,reloc=2,class=CODE,delta=1
   223                           	psect	text196,global,reloc=2,class=CODE,delta=1
   224                           	psect	text197,global,reloc=2,class=CODE,delta=1
   225                           	psect	text198,global,reloc=2,class=CODE,delta=1
   226                           	psect	text199,global,reloc=2,class=CODE,delta=1
   227                           	psect	text200,global,reloc=2,class=CODE,delta=1
   228                           	psect	text201,global,reloc=2,class=CODE,delta=1
   229                           	psect	text202,global,reloc=2,class=CODE,delta=1
   230                           	psect	text203,global,reloc=2,class=CODE,delta=1
   231                           	psect	text204,global,reloc=2,class=CODE,delta=1
   232                           	psect	text205,global,reloc=2,class=CODE,delta=1
   233                           	psect	text206,global,reloc=2,class=CODE,delta=1,group=2
   234                           	psect	text207,global,reloc=2,class=CODE,delta=1
   235                           	psect	text208,global,reloc=2,class=CODE,delta=1
   236                           	psect	text209,global,reloc=2,class=CODE,delta=1
   237                           	psect	text210,global,reloc=2,class=CODE,delta=1
   238                           	psect	text211,global,reloc=2,class=CODE,delta=1
   239                           	psect	text212,global,reloc=2,class=CODE,delta=1
   240                           	psect	text213,global,reloc=2,class=CODE,delta=1
   241                           	psect	text214,global,reloc=2,class=CODE,delta=1
   242                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   243                           	psect	text215,global,reloc=2,class=CODE,delta=1
   244                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   245                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   246  0000                     
   247                           ; Version 2.05
   248                           ; Generated 20/12/2018 GMT
   249                           ; 
   250                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   251                           ; All rights reserved.
   252                           ; 
   253                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   254                           ; 
   255                           ; Redistribution and use in source and binary forms, with or without modification, are
   256                           ; permitted provided that the following conditions are met:
   257                           ; 
   258                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   259                           ;        conditions and the following disclaimer.
   260                           ; 
   261                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   262                           ;        of conditions and the following disclaimer in the documentation and/or other
   263                           ;        materials provided with the distribution.
   264                           ; 
   265                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   266                           ;        software without specific prior written permission.
   267                           ; 
   268                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   269                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   270                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   271                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   272                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   273                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   274                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   275                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   276                           ; 
   277                           ; 
   278                           ; Code-generator required, PIC18F27K40 Definitions
   279                           ; 
   280                           ; SFR Addresses
   281  0000                     
   282                           	psect	idataBANK0
   283  01CC38                     __pidataBANK0:
   284                           	opt callstack 0
   285                           
   286                           ;initializer for _OLED_update_time
   287  01CC38  03                 	db	3
   288                           
   289                           ;initializer for _next_adc_channel
   290  01CC39  3C                 	db	60
   291                           
   292                           	psect	idataBANK1
   293  01CA38                     __pidataBANK1:
   294                           	opt callstack 0
   295                           
   296                           ;initializer for getCauseOfResetString@strings
   297  01CA38  A2                 	db	low STR_23
   298  01CA39  FB                 	db	high STR_23
   299  01CA3A  1C                 	db	low STR_24
   300  01CA3B  FC                 	db	high STR_24
   301  01CA3C  B2                 	db	low STR_25
   302  01CA3D  FB                 	db	high STR_25
   303  01CA3E  E8                 	db	low STR_26
   304  01CA3F  FA                 	db	high STR_26
   305  01CA40  42                 	db	low (STR_28+9)
   306  01CA41  F4                 	db	high (STR_28+9)
   307  01CA42  39                 	db	low STR_28
   308  01CA43  F4                 	db	high STR_28
   309  01CA44  B6                 	db	low STR_29
   310  01CA45  F8                 	db	high STR_29
   311  01CA46  70                 	db	low STR_30
   312  01CA47  FA                 	db	high STR_30
   313  01CA48  30                 	db	low STR_31
   314  01CA49  FA                 	db	high STR_31
   315                           
   316                           	psect	idataBANK2
   317  01CA4A                     __pidataBANK2:
   318                           	opt callstack 0
   319                           
   320                           ;initializer for getCauseOfResetStringSmall@strings
   321  01CA4A  BA                 	db	low STR_22
   322  01CA4B  FE                 	db	high STR_22
   323  01CA4C  B0                 	db	low STR_34
   324  01CA4D  FE                 	db	high STR_34
   325  01CA4E  A6                 	db	low STR_35
   326  01CA4F  FE                 	db	high STR_35
   327  01CA50  54                 	db	low STR_36
   328  01CA51  FE                 	db	high STR_36
   329  01CA52  60                 	db	low (STR_38+1)
   330  01CA53  FE                 	db	high (STR_38+1)
   331  01CA54  5F                 	db	low STR_38
   332  01CA55  FE                 	db	high STR_38
   333  01CA56  0D                 	db	low STR_39
   334  01CA57  FC                 	db	high STR_39
   335  01CA58  3E                 	db	low STR_40
   336  01CA59  FE                 	db	high STR_40
   337  01CA5A  49                 	db	low STR_41
   338  01CA5B  FE                 	db	high STR_41
   339                           
   340                           	psect	mediumconst
   341  00E4DA                     __pmediumconst:
   342                           	opt callstack 0
   343  00E4DA  00                 	db	0
   344  00E4DB                     __powers_:
   345                           	opt callstack 0
   346  00E4DB  0000               	dw	0
   347  00E4DD  3F80               	dw	16256
   348  00E4DF  0000               	dw	0
   349  00E4E1  4120               	dw	16672
   350  00E4E3  0000               	dw	0
   351  00E4E5  42C8               	dw	17096
   352  00E4E7  0000               	dw	0
   353  00E4E9  447A               	dw	17530
   354  00E4EB  4000               	dw	16384
   355  00E4ED  461C               	dw	17948
   356  00E4EF  5000               	dw	20480
   357  00E4F1  47C3               	dw	18371
   358  00E4F3  2400               	dw	9216
   359  00E4F5  4974               	dw	18804
   360  00E4F7  9680               	dw	38528
   361  00E4F9  4B18               	dw	19224
   362  00E4FB  BC20               	dw	48160
   363  00E4FD  4CBE               	dw	19646
   364  00E4FF  6B28               	dw	27432
   365  00E501  4E6E               	dw	20078
   366  00E503  02F9               	dw	761
   367  00E505  5015               	dw	20501
   368  00E507  78EC               	dw	30956
   369  00E509  60AD               	dw	24749
   370  00E50B  F2CA               	dw	62154
   371  00E50D  7149               	dw	29001
   372  00E50F                     __end_of__powers_:
   373                           	opt callstack 0
   374  00E50F                     __npowers_:
   375                           	opt callstack 0
   376  00E50F  0000               	dw	0
   377  00E511  3F80               	dw	16256
   378  00E513  CCCD               	dw	52429
   379  00E515  3DCC               	dw	15820
   380  00E517  D70A               	dw	55050
   381  00E519  3C23               	dw	15395
   382  00E51B  126F               	dw	4719
   383  00E51D  3A83               	dw	14979
   384  00E51F  B717               	dw	46871
   385  00E521  38D1               	dw	14545
   386  00E523  C5AC               	dw	50604
   387  00E525  3727               	dw	14119
   388  00E527  37BD               	dw	14269
   389  00E529  3586               	dw	13702
   390  00E52B  BF95               	dw	49045
   391  00E52D  33D6               	dw	13270
   392  00E52F  CC77               	dw	52343
   393  00E531  322B               	dw	12843
   394  00E533  705F               	dw	28767
   395  00E535  3089               	dw	12425
   396  00E537  E6FF               	dw	59135
   397  00E539  2EDB               	dw	11995
   398  00E53B  E508               	dw	58632
   399  00E53D  1E3C               	dw	7740
   400  00E53F  4260               	dw	16992
   401  00E541  0DA2               	dw	3490
   402  00E543                     __end_of__npowers_:
   403                           	opt callstack 0
   404  00E543                     _hexpowers:
   405                           	opt callstack 0
   406  00E543  0001               	dw	1
   407  00E545  0000               	dw	0
   408  00E547  0010               	dw	16
   409  00E549  0000               	dw	0
   410  00E54B  0100               	dw	256
   411  00E54D  0000               	dw	0
   412  00E54F  1000               	dw	4096
   413  00E551  0000               	dw	0
   414  00E553  0000               	dw	0
   415  00E555  0001               	dw	1
   416  00E557  0000               	dw	0
   417  00E559  0010               	dw	16
   418  00E55B  0000               	dw	0
   419  00E55D  0100               	dw	256
   420  00E55F  0000               	dw	0
   421  00E561  1000               	dw	4096
   422  00E563                     __end_of_hexpowers:
   423                           	opt callstack 0
   424  00E563                     _OledFont:
   425                           	opt callstack 0
   426  00E563  00                 	db	0
   427  00E564  00                 	db	0
   428  00E565  00                 	db	0
   429  00E566  00                 	db	0
   430  00E567  00                 	db	0
   431  00E568  00                 	db	0
   432  00E569  00                 	db	0
   433  00E56A  00                 	db	0
   434  00E56B  00                 	db	0
   435  00E56C  00                 	db	0
   436  00E56D  5F                 	db	95
   437  00E56E  00                 	db	0
   438  00E56F  00                 	db	0
   439  00E570  00                 	db	0
   440  00E571  00                 	db	0
   441  00E572  00                 	db	0
   442  00E573  00                 	db	0
   443  00E574  00                 	db	0
   444  00E575  07                 	db	7
   445  00E576  00                 	db	0
   446  00E577  07                 	db	7
   447  00E578  00                 	db	0
   448  00E579  00                 	db	0
   449  00E57A  00                 	db	0
   450  00E57B  00                 	db	0
   451  00E57C  14                 	db	20
   452  00E57D  7F                 	db	127
   453  00E57E  14                 	db	20
   454  00E57F  7F                 	db	127
   455  00E580  14                 	db	20
   456  00E581  00                 	db	0
   457  00E582  00                 	db	0
   458  00E583  00                 	db	0
   459  00E584  24                 	db	36
   460  00E585  2A                 	db	42
   461  00E586  7F                 	db	127
   462  00E587  2A                 	db	42
   463  00E588  12                 	db	18
   464  00E589  00                 	db	0
   465  00E58A  00                 	db	0
   466  00E58B  00                 	db	0
   467  00E58C  23                 	db	35
   468  00E58D  13                 	db	19
   469  00E58E  08                 	db	8
   470  00E58F  64                 	db	100
   471  00E590  62                 	db	98
   472  00E591  00                 	db	0
   473  00E592  00                 	db	0
   474  00E593  00                 	db	0
   475  00E594  36                 	db	54
   476  00E595  49                 	db	73
   477  00E596  55                 	db	85
   478  00E597  22                 	db	34
   479  00E598  50                 	db	80
   480  00E599  00                 	db	0
   481  00E59A  00                 	db	0
   482  00E59B  00                 	db	0
   483  00E59C  00                 	db	0
   484  00E59D  05                 	db	5
   485  00E59E  03                 	db	3
   486  00E59F  00                 	db	0
   487  00E5A0  00                 	db	0
   488  00E5A1  00                 	db	0
   489  00E5A2  00                 	db	0
   490  00E5A3  00                 	db	0
   491  00E5A4  1C                 	db	28
   492  00E5A5  22                 	db	34
   493  00E5A6  41                 	db	65
   494  00E5A7  00                 	db	0
   495  00E5A8  00                 	db	0
   496  00E5A9  00                 	db	0
   497  00E5AA  00                 	db	0
   498  00E5AB  00                 	db	0
   499  00E5AC  41                 	db	65
   500  00E5AD  22                 	db	34
   501  00E5AE  1C                 	db	28
   502  00E5AF  00                 	db	0
   503  00E5B0  00                 	db	0
   504  00E5B1  00                 	db	0
   505  00E5B2  00                 	db	0
   506  00E5B3  00                 	db	0
   507  00E5B4  08                 	db	8
   508  00E5B5  2A                 	db	42
   509  00E5B6  1C                 	db	28
   510  00E5B7  2A                 	db	42
   511  00E5B8  08                 	db	8
   512  00E5B9  00                 	db	0
   513  00E5BA  00                 	db	0
   514  00E5BB  00                 	db	0
   515  00E5BC  08                 	db	8
   516  00E5BD  08                 	db	8
   517  00E5BE  3E                 	db	62
   518  00E5BF  08                 	db	8
   519  00E5C0  08                 	db	8
   520  00E5C1  00                 	db	0
   521  00E5C2  00                 	db	0
   522  00E5C3  00                 	db	0
   523  00E5C4  A0                 	db	160
   524  00E5C5  60                 	db	96
   525  00E5C6  00                 	db	0
   526  00E5C7  00                 	db	0
   527  00E5C8  00                 	db	0
   528  00E5C9  00                 	db	0
   529  00E5CA  00                 	db	0
   530  00E5CB  00                 	db	0
   531  00E5CC  08                 	db	8
   532  00E5CD  08                 	db	8
   533  00E5CE  08                 	db	8
   534  00E5CF  08                 	db	8
   535  00E5D0  08                 	db	8
   536  00E5D1  00                 	db	0
   537  00E5D2  00                 	db	0
   538  00E5D3  00                 	db	0
   539  00E5D4  60                 	db	96
   540  00E5D5  60                 	db	96
   541  00E5D6  00                 	db	0
   542  00E5D7  00                 	db	0
   543  00E5D8  00                 	db	0
   544  00E5D9  00                 	db	0
   545  00E5DA  00                 	db	0
   546  00E5DB  00                 	db	0
   547  00E5DC  20                 	db	32
   548  00E5DD  10                 	db	16
   549  00E5DE  08                 	db	8
   550  00E5DF  04                 	db	4
   551  00E5E0  02                 	db	2
   552  00E5E1  00                 	db	0
   553  00E5E2  00                 	db	0
   554  00E5E3  00                 	db	0
   555  00E5E4  3E                 	db	62
   556  00E5E5  51                 	db	81
   557  00E5E6  49                 	db	73
   558  00E5E7  45                 	db	69
   559  00E5E8  3E                 	db	62
   560  00E5E9  00                 	db	0
   561  00E5EA  00                 	db	0
   562  00E5EB  00                 	db	0
   563  00E5EC  00                 	db	0
   564  00E5ED  42                 	db	66
   565  00E5EE  7F                 	db	127
   566  00E5EF  40                 	db	64
   567  00E5F0  00                 	db	0
   568  00E5F1  00                 	db	0
   569  00E5F2  00                 	db	0
   570  00E5F3  00                 	db	0
   571  00E5F4  62                 	db	98
   572  00E5F5  51                 	db	81
   573  00E5F6  49                 	db	73
   574  00E5F7  49                 	db	73
   575  00E5F8  46                 	db	70
   576  00E5F9  00                 	db	0
   577  00E5FA  00                 	db	0
   578  00E5FB  00                 	db	0
   579  00E5FC  22                 	db	34
   580  00E5FD  41                 	db	65
   581  00E5FE  49                 	db	73
   582  00E5FF  49                 	db	73
   583  00E600  36                 	db	54
   584  00E601  00                 	db	0
   585  00E602  00                 	db	0
   586  00E603  00                 	db	0
   587  00E604  18                 	db	24
   588  00E605  14                 	db	20
   589  00E606  12                 	db	18
   590  00E607  7F                 	db	127
   591  00E608  10                 	db	16
   592  00E609  00                 	db	0
   593  00E60A  00                 	db	0
   594  00E60B  00                 	db	0
   595  00E60C  27                 	db	39
   596  00E60D  45                 	db	69
   597  00E60E  45                 	db	69
   598  00E60F  45                 	db	69
   599  00E610  39                 	db	57
   600  00E611  00                 	db	0
   601  00E612  00                 	db	0
   602  00E613  00                 	db	0
   603  00E614  3C                 	db	60
   604  00E615  4A                 	db	74
   605  00E616  49                 	db	73
   606  00E617  49                 	db	73
   607  00E618  30                 	db	48
   608  00E619  00                 	db	0
   609  00E61A  00                 	db	0
   610  00E61B  00                 	db	0
   611  00E61C  01                 	db	1
   612  00E61D  71                 	db	113
   613  00E61E  09                 	db	9
   614  00E61F  05                 	db	5
   615  00E620  03                 	db	3
   616  00E621  00                 	db	0
   617  00E622  00                 	db	0
   618  00E623  00                 	db	0
   619  00E624  36                 	db	54
   620  00E625  49                 	db	73
   621  00E626  49                 	db	73
   622  00E627  49                 	db	73
   623  00E628  36                 	db	54
   624  00E629  00                 	db	0
   625  00E62A  00                 	db	0
   626  00E62B  00                 	db	0
   627  00E62C  06                 	db	6
   628  00E62D  49                 	db	73
   629  00E62E  49                 	db	73
   630  00E62F  29                 	db	41
   631  00E630  1E                 	db	30
   632  00E631  00                 	db	0
   633  00E632  00                 	db	0
   634  00E633  00                 	db	0
   635  00E634  00                 	db	0
   636  00E635  36                 	db	54
   637  00E636  36                 	db	54
   638  00E637  00                 	db	0
   639  00E638  00                 	db	0
   640  00E639  00                 	db	0
   641  00E63A  00                 	db	0
   642  00E63B  00                 	db	0
   643  00E63C  00                 	db	0
   644  00E63D  AC                 	db	172
   645  00E63E  6C                 	db	108
   646  00E63F  00                 	db	0
   647  00E640  00                 	db	0
   648  00E641  00                 	db	0
   649  00E642  00                 	db	0
   650  00E643  00                 	db	0
   651  00E644  08                 	db	8
   652  00E645  14                 	db	20
   653  00E646  22                 	db	34
   654  00E647  41                 	db	65
   655  00E648  00                 	db	0
   656  00E649  00                 	db	0
   657  00E64A  00                 	db	0
   658  00E64B  00                 	db	0
   659  00E64C  14                 	db	20
   660  00E64D  14                 	db	20
   661  00E64E  14                 	db	20
   662  00E64F  14                 	db	20
   663  00E650  14                 	db	20
   664  00E651  00                 	db	0
   665  00E652  00                 	db	0
   666  00E653  00                 	db	0
   667  00E654  41                 	db	65
   668  00E655  22                 	db	34
   669  00E656  14                 	db	20
   670  00E657  08                 	db	8
   671  00E658  00                 	db	0
   672  00E659  00                 	db	0
   673  00E65A  00                 	db	0
   674  00E65B  00                 	db	0
   675  00E65C  02                 	db	2
   676  00E65D  01                 	db	1
   677  00E65E  51                 	db	81
   678  00E65F  09                 	db	9
   679  00E660  06                 	db	6
   680  00E661  00                 	db	0
   681  00E662  00                 	db	0
   682  00E663  00                 	db	0
   683  00E664  32                 	db	50
   684  00E665  49                 	db	73
   685  00E666  79                 	db	121
   686  00E667  41                 	db	65
   687  00E668  3E                 	db	62
   688  00E669  00                 	db	0
   689  00E66A  00                 	db	0
   690  00E66B  00                 	db	0
   691  00E66C  7E                 	db	126
   692  00E66D  09                 	db	9
   693  00E66E  09                 	db	9
   694  00E66F  09                 	db	9
   695  00E670  7E                 	db	126
   696  00E671  00                 	db	0
   697  00E672  00                 	db	0
   698  00E673  00                 	db	0
   699  00E674  7F                 	db	127
   700  00E675  49                 	db	73
   701  00E676  49                 	db	73
   702  00E677  49                 	db	73
   703  00E678  36                 	db	54
   704  00E679  00                 	db	0
   705  00E67A  00                 	db	0
   706  00E67B  00                 	db	0
   707  00E67C  3E                 	db	62
   708  00E67D  41                 	db	65
   709  00E67E  41                 	db	65
   710  00E67F  41                 	db	65
   711  00E680  22                 	db	34
   712  00E681  00                 	db	0
   713  00E682  00                 	db	0
   714  00E683  00                 	db	0
   715  00E684  7F                 	db	127
   716  00E685  41                 	db	65
   717  00E686  41                 	db	65
   718  00E687  22                 	db	34
   719  00E688  1C                 	db	28
   720  00E689  00                 	db	0
   721  00E68A  00                 	db	0
   722  00E68B  00                 	db	0
   723  00E68C  7F                 	db	127
   724  00E68D  49                 	db	73
   725  00E68E  49                 	db	73
   726  00E68F  49                 	db	73
   727  00E690  41                 	db	65
   728  00E691  00                 	db	0
   729  00E692  00                 	db	0
   730  00E693  00                 	db	0
   731  00E694  7F                 	db	127
   732  00E695  09                 	db	9
   733  00E696  09                 	db	9
   734  00E697  09                 	db	9
   735  00E698  01                 	db	1
   736  00E699  00                 	db	0
   737  00E69A  00                 	db	0
   738  00E69B  00                 	db	0
   739  00E69C  3E                 	db	62
   740  00E69D  41                 	db	65
   741  00E69E  41                 	db	65
   742  00E69F  51                 	db	81
   743  00E6A0  72                 	db	114
   744  00E6A1  00                 	db	0
   745  00E6A2  00                 	db	0
   746  00E6A3  00                 	db	0
   747  00E6A4  7F                 	db	127
   748  00E6A5  08                 	db	8
   749  00E6A6  08                 	db	8
   750  00E6A7  08                 	db	8
   751  00E6A8  7F                 	db	127
   752  00E6A9  00                 	db	0
   753  00E6AA  00                 	db	0
   754  00E6AB  00                 	db	0
   755  00E6AC  41                 	db	65
   756  00E6AD  7F                 	db	127
   757  00E6AE  41                 	db	65
   758  00E6AF  00                 	db	0
   759  00E6B0  00                 	db	0
   760  00E6B1  00                 	db	0
   761  00E6B2  00                 	db	0
   762  00E6B3  00                 	db	0
   763  00E6B4  20                 	db	32
   764  00E6B5  40                 	db	64
   765  00E6B6  41                 	db	65
   766  00E6B7  3F                 	db	63
   767  00E6B8  01                 	db	1
   768  00E6B9  00                 	db	0
   769  00E6BA  00                 	db	0
   770  00E6BB  00                 	db	0
   771  00E6BC  7F                 	db	127
   772  00E6BD  08                 	db	8
   773  00E6BE  14                 	db	20
   774  00E6BF  22                 	db	34
   775  00E6C0  41                 	db	65
   776  00E6C1  00                 	db	0
   777  00E6C2  00                 	db	0
   778  00E6C3  00                 	db	0
   779  00E6C4  7F                 	db	127
   780  00E6C5  40                 	db	64
   781  00E6C6  40                 	db	64
   782  00E6C7  40                 	db	64
   783  00E6C8  40                 	db	64
   784  00E6C9  00                 	db	0
   785  00E6CA  00                 	db	0
   786  00E6CB  00                 	db	0
   787  00E6CC  7F                 	db	127
   788  00E6CD  02                 	db	2
   789  00E6CE  0C                 	db	12
   790  00E6CF  02                 	db	2
   791  00E6D0  7F                 	db	127
   792  00E6D1  00                 	db	0
   793  00E6D2  00                 	db	0
   794  00E6D3  00                 	db	0
   795  00E6D4  7F                 	db	127
   796  00E6D5  04                 	db	4
   797  00E6D6  08                 	db	8
   798  00E6D7  10                 	db	16
   799  00E6D8  7F                 	db	127
   800  00E6D9  00                 	db	0
   801  00E6DA  00                 	db	0
   802  00E6DB  00                 	db	0
   803  00E6DC  3E                 	db	62
   804  00E6DD  41                 	db	65
   805  00E6DE  41                 	db	65
   806  00E6DF  41                 	db	65
   807  00E6E0  3E                 	db	62
   808  00E6E1  00                 	db	0
   809  00E6E2  00                 	db	0
   810  00E6E3  00                 	db	0
   811  00E6E4  7F                 	db	127
   812  00E6E5  09                 	db	9
   813  00E6E6  09                 	db	9
   814  00E6E7  09                 	db	9
   815  00E6E8  06                 	db	6
   816  00E6E9  00                 	db	0
   817  00E6EA  00                 	db	0
   818  00E6EB  00                 	db	0
   819  00E6EC  3E                 	db	62
   820  00E6ED  41                 	db	65
   821  00E6EE  51                 	db	81
   822  00E6EF  21                 	db	33
   823  00E6F0  5E                 	db	94
   824  00E6F1  00                 	db	0
   825  00E6F2  00                 	db	0
   826  00E6F3  00                 	db	0
   827  00E6F4  7F                 	db	127
   828  00E6F5  09                 	db	9
   829  00E6F6  19                 	db	25
   830  00E6F7  29                 	db	41
   831  00E6F8  46                 	db	70
   832  00E6F9  00                 	db	0
   833  00E6FA  00                 	db	0
   834  00E6FB  00                 	db	0
   835  00E6FC  26                 	db	38
   836  00E6FD  49                 	db	73
   837  00E6FE  49                 	db	73
   838  00E6FF  49                 	db	73
   839  00E700  32                 	db	50
   840  00E701  00                 	db	0
   841  00E702  00                 	db	0
   842  00E703  00                 	db	0
   843  00E704  01                 	db	1
   844  00E705  01                 	db	1
   845  00E706  7F                 	db	127
   846  00E707  01                 	db	1
   847  00E708  01                 	db	1
   848  00E709  00                 	db	0
   849  00E70A  00                 	db	0
   850  00E70B  00                 	db	0
   851  00E70C  3F                 	db	63
   852  00E70D  40                 	db	64
   853  00E70E  40                 	db	64
   854  00E70F  40                 	db	64
   855  00E710  3F                 	db	63
   856  00E711  00                 	db	0
   857  00E712  00                 	db	0
   858  00E713  00                 	db	0
   859  00E714  1F                 	db	31
   860  00E715  20                 	db	32
   861  00E716  40                 	db	64
   862  00E717  20                 	db	32
   863  00E718  1F                 	db	31
   864  00E719  00                 	db	0
   865  00E71A  00                 	db	0
   866  00E71B  00                 	db	0
   867  00E71C  3F                 	db	63
   868  00E71D  40                 	db	64
   869  00E71E  38                 	db	56
   870  00E71F  40                 	db	64
   871  00E720  3F                 	db	63
   872  00E721  00                 	db	0
   873  00E722  00                 	db	0
   874  00E723  00                 	db	0
   875  00E724  63                 	db	99
   876  00E725  14                 	db	20
   877  00E726  08                 	db	8
   878  00E727  14                 	db	20
   879  00E728  63                 	db	99
   880  00E729  00                 	db	0
   881  00E72A  00                 	db	0
   882  00E72B  00                 	db	0
   883  00E72C  03                 	db	3
   884  00E72D  04                 	db	4
   885  00E72E  78                 	db	120
   886  00E72F  04                 	db	4
   887  00E730  03                 	db	3
   888  00E731  00                 	db	0
   889  00E732  00                 	db	0
   890  00E733  00                 	db	0
   891  00E734  61                 	db	97
   892  00E735  51                 	db	81
   893  00E736  49                 	db	73
   894  00E737  45                 	db	69
   895  00E738  43                 	db	67
   896  00E739  00                 	db	0
   897  00E73A  00                 	db	0
   898  00E73B  00                 	db	0
   899  00E73C  7F                 	db	127
   900  00E73D  41                 	db	65
   901  00E73E  41                 	db	65
   902  00E73F  00                 	db	0
   903  00E740  00                 	db	0
   904  00E741  00                 	db	0
   905  00E742  00                 	db	0
   906  00E743  00                 	db	0
   907  00E744  02                 	db	2
   908  00E745  04                 	db	4
   909  00E746  08                 	db	8
   910  00E747  10                 	db	16
   911  00E748  20                 	db	32
   912  00E749  00                 	db	0
   913  00E74A  00                 	db	0
   914  00E74B  00                 	db	0
   915  00E74C  41                 	db	65
   916  00E74D  41                 	db	65
   917  00E74E  7F                 	db	127
   918  00E74F  00                 	db	0
   919  00E750  00                 	db	0
   920  00E751  00                 	db	0
   921  00E752  00                 	db	0
   922  00E753  00                 	db	0
   923  00E754  04                 	db	4
   924  00E755  02                 	db	2
   925  00E756  01                 	db	1
   926  00E757  02                 	db	2
   927  00E758  04                 	db	4
   928  00E759  00                 	db	0
   929  00E75A  00                 	db	0
   930  00E75B  00                 	db	0
   931  00E75C  80                 	db	128
   932  00E75D  80                 	db	128
   933  00E75E  80                 	db	128
   934  00E75F  80                 	db	128
   935  00E760  80                 	db	128
   936  00E761  00                 	db	0
   937  00E762  00                 	db	0
   938  00E763  00                 	db	0
   939  00E764  01                 	db	1
   940  00E765  02                 	db	2
   941  00E766  04                 	db	4
   942  00E767  00                 	db	0
   943  00E768  00                 	db	0
   944  00E769  00                 	db	0
   945  00E76A  00                 	db	0
   946  00E76B  00                 	db	0
   947  00E76C  20                 	db	32
   948  00E76D  54                 	db	84
   949  00E76E  54                 	db	84
   950  00E76F  54                 	db	84
   951  00E770  78                 	db	120
   952  00E771  00                 	db	0
   953  00E772  00                 	db	0
   954  00E773  00                 	db	0
   955  00E774  7F                 	db	127
   956  00E775  48                 	db	72
   957  00E776  44                 	db	68
   958  00E777  44                 	db	68
   959  00E778  38                 	db	56
   960  00E779  00                 	db	0
   961  00E77A  00                 	db	0
   962  00E77B  00                 	db	0
   963  00E77C  38                 	db	56
   964  00E77D  44                 	db	68
   965  00E77E  44                 	db	68
   966  00E77F  28                 	db	40
   967  00E780  00                 	db	0
   968  00E781  00                 	db	0
   969  00E782  00                 	db	0
   970  00E783  00                 	db	0
   971  00E784  38                 	db	56
   972  00E785  44                 	db	68
   973  00E786  44                 	db	68
   974  00E787  48                 	db	72
   975  00E788  7F                 	db	127
   976  00E789  00                 	db	0
   977  00E78A  00                 	db	0
   978  00E78B  00                 	db	0
   979  00E78C  38                 	db	56
   980  00E78D  54                 	db	84
   981  00E78E  54                 	db	84
   982  00E78F  54                 	db	84
   983  00E790  18                 	db	24
   984  00E791  00                 	db	0
   985  00E792  00                 	db	0
   986  00E793  00                 	db	0
   987  00E794  08                 	db	8
   988  00E795  7E                 	db	126
   989  00E796  09                 	db	9
   990  00E797  02                 	db	2
   991  00E798  00                 	db	0
   992  00E799  00                 	db	0
   993  00E79A  00                 	db	0
   994  00E79B  00                 	db	0
   995  00E79C  18                 	db	24
   996  00E79D  A4                 	db	164
   997  00E79E  A4                 	db	164
   998  00E79F  A4                 	db	164
   999  00E7A0  7C                 	db	124
  1000  00E7A1  00                 	db	0
  1001  00E7A2  00                 	db	0
  1002  00E7A3  00                 	db	0
  1003  00E7A4  7F                 	db	127
  1004  00E7A5  08                 	db	8
  1005  00E7A6  04                 	db	4
  1006  00E7A7  04                 	db	4
  1007  00E7A8  78                 	db	120
  1008  00E7A9  00                 	db	0
  1009  00E7AA  00                 	db	0
  1010  00E7AB  00                 	db	0
  1011  00E7AC  00                 	db	0
  1012  00E7AD  7D                 	db	125
  1013  00E7AE  00                 	db	0
  1014  00E7AF  00                 	db	0
  1015  00E7B0  00                 	db	0
  1016  00E7B1  00                 	db	0
  1017  00E7B2  00                 	db	0
  1018  00E7B3  00                 	db	0
  1019  00E7B4  80                 	db	128
  1020  00E7B5  84                 	db	132
  1021  00E7B6  7D                 	db	125
  1022  00E7B7  00                 	db	0
  1023  00E7B8  00                 	db	0
  1024  00E7B9  00                 	db	0
  1025  00E7BA  00                 	db	0
  1026  00E7BB  00                 	db	0
  1027  00E7BC  7F                 	db	127
  1028  00E7BD  10                 	db	16
  1029  00E7BE  28                 	db	40
  1030  00E7BF  44                 	db	68
  1031  00E7C0  00                 	db	0
  1032  00E7C1  00                 	db	0
  1033  00E7C2  00                 	db	0
  1034  00E7C3  00                 	db	0
  1035  00E7C4  41                 	db	65
  1036  00E7C5  7F                 	db	127
  1037  00E7C6  40                 	db	64
  1038  00E7C7  00                 	db	0
  1039  00E7C8  00                 	db	0
  1040  00E7C9  00                 	db	0
  1041  00E7CA  00                 	db	0
  1042  00E7CB  00                 	db	0
  1043  00E7CC  7C                 	db	124
  1044  00E7CD  04                 	db	4
  1045  00E7CE  18                 	db	24
  1046  00E7CF  04                 	db	4
  1047  00E7D0  78                 	db	120
  1048  00E7D1  00                 	db	0
  1049  00E7D2  00                 	db	0
  1050  00E7D3  00                 	db	0
  1051  00E7D4  7C                 	db	124
  1052  00E7D5  08                 	db	8
  1053  00E7D6  04                 	db	4
  1054  00E7D7  7C                 	db	124
  1055  00E7D8  00                 	db	0
  1056  00E7D9  00                 	db	0
  1057  00E7DA  00                 	db	0
  1058  00E7DB  00                 	db	0
  1059  00E7DC  38                 	db	56
  1060  00E7DD  44                 	db	68
  1061  00E7DE  44                 	db	68
  1062  00E7DF  38                 	db	56
  1063  00E7E0  00                 	db	0
  1064  00E7E1  00                 	db	0
  1065  00E7E2  00                 	db	0
  1066  00E7E3  00                 	db	0
  1067  00E7E4  FC                 	db	252
  1068  00E7E5  24                 	db	36
  1069  00E7E6  24                 	db	36
  1070  00E7E7  18                 	db	24
  1071  00E7E8  00                 	db	0
  1072  00E7E9  00                 	db	0
  1073  00E7EA  00                 	db	0
  1074  00E7EB  00                 	db	0
  1075  00E7EC  18                 	db	24
  1076  00E7ED  24                 	db	36
  1077  00E7EE  24                 	db	36
  1078  00E7EF  FC                 	db	252
  1079  00E7F0  00                 	db	0
  1080  00E7F1  00                 	db	0
  1081  00E7F2  00                 	db	0
  1082  00E7F3  00                 	db	0
  1083  00E7F4  00                 	db	0
  1084  00E7F5  7C                 	db	124
  1085  00E7F6  08                 	db	8
  1086  00E7F7  04                 	db	4
  1087  00E7F8  00                 	db	0
  1088  00E7F9  00                 	db	0
  1089  00E7FA  00                 	db	0
  1090  00E7FB  00                 	db	0
  1091  00E7FC  48                 	db	72
  1092  00E7FD  54                 	db	84
  1093  00E7FE  54                 	db	84
  1094  00E7FF  24                 	db	36
  1095  00E800  00                 	db	0
  1096  00E801  00                 	db	0
  1097  00E802  00                 	db	0
  1098  00E803  00                 	db	0
  1099  00E804  04                 	db	4
  1100  00E805  7F                 	db	127
  1101  00E806  44                 	db	68
  1102  00E807  00                 	db	0
  1103  00E808  00                 	db	0
  1104  00E809  00                 	db	0
  1105  00E80A  00                 	db	0
  1106  00E80B  00                 	db	0
  1107  00E80C  3C                 	db	60
  1108  00E80D  40                 	db	64
  1109  00E80E  40                 	db	64
  1110  00E80F  7C                 	db	124
  1111  00E810  00                 	db	0
  1112  00E811  00                 	db	0
  1113  00E812  00                 	db	0
  1114  00E813  00                 	db	0
  1115  00E814  1C                 	db	28
  1116  00E815  20                 	db	32
  1117  00E816  40                 	db	64
  1118  00E817  20                 	db	32
  1119  00E818  1C                 	db	28
  1120  00E819  00                 	db	0
  1121  00E81A  00                 	db	0
  1122  00E81B  00                 	db	0
  1123  00E81C  3C                 	db	60
  1124  00E81D  40                 	db	64
  1125  00E81E  30                 	db	48
  1126  00E81F  40                 	db	64
  1127  00E820  3C                 	db	60
  1128  00E821  00                 	db	0
  1129  00E822  00                 	db	0
  1130  00E823  00                 	db	0
  1131  00E824  44                 	db	68
  1132  00E825  28                 	db	40
  1133  00E826  10                 	db	16
  1134  00E827  28                 	db	40
  1135  00E828  44                 	db	68
  1136  00E829  00                 	db	0
  1137  00E82A  00                 	db	0
  1138  00E82B  00                 	db	0
  1139  00E82C  1C                 	db	28
  1140  00E82D  A0                 	db	160
  1141  00E82E  A0                 	db	160
  1142  00E82F  7C                 	db	124
  1143  00E830  00                 	db	0
  1144  00E831  00                 	db	0
  1145  00E832  00                 	db	0
  1146  00E833  00                 	db	0
  1147  00E834  44                 	db	68
  1148  00E835  64                 	db	100
  1149  00E836  54                 	db	84
  1150  00E837  4C                 	db	76
  1151  00E838  44                 	db	68
  1152  00E839  00                 	db	0
  1153  00E83A  00                 	db	0
  1154  00E83B  00                 	db	0
  1155  00E83C  08                 	db	8
  1156  00E83D  36                 	db	54
  1157  00E83E  41                 	db	65
  1158  00E83F  00                 	db	0
  1159  00E840  00                 	db	0
  1160  00E841  00                 	db	0
  1161  00E842  00                 	db	0
  1162  00E843  00                 	db	0
  1163  00E844  00                 	db	0
  1164  00E845  7F                 	db	127
  1165  00E846  00                 	db	0
  1166  00E847  00                 	db	0
  1167  00E848  00                 	db	0
  1168  00E849  00                 	db	0
  1169  00E84A  00                 	db	0
  1170  00E84B  00                 	db	0
  1171  00E84C  41                 	db	65
  1172  00E84D  36                 	db	54
  1173  00E84E  08                 	db	8
  1174  00E84F  00                 	db	0
  1175  00E850  00                 	db	0
  1176  00E851  00                 	db	0
  1177  00E852  00                 	db	0
  1178  00E853  00                 	db	0
  1179  00E854  02                 	db	2
  1180  00E855  01                 	db	1
  1181  00E856  01                 	db	1
  1182  00E857  02                 	db	2
  1183  00E858  01                 	db	1
  1184  00E859  00                 	db	0
  1185  00E85A  00                 	db	0
  1186  00E85B  00                 	db	0
  1187  00E85C  02                 	db	2
  1188  00E85D  05                 	db	5
  1189  00E85E  05                 	db	5
  1190  00E85F  02                 	db	2
  1191  00E860  00                 	db	0
  1192  00E861  00                 	db	0
  1193  00E862  00                 	db	0
  1194  00E863                     __end_of_OledFont:
  1195                           	opt callstack 0
  1196  00E863                     _dpowers:
  1197                           	opt callstack 0
  1198  00E863  0001               	dw	1
  1199  00E865  0000               	dw	0
  1200  00E867  000A               	dw	10
  1201  00E869  0000               	dw	0
  1202  00E86B  0064               	dw	100
  1203  00E86D  0000               	dw	0
  1204  00E86F  03E8               	dw	1000
  1205  00E871  0000               	dw	0
  1206  00E873  2710               	dw	10000
  1207  00E875  0000               	dw	0
  1208  00E877  86A0               	dw	34464
  1209  00E879  0001               	dw	1
  1210  00E87B  4240               	dw	16960
  1211  00E87D  000F               	dw	15
  1212  00E87F  9680               	dw	38528
  1213  00E881  0098               	dw	152
  1214  00E883  E100               	dw	57600
  1215  00E885  05F5               	dw	1525
  1216  00E887  CA00               	dw	51712
  1217  00E889  3B9A               	dw	15258
  1218  00E88B                     __end_of_dpowers:
  1219                           	opt callstack 0
  1220  00E88B  0EB8               	dw	3768
  1221  00E88D  43BC               	dw	17340
  1222  00E88F                     __end_of_temp_adc_offset:
  1223                           	opt callstack 0
  1224  00E88F                     STR_231:
  1225  00E88F  20                 	db	32
  1226  00E890  20                 	db	32
  1227  00E891  20                 	db	32
  1228  00E892  20                 	db	32
  1229  00E893  2A                 	db	42
  1230  00E894  49                 	db	73	;'I'
  1231  00E895  44                 	db	68	;'D'
  1232  00E896  4E                 	db	78	;'N'
  1233  00E897  3F                 	db	63	;'?'
  1234  00E898  3A                 	db	58	;':'
  1235  00E899  20                 	db	32
  1236  00E89A  50                 	db	80	;'P'
  1237  00E89B  72                 	db	114	;'r'
  1238  00E89C  69                 	db	105	;'i'
  1239  00E89D  6E                 	db	110	;'n'
  1240  00E89E  74                 	db	116	;'t'
  1241  00E89F  73                 	db	115	;'s'
  1242  00E8A0  20                 	db	32
  1243  00E8A1  69                 	db	105	;'i'
  1244  00E8A2  64                 	db	100	;'d'
  1245  00E8A3  65                 	db	101	;'e'
  1246  00E8A4  6E                 	db	110	;'n'
  1247  00E8A5  74                 	db	116	;'t'
  1248  00E8A6  69                 	db	105	;'i'
  1249  00E8A7  66                 	db	102	;'f'
  1250  00E8A8  69                 	db	105	;'i'
  1251  00E8A9  63                 	db	99	;'c'
  1252  00E8AA  61                 	db	97	;'a'
  1253  00E8AB  74                 	db	116	;'t'
  1254  00E8AC  69                 	db	105	;'i'
  1255  00E8AD  6F                 	db	111	;'o'
  1256  00E8AE  6E                 	db	110	;'n'
  1257  00E8AF  20                 	db	32
  1258  00E8B0  73                 	db	115	;'s'
  1259  00E8B1  74                 	db	116	;'t'
  1260  00E8B2  72                 	db	114	;'r'
  1261  00E8B3  69                 	db	105	;'i'
  1262  00E8B4  6E                 	db	110	;'n'
  1263  00E8B5  67                 	db	103	;'g'
  1264  00E8B6  0A                 	db	10
  1265  00E8B7  0D                 	db	13
  1266  00E8B8  20                 	db	32
  1267  00E8B9  20                 	db	32
  1268  00E8BA  20                 	db	32
  1269  00E8BB  20                 	db	32
  1270  00E8BC  52                 	db	82	;'R'
  1271  00E8BD  65                 	db	101	;'e'
  1272  00E8BE  73                 	db	115	;'s'
  1273  00E8BF  65                 	db	101	;'e'
  1274  00E8C0  74                 	db	116	;'t'
  1275  00E8C1  3A                 	db	58	;':'
  1276  00E8C2  20                 	db	32
  1277  00E8C3  45                 	db	69	;'E'
  1278  00E8C4  78                 	db	120	;'x'
  1279  00E8C5  65                 	db	101	;'e'
  1280  00E8C6  63                 	db	99	;'c'
  1281  00E8C7  75                 	db	117	;'u'
  1282  00E8C8  74                 	db	116	;'t'
  1283  00E8C9  65                 	db	101	;'e'
  1284  00E8CA  73                 	db	115	;'s'
  1285  00E8CB  20                 	db	32
  1286  00E8CC  73                 	db	115	;'s'
  1287  00E8CD  6F                 	db	111	;'o'
  1288  00E8CE  66                 	db	102	;'f'
  1289  00E8CF  74                 	db	116	;'t'
  1290  00E8D0  77                 	db	119	;'w'
  1291  00E8D1  61                 	db	97	;'a'
  1292  00E8D2  72                 	db	114	;'r'
  1293  00E8D3  65                 	db	101	;'e'
  1294  00E8D4  20                 	db	32
  1295  00E8D5  72                 	db	114	;'r'
  1296  00E8D6  65                 	db	101	;'e'
  1297  00E8D7  73                 	db	115	;'s'
  1298  00E8D8  65                 	db	101	;'e'
  1299  00E8D9  74                 	db	116	;'t'
  1300  00E8DA  20                 	db	32
  1301  00E8DB  69                 	db	105	;'i'
  1302  00E8DC  6E                 	db	110	;'n'
  1303  00E8DD  73                 	db	115	;'s'
  1304  00E8DE  74                 	db	116	;'t'
  1305  00E8DF  72                 	db	114	;'r'
  1306  00E8E0  75                 	db	117	;'u'
  1307  00E8E1  63                 	db	99	;'c'
  1308  00E8E2  74                 	db	116	;'t'
  1309  00E8E3  69                 	db	105	;'i'
  1310  00E8E4  6F                 	db	111	;'o'
  1311  00E8E5  6E                 	db	110	;'n'
  1312  00E8E6  0A                 	db	10
  1313  00E8E7  0D                 	db	13
  1314  00E8E8  20                 	db	32
  1315  00E8E9  20                 	db	32
  1316  00E8EA  20                 	db	32
  1317  00E8EB  20                 	db	32
  1318  00E8EC  43                 	db	67	;'C'
  1319  00E8ED  6C                 	db	108	;'l'
  1320  00E8EE  65                 	db	101	;'e'
  1321  00E8EF  61                 	db	97	;'a'
  1322  00E8F0  72                 	db	114	;'r'
  1323  00E8F1  3A                 	db	58	;':'
  1324  00E8F2  20                 	db	32
  1325  00E8F3  43                 	db	67	;'C'
  1326  00E8F4  6C                 	db	108	;'l'
  1327  00E8F5  65                 	db	101	;'e'
  1328  00E8F6  61                 	db	97	;'a'
  1329  00E8F7  72                 	db	114	;'r'
  1330  00E8F8  73                 	db	115	;'s'
  1331  00E8F9  20                 	db	32
  1332  00E8FA  74                 	db	116	;'t'
  1333  00E8FB  68                 	db	104	;'h'
  1334  00E8FC  65                 	db	101	;'e'
  1335  00E8FD  20                 	db	32
  1336  00E8FE  76                 	db	118	;'v'
  1337  00E8FF  69                 	db	105	;'i'
  1338  00E900  72                 	db	114	;'r'
  1339  00E901  74                 	db	116	;'t'
  1340  00E902  75                 	db	117	;'u'
  1341  00E903  61                 	db	97	;'a'
  1342  00E904  6C                 	db	108	;'l'
  1343  00E905  20                 	db	32
  1344  00E906  43                 	db	67	;'C'
  1345  00E907  4F                 	db	79	;'O'
  1346  00E908  4D                 	db	77	;'M'
  1347  00E909  20                 	db	32
  1348  00E90A  70                 	db	112	;'p'
  1349  00E90B  6F                 	db	111	;'o'
  1350  00E90C  72                 	db	114	;'r'
  1351  00E90D  74                 	db	116	;'t'
  1352  00E90E  20                 	db	32
  1353  00E90F  74                 	db	116	;'t'
  1354  00E910  65                 	db	101	;'e'
  1355  00E911  72                 	db	114	;'r'
  1356  00E912  6D                 	db	109	;'m'
  1357  00E913  69                 	db	105	;'i'
  1358  00E914  6E                 	db	110	;'n'
  1359  00E915  61                 	db	97	;'a'
  1360  00E916  6C                 	db	108	;'l'
  1361  00E917  0A                 	db	10
  1362  00E918  0D                 	db	13
  1363  00E919  20                 	db	32
  1364  00E91A  20                 	db	32
  1365  00E91B  20                 	db	32
  1366  00E91C  20                 	db	32
  1367  00E91D  43                 	db	67	;'C'
  1368  00E91E  75                 	db	117	;'u'
  1369  00E91F  72                 	db	114	;'r'
  1370  00E920  72                 	db	114	;'r'
  1371  00E921  65                 	db	101	;'e'
  1372  00E922  6E                 	db	110	;'n'
  1373  00E923  74                 	db	116	;'t'
  1374  00E924  20                 	db	32
  1375  00E925  4D                 	db	77	;'M'
  1376  00E926  65                 	db	101	;'e'
  1377  00E927  61                 	db	97	;'a'
  1378  00E928  73                 	db	115	;'s'
  1379  00E929  75                 	db	117	;'u'
  1380  00E92A  72                 	db	114	;'r'
  1381  00E92B  65                 	db	101	;'e'
  1382  00E92C  6D                 	db	109	;'m'
  1383  00E92D  65                 	db	101	;'e'
  1384  00E92E  6E                 	db	110	;'n'
  1385  00E92F  74                 	db	116	;'t'
  1386  00E930  73                 	db	115	;'s'
  1387  00E931  3F                 	db	63	;'?'
  1388  00E932  3A                 	db	58	;':'
  1389  00E933  20                 	db	32
  1390  00E934  50                 	db	80	;'P'
  1391  00E935  72                 	db	114	;'r'
  1392  00E936  69                 	db	105	;'i'
  1393  00E937  6E                 	db	110	;'n'
  1394  00E938  74                 	db	116	;'t'
  1395  00E939  73                 	db	115	;'s'
  1396  00E93A  20                 	db	32
  1397  00E93B  69                 	db	105	;'i'
  1398  00E93C  6E                 	db	110	;'n'
  1399  00E93D  73                 	db	115	;'s'
  1400  00E93E  74                 	db	116	;'t'
  1401  00E93F  61                 	db	97	;'a'
  1402  00E940  6E                 	db	110	;'n'
  1403  00E941  74                 	db	116	;'t'
  1404  00E942  61                 	db	97	;'a'
  1405  00E943  6E                 	db	110	;'n'
  1406  00E944  65                 	db	101	;'e'
  1407  00E945  6F                 	db	111	;'o'
  1408  00E946  75                 	db	117	;'u'
  1409  00E947  73                 	db	115	;'s'
  1410  00E948  20                 	db	32
  1411  00E949  73                 	db	115	;'s'
  1412  00E94A  79                 	db	121	;'y'
  1413  00E94B  73                 	db	115	;'s'
  1414  00E94C  74                 	db	116	;'t'
  1415  00E94D  65                 	db	101	;'e'
  1416  00E94E  6D                 	db	109	;'m'
  1417  00E94F  20                 	db	32
  1418  00E950  6C                 	db	108	;'l'
  1419  00E951  65                 	db	101	;'e'
  1420  00E952  76                 	db	118	;'v'
  1421  00E953  65                 	db	101	;'e'
  1422  00E954  6C                 	db	108	;'l'
  1423  00E955  20                 	db	32
  1424  00E956  65                 	db	101	;'e'
  1425  00E957  6C                 	db	108	;'l'
  1426  00E958  65                 	db	101	;'e'
  1427  00E959  63                 	db	99	;'c'
  1428  00E95A  74                 	db	116	;'t'
  1429  00E95B  72                 	db	114	;'r'
  1430  00E95C  69                 	db	105	;'i'
  1431  00E95D  63                 	db	99	;'c'
  1432  00E95E  61                 	db	97	;'a'
  1433  00E95F  6C                 	db	108	;'l'
  1434  00E960  20                 	db	32
  1435  00E961  6D                 	db	109	;'m'
  1436  00E962  65                 	db	101	;'e'
  1437  00E963  61                 	db	97	;'a'
  1438  00E964  73                 	db	115	;'s'
  1439  00E965  75                 	db	117	;'u'
  1440  00E966  72                 	db	114	;'r'
  1441  00E967  65                 	db	101	;'e'
  1442  00E968  6D                 	db	109	;'m'
  1443  00E969  65                 	db	101	;'e'
  1444  00E96A  6E                 	db	110	;'n'
  1445  00E96B  74                 	db	116	;'t'
  1446  00E96C  73                 	db	115	;'s'
  1447  00E96D  0A                 	db	10
  1448  00E96E  0D                 	db	13
  1449  00E96F  20                 	db	32
  1450  00E970  20                 	db	32
  1451  00E971  20                 	db	32
  1452  00E972  20                 	db	32
  1453  00E973  45                 	db	69	;'E'
  1454  00E974  6E                 	db	110	;'n'
  1455  00E975  61                 	db	97	;'a'
  1456  00E976  62                 	db	98	;'b'
  1457  00E977  6C                 	db	108	;'l'
  1458  00E978  65                 	db	101	;'e'
  1459  00E979  20                 	db	32
  1460  00E97A  4C                 	db	76	;'L'
  1461  00E97B  69                 	db	105	;'i'
  1462  00E97C  76                 	db	118	;'v'
  1463  00E97D  65                 	db	101	;'e'
  1464  00E97E  20                 	db	32
  1465  00E97F  4D                 	db	77	;'M'
  1466  00E980  65                 	db	101	;'e'
  1467  00E981  61                 	db	97	;'a'
  1468  00E982  73                 	db	115	;'s'
  1469  00E983  75                 	db	117	;'u'
  1470  00E984  72                 	db	114	;'r'
  1471  00E985  65                 	db	101	;'e'
  1472  00E986  6D                 	db	109	;'m'
  1473  00E987  65                 	db	101	;'e'
  1474  00E988  6E                 	db	110	;'n'
  1475  00E989  74                 	db	116	;'t'
  1476  00E98A  73                 	db	115	;'s'
  1477  00E98B  3A                 	db	58	;':'
  1478  00E98C  20                 	db	32
  1479  00E98D  50                 	db	80	;'P'
  1480  00E98E  72                 	db	114	;'r'
  1481  00E98F  69                 	db	105	;'i'
  1482  00E990  6E                 	db	110	;'n'
  1483  00E991  74                 	db	116	;'t'
  1484  00E992  73                 	db	115	;'s'
  1485  00E993  20                 	db	32
  1486  00E994  61                 	db	97	;'a'
  1487  00E995  20                 	db	32
  1488  00E996  63                 	db	99	;'c'
  1489  00E997  6F                 	db	111	;'o'
  1490  00E998  6E                 	db	110	;'n'
  1491  00E999  74                 	db	116	;'t'
  1492  00E99A  69                 	db	105	;'i'
  1493  00E99B  6E                 	db	110	;'n'
  1494  00E99C  75                 	db	117	;'u'
  1495  00E99D  6F                 	db	111	;'o'
  1496  00E99E  75                 	db	117	;'u'
  1497  00E99F  73                 	db	115	;'s'
  1498  00E9A0  20                 	db	32
  1499  00E9A1  73                 	db	115	;'s'
  1500  00E9A2  74                 	db	116	;'t'
  1501  00E9A3  72                 	db	114	;'r'
  1502  00E9A4  65                 	db	101	;'e'
  1503  00E9A5  61                 	db	97	;'a'
  1504  00E9A6  6D                 	db	109	;'m'
  1505  00E9A7  20                 	db	32
  1506  00E9A8  6F                 	db	111	;'o'
  1507  00E9A9  66                 	db	102	;'f'
  1508  00E9AA  20                 	db	32
  1509  00E9AB  6D                 	db	109	;'m'
  1510  00E9AC  65                 	db	101	;'e'
  1511  00E9AD  61                 	db	97	;'a'
  1512  00E9AE  73                 	db	115	;'s'
  1513  00E9AF  75                 	db	117	;'u'
  1514  00E9B0  72                 	db	114	;'r'
  1515  00E9B1  65                 	db	101	;'e'
  1516  00E9B2  6D                 	db	109	;'m'
  1517  00E9B3  65                 	db	101	;'e'
  1518  00E9B4  6E                 	db	110	;'n'
  1519  00E9B5  74                 	db	116	;'t'
  1520  00E9B6  20                 	db	32
  1521  00E9B7  64                 	db	100	;'d'
  1522  00E9B8  61                 	db	97	;'a'
  1523  00E9B9  74                 	db	116	;'t'
  1524  00E9BA  61                 	db	97	;'a'
  1525  00E9BB  20                 	db	32
  1526  00E9BC  74                 	db	116	;'t'
  1527  00E9BD  6F                 	db	111	;'o'
  1528  00E9BE  20                 	db	32
  1529  00E9BF  74                 	db	116	;'t'
  1530  00E9C0  68                 	db	104	;'h'
  1531  00E9C1  65                 	db	101	;'e'
  1532  00E9C2  20                 	db	32
  1533  00E9C3  74                 	db	116	;'t'
  1534  00E9C4  65                 	db	101	;'e'
  1535  00E9C5  72                 	db	114	;'r'
  1536  00E9C6  6D                 	db	109	;'m'
  1537  00E9C7  69                 	db	105	;'i'
  1538  00E9C8  6E                 	db	110	;'n'
  1539  00E9C9  61                 	db	97	;'a'
  1540  00E9CA  6C                 	db	108	;'l'
  1541  00E9CB  0A                 	db	10
  1542  00E9CC  0D                 	db	13
  1543  00E9CD  20                 	db	32
  1544  00E9CE  20                 	db	32
  1545  00E9CF  20                 	db	32
  1546  00E9D0  20                 	db	32
  1547  00E9D1  44                 	db	68	;'D'
  1548  00E9D2  65                 	db	101	;'e'
  1549  00E9D3  76                 	db	118	;'v'
  1550  00E9D4  69                 	db	105	;'i'
  1551  00E9D5  63                 	db	99	;'c'
  1552  00E9D6  65                 	db	101	;'e'
  1553  00E9D7  20                 	db	32
  1554  00E9D8  53                 	db	83	;'S'
  1555  00E9D9  74                 	db	116	;'t'
  1556  00E9DA  61                 	db	97	;'a'
  1557  00E9DB  74                 	db	116	;'t'
  1558  00E9DC  75                 	db	117	;'u'
  1559  00E9DD  73                 	db	115	;'s'
  1560  00E9DE  3F                 	db	63	;'?'
  1561  00E9DF  3A                 	db	58	;':'
  1562  00E9E0  20                 	db	32
  1563  00E9E1  50                 	db	80	;'P'
  1564  00E9E2  72                 	db	114	;'r'
  1565  00E9E3  69                 	db	105	;'i'
  1566  00E9E4  6E                 	db	110	;'n'
  1567  00E9E5  74                 	db	116	;'t'
  1568  00E9E6  73                 	db	115	;'s'
  1569  00E9E7  20                 	db	32
  1570  00E9E8  64                 	db	100	;'d'
  1571  00E9E9  69                 	db	105	;'i'
  1572  00E9EA  67                 	db	103	;'g'
  1573  00E9EB  69                 	db	105	;'i'
  1574  00E9EC  74                 	db	116	;'t'
  1575  00E9ED  61                 	db	97	;'a'
  1576  00E9EE  6C                 	db	108	;'l'
  1577  00E9EF  20                 	db	32
  1578  00E9F0  6D                 	db	109	;'m'
  1579  00E9F1  6F                 	db	111	;'o'
  1580  00E9F2  6E                 	db	110	;'n'
  1581  00E9F3  69                 	db	105	;'i'
  1582  00E9F4  74                 	db	116	;'t'
  1583  00E9F5  6F                 	db	111	;'o'
  1584  00E9F6  72                 	db	114	;'r'
  1585  00E9F7  69                 	db	105	;'i'
  1586  00E9F8  6E                 	db	110	;'n'
  1587  00E9F9  67                 	db	103	;'g'
  1588  00E9FA  20                 	db	32
  1589  00E9FB  6D                 	db	109	;'m'
  1590  00E9FC  69                 	db	105	;'i'
  1591  00E9FD  63                 	db	99	;'c'
  1592  00E9FE  72                 	db	114	;'r'
  1593  00E9FF  6F                 	db	111	;'o'
  1594  00EA00  63                 	db	99	;'c'
  1595  00EA01  6F                 	db	111	;'o'
  1596  00EA02  6E                 	db	110	;'n'
  1597  00EA03  74                 	db	116	;'t'
  1598  00EA04  72                 	db	114	;'r'
  1599  00EA05  6F                 	db	111	;'o'
  1600  00EA06  6C                 	db	108	;'l'
  1601  00EA07  6C                 	db	108	;'l'
  1602  00EA08  65                 	db	101	;'e'
  1603  00EA09  72                 	db	114	;'r'
  1604  00EA0A  20                 	db	32
  1605  00EA0B  64                 	db	100	;'d'
  1606  00EA0C  65                 	db	101	;'e'
  1607  00EA0D  76                 	db	118	;'v'
  1608  00EA0E  69                 	db	105	;'i'
  1609  00EA0F  63                 	db	99	;'c'
  1610  00EA10  65                 	db	101	;'e'
  1611  00EA11  20                 	db	32
  1612  00EA12  73                 	db	115	;'s'
  1613  00EA13  74                 	db	116	;'t'
  1614  00EA14  61                 	db	97	;'a'
  1615  00EA15  74                 	db	116	;'t'
  1616  00EA16  75                 	db	117	;'u'
  1617  00EA17  73                 	db	115	;'s'
  1618  00EA18  0A                 	db	10
  1619  00EA19  0D                 	db	13
  1620  00EA1A  20                 	db	32
  1621  00EA1B  20                 	db	32
  1622  00EA1C  20                 	db	32
  1623  00EA1D  20                 	db	32
  1624  00EA1E  45                 	db	69	;'E'
  1625  00EA1F  72                 	db	114	;'r'
  1626  00EA20  72                 	db	114	;'r'
  1627  00EA21  6F                 	db	111	;'o'
  1628  00EA22  72                 	db	114	;'r'
  1629  00EA23  20                 	db	32
  1630  00EA24  53                 	db	83	;'S'
  1631  00EA25  74                 	db	116	;'t'
  1632  00EA26  61                 	db	97	;'a'
  1633  00EA27  74                 	db	116	;'t'
  1634  00EA28  75                 	db	117	;'u'
  1635  00EA29  73                 	db	115	;'s'
  1636  00EA2A  3F                 	db	63	;'?'
  1637  00EA2B  20                 	db	32
  1638  00EA2C  50                 	db	80	;'P'
  1639  00EA2D  72                 	db	114	;'r'
  1640  00EA2E  69                 	db	105	;'i'
  1641  00EA2F  6E                 	db	110	;'n'
  1642  00EA30  74                 	db	116	;'t'
  1643  00EA31  73                 	db	115	;'s'
  1644  00EA32  20                 	db	32
  1645  00EA33  69                 	db	105	;'i'
  1646  00EA34  66                 	db	102	;'f'
  1647  00EA35  20                 	db	32
  1648  00EA36  61                 	db	97	;'a'
  1649  00EA37  6E                 	db	110	;'n'
  1650  00EA38  79                 	db	121	;'y'
  1651  00EA39  20                 	db	32
  1652  00EA3A  73                 	db	115	;'s'
  1653  00EA3B  79                 	db	121	;'y'
  1654  00EA3C  73                 	db	115	;'s'
  1655  00EA3D  74                 	db	116	;'t'
  1656  00EA3E  65                 	db	101	;'e'
  1657  00EA3F  6D                 	db	109	;'m'
  1658  00EA40  20                 	db	32
  1659  00EA41  66                 	db	102	;'f'
  1660  00EA42  61                 	db	97	;'a'
  1661  00EA43  75                 	db	117	;'u'
  1662  00EA44  6C                 	db	108	;'l'
  1663  00EA45  74                 	db	116	;'t'
  1664  00EA46  73                 	db	115	;'s'
  1665  00EA47  20                 	db	32
  1666  00EA48  68                 	db	104	;'h'
  1667  00EA49  61                 	db	97	;'a'
  1668  00EA4A  76                 	db	118	;'v'
  1669  00EA4B  65                 	db	101	;'e'
  1670  00EA4C  20                 	db	32
  1671  00EA4D  62                 	db	98	;'b'
  1672  00EA4E  65                 	db	101	;'e'
  1673  00EA4F  65                 	db	101	;'e'
  1674  00EA50  6E                 	db	110	;'n'
  1675  00EA51  20                 	db	32
  1676  00EA52  64                 	db	100	;'d'
  1677  00EA53  65                 	db	101	;'e'
  1678  00EA54  74                 	db	116	;'t'
  1679  00EA55  65                 	db	101	;'e'
  1680  00EA56  63                 	db	99	;'c'
  1681  00EA57  74                 	db	116	;'t'
  1682  00EA58  65                 	db	101	;'e'
  1683  00EA59  64                 	db	100	;'d'
  1684  00EA5A  0A                 	db	10
  1685  00EA5B  0D                 	db	13
  1686  00EA5C  20                 	db	32
  1687  00EA5D  20                 	db	32
  1688  00EA5E  20                 	db	32
  1689  00EA5F  20                 	db	32
  1690  00EA60  43                 	db	67	;'C'
  1691  00EA61  6C                 	db	108	;'l'
  1692  00EA62  65                 	db	101	;'e'
  1693  00EA63  61                 	db	97	;'a'
  1694  00EA64  72                 	db	114	;'r'
  1695  00EA65  20                 	db	32
  1696  00EA66  55                 	db	85	;'U'
  1697  00EA67  41                 	db	65	;'A'
  1698  00EA68  52                 	db	82	;'R'
  1699  00EA69  54                 	db	84	;'T'
  1700  00EA6A  20                 	db	32
  1701  00EA6B  45                 	db	69	;'E'
  1702  00EA6C  72                 	db	114	;'r'
  1703  00EA6D  72                 	db	114	;'r'
  1704  00EA6E  6F                 	db	111	;'o'
  1705  00EA6F  72                 	db	114	;'r'
  1706  00EA70  73                 	db	115	;'s'
  1707  00EA71  3A                 	db	58	;':'
  1708  00EA72  20                 	db	32
  1709  00EA73  43                 	db	67	;'C'
  1710  00EA74  6C                 	db	108	;'l'
  1711  00EA75  65                 	db	101	;'e'
  1712  00EA76  61                 	db	97	;'a'
  1713  00EA77  72                 	db	114	;'r'
  1714  00EA78  73                 	db	115	;'s'
  1715  00EA79  20                 	db	32
  1716  00EA7A  55                 	db	85	;'U'
  1717  00EA7B  41                 	db	65	;'A'
  1718  00EA7C  52                 	db	82	;'R'
  1719  00EA7D  54                 	db	84	;'T'
  1720  00EA7E  20                 	db	32
  1721  00EA7F  65                 	db	101	;'e'
  1722  00EA80  72                 	db	114	;'r'
  1723  00EA81  72                 	db	114	;'r'
  1724  00EA82  6F                 	db	111	;'o'
  1725  00EA83  72                 	db	114	;'r'
  1726  00EA84  20                 	db	32
  1727  00EA85  66                 	db	102	;'f'
  1728  00EA86  6C                 	db	108	;'l'
  1729  00EA87  61                 	db	97	;'a'
  1730  00EA88  67                 	db	103	;'g'
  1731  00EA89  73                 	db	115	;'s'
  1732  00EA8A  0A                 	db	10
  1733  00EA8B  0D                 	db	13
  1734  00EA8C  20                 	db	32
  1735  00EA8D  20                 	db	32
  1736  00EA8E  20                 	db	32
  1737  00EA8F  20                 	db	32
  1738  00EA90  43                 	db	67	;'C'
  1739  00EA91  6C                 	db	108	;'l'
  1740  00EA92  65                 	db	101	;'e'
  1741  00EA93  61                 	db	97	;'a'
  1742  00EA94  72                 	db	114	;'r'
  1743  00EA95  20                 	db	32
  1744  00EA96  49                 	db	73	;'I'
  1745  00EA97  32                 	db	50	;'2'
  1746  00EA98  43                 	db	67	;'C'
  1747  00EA99  20                 	db	32
  1748  00EA9A  45                 	db	69	;'E'
  1749  00EA9B  72                 	db	114	;'r'
  1750  00EA9C  72                 	db	114	;'r'
  1751  00EA9D  6F                 	db	111	;'o'
  1752  00EA9E  72                 	db	114	;'r'
  1753  00EA9F  73                 	db	115	;'s'
  1754  00EAA0  3A                 	db	58	;':'
  1755  00EAA1  20                 	db	32
  1756  00EAA2  43                 	db	67	;'C'
  1757  00EAA3  6C                 	db	108	;'l'
  1758  00EAA4  65                 	db	101	;'e'
  1759  00EAA5  61                 	db	97	;'a'
  1760  00EAA6  72                 	db	114	;'r'
  1761  00EAA7  73                 	db	115	;'s'
  1762  00EAA8  20                 	db	32
  1763  00EAA9  49                 	db	73	;'I'
  1764  00EAAA  32                 	db	50	;'2'
  1765  00EAAB  43                 	db	67	;'C'
  1766  00EAAC  20                 	db	32
  1767  00EAAD  65                 	db	101	;'e'
  1768  00EAAE  72                 	db	114	;'r'
  1769  00EAAF  72                 	db	114	;'r'
  1770  00EAB0  6F                 	db	111	;'o'
  1771  00EAB1  72                 	db	114	;'r'
  1772  00EAB2  20                 	db	32
  1773  00EAB3  66                 	db	102	;'f'
  1774  00EAB4  6C                 	db	108	;'l'
  1775  00EAB5  61                 	db	97	;'a'
  1776  00EAB6  67                 	db	103	;'g'
  1777  00EAB7  73                 	db	115	;'s'
  1778  00EAB8  0A                 	db	10
  1779  00EAB9  0D                 	db	13
  1780  00EABA  20                 	db	32
  1781  00EABB  20                 	db	32
  1782  00EABC  20                 	db	32
  1783  00EABD  20                 	db	32
  1784  00EABE  43                 	db	67	;'C'
  1785  00EABF  6C                 	db	108	;'l'
  1786  00EAC0  65                 	db	101	;'e'
  1787  00EAC1  61                 	db	97	;'a'
  1788  00EAC2  72                 	db	114	;'r'
  1789  00EAC3  20                 	db	32
  1790  00EAC4  41                 	db	65	;'A'
  1791  00EAC5  44                 	db	68	;'D'
  1792  00EAC6  43                 	db	67	;'C'
  1793  00EAC7  20                 	db	32
  1794  00EAC8  45                 	db	69	;'E'
  1795  00EAC9  72                 	db	114	;'r'
  1796  00EACA  72                 	db	114	;'r'
  1797  00EACB  6F                 	db	111	;'o'
  1798  00EACC  72                 	db	114	;'r'
  1799  00EACD  73                 	db	115	;'s'
  1800  00EACE  3A                 	db	58	;':'
  1801  00EACF  20                 	db	32
  1802  00EAD0  43                 	db	67	;'C'
  1803  00EAD1  6C                 	db	108	;'l'
  1804  00EAD2  65                 	db	101	;'e'
  1805  00EAD3  61                 	db	97	;'a'
  1806  00EAD4  72                 	db	114	;'r'
  1807  00EAD5  73                 	db	115	;'s'
  1808  00EAD6  20                 	db	32
  1809  00EAD7  41                 	db	65	;'A'
  1810  00EAD8  44                 	db	68	;'D'
  1811  00EAD9  43                 	db	67	;'C'
  1812  00EADA  20                 	db	32
  1813  00EADB  65                 	db	101	;'e'
  1814  00EADC  72                 	db	114	;'r'
  1815  00EADD  72                 	db	114	;'r'
  1816  00EADE  6F                 	db	111	;'o'
  1817  00EADF  72                 	db	114	;'r'
  1818  00EAE0  20                 	db	32
  1819  00EAE1  66                 	db	102	;'f'
  1820  00EAE2  6C                 	db	108	;'l'
  1821  00EAE3  61                 	db	97	;'a'
  1822  00EAE4  67                 	db	103	;'g'
  1823  00EAE5  73                 	db	115	;'s'
  1824  00EAE6  0A                 	db	10
  1825  00EAE7  0D                 	db	13
  1826  00EAE8  20                 	db	32
  1827  00EAE9  20                 	db	32
  1828  00EAEA  20                 	db	32
  1829  00EAEB  20                 	db	32
  1830  00EAEC  48                 	db	72	;'H'
  1831  00EAED  65                 	db	101	;'e'
  1832  00EAEE  6C                 	db	108	;'l'
  1833  00EAEF  70                 	db	112	;'p'
  1834  00EAF0  3A                 	db	58	;':'
  1835  00EAF1  20                 	db	32
  1836  00EAF2  4C                 	db	76	;'L'
  1837  00EAF3  69                 	db	105	;'i'
  1838  00EAF4  73                 	db	115	;'s'
  1839  00EAF5  74                 	db	116	;'t'
  1840  00EAF6  73                 	db	115	;'s'
  1841  00EAF7  20                 	db	32
  1842  00EAF8  61                 	db	97	;'a'
  1843  00EAF9  76                 	db	118	;'v'
  1844  00EAFA  61                 	db	97	;'a'
  1845  00EAFB  69                 	db	105	;'i'
  1846  00EAFC  6C                 	db	108	;'l'
  1847  00EAFD  61                 	db	97	;'a'
  1848  00EAFE  62                 	db	98	;'b'
  1849  00EAFF  6C                 	db	108	;'l'
  1850  00EB00  65                 	db	101	;'e'
  1851  00EB01  20                 	db	32
  1852  00EB02  63                 	db	99	;'c'
  1853  00EB03  6F                 	db	111	;'o'
  1854  00EB04  6D                 	db	109	;'m'
  1855  00EB05  6D                 	db	109	;'m'
  1856  00EB06  61                 	db	97	;'a'
  1857  00EB07  6E                 	db	110	;'n'
  1858  00EB08  64                 	db	100	;'d'
  1859  00EB09  73                 	db	115	;'s'
  1860  00EB0A  20                 	db	32
  1861  00EB0B  28                 	db	40
  1862  00EB0C  74                 	db	116	;'t'
  1863  00EB0D  68                 	db	104	;'h'
  1864  00EB0E  69                 	db	105	;'i'
  1865  00EB0F  73                 	db	115	;'s'
  1866  00EB10  20                 	db	32
  1867  00EB11  63                 	db	99	;'c'
  1868  00EB12  6F                 	db	111	;'o'
  1869  00EB13  6D                 	db	109	;'m'
  1870  00EB14  6D                 	db	109	;'m'
  1871  00EB15  61                 	db	97	;'a'
  1872  00EB16  6E                 	db	110	;'n'
  1873  00EB17  64                 	db	100	;'d'
  1874  00EB18  29                 	db	41
  1875  00EB19  0A                 	db	10
  1876  00EB1A  0D                 	db	13
  1877  00EB1B  00                 	db	0
  1878  00EB1C                     STR_295:
  1879  00EB1C  20                 	db	32
  1880  00EB1D  20                 	db	32
  1881  00EB1E  20                 	db	32
  1882  00EB1F  20                 	db	32
  1883  00EB20  20                 	db	32
  1884  00EB21  20                 	db	32
  1885  00EB22  20                 	db	32
  1886  00EB23  20                 	db	32
  1887  00EB24  46                 	db	70	;'F'
  1888  00EB25  69                 	db	105	;'i'
  1889  00EB26  78                 	db	120	;'x'
  1890  00EB27  65                 	db	101	;'e'
  1891  00EB28  64                 	db	100	;'d'
  1892  00EB29  20                 	db	32
  1893  00EB2A  56                 	db	86	;'V'
  1894  00EB2B  6F                 	db	111	;'o'
  1895  00EB2C  6C                 	db	108	;'l'
  1896  00EB2D  74                 	db	116	;'t'
  1897  00EB2E  61                 	db	97	;'a'
  1898  00EB2F  67                 	db	103	;'g'
  1899  00EB30  65                 	db	101	;'e'
  1900  00EB31  20                 	db	32
  1901  00EB32  52                 	db	82	;'R'
  1902  00EB33  65                 	db	101	;'e'
  1903  00EB34  66                 	db	102	;'f'
  1904  00EB35  65                 	db	101	;'e'
  1905  00EB36  72                 	db	114	;'r'
  1906  00EB37  65                 	db	101	;'e'
  1907  00EB38  6E                 	db	110	;'n'
  1908  00EB39  63                 	db	99	;'c'
  1909  00EB3A  65                 	db	101	;'e'
  1910  00EB3B  20                 	db	32
  1911  00EB3C  42                 	db	66	;'B'
  1912  00EB3D  75                 	db	117	;'u'
  1913  00EB3E  66                 	db	102	;'f'
  1914  00EB3F  66                 	db	102	;'f'
  1915  00EB40  65                 	db	101	;'e'
  1916  00EB41  72                 	db	114	;'r'
  1917  00EB42  20                 	db	32
  1918  00EB43  31                 	db	49	;'1'
  1919  00EB44  20                 	db	32
  1920  00EB45  6D                 	db	109	;'m'
  1921  00EB46  65                 	db	101	;'e'
  1922  00EB47  61                 	db	97	;'a'
  1923  00EB48  73                 	db	115	;'s'
  1924  00EB49  75                 	db	117	;'u'
  1925  00EB4A  72                 	db	114	;'r'
  1926  00EB4B  65                 	db	101	;'e'
  1927  00EB4C  64                 	db	100	;'d'
  1928  00EB4D  20                 	db	32
  1929  00EB4E  61                 	db	97	;'a'
  1930  00EB4F  73                 	db	115	;'s'
  1931  00EB50  20                 	db	32
  1932  00EB51  25                 	db	37
  1933  00EB52  2B                 	db	43
  1934  00EB53  2E                 	db	46
  1935  00EB54  33                 	db	51	;'3'
  1936  00EB55  66                 	db	102	;'f'
  1937  00EB56  20                 	db	32
  1938  00EB57  56                 	db	86	;'V'
  1939  00EB58  6F                 	db	111	;'o'
  1940  00EB59  6C                 	db	108	;'l'
  1941  00EB5A  74                 	db	116	;'t'
  1942  00EB5B  73                 	db	115	;'s'
  1943  00EB5C  2C                 	db	44
  1944  00EB5D  20                 	db	32
  1945  00EB5E  63                 	db	99	;'c'
  1946  00EB5F  61                 	db	97	;'a'
  1947  00EB60  6C                 	db	108	;'l'
  1948  00EB61  69                 	db	105	;'i'
  1949  00EB62  62                 	db	98	;'b'
  1950  00EB63  72                 	db	114	;'r'
  1951  00EB64  61                 	db	97	;'a'
  1952  00EB65  74                 	db	116	;'t'
  1953  00EB66  65                 	db	101	;'e'
  1954  00EB67  64                 	db	100	;'d'
  1955  00EB68  20                 	db	32
  1956  00EB69  66                 	db	102	;'f'
  1957  00EB6A  6F                 	db	111	;'o'
  1958  00EB6B  72                 	db	114	;'r'
  1959  00EB6C  20                 	db	32
  1960  00EB6D  2B                 	db	43
  1961  00EB6E  34                 	db	52	;'4'
  1962  00EB6F  2E                 	db	46
  1963  00EB70  30                 	db	48	;'0'
  1964  00EB71  39                 	db	57	;'9'
  1965  00EB72  36                 	db	54	;'6'
  1966  00EB73  20                 	db	32
  1967  00EB74  56                 	db	86	;'V'
  1968  00EB75  6F                 	db	111	;'o'
  1969  00EB76  6C                 	db	108	;'l'
  1970  00EB77  74                 	db	116	;'t'
  1971  00EB78  73                 	db	115	;'s'
  1972  00EB79  0A                 	db	10
  1973  00EB7A  0D                 	db	13
  1974  00EB7B  00                 	db	0
  1975  00EB7C                     STR_239:
  1976  00EB7C  43                 	db	67	;'C'
  1977  00EB7D  6F                 	db	111	;'o'
  1978  00EB7E  6D                 	db	109	;'m'
  1979  00EB7F  6D                 	db	109	;'m'
  1980  00EB80  61                 	db	97	;'a'
  1981  00EB81  6E                 	db	110	;'n'
  1982  00EB82  64                 	db	100	;'d'
  1983  00EB83  73                 	db	115	;'s'
  1984  00EB84  20                 	db	32
  1985  00EB85  61                 	db	97	;'a'
  1986  00EB86  72                 	db	114	;'r'
  1987  00EB87  65                 	db	101	;'e'
  1988  00EB88  20                 	db	32
  1989  00EB89  63                 	db	99	;'c'
  1990  00EB8A  61                 	db	97	;'a'
  1991  00EB8B  73                 	db	115	;'s'
  1992  00EB8C  65                 	db	101	;'e'
  1993  00EB8D  20                 	db	32
  1994  00EB8E  73                 	db	115	;'s'
  1995  00EB8F  65                 	db	101	;'e'
  1996  00EB90  6E                 	db	110	;'n'
  1997  00EB91  73                 	db	115	;'s'
  1998  00EB92  69                 	db	105	;'i'
  1999  00EB93  74                 	db	116	;'t'
  2000  00EB94  69                 	db	105	;'i'
  2001  00EB95  76                 	db	118	;'v'
  2002  00EB96  65                 	db	101	;'e'
  2003  00EB97  2C                 	db	44
  2004  00EB98  20                 	db	32
  2005  00EB99  62                 	db	98	;'b'
  2006  00EB9A  61                 	db	97	;'a'
  2007  00EB9B  63                 	db	99	;'c'
  2008  00EB9C  6B                 	db	107	;'k'
  2009  00EB9D  73                 	db	115	;'s'
  2010  00EB9E  70                 	db	112	;'p'
  2011  00EB9F  61                 	db	97	;'a'
  2012  00EBA0  63                 	db	99	;'c'
  2013  00EBA1  65                 	db	101	;'e'
  2014  00EBA2  20                 	db	32
  2015  00EBA3  69                 	db	105	;'i'
  2016  00EBA4  73                 	db	115	;'s'
  2017  00EBA5  20                 	db	32
  2018  00EBA6  73                 	db	115	;'s'
  2019  00EBA7  75                 	db	117	;'u'
  2020  00EBA8  70                 	db	112	;'p'
  2021  00EBA9  70                 	db	112	;'p'
  2022  00EBAA  6F                 	db	111	;'o'
  2023  00EBAB  72                 	db	114	;'r'
  2024  00EBAC  74                 	db	116	;'t'
  2025  00EBAD  65                 	db	101	;'e'
  2026  00EBAE  64                 	db	100	;'d'
  2027  00EBAF  2C                 	db	44
  2028  00EBB0  20                 	db	32
  2029  00EBB1  63                 	db	99	;'c'
  2030  00EBB2  6F                 	db	111	;'o'
  2031  00EBB3  6D                 	db	109	;'m'
  2032  00EBB4  6D                 	db	109	;'m'
  2033  00EBB5  61                 	db	97	;'a'
  2034  00EBB6  6E                 	db	110	;'n'
  2035  00EBB7  64                 	db	100	;'d'
  2036  00EBB8  20                 	db	32
  2037  00EBB9  68                 	db	104	;'h'
  2038  00EBBA  69                 	db	105	;'i'
  2039  00EBBB  73                 	db	115	;'s'
  2040  00EBBC  74                 	db	116	;'t'
  2041  00EBBD  6F                 	db	111	;'o'
  2042  00EBBE  72                 	db	114	;'r'
  2043  00EBBF  79                 	db	121	;'y'
  2044  00EBC0  20                 	db	32
  2045  00EBC1  69                 	db	105	;'i'
  2046  00EBC2  73                 	db	115	;'s'
  2047  00EBC3  20                 	db	32
  2048  00EBC4  6E                 	db	110	;'n'
  2049  00EBC5  6F                 	db	111	;'o'
  2050  00EBC6  74                 	db	116	;'t'
  2051  00EBC7  20                 	db	32
  2052  00EBC8  73                 	db	115	;'s'
  2053  00EBC9  75                 	db	117	;'u'
  2054  00EBCA  70                 	db	112	;'p'
  2055  00EBCB  70                 	db	112	;'p'
  2056  00EBCC  6F                 	db	111	;'o'
  2057  00EBCD  72                 	db	114	;'r'
  2058  00EBCE  74                 	db	116	;'t'
  2059  00EBCF  65                 	db	101	;'e'
  2060  00EBD0  64                 	db	100	;'d'
  2061  00EBD1  0A                 	db	10
  2062  00EBD2  0D                 	db	13
  2063  00EBD3  00                 	db	0
  2064  00EBD4                     STR_257:
  2065  00EBD4  20                 	db	32
  2066  00EBD5  20                 	db	32
  2067  00EBD6  20                 	db	32
  2068  00EBD7  20                 	db	32
  2069  00EBD8  43                 	db	67	;'C'
  2070  00EBD9  61                 	db	97	;'a'
  2071  00EBDA  6C                 	db	108	;'l'
  2072  00EBDB  6C                 	db	108	;'l'
  2073  00EBDC  20                 	db	32
  2074  00EBDD  27                 	db	39
  2075  00EBDE  43                 	db	67	;'C'
  2076  00EBDF  6C                 	db	108	;'l'
  2077  00EBE0  65                 	db	101	;'e'
  2078  00EBE1  61                 	db	97	;'a'
  2079  00EBE2  72                 	db	114	;'r'
  2080  00EBE3  20                 	db	32
  2081  00EBE4  55                 	db	85	;'U'
  2082  00EBE5  41                 	db	65	;'A'
  2083  00EBE6  52                 	db	82	;'R'
  2084  00EBE7  54                 	db	84	;'T'
  2085  00EBE8  20                 	db	32
  2086  00EBE9  45                 	db	69	;'E'
  2087  00EBEA  72                 	db	114	;'r'
  2088  00EBEB  72                 	db	114	;'r'
  2089  00EBEC  6F                 	db	111	;'o'
  2090  00EBED  72                 	db	114	;'r'
  2091  00EBEE  73                 	db	115	;'s'
  2092  00EBEF  27                 	db	39
  2093  00EBF0  20                 	db	32
  2094  00EBF1  74                 	db	116	;'t'
  2095  00EBF2  6F                 	db	111	;'o'
  2096  00EBF3  20                 	db	32
  2097  00EBF4  63                 	db	99	;'c'
  2098  00EBF5  6C                 	db	108	;'l'
  2099  00EBF6  65                 	db	101	;'e'
  2100  00EBF7  61                 	db	97	;'a'
  2101  00EBF8  72                 	db	114	;'r'
  2102  00EBF9  20                 	db	32
  2103  00EBFA  63                 	db	99	;'c'
  2104  00EBFB  6F                 	db	111	;'o'
  2105  00EBFC  6D                 	db	109	;'m'
  2106  00EBFD  6D                 	db	109	;'m'
  2107  00EBFE  75                 	db	117	;'u'
  2108  00EBFF  6E                 	db	110	;'n'
  2109  00EC00  69                 	db	105	;'i'
  2110  00EC01  63                 	db	99	;'c'
  2111  00EC02  61                 	db	97	;'a'
  2112  00EC03  74                 	db	116	;'t'
  2113  00EC04  69                 	db	105	;'i'
  2114  00EC05  6F                 	db	111	;'o'
  2115  00EC06  6E                 	db	110	;'n'
  2116  00EC07  73                 	db	115	;'s'
  2117  00EC08  20                 	db	32
  2118  00EC09  65                 	db	101	;'e'
  2119  00EC0A  72                 	db	114	;'r'
  2120  00EC0B  72                 	db	114	;'r'
  2121  00EC0C  6F                 	db	111	;'o'
  2122  00EC0D  72                 	db	114	;'r'
  2123  00EC0E  28                 	db	40
  2124  00EC0F  73                 	db	115	;'s'
  2125  00EC10  29                 	db	41
  2126  00EC11  0A                 	db	10
  2127  00EC12  0D                 	db	13
  2128  00EC13  00                 	db	0
  2129  00EC14                     STR_254:
  2130  00EC14  20                 	db	32
  2131  00EC15  20                 	db	32
  2132  00EC16  20                 	db	32
  2133  00EC17  20                 	db	32
  2134  00EC18  43                 	db	67	;'C'
  2135  00EC19  61                 	db	97	;'a'
  2136  00EC1A  6C                 	db	108	;'l'
  2137  00EC1B  6C                 	db	108	;'l'
  2138  00EC1C  20                 	db	32
  2139  00EC1D  27                 	db	39
  2140  00EC1E  43                 	db	67	;'C'
  2141  00EC1F  6C                 	db	108	;'l'
  2142  00EC20  65                 	db	101	;'e'
  2143  00EC21  61                 	db	97	;'a'
  2144  00EC22  72                 	db	114	;'r'
  2145  00EC23  20                 	db	32
  2146  00EC24  49                 	db	73	;'I'
  2147  00EC25  32                 	db	50	;'2'
  2148  00EC26  43                 	db	67	;'C'
  2149  00EC27  20                 	db	32
  2150  00EC28  45                 	db	69	;'E'
  2151  00EC29  72                 	db	114	;'r'
  2152  00EC2A  72                 	db	114	;'r'
  2153  00EC2B  6F                 	db	111	;'o'
  2154  00EC2C  72                 	db	114	;'r'
  2155  00EC2D  73                 	db	115	;'s'
  2156  00EC2E  27                 	db	39
  2157  00EC2F  20                 	db	32
  2158  00EC30  74                 	db	116	;'t'
  2159  00EC31  6F                 	db	111	;'o'
  2160  00EC32  20                 	db	32
  2161  00EC33  63                 	db	99	;'c'
  2162  00EC34  6C                 	db	108	;'l'
  2163  00EC35  65                 	db	101	;'e'
  2164  00EC36  61                 	db	97	;'a'
  2165  00EC37  72                 	db	114	;'r'
  2166  00EC38  20                 	db	32
  2167  00EC39  63                 	db	99	;'c'
  2168  00EC3A  6F                 	db	111	;'o'
  2169  00EC3B  6D                 	db	109	;'m'
  2170  00EC3C  6D                 	db	109	;'m'
  2171  00EC3D  75                 	db	117	;'u'
  2172  00EC3E  6E                 	db	110	;'n'
  2173  00EC3F  69                 	db	105	;'i'
  2174  00EC40  63                 	db	99	;'c'
  2175  00EC41  61                 	db	97	;'a'
  2176  00EC42  74                 	db	116	;'t'
  2177  00EC43  69                 	db	105	;'i'
  2178  00EC44  6F                 	db	111	;'o'
  2179  00EC45  6E                 	db	110	;'n'
  2180  00EC46  73                 	db	115	;'s'
  2181  00EC47  20                 	db	32
  2182  00EC48  65                 	db	101	;'e'
  2183  00EC49  72                 	db	114	;'r'
  2184  00EC4A  72                 	db	114	;'r'
  2185  00EC4B  6F                 	db	111	;'o'
  2186  00EC4C  72                 	db	114	;'r'
  2187  00EC4D  28                 	db	40
  2188  00EC4E  73                 	db	115	;'s'
  2189  00EC4F  29                 	db	41
  2190  00EC50  0A                 	db	10
  2191  00EC51  0D                 	db	13
  2192  00EC52  00                 	db	0
  2193  00EC53                     STR_284:
  2194  00EC53  20                 	db	32
  2195  00EC54  20                 	db	32
  2196  00EC55  20                 	db	32
  2197  00EC56  20                 	db	32
  2198  00EC57  20                 	db	32
  2199  00EC58  20                 	db	32
  2200  00EC59  20                 	db	32
  2201  00EC5A  20                 	db	32
  2202  00EC5B  43                 	db	67	;'C'
  2203  00EC5C  75                 	db	117	;'u'
  2204  00EC5D  72                 	db	114	;'r'
  2205  00EC5E  72                 	db	114	;'r'
  2206  00EC5F  65                 	db	101	;'e'
  2207  00EC60  6E                 	db	110	;'n'
  2208  00EC61  74                 	db	116	;'t'
  2209  00EC62  20                 	db	32
  2210  00EC63  2B                 	db	43
  2211  00EC64  35                 	db	53	;'5'
  2212  00EC65  56                 	db	86	;'V'
  2213  00EC66  20                 	db	32
  2214  00EC67  53                 	db	83	;'S'
  2215  00EC68  77                 	db	119	;'w'
  2216  00EC69  69                 	db	105	;'i'
  2217  00EC6A  74                 	db	116	;'t'
  2218  00EC6B  63                 	db	99	;'c'
  2219  00EC6C  68                 	db	104	;'h'
  2220  00EC6D  69                 	db	105	;'i'
  2221  00EC6E  6E                 	db	110	;'n'
  2222  00EC6F  67                 	db	103	;'g'
  2223  00EC70  20                 	db	32
  2224  00EC71  46                 	db	70	;'F'
  2225  00EC72  72                 	db	114	;'r'
  2226  00EC73  65                 	db	101	;'e'
  2227  00EC74  71                 	db	113	;'q'
  2228  00EC75  75                 	db	117	;'u'
  2229  00EC76  65                 	db	101	;'e'
  2230  00EC77  6E                 	db	110	;'n'
  2231  00EC78  63                 	db	99	;'c'
  2232  00EC79  79                 	db	121	;'y'
  2233  00EC7A  20                 	db	32
  2234  00EC7B  6D                 	db	109	;'m'
  2235  00EC7C  65                 	db	101	;'e'
  2236  00EC7D  61                 	db	97	;'a'
  2237  00EC7E  73                 	db	115	;'s'
  2238  00EC7F  75                 	db	117	;'u'
  2239  00EC80  72                 	db	114	;'r'
  2240  00EC81  65                 	db	101	;'e'
  2241  00EC82  64                 	db	100	;'d'
  2242  00EC83  20                 	db	32
  2243  00EC84  61                 	db	97	;'a'
  2244  00EC85  73                 	db	115	;'s'
  2245  00EC86  20                 	db	32
  2246  00EC87  25                 	db	37
  2247  00EC88  2E                 	db	46
  2248  00EC89  31                 	db	49	;'1'
  2249  00EC8A  66                 	db	102	;'f'
  2250  00EC8B  20                 	db	32
  2251  00EC8C  4D                 	db	77	;'M'
  2252  00EC8D  48                 	db	72	;'H'
  2253  00EC8E  7A                 	db	122	;'z'
  2254  00EC8F  0A                 	db	10
  2255  00EC90  0D                 	db	13
  2256  00EC91  00                 	db	0
  2257  00EC92                     STR_294:
  2258  00EC92  20                 	db	32
  2259  00EC93  20                 	db	32
  2260  00EC94  20                 	db	32
  2261  00EC95  20                 	db	32
  2262  00EC96  20                 	db	32
  2263  00EC97  20                 	db	32
  2264  00EC98  20                 	db	32
  2265  00EC99  20                 	db	32
  2266  00EC9A  4D                 	db	77	;'M'
  2267  00EC9B  69                 	db	105	;'i'
  2268  00EC9C  63                 	db	99	;'c'
  2269  00EC9D  72                 	db	114	;'r'
  2270  00EC9E  6F                 	db	111	;'o'
  2271  00EC9F  63                 	db	99	;'c'
  2272  00ECA0  6F                 	db	111	;'o'
  2273  00ECA1  6E                 	db	110	;'n'
  2274  00ECA2  74                 	db	116	;'t'
  2275  00ECA3  72                 	db	114	;'r'
  2276  00ECA4  6F                 	db	111	;'o'
  2277  00ECA5  6C                 	db	108	;'l'
  2278  00ECA6  6C                 	db	108	;'l'
  2279  00ECA7  65                 	db	101	;'e'
  2280  00ECA8  72                 	db	114	;'r'
  2281  00ECA9  20                 	db	32
  2282  00ECAA  44                 	db	68	;'D'
  2283  00ECAB  69                 	db	105	;'i'
  2284  00ECAC  65                 	db	101	;'e'
  2285  00ECAD  20                 	db	32
  2286  00ECAE  54                 	db	84	;'T'
  2287  00ECAF  65                 	db	101	;'e'
  2288  00ECB0  6D                 	db	109	;'m'
  2289  00ECB1  70                 	db	112	;'p'
  2290  00ECB2  65                 	db	101	;'e'
  2291  00ECB3  72                 	db	114	;'r'
  2292  00ECB4  61                 	db	97	;'a'
  2293  00ECB5  74                 	db	116	;'t'
  2294  00ECB6  75                 	db	117	;'u'
  2295  00ECB7  72                 	db	114	;'r'
  2296  00ECB8  65                 	db	101	;'e'
  2297  00ECB9  20                 	db	32
  2298  00ECBA  6D                 	db	109	;'m'
  2299  00ECBB  65                 	db	101	;'e'
  2300  00ECBC  61                 	db	97	;'a'
  2301  00ECBD  73                 	db	115	;'s'
  2302  00ECBE  75                 	db	117	;'u'
  2303  00ECBF  72                 	db	114	;'r'
  2304  00ECC0  65                 	db	101	;'e'
  2305  00ECC1  64                 	db	100	;'d'
  2306  00ECC2  20                 	db	32
  2307  00ECC3  61                 	db	97	;'a'
  2308  00ECC4  73                 	db	115	;'s'
  2309  00ECC5  20                 	db	32
  2310  00ECC6  25                 	db	37
  2311  00ECC7  2B                 	db	43
  2312  00ECC8  2E                 	db	46
  2313  00ECC9  33                 	db	51	;'3'
  2314  00ECCA  66                 	db	102	;'f'
  2315  00ECCB  20                 	db	32
  2316  00ECCC  43                 	db	67	;'C'
  2317  00ECCD  0A                 	db	10
  2318  00ECCE  0D                 	db	13
  2319  00ECCF  00                 	db	0
  2320  00ECD0                     STR_205:
  2321  00ECD0  20                 	db	32
  2322  00ECD1  20                 	db	32
  2323  00ECD2  20                 	db	32
  2324  00ECD3  20                 	db	32
  2325  00ECD4  44                 	db	68	;'D'
  2326  00ECD5  65                 	db	101	;'e'
  2327  00ECD6  76                 	db	118	;'v'
  2328  00ECD7  69                 	db	105	;'i'
  2329  00ECD8  63                 	db	99	;'c'
  2330  00ECD9  65                 	db	101	;'e'
  2331  00ECDA  20                 	db	32
  2332  00ECDB  73                 	db	115	;'s'
  2333  00ECDC  69                 	db	105	;'i'
  2334  00ECDD  6C                 	db	108	;'l'
  2335  00ECDE  69                 	db	105	;'i'
  2336  00ECDF  63                 	db	99	;'c'
  2337  00ECE0  6F                 	db	111	;'o'
  2338  00ECE1  6E                 	db	110	;'n'
  2339  00ECE2  20                 	db	32
  2340  00ECE3  72                 	db	114	;'r'
  2341  00ECE4  65                 	db	101	;'e'
  2342  00ECE5  76                 	db	118	;'v'
  2343  00ECE6  69                 	db	105	;'i'
  2344  00ECE7  73                 	db	115	;'s'
  2345  00ECE8  69                 	db	105	;'i'
  2346  00ECE9  6F                 	db	111	;'o'
  2347  00ECEA  6E                 	db	110	;'n'
  2348  00ECEB  20                 	db	32
  2349  00ECEC  49                 	db	73	;'I'
  2350  00ECED  44                 	db	68	;'D'
  2351  00ECEE  20                 	db	32
  2352  00ECEF  72                 	db	114	;'r'
  2353  00ECF0  65                 	db	101	;'e'
  2354  00ECF1  74                 	db	116	;'t'
  2355  00ECF2  72                 	db	114	;'r'
  2356  00ECF3  69                 	db	105	;'i'
  2357  00ECF4  65                 	db	101	;'e'
  2358  00ECF5  76                 	db	118	;'v'
  2359  00ECF6  65                 	db	101	;'e'
  2360  00ECF7  64                 	db	100	;'d'
  2361  00ECF8  20                 	db	32
  2362  00ECF9  66                 	db	102	;'f'
  2363  00ECFA  72                 	db	114	;'r'
  2364  00ECFB  6F                 	db	111	;'o'
  2365  00ECFC  6D                 	db	109	;'m'
  2366  00ECFD  20                 	db	32
  2367  00ECFE  66                 	db	102	;'f'
  2368  00ECFF  6C                 	db	108	;'l'
  2369  00ED00  61                 	db	97	;'a'
  2370  00ED01  73                 	db	115	;'s'
  2371  00ED02  68                 	db	104	;'h'
  2372  00ED03  3A                 	db	58	;':'
  2373  00ED04  20                 	db	32
  2374  00ED05  25                 	db	37
  2375  00ED06  63                 	db	99	;'c'
  2376  00ED07  25                 	db	37
  2377  00ED08  30                 	db	48	;'0'
  2378  00ED09  33                 	db	51	;'3'
  2379  00ED0A  64                 	db	100	;'d'
  2380  00ED0B  0A                 	db	10
  2381  00ED0C  0D                 	db	13
  2382  00ED0D  00                 	db	0
  2383  00ED0E                     STR_6:
  2384  00ED0E  53                 	db	83	;'S'
  2385  00ED0F  79                 	db	121	;'y'
  2386  00ED10  73                 	db	115	;'s'
  2387  00ED11  74                 	db	116	;'t'
  2388  00ED12  65                 	db	101	;'e'
  2389  00ED13  6D                 	db	109	;'m'
  2390  00ED14  20                 	db	32
  2391  00ED15  70                 	db	112	;'p'
  2392  00ED16  61                 	db	97	;'a'
  2393  00ED17  72                 	db	114	;'r'
  2394  00ED18  61                 	db	97	;'a'
  2395  00ED19  6D                 	db	109	;'m'
  2396  00ED1A  65                 	db	101	;'e'
  2397  00ED1B  74                 	db	116	;'t'
  2398  00ED1C  65                 	db	101	;'e'
  2399  00ED1D  72                 	db	114	;'r'
  2400  00ED1E  73                 	db	115	;'s'
  2401  00ED1F  20                 	db	32
  2402  00ED20  61                 	db	97	;'a'
  2403  00ED21  6E                 	db	110	;'n'
  2404  00ED22  64                 	db	100	;'d'
  2405  00ED23  20                 	db	32
  2406  00ED24  61                 	db	97	;'a'
  2407  00ED25  66                 	db	102	;'f'
  2408  00ED26  66                 	db	102	;'f'
  2409  00ED27  69                 	db	105	;'i'
  2410  00ED28  72                 	db	114	;'r'
  2411  00ED29  6D                 	db	109	;'m'
  2412  00ED2A  61                 	db	97	;'a'
  2413  00ED2B  74                 	db	116	;'t'
  2414  00ED2C  69                 	db	105	;'i'
  2415  00ED2D  76                 	db	118	;'v'
  2416  00ED2E  65                 	db	101	;'e'
  2417  00ED2F  20                 	db	32
  2418  00ED30  72                 	db	114	;'r'
  2419  00ED31  65                 	db	101	;'e'
  2420  00ED32  73                 	db	115	;'s'
  2421  00ED33  70                 	db	112	;'p'
  2422  00ED34  6F                 	db	111	;'o'
  2423  00ED35  6E                 	db	110	;'n'
  2424  00ED36  73                 	db	115	;'s'
  2425  00ED37  65                 	db	101	;'e'
  2426  00ED38  73                 	db	115	;'s'
  2427  00ED39  20                 	db	32
  2428  00ED3A  61                 	db	97	;'a'
  2429  00ED3B  70                 	db	112	;'p'
  2430  00ED3C  70                 	db	112	;'p'
  2431  00ED3D  65                 	db	101	;'e'
  2432  00ED3E  61                 	db	97	;'a'
  2433  00ED3F  72                 	db	114	;'r'
  2434  00ED40  20                 	db	32
  2435  00ED41  69                 	db	105	;'i'
  2436  00ED42  6E                 	db	110	;'n'
  2437  00ED43  20                 	db	32
  2438  00ED44  67                 	db	103	;'g'
  2439  00ED45  72                 	db	114	;'r'
  2440  00ED46  65                 	db	101	;'e'
  2441  00ED47  65                 	db	101	;'e'
  2442  00ED48  6E                 	db	110	;'n'
  2443  00ED49  0A                 	db	10
  2444  00ED4A  0D                 	db	13
  2445  00ED4B  00                 	db	0
  2446  00ED4C                     STR_207:
  2447  00ED4C  20                 	db	32
  2448  00ED4D  20                 	db	32
  2449  00ED4E  20                 	db	32
  2450  00ED4F  20                 	db	32
  2451  00ED50  54                 	db	84	;'T'
  2452  00ED51  68                 	db	104	;'h'
  2453  00ED52  65                 	db	101	;'e'
  2454  00ED53  20                 	db	32
  2455  00ED54  66                 	db	102	;'f'
  2456  00ED55  6F                 	db	111	;'o'
  2457  00ED56  6C                 	db	108	;'l'
  2458  00ED57  6C                 	db	108	;'l'
  2459  00ED58  6F                 	db	111	;'o'
  2460  00ED59  77                 	db	119	;'w'
  2461  00ED5A  69                 	db	105	;'i'
  2462  00ED5B  6E                 	db	110	;'n'
  2463  00ED5C  67                 	db	103	;'g'
  2464  00ED5D  20                 	db	32
  2465  00ED5E  55                 	db	85	;'U'
  2466  00ED5F  73                 	db	115	;'s'
  2467  00ED60  65                 	db	101	;'e'
  2468  00ED61  72                 	db	114	;'r'
  2469  00ED62  20                 	db	32
  2470  00ED63  49                 	db	73	;'I'
  2471  00ED64  44                 	db	68	;'D'
  2472  00ED65  73                 	db	115	;'s'
  2473  00ED66  20                 	db	32
  2474  00ED67  68                 	db	104	;'h'
  2475  00ED68  61                 	db	97	;'a'
  2476  00ED69  76                 	db	118	;'v'
  2477  00ED6A  65                 	db	101	;'e'
  2478  00ED6B  20                 	db	32
  2479  00ED6C  62                 	db	98	;'b'
  2480  00ED6D  65                 	db	101	;'e'
  2481  00ED6E  65                 	db	101	;'e'
  2482  00ED6F  6E                 	db	110	;'n'
  2483  00ED70  20                 	db	32
  2484  00ED71  72                 	db	114	;'r'
  2485  00ED72  65                 	db	101	;'e'
  2486  00ED73  74                 	db	116	;'t'
  2487  00ED74  72                 	db	114	;'r'
  2488  00ED75  69                 	db	105	;'i'
  2489  00ED76  65                 	db	101	;'e'
  2490  00ED77  76                 	db	118	;'v'
  2491  00ED78  65                 	db	101	;'e'
  2492  00ED79  64                 	db	100	;'d'
  2493  00ED7A  20                 	db	32
  2494  00ED7B  66                 	db	102	;'f'
  2495  00ED7C  72                 	db	114	;'r'
  2496  00ED7D  6F                 	db	111	;'o'
  2497  00ED7E  6D                 	db	109	;'m'
  2498  00ED7F  20                 	db	32
  2499  00ED80  66                 	db	102	;'f'
  2500  00ED81  6C                 	db	108	;'l'
  2501  00ED82  61                 	db	97	;'a'
  2502  00ED83  73                 	db	115	;'s'
  2503  00ED84  68                 	db	104	;'h'
  2504  00ED85  3A                 	db	58	;':'
  2505  00ED86  0A                 	db	10
  2506  00ED87  0D                 	db	13
  2507  00ED88  00                 	db	0
  2508  00ED89                     STR_280:
  2509  00ED89  20                 	db	32
  2510  00ED8A  20                 	db	32
  2511  00ED8B  20                 	db	32
  2512  00ED8C  20                 	db	32
  2513  00ED8D  43                 	db	67	;'C'
  2514  00ED8E  68                 	db	104	;'h'
  2515  00ED8F  61                 	db	97	;'a'
  2516  00ED90  72                 	db	114	;'r'
  2517  00ED91  67                 	db	103	;'g'
  2518  00ED92  65                 	db	101	;'e'
  2519  00ED93  20                 	db	32
  2520  00ED94  63                 	db	99	;'c'
  2521  00ED95  6F                 	db	111	;'o'
  2522  00ED96  6E                 	db	110	;'n'
  2523  00ED97  73                 	db	115	;'s'
  2524  00ED98  75                 	db	117	;'u'
  2525  00ED99  6D                 	db	109	;'m'
  2526  00ED9A  65                 	db	101	;'e'
  2527  00ED9B  64                 	db	100	;'d'
  2528  00ED9C  20                 	db	32
  2529  00ED9D  62                 	db	98	;'b'
  2530  00ED9E  79                 	db	121	;'y'
  2531  00ED9F  20                 	db	32
  2532  00EDA0  74                 	db	116	;'t'
  2533  00EDA1  68                 	db	104	;'h'
  2534  00EDA2  65                 	db	101	;'e'
  2535  00EDA3  20                 	db	32
  2536  00EDA4  6C                 	db	108	;'l'
  2537  00EDA5  6F                 	db	111	;'o'
  2538  00EDA6  61                 	db	97	;'a'
  2539  00EDA7  64                 	db	100	;'d'
  2540  00EDA8  20                 	db	32
  2541  00EDA9  77                 	db	119	;'w'
  2542  00EDAA  68                 	db	104	;'h'
  2543  00EDAB  69                 	db	105	;'i'
  2544  00EDAC  6C                 	db	108	;'l'
  2545  00EDAD  65                 	db	101	;'e'
  2546  00EDAE  20                 	db	32
  2547  00EDAF  63                 	db	99	;'c'
  2548  00EDB0  68                 	db	104	;'h'
  2549  00EDB1  61                 	db	97	;'a'
  2550  00EDB2  72                 	db	114	;'r'
  2551  00EDB3  67                 	db	103	;'g'
  2552  00EDB4  69                 	db	105	;'i'
  2553  00EDB5  6E                 	db	110	;'n'
  2554  00EDB6  67                 	db	103	;'g'
  2555  00EDB7  3A                 	db	58	;':'
  2556  00EDB8  20                 	db	32
  2557  00EDB9  25                 	db	37
  2558  00EDBA  73                 	db	115	;'s'
  2559  00EDBB  43                 	db	67	;'C'
  2560  00EDBC  6F                 	db	111	;'o'
  2561  00EDBD  75                 	db	117	;'u'
  2562  00EDBE  6C                 	db	108	;'l'
  2563  00EDBF  6F                 	db	111	;'o'
  2564  00EDC0  6D                 	db	109	;'m'
  2565  00EDC1  62                 	db	98	;'b'
  2566  00EDC2  73                 	db	115	;'s'
  2567  00EDC3  0A                 	db	10
  2568  00EDC4  0D                 	db	13
  2569  00EDC5  00                 	db	0
  2570  00EDC6  46                 	db	70	;'F'
  2571  00EDC7  69                 	db	105	;'i'
  2572  00EDC8  6E                 	db	110	;'n'
  2573  00EDC9  69                 	db	105	;'i'
  2574  00EDCA  73                 	db	115	;'s'
  2575  00EDCB  68                 	db	104	;'h'
  2576  00EDCC  65                 	db	101	;'e'
  2577  00EDCD  64                 	db	100	;'d'
  2578  00EDCE  20                 	db	32
  2579  00EDCF  74                 	db	116	;'t'
  2580  00EDD0  65                 	db	101	;'e'
  2581  00EDD1  73                 	db	115	;'s'
  2582  00EDD2  74                 	db	116	;'t'
  2583  00EDD3  20                 	db	32
  2584  00EDD4  6D                 	db	109	;'m'
  2585  00EDD5  65                 	db	101	;'e'
  2586  00EDD6  73                 	db	115	;'s'
  2587  00EDD7  73                 	db	115	;'s'
  2588  00EDD8  61                 	db	97	;'a'
  2589  00EDD9  67                 	db	103	;'g'
  2590  00EDDA  65                 	db	101	;'e'
  2591  00EDDB  2C                 	db	44
  2592  00EDDC  20                 	db	32
  2593  00EDDD  74                 	db	116	;'t'
  2594  00EDDE  79                 	db	121	;'y'
  2595  00EDDF  70                 	db	112	;'p'
  2596  00EDE0  65                 	db	101	;'e'
  2597  00EDE1  20                 	db	32
  2598  00EDE2  27                 	db	39
  2599  00EDE3  48                 	db	72	;'H'
  2600  00EDE4  65                 	db	101	;'e'
  2601  00EDE5  6C                 	db	108	;'l'
  2602  00EDE6  70                 	db	112	;'p'
  2603  00EDE7  27                 	db	39
  2604  00EDE8  20                 	db	32
  2605  00EDE9  66                 	db	102	;'f'
  2606  00EDEA  6F                 	db	111	;'o'
  2607  00EDEB  72                 	db	114	;'r'
  2608  00EDEC  20                 	db	32
  2609  00EDED  6C                 	db	108	;'l'
  2610  00EDEE  69                 	db	105	;'i'
  2611  00EDEF  73                 	db	115	;'s'
  2612  00EDF0  74                 	db	116	;'t'
  2613  00EDF1  20                 	db	32
  2614  00EDF2  6F                 	db	111	;'o'
  2615  00EDF3  66                 	db	102	;'f'
  2616  00EDF4  20                 	db	32
  2617  00EDF5  63                 	db	99	;'c'
  2618  00EDF6  6F                 	db	111	;'o'
  2619  00EDF7  6D                 	db	109	;'m'
  2620  00EDF8  6D                 	db	109	;'m'
  2621  00EDF9  61                 	db	97	;'a'
  2622  00EDFA  6E                 	db	110	;'n'
  2623  00EDFB  64                 	db	100	;'d'
  2624  00EDFC  73                 	db	115	;'s'
  2625  00EDFD  0A                 	db	10
  2626  00EDFE  0D                 	db	13
  2627  00EDFF  0A                 	db	10
  2628  00EE00  0D                 	db	13
  2629  00EE01  00                 	db	0
  2630  00EE02                     STR_208:
  2631  00EE02  20                 	db	32
  2632  00EE03  20                 	db	32
  2633  00EE04  20                 	db	32
  2634  00EE05  20                 	db	32
  2635  00EE06  20                 	db	32
  2636  00EE07  20                 	db	32
  2637  00EE08  20                 	db	32
  2638  00EE09  20                 	db	32
  2639  00EE0A  55                 	db	85	;'U'
  2640  00EE0B  73                 	db	115	;'s'
  2641  00EE0C  65                 	db	101	;'e'
  2642  00EE0D  72                 	db	114	;'r'
  2643  00EE0E  20                 	db	32
  2644  00EE0F  49                 	db	73	;'I'
  2645  00EE10  44                 	db	68	;'D'
  2646  00EE11  20                 	db	32
  2647  00EE12  57                 	db	87	;'W'
  2648  00EE13  6F                 	db	111	;'o'
  2649  00EE14  72                 	db	114	;'r'
  2650  00EE15  64                 	db	100	;'d'
  2651  00EE16  20                 	db	32
  2652  00EE17  25                 	db	37
  2653  00EE18  64                 	db	100	;'d'
  2654  00EE19  20                 	db	32
  2655  00EE1A  28                 	db	40
  2656  00EE1B  46                 	db	70	;'F'
  2657  00EE1C  6C                 	db	108	;'l'
  2658  00EE1D  61                 	db	97	;'a'
  2659  00EE1E  73                 	db	115	;'s'
  2660  00EE1F  68                 	db	104	;'h'
  2661  00EE20  20                 	db	32
  2662  00EE21  61                 	db	97	;'a'
  2663  00EE22  64                 	db	100	;'d'
  2664  00EE23  64                 	db	100	;'d'
  2665  00EE24  72                 	db	114	;'r'
  2666  00EE25  65                 	db	101	;'e'
  2667  00EE26  73                 	db	115	;'s'
  2668  00EE27  73                 	db	115	;'s'
  2669  00EE28  20                 	db	32
  2670  00EE29  30                 	db	48	;'0'
  2671  00EE2A  78                 	db	120	;'x'
  2672  00EE2B  32                 	db	50	;'2'
  2673  00EE2C  30                 	db	48	;'0'
  2674  00EE2D  30                 	db	48	;'0'
  2675  00EE2E  30                 	db	48	;'0'
  2676  00EE2F  30                 	db	48	;'0'
  2677  00EE30  25                 	db	37
  2678  00EE31  58                 	db	88	;'X'
  2679  00EE32  29                 	db	41
  2680  00EE33  3A                 	db	58	;':'
  2681  00EE34  20                 	db	32
  2682  00EE35  30                 	db	48	;'0'
  2683  00EE36  78                 	db	120	;'x'
  2684  00EE37  25                 	db	37
  2685  00EE38  30                 	db	48	;'0'
  2686  00EE39  34                 	db	52	;'4'
  2687  00EE3A  58                 	db	88	;'X'
  2688  00EE3B  0A                 	db	10
  2689  00EE3C  0D                 	db	13
  2690  00EE3D  00                 	db	0
  2691  00EE3E                     STR_278:
  2692  00EE3E  20                 	db	32
  2693  00EE3F  20                 	db	32
  2694  00EE40  20                 	db	32
  2695  00EE41  20                 	db	32
  2696  00EE42  45                 	db	69	;'E'
  2697  00EE43  6E                 	db	110	;'n'
  2698  00EE44  65                 	db	101	;'e'
  2699  00EE45  72                 	db	114	;'r'
  2700  00EE46  67                 	db	103	;'g'
  2701  00EE47  79                 	db	121	;'y'
  2702  00EE48  20                 	db	32
  2703  00EE49  63                 	db	99	;'c'
  2704  00EE4A  6F                 	db	111	;'o'
  2705  00EE4B  6E                 	db	110	;'n'
  2706  00EE4C  73                 	db	115	;'s'
  2707  00EE4D  75                 	db	117	;'u'
  2708  00EE4E  6D                 	db	109	;'m'
  2709  00EE4F  65                 	db	101	;'e'
  2710  00EE50  64                 	db	100	;'d'
  2711  00EE51  20                 	db	32
  2712  00EE52  62                 	db	98	;'b'
  2713  00EE53  79                 	db	121	;'y'
  2714  00EE54  20                 	db	32
  2715  00EE55  74                 	db	116	;'t'
  2716  00EE56  68                 	db	104	;'h'
  2717  00EE57  65                 	db	101	;'e'
  2718  00EE58  20                 	db	32
  2719  00EE59  6C                 	db	108	;'l'
  2720  00EE5A  6F                 	db	111	;'o'
  2721  00EE5B  61                 	db	97	;'a'
  2722  00EE5C  64                 	db	100	;'d'
  2723  00EE5D  20                 	db	32
  2724  00EE5E  77                 	db	119	;'w'
  2725  00EE5F  68                 	db	104	;'h'
  2726  00EE60  69                 	db	105	;'i'
  2727  00EE61  6C                 	db	108	;'l'
  2728  00EE62  65                 	db	101	;'e'
  2729  00EE63  20                 	db	32
  2730  00EE64  63                 	db	99	;'c'
  2731  00EE65  68                 	db	104	;'h'
  2732  00EE66  61                 	db	97	;'a'
  2733  00EE67  72                 	db	114	;'r'
  2734  00EE68  67                 	db	103	;'g'
  2735  00EE69  69                 	db	105	;'i'
  2736  00EE6A  6E                 	db	110	;'n'
  2737  00EE6B  67                 	db	103	;'g'
  2738  00EE6C  3A                 	db	58	;':'
  2739  00EE6D  20                 	db	32
  2740  00EE6E  25                 	db	37
  2741  00EE6F  73                 	db	115	;'s'
  2742  00EE70  4A                 	db	74	;'J'
  2743  00EE71  6F                 	db	111	;'o'
  2744  00EE72  75                 	db	117	;'u'
  2745  00EE73  6C                 	db	108	;'l'
  2746  00EE74  65                 	db	101	;'e'
  2747  00EE75  73                 	db	115	;'s'
  2748  00EE76  0A                 	db	10
  2749  00EE77  0D                 	db	13
  2750  00EE78  00                 	db	0
  2751  00EE79                     STR_273:
  2752  00EE79  20                 	db	32
  2753  00EE7A  20                 	db	32
  2754  00EE7B  20                 	db	32
  2755  00EE7C  20                 	db	32
  2756  00EE7D  20                 	db	32
  2757  00EE7E  20                 	db	32
  2758  00EE7F  20                 	db	32
  2759  00EE80  20                 	db	32
  2760  00EE81  45                 	db	69	;'E'
  2761  00EE82  6C                 	db	108	;'l'
  2762  00EE83  65                 	db	101	;'e'
  2763  00EE84  63                 	db	99	;'c'
  2764  00EE85  74                 	db	116	;'t'
  2765  00EE86  72                 	db	114	;'r'
  2766  00EE87  69                 	db	105	;'i'
  2767  00EE88  63                 	db	99	;'c'
  2768  00EE89  61                 	db	97	;'a'
  2769  00EE8A  6C                 	db	108	;'l'
  2770  00EE8B  20                 	db	32
  2771  00EE8C  49                 	db	73	;'I'
  2772  00EE8D  6E                 	db	110	;'n'
  2773  00EE8E  70                 	db	112	;'p'
  2774  00EE8F  75                 	db	117	;'u'
  2775  00EE90  74                 	db	116	;'t'
  2776  00EE91  20                 	db	32
  2777  00EE92  50                 	db	80	;'P'
  2778  00EE93  6F                 	db	111	;'o'
  2779  00EE94  77                 	db	119	;'w'
  2780  00EE95  65                 	db	101	;'e'
  2781  00EE96  72                 	db	114	;'r'
  2782  00EE97  20                 	db	32
  2783  00EE98  63                 	db	99	;'c'
  2784  00EE99  61                 	db	97	;'a'
  2785  00EE9A  6C                 	db	108	;'l'
  2786  00EE9B  63                 	db	99	;'c'
  2787  00EE9C  75                 	db	117	;'u'
  2788  00EE9D  6C                 	db	108	;'l'
  2789  00EE9E  61                 	db	97	;'a'
  2790  00EE9F  74                 	db	116	;'t'
  2791  00EEA0  65                 	db	101	;'e'
  2792  00EEA1  64                 	db	100	;'d'
  2793  00EEA2  20                 	db	32
  2794  00EEA3  61                 	db	97	;'a'
  2795  00EEA4  73                 	db	115	;'s'
  2796  00EEA5  20                 	db	32
  2797  00EEA6  25                 	db	37
  2798  00EEA7  2B                 	db	43
  2799  00EEA8  2E                 	db	46
  2800  00EEA9  33                 	db	51	;'3'
  2801  00EEAA  66                 	db	102	;'f'
  2802  00EEAB  20                 	db	32
  2803  00EEAC  57                 	db	87	;'W'
  2804  00EEAD  61                 	db	97	;'a'
  2805  00EEAE  74                 	db	116	;'t'
  2806  00EEAF  74                 	db	116	;'t'
  2807  00EEB0  73                 	db	115	;'s'
  2808  00EEB1  0A                 	db	10
  2809  00EEB2  0D                 	db	13
  2810  00EEB3  00                 	db	0
  2811  00EEB4                     STR_260:
  2812  00EEB4  20                 	db	32
  2813  00EEB5  20                 	db	32
  2814  00EEB6  20                 	db	32
  2815  00EEB7  20                 	db	32
  2816  00EEB8  51                 	db	81	;'Q'
  2817  00EEB9  49                 	db	73	;'I'
  2818  00EEBA  20                 	db	32
  2819  00EEBB  77                 	db	119	;'w'
  2820  00EEBC  69                 	db	105	;'i'
  2821  00EEBD  72                 	db	114	;'r'
  2822  00EEBE  65                 	db	101	;'e'
  2823  00EEBF  6C                 	db	108	;'l'
  2824  00EEC0  65                 	db	101	;'e'
  2825  00EEC1  73                 	db	115	;'s'
  2826  00EEC2  73                 	db	115	;'s'
  2827  00EEC3  20                 	db	32
  2828  00EEC4  70                 	db	112	;'p'
  2829  00EEC5  6F                 	db	111	;'o'
  2830  00EEC6  77                 	db	119	;'w'
  2831  00EEC7  65                 	db	101	;'e'
  2832  00EEC8  72                 	db	114	;'r'
  2833  00EEC9  20                 	db	32
  2834  00EECA  63                 	db	99	;'c'
  2835  00EECB  6F                 	db	111	;'o'
  2836  00EECC  6E                 	db	110	;'n'
  2837  00EECD  76                 	db	118	;'v'
  2838  00EECE  65                 	db	101	;'e'
  2839  00EECF  72                 	db	114	;'r'
  2840  00EED0  74                 	db	116	;'t'
  2841  00EED1  65                 	db	101	;'e'
  2842  00EED2  72                 	db	114	;'r'
  2843  00EED3  20                 	db	32
  2844  00EED4  68                 	db	104	;'h'
  2845  00EED5  61                 	db	97	;'a'
  2846  00EED6  73                 	db	115	;'s'
  2847  00EED7  20                 	db	32
  2848  00EED8  66                 	db	102	;'f'
  2849  00EED9  75                 	db	117	;'u'
  2850  00EEDA  6C                 	db	108	;'l'
  2851  00EEDB  6C                 	db	108	;'l'
  2852  00EEDC  79                 	db	121	;'y'
  2853  00EEDD  20                 	db	32
  2854  00EEDE  63                 	db	99	;'c'
  2855  00EEDF  68                 	db	104	;'h'
  2856  00EEE0  61                 	db	97	;'a'
  2857  00EEE1  72                 	db	114	;'r'
  2858  00EEE2  67                 	db	103	;'g'
  2859  00EEE3  65                 	db	101	;'e'
  2860  00EEE4  64                 	db	100	;'d'
  2861  00EEE5  20                 	db	32
  2862  00EEE6  70                 	db	112	;'p'
  2863  00EEE7  68                 	db	104	;'h'
  2864  00EEE8  6F                 	db	111	;'o'
  2865  00EEE9  6E                 	db	110	;'n'
  2866  00EEEA  65                 	db	101	;'e'
  2867  00EEEB  0A                 	db	10
  2868  00EEEC  0D                 	db	13
  2869  00EEED  00                 	db	0
  2870  00EEEE                     STR_274:
  2871  00EEEE  20                 	db	32
  2872  00EEEF  20                 	db	32
  2873  00EEF0  20                 	db	32
  2874  00EEF1  20                 	db	32
  2875  00EEF2  20                 	db	32
  2876  00EEF3  20                 	db	32
  2877  00EEF4  20                 	db	32
  2878  00EEF5  20                 	db	32
  2879  00EEF6  57                 	db	87	;'W'
  2880  00EEF7  69                 	db	105	;'i'
  2881  00EEF8  72                 	db	114	;'r'
  2882  00EEF9  65                 	db	101	;'e'
  2883  00EEFA  6C                 	db	108	;'l'
  2884  00EEFB  65                 	db	101	;'e'
  2885  00EEFC  73                 	db	115	;'s'
  2886  00EEFD  73                 	db	115	;'s'
  2887  00EEFE  20                 	db	32
  2888  00EEFF  4F                 	db	79	;'O'
  2889  00EF00  75                 	db	117	;'u'
  2890  00EF01  74                 	db	116	;'t'
  2891  00EF02  70                 	db	112	;'p'
  2892  00EF03  75                 	db	117	;'u'
  2893  00EF04  74                 	db	116	;'t'
  2894  00EF05  20                 	db	32
  2895  00EF06  50                 	db	80	;'P'
  2896  00EF07  6F                 	db	111	;'o'
  2897  00EF08  77                 	db	119	;'w'
  2898  00EF09  65                 	db	101	;'e'
  2899  00EF0A  72                 	db	114	;'r'
  2900  00EF0B  20                 	db	32
  2901  00EF0C  63                 	db	99	;'c'
  2902  00EF0D  61                 	db	97	;'a'
  2903  00EF0E  6C                 	db	108	;'l'
  2904  00EF0F  63                 	db	99	;'c'
  2905  00EF10  75                 	db	117	;'u'
  2906  00EF11  6C                 	db	108	;'l'
  2907  00EF12  61                 	db	97	;'a'
  2908  00EF13  74                 	db	116	;'t'
  2909  00EF14  65                 	db	101	;'e'
  2910  00EF15  64                 	db	100	;'d'
  2911  00EF16  20                 	db	32
  2912  00EF17  61                 	db	97	;'a'
  2913  00EF18  73                 	db	115	;'s'
  2914  00EF19  20                 	db	32
  2915  00EF1A  25                 	db	37
  2916  00EF1B  2B                 	db	43
  2917  00EF1C  2E                 	db	46
  2918  00EF1D  33                 	db	51	;'3'
  2919  00EF1E  66                 	db	102	;'f'
  2920  00EF1F  20                 	db	32
  2921  00EF20  57                 	db	87	;'W'
  2922  00EF21  61                 	db	97	;'a'
  2923  00EF22  74                 	db	116	;'t'
  2924  00EF23  74                 	db	116	;'t'
  2925  00EF24  73                 	db	115	;'s'
  2926  00EF25  0A                 	db	10
  2927  00EF26  0D                 	db	13
  2928  00EF27  00                 	db	0
  2929  00EF28                     STR_286:
  2930  00EF28  20                 	db	32
  2931  00EF29  20                 	db	32
  2932  00EF2A  20                 	db	32
  2933  00EF2B  20                 	db	32
  2934  00EF2C  20                 	db	32
  2935  00EF2D  20                 	db	32
  2936  00EF2E  20                 	db	32
  2937  00EF2F  20                 	db	32
  2938  00EF30  43                 	db	67	;'C'
  2939  00EF31  75                 	db	117	;'u'
  2940  00EF32  72                 	db	114	;'r'
  2941  00EF33  72                 	db	114	;'r'
  2942  00EF34  65                 	db	101	;'e'
  2943  00EF35  6E                 	db	110	;'n'
  2944  00EF36  74                 	db	116	;'t'
  2945  00EF37  20                 	db	32
  2946  00EF38  51                 	db	81	;'Q'
  2947  00EF39  49                 	db	73	;'I'
  2948  00EF3A  20                 	db	32
  2949  00EF3B  53                 	db	83	;'S'
  2950  00EF3C  77                 	db	119	;'w'
  2951  00EF3D  69                 	db	105	;'i'
  2952  00EF3E  74                 	db	116	;'t'
  2953  00EF3F  63                 	db	99	;'c'
  2954  00EF40  68                 	db	104	;'h'
  2955  00EF41  69                 	db	105	;'i'
  2956  00EF42  6E                 	db	110	;'n'
  2957  00EF43  67                 	db	103	;'g'
  2958  00EF44  20                 	db	32
  2959  00EF45  46                 	db	70	;'F'
  2960  00EF46  72                 	db	114	;'r'
  2961  00EF47  65                 	db	101	;'e'
  2962  00EF48  71                 	db	113	;'q'
  2963  00EF49  75                 	db	117	;'u'
  2964  00EF4A  65                 	db	101	;'e'
  2965  00EF4B  6E                 	db	110	;'n'
  2966  00EF4C  63                 	db	99	;'c'
  2967  00EF4D  79                 	db	121	;'y'
  2968  00EF4E  20                 	db	32
  2969  00EF4F  6D                 	db	109	;'m'
  2970  00EF50  65                 	db	101	;'e'
  2971  00EF51  61                 	db	97	;'a'
  2972  00EF52  73                 	db	115	;'s'
  2973  00EF53  75                 	db	117	;'u'
  2974  00EF54  72                 	db	114	;'r'
  2975  00EF55  65                 	db	101	;'e'
  2976  00EF56  64                 	db	100	;'d'
  2977  00EF57  20                 	db	32
  2978  00EF58  61                 	db	97	;'a'
  2979  00EF59  73                 	db	115	;'s'
  2980  00EF5A  20                 	db	32
  2981  00EF5B  25                 	db	37
  2982  00EF5C  73                 	db	115	;'s'
  2983  00EF5D  48                 	db	72	;'H'
  2984  00EF5E  7A                 	db	122	;'z'
  2985  00EF5F  0A                 	db	10
  2986  00EF60  0D                 	db	13
  2987  00EF61  00                 	db	0
  2988  00EF62                     STR_5:
  2989  00EF62  0A                 	db	10
  2990  00EF63  0D                 	db	13
  2991  00EF64  48                 	db	72	;'H'
  2992  00EF65  65                 	db	101	;'e'
  2993  00EF66  6C                 	db	108	;'l'
  2994  00EF67  70                 	db	112	;'p'
  2995  00EF68  20                 	db	32
  2996  00EF69  6D                 	db	109	;'m'
  2997  00EF6A  65                 	db	101	;'e'
  2998  00EF6B  73                 	db	115	;'s'
  2999  00EF6C  73                 	db	115	;'s'
  3000  00EF6D  61                 	db	97	;'a'
  3001  00EF6E  67                 	db	103	;'g'
  3002  00EF6F  65                 	db	101	;'e'
  3003  00EF70  73                 	db	115	;'s'
  3004  00EF71  20                 	db	32
  3005  00EF72  61                 	db	97	;'a'
  3006  00EF73  6E                 	db	110	;'n'
  3007  00EF74  64                 	db	100	;'d'
  3008  00EF75  20                 	db	32
  3009  00EF76  6E                 	db	110	;'n'
  3010  00EF77  65                 	db	101	;'e'
  3011  00EF78  75                 	db	117	;'u'
  3012  00EF79  74                 	db	116	;'t'
  3013  00EF7A  72                 	db	114	;'r'
  3014  00EF7B  61                 	db	97	;'a'
  3015  00EF7C  6C                 	db	108	;'l'
  3016  00EF7D  20                 	db	32
  3017  00EF7E  72                 	db	114	;'r'
  3018  00EF7F  65                 	db	101	;'e'
  3019  00EF80  73                 	db	115	;'s'
  3020  00EF81  70                 	db	112	;'p'
  3021  00EF82  6F                 	db	111	;'o'
  3022  00EF83  6E                 	db	110	;'n'
  3023  00EF84  73                 	db	115	;'s'
  3024  00EF85  65                 	db	101	;'e'
  3025  00EF86  73                 	db	115	;'s'
  3026  00EF87  20                 	db	32
  3027  00EF88  61                 	db	97	;'a'
  3028  00EF89  70                 	db	112	;'p'
  3029  00EF8A  70                 	db	112	;'p'
  3030  00EF8B  65                 	db	101	;'e'
  3031  00EF8C  61                 	db	97	;'a'
  3032  00EF8D  72                 	db	114	;'r'
  3033  00EF8E  20                 	db	32
  3034  00EF8F  69                 	db	105	;'i'
  3035  00EF90  6E                 	db	110	;'n'
  3036  00EF91  20                 	db	32
  3037  00EF92  79                 	db	121	;'y'
  3038  00EF93  65                 	db	101	;'e'
  3039  00EF94  6C                 	db	108	;'l'
  3040  00EF95  6C                 	db	108	;'l'
  3041  00EF96  6F                 	db	111	;'o'
  3042  00EF97  77                 	db	119	;'w'
  3043  00EF98  0A                 	db	10
  3044  00EF99  0D                 	db	13
  3045  00EF9A  00                 	db	0
  3046  00EF9B                     STR_290:
  3047  00EF9B  20                 	db	32
  3048  00EF9C  20                 	db	32
  3049  00EF9D  20                 	db	32
  3050  00EF9E  20                 	db	32
  3051  00EF9F  20                 	db	32
  3052  00EFA0  20                 	db	32
  3053  00EFA1  20                 	db	32
  3054  00EFA2  20                 	db	32
  3055  00EFA3  2B                 	db	43
  3056  00EFA4  35                 	db	53	;'5'
  3057  00EFA5  56                 	db	86	;'V'
  3058  00EFA6  20                 	db	32
  3059  00EFA7  43                 	db	67	;'C'
  3060  00EFA8  6F                 	db	111	;'o'
  3061  00EFA9  6E                 	db	110	;'n'
  3062  00EFAA  76                 	db	118	;'v'
  3063  00EFAB  65                 	db	101	;'e'
  3064  00EFAC  72                 	db	114	;'r'
  3065  00EFAD  74                 	db	116	;'t'
  3066  00EFAE  65                 	db	101	;'e'
  3067  00EFAF  72                 	db	114	;'r'
  3068  00EFB0  20                 	db	32
  3069  00EFB1  54                 	db	84	;'T'
  3070  00EFB2  65                 	db	101	;'e'
  3071  00EFB3  6D                 	db	109	;'m'
  3072  00EFB4  70                 	db	112	;'p'
  3073  00EFB5  65                 	db	101	;'e'
  3074  00EFB6  72                 	db	114	;'r'
  3075  00EFB7  61                 	db	97	;'a'
  3076  00EFB8  74                 	db	116	;'t'
  3077  00EFB9  75                 	db	117	;'u'
  3078  00EFBA  72                 	db	114	;'r'
  3079  00EFBB  65                 	db	101	;'e'
  3080  00EFBC  20                 	db	32
  3081  00EFBD  6D                 	db	109	;'m'
  3082  00EFBE  65                 	db	101	;'e'
  3083  00EFBF  61                 	db	97	;'a'
  3084  00EFC0  73                 	db	115	;'s'
  3085  00EFC1  75                 	db	117	;'u'
  3086  00EFC2  72                 	db	114	;'r'
  3087  00EFC3  65                 	db	101	;'e'
  3088  00EFC4  64                 	db	100	;'d'
  3089  00EFC5  20                 	db	32
  3090  00EFC6  61                 	db	97	;'a'
  3091  00EFC7  73                 	db	115	;'s'
  3092  00EFC8  20                 	db	32
  3093  00EFC9  25                 	db	37
  3094  00EFCA  2B                 	db	43
  3095  00EFCB  2E                 	db	46
  3096  00EFCC  33                 	db	51	;'3'
  3097  00EFCD  66                 	db	102	;'f'
  3098  00EFCE  20                 	db	32
  3099  00EFCF  43                 	db	67	;'C'
  3100  00EFD0  0A                 	db	10
  3101  00EFD1  0D                 	db	13
  3102  00EFD2  00                 	db	0
  3103  00EFD3                     STR_210:
  3104  00EFD3  20                 	db	32
  3105  00EFD4  20                 	db	32
  3106  00EFD5  20                 	db	32
  3107  00EFD6  20                 	db	32
  3108  00EFD7  54                 	db	84	;'T'
  3109  00EFD8  68                 	db	104	;'h'
  3110  00EFD9  65                 	db	101	;'e'
  3111  00EFDA  20                 	db	32
  3112  00EFDB  63                 	db	99	;'c'
  3113  00EFDC  61                 	db	97	;'a'
  3114  00EFDD  75                 	db	117	;'u'
  3115  00EFDE  73                 	db	115	;'s'
  3116  00EFDF  65                 	db	101	;'e'
  3117  00EFE0  20                 	db	32
  3118  00EFE1  6F                 	db	111	;'o'
  3119  00EFE2  66                 	db	102	;'f'
  3120  00EFE3  20                 	db	32
  3121  00EFE4  74                 	db	116	;'t'
  3122  00EFE5  68                 	db	104	;'h'
  3123  00EFE6  65                 	db	101	;'e'
  3124  00EFE7  20                 	db	32
  3125  00EFE8  6D                 	db	109	;'m'
  3126  00EFE9  6F                 	db	111	;'o'
  3127  00EFEA  73                 	db	115	;'s'
  3128  00EFEB  74                 	db	116	;'t'
  3129  00EFEC  20                 	db	32
  3130  00EFED  72                 	db	114	;'r'
  3131  00EFEE  65                 	db	101	;'e'
  3132  00EFEF  63                 	db	99	;'c'
  3133  00EFF0  65                 	db	101	;'e'
  3134  00EFF1  6E                 	db	110	;'n'
  3135  00EFF2  74                 	db	116	;'t'
  3136  00EFF3  20                 	db	32
  3137  00EFF4  64                 	db	100	;'d'
  3138  00EFF5  65                 	db	101	;'e'
  3139  00EFF6  76                 	db	118	;'v'
  3140  00EFF7  69                 	db	105	;'i'
  3141  00EFF8  63                 	db	99	;'c'
  3142  00EFF9  65                 	db	101	;'e'
  3143  00EFFA  20                 	db	32
  3144  00EFFB  72                 	db	114	;'r'
  3145  00EFFC  65                 	db	101	;'e'
  3146  00EFFD  73                 	db	115	;'s'
  3147  00EFFE  65                 	db	101	;'e'
  3148  00EFFF  74                 	db	116	;'t'
  3149  00F000  20                 	db	32
  3150  00F001  77                 	db	119	;'w'
  3151  00F002  61                 	db	97	;'a'
  3152  00F003  73                 	db	115	;'s'
  3153  00F004  3A                 	db	58	;':'
  3154  00F005  20                 	db	32
  3155  00F006  25                 	db	37
  3156  00F007  73                 	db	115	;'s'
  3157  00F008  0A                 	db	10
  3158  00F009  0D                 	db	13
  3159  00F00A  00                 	db	0
  3160  00F00B                     STR_289:
  3161  00F00B  20                 	db	32
  3162  00F00C  20                 	db	32
  3163  00F00D  20                 	db	32
  3164  00F00E  20                 	db	32
  3165  00F00F  20                 	db	32
  3166  00F010  20                 	db	32
  3167  00F011  20                 	db	32
  3168  00F012  20                 	db	32
  3169  00F013  51                 	db	81	;'Q'
  3170  00F014  49                 	db	73	;'I'
  3171  00F015  20                 	db	32
  3172  00F016  43                 	db	67	;'C'
  3173  00F017  6F                 	db	111	;'o'
  3174  00F018  6E                 	db	110	;'n'
  3175  00F019  76                 	db	118	;'v'
  3176  00F01A  65                 	db	101	;'e'
  3177  00F01B  72                 	db	114	;'r'
  3178  00F01C  74                 	db	116	;'t'
  3179  00F01D  65                 	db	101	;'e'
  3180  00F01E  72                 	db	114	;'r'
  3181  00F01F  20                 	db	32
  3182  00F020  54                 	db	84	;'T'
  3183  00F021  65                 	db	101	;'e'
  3184  00F022  6D                 	db	109	;'m'
  3185  00F023  70                 	db	112	;'p'
  3186  00F024  65                 	db	101	;'e'
  3187  00F025  72                 	db	114	;'r'
  3188  00F026  61                 	db	97	;'a'
  3189  00F027  74                 	db	116	;'t'
  3190  00F028  75                 	db	117	;'u'
  3191  00F029  72                 	db	114	;'r'
  3192  00F02A  65                 	db	101	;'e'
  3193  00F02B  20                 	db	32
  3194  00F02C  6D                 	db	109	;'m'
  3195  00F02D  65                 	db	101	;'e'
  3196  00F02E  61                 	db	97	;'a'
  3197  00F02F  73                 	db	115	;'s'
  3198  00F030  75                 	db	117	;'u'
  3199  00F031  72                 	db	114	;'r'
  3200  00F032  65                 	db	101	;'e'
  3201  00F033  64                 	db	100	;'d'
  3202  00F034  20                 	db	32
  3203  00F035  61                 	db	97	;'a'
  3204  00F036  73                 	db	115	;'s'
  3205  00F037  20                 	db	32
  3206  00F038  25                 	db	37
  3207  00F039  2B                 	db	43
  3208  00F03A  2E                 	db	46
  3209  00F03B  33                 	db	51	;'3'
  3210  00F03C  66                 	db	102	;'f'
  3211  00F03D  20                 	db	32
  3212  00F03E  43                 	db	67	;'C'
  3213  00F03F  0A                 	db	10
  3214  00F040  0D                 	db	13
  3215  00F041  00                 	db	0
  3216  00F042                     STR_198:
  3217  00F042  51                 	db	81	;'Q'
  3218  00F043  49                 	db	73	;'I'
  3219  00F044  20                 	db	32
  3220  00F045  43                 	db	67	;'C'
  3221  00F046  68                 	db	104	;'h'
  3222  00F047  61                 	db	97	;'a'
  3223  00F048  72                 	db	114	;'r'
  3224  00F049  67                 	db	103	;'g'
  3225  00F04A  65                 	db	101	;'e'
  3226  00F04B  72                 	db	114	;'r'
  3227  00F04C  20                 	db	32
  3228  00F04D  77                 	db	119	;'w'
  3229  00F04E  69                 	db	105	;'i'
  3230  00F04F  74                 	db	116	;'t'
  3231  00F050  68                 	db	104	;'h'
  3232  00F051  20                 	db	32
  3233  00F052  44                 	db	68	;'D'
  3234  00F053  69                 	db	105	;'i'
  3235  00F054  67                 	db	103	;'g'
  3236  00F055  69                 	db	105	;'i'
  3237  00F056  74                 	db	116	;'t'
  3238  00F057  61                 	db	97	;'a'
  3239  00F058  6C                 	db	108	;'l'
  3240  00F059  20                 	db	32
  3241  00F05A  4D                 	db	77	;'M'
  3242  00F05B  6F                 	db	111	;'o'
  3243  00F05C  6E                 	db	110	;'n'
  3244  00F05D  69                 	db	105	;'i'
  3245  00F05E  74                 	db	116	;'t'
  3246  00F05F  6F                 	db	111	;'o'
  3247  00F060  72                 	db	114	;'r'
  3248  00F061  69                 	db	105	;'i'
  3249  00F062  6E                 	db	110	;'n'
  3250  00F063  67                 	db	103	;'g'
  3251  00F064  2C                 	db	44
  3252  00F065  20                 	db	32
  3253  00F066  62                 	db	98	;'b'
  3254  00F067  79                 	db	121	;'y'
  3255  00F068  20                 	db	32
  3256  00F069  44                 	db	68	;'D'
  3257  00F06A  72                 	db	114	;'r'
  3258  00F06B  65                 	db	101	;'e'
  3259  00F06C  77                 	db	119	;'w'
  3260  00F06D  20                 	db	32
  3261  00F06E  4D                 	db	77	;'M'
  3262  00F06F  61                 	db	97	;'a'
  3263  00F070  61                 	db	97	;'a'
  3264  00F071  74                 	db	116	;'t'
  3265  00F072  6D                 	db	109	;'m'
  3266  00F073  61                 	db	97	;'a'
  3267  00F074  6E                 	db	110	;'n'
  3268  00F075  0A                 	db	10
  3269  00F076  0D                 	db	13
  3270  00F077  00                 	db	0
  3271  00F078                     STR_212:
  3272  00F078  20                 	db	32
  3273  00F079  20                 	db	32
  3274  00F07A  20                 	db	32
  3275  00F07B  20                 	db	32
  3276  00F07C  44                 	db	68	;'D'
  3277  00F07D  65                 	db	101	;'e'
  3278  00F07E  76                 	db	118	;'v'
  3279  00F07F  69                 	db	105	;'i'
  3280  00F080  63                 	db	99	;'c'
  3281  00F081  65                 	db	101	;'e'
  3282  00F082  20                 	db	32
  3283  00F083  6F                 	db	111	;'o'
  3284  00F084  6E                 	db	110	;'n'
  3285  00F085  20                 	db	32
  3286  00F086  74                 	db	116	;'t'
  3287  00F087  69                 	db	105	;'i'
  3288  00F088  6D                 	db	109	;'m'
  3289  00F089  65                 	db	101	;'e'
  3290  00F08A  20                 	db	32
  3291  00F08B  73                 	db	115	;'s'
  3292  00F08C  69                 	db	105	;'i'
  3293  00F08D  6E                 	db	110	;'n'
  3294  00F08E  63                 	db	99	;'c'
  3295  00F08F  65                 	db	101	;'e'
  3296  00F090  20                 	db	32
  3297  00F091  6C                 	db	108	;'l'
  3298  00F092  61                 	db	97	;'a'
  3299  00F093  73                 	db	115	;'s'
  3300  00F094  74                 	db	116	;'t'
  3301  00F095  20                 	db	32
  3302  00F096  72                 	db	114	;'r'
  3303  00F097  65                 	db	101	;'e'
  3304  00F098  73                 	db	115	;'s'
  3305  00F099  65                 	db	101	;'e'
  3306  00F09A  74                 	db	116	;'t'
  3307  00F09B  20                 	db	32
  3308  00F09C  63                 	db	99	;'c'
  3309  00F09D  6F                 	db	111	;'o'
  3310  00F09E  6E                 	db	110	;'n'
  3311  00F09F  64                 	db	100	;'d'
  3312  00F0A0  69                 	db	105	;'i'
  3313  00F0A1  74                 	db	116	;'t'
  3314  00F0A2  69                 	db	105	;'i'
  3315  00F0A3  6F                 	db	111	;'o'
  3316  00F0A4  6E                 	db	110	;'n'
  3317  00F0A5  20                 	db	32
  3318  00F0A6  69                 	db	105	;'i'
  3319  00F0A7  73                 	db	115	;'s'
  3320  00F0A8  20                 	db	32
  3321  00F0A9  25                 	db	37
  3322  00F0AA  73                 	db	115	;'s'
  3323  00F0AB  0A                 	db	10
  3324  00F0AC  0D                 	db	13
  3325  00F0AD  00                 	db	0
  3326  00F0AE                     STR_270:
  3327  00F0AE  20                 	db	32
  3328  00F0AF  20                 	db	32
  3329  00F0B0  20                 	db	32
  3330  00F0B1  20                 	db	32
  3331  00F0B2  20                 	db	32
  3332  00F0B3  20                 	db	32
  3333  00F0B4  20                 	db	32
  3334  00F0B5  20                 	db	32
  3335  00F0B6  51                 	db	81	;'Q'
  3336  00F0B7  49                 	db	73	;'I'
  3337  00F0B8  20                 	db	32
  3338  00F0B9  63                 	db	99	;'c'
  3339  00F0BA  6F                 	db	111	;'o'
  3340  00F0BB  6E                 	db	110	;'n'
  3341  00F0BC  76                 	db	118	;'v'
  3342  00F0BD  65                 	db	101	;'e'
  3343  00F0BE  72                 	db	114	;'r'
  3344  00F0BF  74                 	db	116	;'t'
  3345  00F0C0  65                 	db	101	;'e'
  3346  00F0C1  72                 	db	114	;'r'
  3347  00F0C2  20                 	db	32
  3348  00F0C3  63                 	db	99	;'c'
  3349  00F0C4  75                 	db	117	;'u'
  3350  00F0C5  72                 	db	114	;'r'
  3351  00F0C6  72                 	db	114	;'r'
  3352  00F0C7  65                 	db	101	;'e'
  3353  00F0C8  6E                 	db	110	;'n'
  3354  00F0C9  74                 	db	116	;'t'
  3355  00F0CA  20                 	db	32
  3356  00F0CB  6D                 	db	109	;'m'
  3357  00F0CC  65                 	db	101	;'e'
  3358  00F0CD  61                 	db	97	;'a'
  3359  00F0CE  73                 	db	115	;'s'
  3360  00F0CF  75                 	db	117	;'u'
  3361  00F0D0  72                 	db	114	;'r'
  3362  00F0D1  65                 	db	101	;'e'
  3363  00F0D2  64                 	db	100	;'d'
  3364  00F0D3  20                 	db	32
  3365  00F0D4  61                 	db	97	;'a'
  3366  00F0D5  73                 	db	115	;'s'
  3367  00F0D6  20                 	db	32
  3368  00F0D7  25                 	db	37
  3369  00F0D8  2B                 	db	43
  3370  00F0D9  2E                 	db	46
  3371  00F0DA  33                 	db	51	;'3'
  3372  00F0DB  66                 	db	102	;'f'
  3373  00F0DC  20                 	db	32
  3374  00F0DD  41                 	db	65	;'A'
  3375  00F0DE  6D                 	db	109	;'m'
  3376  00F0DF  70                 	db	112	;'p'
  3377  00F0E0  73                 	db	115	;'s'
  3378  00F0E1  0A                 	db	10
  3379  00F0E2  0D                 	db	13
  3380  00F0E3  00                 	db	0
  3381  00F0E4                     STR_246:
  3382  00F0E4  20                 	db	32
  3383  00F0E5  20                 	db	32
  3384  00F0E6  20                 	db	32
  3385  00F0E7  20                 	db	32
  3386  00F0E8  43                 	db	67	;'C'
  3387  00F0E9  61                 	db	97	;'a'
  3388  00F0EA  6C                 	db	108	;'l'
  3389  00F0EB  6C                 	db	108	;'l'
  3390  00F0EC  20                 	db	32
  3391  00F0ED  27                 	db	39
  3392  00F0EE  43                 	db	67	;'C'
  3393  00F0EF  6C                 	db	108	;'l'
  3394  00F0F0  65                 	db	101	;'e'
  3395  00F0F1  61                 	db	97	;'a'
  3396  00F0F2  72                 	db	114	;'r'
  3397  00F0F3  20                 	db	32
  3398  00F0F4  41                 	db	65	;'A'
  3399  00F0F5  44                 	db	68	;'D'
  3400  00F0F6  43                 	db	67	;'C'
  3401  00F0F7  20                 	db	32
  3402  00F0F8  45                 	db	69	;'E'
  3403  00F0F9  72                 	db	114	;'r'
  3404  00F0FA  72                 	db	114	;'r'
  3405  00F0FB  6F                 	db	111	;'o'
  3406  00F0FC  72                 	db	114	;'r'
  3407  00F0FD  73                 	db	115	;'s'
  3408  00F0FE  27                 	db	39
  3409  00F0FF  20                 	db	32
  3410  00F100  74                 	db	116	;'t'
  3411  00F101  6F                 	db	111	;'o'
  3412  00F102  20                 	db	32
  3413  00F103  63                 	db	99	;'c'
  3414  00F104  6C                 	db	108	;'l'
  3415  00F105  65                 	db	101	;'e'
  3416  00F106  61                 	db	97	;'a'
  3417  00F107  72                 	db	114	;'r'
  3418  00F108  20                 	db	32
  3419  00F109  41                 	db	65	;'A'
  3420  00F10A  44                 	db	68	;'D'
  3421  00F10B  43                 	db	67	;'C'
  3422  00F10C  20                 	db	32
  3423  00F10D  65                 	db	101	;'e'
  3424  00F10E  72                 	db	114	;'r'
  3425  00F10F  72                 	db	114	;'r'
  3426  00F110  6F                 	db	111	;'o'
  3427  00F111  72                 	db	114	;'r'
  3428  00F112  28                 	db	40
  3429  00F113  73                 	db	115	;'s'
  3430  00F114  29                 	db	41
  3431  00F115  0A                 	db	10
  3432  00F116  0D                 	db	13
  3433  00F117  00                 	db	0
  3434  00F118                     STR_269:
  3435  00F118  20                 	db	32
  3436  00F119  20                 	db	32
  3437  00F11A  20                 	db	32
  3438  00F11B  20                 	db	32
  3439  00F11C  20                 	db	32
  3440  00F11D  20                 	db	32
  3441  00F11E  20                 	db	32
  3442  00F11F  20                 	db	32
  3443  00F120  2B                 	db	43
  3444  00F121  31                 	db	49	;'1'
  3445  00F122  32                 	db	50	;'2'
  3446  00F123  56                 	db	86	;'V'
  3447  00F124  20                 	db	32
  3448  00F125  69                 	db	105	;'i'
  3449  00F126  6E                 	db	110	;'n'
  3450  00F127  70                 	db	112	;'p'
  3451  00F128  75                 	db	117	;'u'
  3452  00F129  74                 	db	116	;'t'
  3453  00F12A  20                 	db	32
  3454  00F12B  63                 	db	99	;'c'
  3455  00F12C  75                 	db	117	;'u'
  3456  00F12D  72                 	db	114	;'r'
  3457  00F12E  72                 	db	114	;'r'
  3458  00F12F  65                 	db	101	;'e'
  3459  00F130  6E                 	db	110	;'n'
  3460  00F131  74                 	db	116	;'t'
  3461  00F132  20                 	db	32
  3462  00F133  6D                 	db	109	;'m'
  3463  00F134  65                 	db	101	;'e'
  3464  00F135  61                 	db	97	;'a'
  3465  00F136  73                 	db	115	;'s'
  3466  00F137  75                 	db	117	;'u'
  3467  00F138  72                 	db	114	;'r'
  3468  00F139  65                 	db	101	;'e'
  3469  00F13A  64                 	db	100	;'d'
  3470  00F13B  20                 	db	32
  3471  00F13C  61                 	db	97	;'a'
  3472  00F13D  73                 	db	115	;'s'
  3473  00F13E  20                 	db	32
  3474  00F13F  25                 	db	37
  3475  00F140  2B                 	db	43
  3476  00F141  2E                 	db	46
  3477  00F142  33                 	db	51	;'3'
  3478  00F143  66                 	db	102	;'f'
  3479  00F144  20                 	db	32
  3480  00F145  41                 	db	65	;'A'
  3481  00F146  6D                 	db	109	;'m'
  3482  00F147  70                 	db	112	;'p'
  3483  00F148  73                 	db	115	;'s'
  3484  00F149  0A                 	db	10
  3485  00F14A  0D                 	db	13
  3486  00F14B  00                 	db	0
  3487  00F14C                     STR_2:
  3488  00F14C  51                 	db	81	;'Q'
  3489  00F14D  49                 	db	73	;'I'
  3490  00F14E  20                 	db	32
  3491  00F14F  43                 	db	67	;'C'
  3492  00F150  68                 	db	104	;'h'
  3493  00F151  61                 	db	97	;'a'
  3494  00F152  72                 	db	114	;'r'
  3495  00F153  67                 	db	103	;'g'
  3496  00F154  65                 	db	101	;'e'
  3497  00F155  72                 	db	114	;'r'
  3498  00F156  20                 	db	32
  3499  00F157  77                 	db	119	;'w'
  3500  00F158  69                 	db	105	;'i'
  3501  00F159  74                 	db	116	;'t'
  3502  00F15A  68                 	db	104	;'h'
  3503  00F15B  20                 	db	32
  3504  00F15C  44                 	db	68	;'D'
  3505  00F15D  69                 	db	105	;'i'
  3506  00F15E  67                 	db	103	;'g'
  3507  00F15F  69                 	db	105	;'i'
  3508  00F160  74                 	db	116	;'t'
  3509  00F161  61                 	db	97	;'a'
  3510  00F162  6C                 	db	108	;'l'
  3511  00F163  20                 	db	32
  3512  00F164  4D                 	db	77	;'M'
  3513  00F165  6F                 	db	111	;'o'
  3514  00F166  6E                 	db	110	;'n'
  3515  00F167  69                 	db	105	;'i'
  3516  00F168  74                 	db	116	;'t'
  3517  00F169  6F                 	db	111	;'o'
  3518  00F16A  72                 	db	114	;'r'
  3519  00F16B  69                 	db	105	;'i'
  3520  00F16C  6E                 	db	110	;'n'
  3521  00F16D  67                 	db	103	;'g'
  3522  00F16E  0A                 	db	10
  3523  00F16F  0D                 	db	13
  3524  00F170  42                 	db	66	;'B'
  3525  00F171  6F                 	db	111	;'o'
  3526  00F172  6F                 	db	111	;'o'
  3527  00F173  74                 	db	116	;'t'
  3528  00F174  20                 	db	32
  3529  00F175  43                 	db	67	;'C'
  3530  00F176  6F                 	db	111	;'o'
  3531  00F177  6D                 	db	109	;'m'
  3532  00F178  70                 	db	112	;'p'
  3533  00F179  6C                 	db	108	;'l'
  3534  00F17A  65                 	db	101	;'e'
  3535  00F17B  74                 	db	116	;'t'
  3536  00F17C  65                 	db	101	;'e'
  3537  00F17D  0A                 	db	10
  3538  00F17E  0D                 	db	13
  3539  00F17F  00                 	db	0
  3540  00F180                     STR_203:
  3541  00F180  20                 	db	32
  3542  00F181  20                 	db	32
  3543  00F182  20                 	db	32
  3544  00F183  20                 	db	32
  3545  00F184  44                 	db	68	;'D'
  3546  00F185  65                 	db	101	;'e'
  3547  00F186  76                 	db	118	;'v'
  3548  00F187  69                 	db	105	;'i'
  3549  00F188  63                 	db	99	;'c'
  3550  00F189  65                 	db	101	;'e'
  3551  00F18A  20                 	db	32
  3552  00F18B  49                 	db	73	;'I'
  3553  00F18C  44                 	db	68	;'D'
  3554  00F18D  20                 	db	32
  3555  00F18E  72                 	db	114	;'r'
  3556  00F18F  65                 	db	101	;'e'
  3557  00F190  74                 	db	116	;'t'
  3558  00F191  72                 	db	114	;'r'
  3559  00F192  69                 	db	105	;'i'
  3560  00F193  65                 	db	101	;'e'
  3561  00F194  76                 	db	118	;'v'
  3562  00F195  65                 	db	101	;'e'
  3563  00F196  64                 	db	100	;'d'
  3564  00F197  20                 	db	32
  3565  00F198  66                 	db	102	;'f'
  3566  00F199  72                 	db	114	;'r'
  3567  00F19A  6F                 	db	111	;'o'
  3568  00F19B  6D                 	db	109	;'m'
  3569  00F19C  20                 	db	32
  3570  00F19D  66                 	db	102	;'f'
  3571  00F19E  6C                 	db	108	;'l'
  3572  00F19F  61                 	db	97	;'a'
  3573  00F1A0  73                 	db	115	;'s'
  3574  00F1A1  68                 	db	104	;'h'
  3575  00F1A2  3A                 	db	58	;':'
  3576  00F1A3  20                 	db	32
  3577  00F1A4  25                 	db	37
  3578  00F1A5  73                 	db	115	;'s'
  3579  00F1A6  20                 	db	32
  3580  00F1A7  28                 	db	40
  3581  00F1A8  30                 	db	48	;'0'
  3582  00F1A9  78                 	db	120	;'x'
  3583  00F1AA  25                 	db	37
  3584  00F1AB  30                 	db	48	;'0'
  3585  00F1AC  34                 	db	52	;'4'
  3586  00F1AD  58                 	db	88	;'X'
  3587  00F1AE  29                 	db	41
  3588  00F1AF  0A                 	db	10
  3589  00F1B0  0D                 	db	13
  3590  00F1B1  00                 	db	0
  3591  00F1B2                     STR_243:
  3592  00F1B2  20                 	db	32
  3593  00F1B3  20                 	db	32
  3594  00F1B4  20                 	db	32
  3595  00F1B5  20                 	db	32
  3596  00F1B6  54                 	db	84	;'T'
  3597  00F1B7  68                 	db	104	;'h'
  3598  00F1B8  65                 	db	101	;'e'
  3599  00F1B9  20                 	db	32
  3600  00F1BA  66                 	db	102	;'f'
  3601  00F1BB  6F                 	db	111	;'o'
  3602  00F1BC  6C                 	db	108	;'l'
  3603  00F1BD  6C                 	db	108	;'l'
  3604  00F1BE  6F                 	db	111	;'o'
  3605  00F1BF  77                 	db	119	;'w'
  3606  00F1C0  69                 	db	105	;'i'
  3607  00F1C1  6E                 	db	110	;'n'
  3608  00F1C2  67                 	db	103	;'g'
  3609  00F1C3  20                 	db	32
  3610  00F1C4  63                 	db	99	;'c'
  3611  00F1C5  68                 	db	104	;'h'
  3612  00F1C6  61                 	db	97	;'a'
  3613  00F1C7  6E                 	db	110	;'n'
  3614  00F1C8  6E                 	db	110	;'n'
  3615  00F1C9  65                 	db	101	;'e'
  3616  00F1CA  6C                 	db	108	;'l'
  3617  00F1CB  73                 	db	115	;'s'
  3618  00F1CC  20                 	db	32
  3619  00F1CD  63                 	db	99	;'c'
  3620  00F1CE  61                 	db	97	;'a'
  3621  00F1CF  75                 	db	117	;'u'
  3622  00F1D0  73                 	db	115	;'s'
  3623  00F1D1  65                 	db	101	;'e'
  3624  00F1D2  64                 	db	100	;'d'
  3625  00F1D3  20                 	db	32
  3626  00F1D4  61                 	db	97	;'a'
  3627  00F1D5  6E                 	db	110	;'n'
  3628  00F1D6  20                 	db	32
  3629  00F1D7  41                 	db	65	;'A'
  3630  00F1D8  44                 	db	68	;'D'
  3631  00F1D9  43                 	db	67	;'C'
  3632  00F1DA  20                 	db	32
  3633  00F1DB  65                 	db	101	;'e'
  3634  00F1DC  72                 	db	114	;'r'
  3635  00F1DD  72                 	db	114	;'r'
  3636  00F1DE  6F                 	db	111	;'o'
  3637  00F1DF  72                 	db	114	;'r'
  3638  00F1E0  3A                 	db	58	;':'
  3639  00F1E1  0A                 	db	10
  3640  00F1E2  0D                 	db	13
  3641  00F1E3  00                 	db	0
  3642  00F1E4                     STR_291:
  3643  00F1E4  20                 	db	32
  3644  00F1E5  20                 	db	32
  3645  00F1E6  20                 	db	32
  3646  00F1E7  20                 	db	32
  3647  00F1E8  20                 	db	32
  3648  00F1E9  20                 	db	32
  3649  00F1EA  20                 	db	32
  3650  00F1EB  20                 	db	32
  3651  00F1EC  41                 	db	65	;'A'
  3652  00F1ED  6D                 	db	109	;'m'
  3653  00F1EE  62                 	db	98	;'b'
  3654  00F1EF  69                 	db	105	;'i'
  3655  00F1F0  65                 	db	101	;'e'
  3656  00F1F1  6E                 	db	110	;'n'
  3657  00F1F2  74                 	db	116	;'t'
  3658  00F1F3  20                 	db	32
  3659  00F1F4  54                 	db	84	;'T'
  3660  00F1F5  65                 	db	101	;'e'
  3661  00F1F6  6D                 	db	109	;'m'
  3662  00F1F7  70                 	db	112	;'p'
  3663  00F1F8  65                 	db	101	;'e'
  3664  00F1F9  72                 	db	114	;'r'
  3665  00F1FA  61                 	db	97	;'a'
  3666  00F1FB  74                 	db	116	;'t'
  3667  00F1FC  75                 	db	117	;'u'
  3668  00F1FD  72                 	db	114	;'r'
  3669  00F1FE  65                 	db	101	;'e'
  3670  00F1FF  20                 	db	32
  3671  00F200  6D                 	db	109	;'m'
  3672  00F201  65                 	db	101	;'e'
  3673  00F202  61                 	db	97	;'a'
  3674  00F203  73                 	db	115	;'s'
  3675  00F204  75                 	db	117	;'u'
  3676  00F205  72                 	db	114	;'r'
  3677  00F206  65                 	db	101	;'e'
  3678  00F207  64                 	db	100	;'d'
  3679  00F208  20                 	db	32
  3680  00F209  61                 	db	97	;'a'
  3681  00F20A  73                 	db	115	;'s'
  3682  00F20B  20                 	db	32
  3683  00F20C  25                 	db	37
  3684  00F20D  2B                 	db	43
  3685  00F20E  2E                 	db	46
  3686  00F20F  33                 	db	51	;'3'
  3687  00F210  66                 	db	102	;'f'
  3688  00F211  20                 	db	32
  3689  00F212  43                 	db	67	;'C'
  3690  00F213  0A                 	db	10
  3691  00F214  0D                 	db	13
  3692  00F215  00                 	db	0
  3693  00F216                     STR_261:
  3694  00F216  20                 	db	32
  3695  00F217  20                 	db	32
  3696  00F218  20                 	db	32
  3697  00F219  20                 	db	32
  3698  00F21A  51                 	db	81	;'Q'
  3699  00F21B  49                 	db	73	;'I'
  3700  00F21C  20                 	db	32
  3701  00F21D  77                 	db	119	;'w'
  3702  00F21E  69                 	db	105	;'i'
  3703  00F21F  72                 	db	114	;'r'
  3704  00F220  65                 	db	101	;'e'
  3705  00F221  6C                 	db	108	;'l'
  3706  00F222  65                 	db	101	;'e'
  3707  00F223  73                 	db	115	;'s'
  3708  00F224  73                 	db	115	;'s'
  3709  00F225  20                 	db	32
  3710  00F226  70                 	db	112	;'p'
  3711  00F227  6F                 	db	111	;'o'
  3712  00F228  77                 	db	119	;'w'
  3713  00F229  65                 	db	101	;'e'
  3714  00F22A  72                 	db	114	;'r'
  3715  00F22B  20                 	db	32
  3716  00F22C  63                 	db	99	;'c'
  3717  00F22D  6F                 	db	111	;'o'
  3718  00F22E  6E                 	db	110	;'n'
  3719  00F22F  76                 	db	118	;'v'
  3720  00F230  65                 	db	101	;'e'
  3721  00F231  72                 	db	114	;'r'
  3722  00F232  74                 	db	116	;'t'
  3723  00F233  65                 	db	101	;'e'
  3724  00F234  72                 	db	114	;'r'
  3725  00F235  20                 	db	32
  3726  00F236  69                 	db	105	;'i'
  3727  00F237  73                 	db	115	;'s'
  3728  00F238  20                 	db	32
  3729  00F239  63                 	db	99	;'c'
  3730  00F23A  75                 	db	117	;'u'
  3731  00F23B  72                 	db	114	;'r'
  3732  00F23C  72                 	db	114	;'r'
  3733  00F23D  65                 	db	101	;'e'
  3734  00F23E  6E                 	db	110	;'n'
  3735  00F23F  74                 	db	116	;'t'
  3736  00F240  6C                 	db	108	;'l'
  3737  00F241  79                 	db	121	;'y'
  3738  00F242  20                 	db	32
  3739  00F243  25                 	db	37
  3740  00F244  73                 	db	115	;'s'
  3741  00F245  0A                 	db	10
  3742  00F246  0D                 	db	13
  3743  00F247  00                 	db	0
  3744  00F248                     STR_263:
  3745  00F248  20                 	db	32
  3746  00F249  20                 	db	32
  3747  00F24A  20                 	db	32
  3748  00F24B  20                 	db	32
  3749  00F24C  53                 	db	83	;'S'
  3750  00F24D  79                 	db	121	;'y'
  3751  00F24E  73                 	db	115	;'s'
  3752  00F24F  74                 	db	116	;'t'
  3753  00F250  65                 	db	101	;'e'
  3754  00F251  6D                 	db	109	;'m'
  3755  00F252  20                 	db	32
  3756  00F253  68                 	db	104	;'h'
  3757  00F254  61                 	db	97	;'a'
  3758  00F255  73                 	db	115	;'s'
  3759  00F256  20                 	db	32
  3760  00F257  62                 	db	98	;'b'
  3761  00F258  65                 	db	101	;'e'
  3762  00F259  65                 	db	101	;'e'
  3763  00F25A  6E                 	db	110	;'n'
  3764  00F25B  20                 	db	32
  3765  00F25C  63                 	db	99	;'c'
  3766  00F25D  68                 	db	104	;'h'
  3767  00F25E  61                 	db	97	;'a'
  3768  00F25F  72                 	db	114	;'r'
  3769  00F260  67                 	db	103	;'g'
  3770  00F261  69                 	db	105	;'i'
  3771  00F262  6E                 	db	110	;'n'
  3772  00F263  67                 	db	103	;'g'
  3773  00F264  20                 	db	32
  3774  00F265  61                 	db	97	;'a'
  3775  00F266  20                 	db	32
  3776  00F267  70                 	db	112	;'p'
  3777  00F268  68                 	db	104	;'h'
  3778  00F269  6F                 	db	111	;'o'
  3779  00F26A  6E                 	db	110	;'n'
  3780  00F26B  65                 	db	101	;'e'
  3781  00F26C  20                 	db	32
  3782  00F26D  66                 	db	102	;'f'
  3783  00F26E  6F                 	db	111	;'o'
  3784  00F26F  72                 	db	114	;'r'
  3785  00F270  20                 	db	32
  3786  00F271  25                 	db	37
  3787  00F272  73                 	db	115	;'s'
  3788  00F273  0A                 	db	10
  3789  00F274  0D                 	db	13
  3790  00F275  0A                 	db	10
  3791  00F276  0D                 	db	13
  3792  00F277  00                 	db	0
  3793  00F278                     STR_224:
  3794  00F278  53                 	db	83	;'S'
  3795  00F279  79                 	db	121	;'y'
  3796  00F27A  73                 	db	115	;'s'
  3797  00F27B  74                 	db	116	;'t'
  3798  00F27C  65                 	db	101	;'e'
  3799  00F27D  6D                 	db	109	;'m'
  3800  00F27E  20                 	db	32
  3801  00F27F  4D                 	db	77	;'M'
  3802  00F280  65                 	db	101	;'e'
  3803  00F281  61                 	db	97	;'a'
  3804  00F282  73                 	db	115	;'s'
  3805  00F283  75                 	db	117	;'u'
  3806  00F284  72                 	db	114	;'r'
  3807  00F285  65                 	db	101	;'e'
  3808  00F286  6D                 	db	109	;'m'
  3809  00F287  65                 	db	101	;'e'
  3810  00F288  6E                 	db	110	;'n'
  3811  00F289  74                 	db	116	;'t'
  3812  00F28A  73                 	db	115	;'s'
  3813  00F28B  20                 	db	32
  3814  00F28C  61                 	db	97	;'a'
  3815  00F28D  74                 	db	116	;'t'
  3816  00F28E  20                 	db	32
  3817  00F28F  74                 	db	116	;'t'
  3818  00F290  69                 	db	105	;'i'
  3819  00F291  6D                 	db	109	;'m'
  3820  00F292  65                 	db	101	;'e'
  3821  00F293  20                 	db	32
  3822  00F294  6F                 	db	111	;'o'
  3823  00F295  66                 	db	102	;'f'
  3824  00F296  20                 	db	32
  3825  00F297  63                 	db	99	;'c'
  3826  00F298  6F                 	db	111	;'o'
  3827  00F299  6D                 	db	109	;'m'
  3828  00F29A  6D                 	db	109	;'m'
  3829  00F29B  61                 	db	97	;'a'
  3830  00F29C  6E                 	db	110	;'n'
  3831  00F29D  64                 	db	100	;'d'
  3832  00F29E  20                 	db	32
  3833  00F29F  63                 	db	99	;'c'
  3834  00F2A0  61                 	db	97	;'a'
  3835  00F2A1  6C                 	db	108	;'l'
  3836  00F2A2  6C                 	db	108	;'l'
  3837  00F2A3  3A                 	db	58	;':'
  3838  00F2A4  0A                 	db	10
  3839  00F2A5  0D                 	db	13
  3840  00F2A6  00                 	db	0
  3841  00F2A7                     STR_10:
  3842  00F2A7  0A                 	db	10
  3843  00F2A8  0D                 	db	13
  3844  00F2A9  43                 	db	67	;'C'
  3845  00F2AA  61                 	db	97	;'a'
  3846  00F2AB  6C                 	db	108	;'l'
  3847  00F2AC  6C                 	db	108	;'l'
  3848  00F2AD  20                 	db	32
  3849  00F2AE  27                 	db	39
  3850  00F2AF  48                 	db	72	;'H'
  3851  00F2B0  65                 	db	101	;'e'
  3852  00F2B1  6C                 	db	108	;'l'
  3853  00F2B2  70                 	db	112	;'p'
  3854  00F2B3  27                 	db	39
  3855  00F2B4  20                 	db	32
  3856  00F2B5  66                 	db	102	;'f'
  3857  00F2B6  6F                 	db	111	;'o'
  3858  00F2B7  72                 	db	114	;'r'
  3859  00F2B8  20                 	db	32
  3860  00F2B9  6C                 	db	108	;'l'
  3861  00F2BA  69                 	db	105	;'i'
  3862  00F2BB  73                 	db	115	;'s'
  3863  00F2BC  74                 	db	116	;'t'
  3864  00F2BD  20                 	db	32
  3865  00F2BE  6F                 	db	111	;'o'
  3866  00F2BF  66                 	db	102	;'f'
  3867  00F2C0  20                 	db	32
  3868  00F2C1  73                 	db	115	;'s'
  3869  00F2C2  75                 	db	117	;'u'
  3870  00F2C3  70                 	db	112	;'p'
  3871  00F2C4  70                 	db	112	;'p'
  3872  00F2C5  6F                 	db	111	;'o'
  3873  00F2C6  72                 	db	114	;'r'
  3874  00F2C7  74                 	db	116	;'t'
  3875  00F2C8  65                 	db	101	;'e'
  3876  00F2C9  64                 	db	100	;'d'
  3877  00F2CA  20                 	db	32
  3878  00F2CB  63                 	db	99	;'c'
  3879  00F2CC  6F                 	db	111	;'o'
  3880  00F2CD  6D                 	db	109	;'m'
  3881  00F2CE  6D                 	db	109	;'m'
  3882  00F2CF  61                 	db	97	;'a'
  3883  00F2D0  6E                 	db	110	;'n'
  3884  00F2D1  64                 	db	100	;'d'
  3885  00F2D2  73                 	db	115	;'s'
  3886  00F2D3  0A                 	db	10
  3887  00F2D4  0D                 	db	13
  3888  00F2D5  00                 	db	0
  3889  00F2D6                     STR_248:
  3890  00F2D6  20                 	db	32
  3891  00F2D7  20                 	db	32
  3892  00F2D8  20                 	db	32
  3893  00F2D9  20                 	db	32
  3894  00F2DA  54                 	db	84	;'T'
  3895  00F2DB  68                 	db	104	;'h'
  3896  00F2DC  65                 	db	101	;'e'
  3897  00F2DD  20                 	db	32
  3898  00F2DE  66                 	db	102	;'f'
  3899  00F2DF  6F                 	db	111	;'o'
  3900  00F2E0  6C                 	db	108	;'l'
  3901  00F2E1  6C                 	db	108	;'l'
  3902  00F2E2  6F                 	db	111	;'o'
  3903  00F2E3  77                 	db	119	;'w'
  3904  00F2E4  69                 	db	105	;'i'
  3905  00F2E5  6E                 	db	110	;'n'
  3906  00F2E6  67                 	db	103	;'g'
  3907  00F2E7  20                 	db	32
  3908  00F2E8  49                 	db	73	;'I'
  3909  00F2E9  32                 	db	50	;'2'
  3910  00F2EA  43                 	db	67	;'C'
  3911  00F2EB  20                 	db	32
  3912  00F2EC  45                 	db	69	;'E'
  3913  00F2ED  72                 	db	114	;'r'
  3914  00F2EE  72                 	db	114	;'r'
  3915  00F2EF  6F                 	db	111	;'o'
  3916  00F2F0  72                 	db	114	;'r'
  3917  00F2F1  73                 	db	115	;'s'
  3918  00F2F2  20                 	db	32
  3919  00F2F3  77                 	db	119	;'w'
  3920  00F2F4  65                 	db	101	;'e'
  3921  00F2F5  72                 	db	114	;'r'
  3922  00F2F6  65                 	db	101	;'e'
  3923  00F2F7  20                 	db	32
  3924  00F2F8  64                 	db	100	;'d'
  3925  00F2F9  65                 	db	101	;'e'
  3926  00F2FA  74                 	db	116	;'t'
  3927  00F2FB  65                 	db	101	;'e'
  3928  00F2FC  63                 	db	99	;'c'
  3929  00F2FD  74                 	db	116	;'t'
  3930  00F2FE  65                 	db	101	;'e'
  3931  00F2FF  64                 	db	100	;'d'
  3932  00F300  3A                 	db	58	;':'
  3933  00F301  0A                 	db	10
  3934  00F302  0D                 	db	13
  3935  00F303  00                 	db	0
  3936  00F304                     STR_8:
  3937  00F304  45                 	db	69	;'E'
  3938  00F305  72                 	db	114	;'r'
  3939  00F306  72                 	db	114	;'r'
  3940  00F307  6F                 	db	111	;'o'
  3941  00F308  72                 	db	114	;'r'
  3942  00F309  73                 	db	115	;'s'
  3943  00F30A  20                 	db	32
  3944  00F30B  61                 	db	97	;'a'
  3945  00F30C  6E                 	db	110	;'n'
  3946  00F30D  64                 	db	100	;'d'
  3947  00F30E  20                 	db	32
  3948  00F30F  6E                 	db	110	;'n'
  3949  00F310  65                 	db	101	;'e'
  3950  00F311  67                 	db	103	;'g'
  3951  00F312  61                 	db	97	;'a'
  3952  00F313  74                 	db	116	;'t'
  3953  00F314  69                 	db	105	;'i'
  3954  00F315  76                 	db	118	;'v'
  3955  00F316  65                 	db	101	;'e'
  3956  00F317  20                 	db	32
  3957  00F318  72                 	db	114	;'r'
  3958  00F319  65                 	db	101	;'e'
  3959  00F31A  73                 	db	115	;'s'
  3960  00F31B  70                 	db	112	;'p'
  3961  00F31C  6F                 	db	111	;'o'
  3962  00F31D  6E                 	db	110	;'n'
  3963  00F31E  73                 	db	115	;'s'
  3964  00F31F  65                 	db	101	;'e'
  3965  00F320  73                 	db	115	;'s'
  3966  00F321  20                 	db	32
  3967  00F322  61                 	db	97	;'a'
  3968  00F323  70                 	db	112	;'p'
  3969  00F324  70                 	db	112	;'p'
  3970  00F325  65                 	db	101	;'e'
  3971  00F326  61                 	db	97	;'a'
  3972  00F327  72                 	db	114	;'r'
  3973  00F328  20                 	db	32
  3974  00F329  69                 	db	105	;'i'
  3975  00F32A  6E                 	db	110	;'n'
  3976  00F32B  20                 	db	32
  3977  00F32C  72                 	db	114	;'r'
  3978  00F32D  65                 	db	101	;'e'
  3979  00F32E  64                 	db	100	;'d'
  3980  00F32F  0A                 	db	10
  3981  00F330  0D                 	db	13
  3982  00F331  00                 	db	0
  3983  00F332                     STR_276:
  3984  00F332  20                 	db	32
  3985  00F333  20                 	db	32
  3986  00F334  20                 	db	32
  3987  00F335  20                 	db	32
  3988  00F336  53                 	db	83	;'S'
  3989  00F337  79                 	db	121	;'y'
  3990  00F338  73                 	db	115	;'s'
  3991  00F339  74                 	db	116	;'t'
  3992  00F33A  65                 	db	101	;'e'
  3993  00F33B  6D                 	db	109	;'m'
  3994  00F33C  20                 	db	32
  3995  00F33D  45                 	db	69	;'E'
  3996  00F33E  66                 	db	102	;'f'
  3997  00F33F  66                 	db	102	;'f'
  3998  00F340  69                 	db	105	;'i'
  3999  00F341  63                 	db	99	;'c'
  4000  00F342  69                 	db	105	;'i'
  4001  00F343  65                 	db	101	;'e'
  4002  00F344  6E                 	db	110	;'n'
  4003  00F345  63                 	db	99	;'c'
  4004  00F346  79                 	db	121	;'y'
  4005  00F347  20                 	db	32
  4006  00F348  63                 	db	99	;'c'
  4007  00F349  61                 	db	97	;'a'
  4008  00F34A  6C                 	db	108	;'l'
  4009  00F34B  63                 	db	99	;'c'
  4010  00F34C  75                 	db	117	;'u'
  4011  00F34D  6C                 	db	108	;'l'
  4012  00F34E  61                 	db	97	;'a'
  4013  00F34F  74                 	db	116	;'t'
  4014  00F350  65                 	db	101	;'e'
  4015  00F351  64                 	db	100	;'d'
  4016  00F352  20                 	db	32
  4017  00F353  61                 	db	97	;'a'
  4018  00F354  73                 	db	115	;'s'
  4019  00F355  20                 	db	32
  4020  00F356  25                 	db	37
  4021  00F357  2E                 	db	46
  4022  00F358  33                 	db	51	;'3'
  4023  00F359  66                 	db	102	;'f'
  4024  00F35A  25                 	db	37
  4025  00F35B  25                 	db	37
  4026  00F35C  0A                 	db	10
  4027  00F35D  0D                 	db	13
  4028  00F35E  00                 	db	0
  4029  00F35F                     STR_201:
  4030  00F35F  44                 	db	68	;'D'
  4031  00F360  69                 	db	105	;'i'
  4032  00F361  67                 	db	103	;'g'
  4033  00F362  69                 	db	105	;'i'
  4034  00F363  74                 	db	116	;'t'
  4035  00F364  61                 	db	97	;'a'
  4036  00F365  6C                 	db	108	;'l'
  4037  00F366  20                 	db	32
  4038  00F367  4D                 	db	77	;'M'
  4039  00F368  6F                 	db	111	;'o'
  4040  00F369  6E                 	db	110	;'n'
  4041  00F36A  69                 	db	105	;'i'
  4042  00F36B  74                 	db	116	;'t'
  4043  00F36C  6F                 	db	111	;'o'
  4044  00F36D  72                 	db	114	;'r'
  4045  00F36E  69                 	db	105	;'i'
  4046  00F36F  6E                 	db	110	;'n'
  4047  00F370  67                 	db	103	;'g'
  4048  00F371  20                 	db	32
  4049  00F372  4D                 	db	77	;'M'
  4050  00F373  69                 	db	105	;'i'
  4051  00F374  63                 	db	99	;'c'
  4052  00F375  72                 	db	114	;'r'
  4053  00F376  6F                 	db	111	;'o'
  4054  00F377  63                 	db	99	;'c'
  4055  00F378  6F                 	db	111	;'o'
  4056  00F379  6E                 	db	110	;'n'
  4057  00F37A  74                 	db	116	;'t'
  4058  00F37B  72                 	db	114	;'r'
  4059  00F37C  6F                 	db	111	;'o'
  4060  00F37D  6C                 	db	108	;'l'
  4061  00F37E  6C                 	db	108	;'l'
  4062  00F37F  65                 	db	101	;'e'
  4063  00F380  72                 	db	114	;'r'
  4064  00F381  20                 	db	32
  4065  00F382  53                 	db	83	;'S'
  4066  00F383  74                 	db	116	;'t'
  4067  00F384  61                 	db	97	;'a'
  4068  00F385  74                 	db	116	;'t'
  4069  00F386  75                 	db	117	;'u'
  4070  00F387  73                 	db	115	;'s'
  4071  00F388  3A                 	db	58	;':'
  4072  00F389  0A                 	db	10
  4073  00F38A  0D                 	db	13
  4074  00F38B  00                 	db	0
  4075  00F38C                     STR_265:
  4076  00F38C  20                 	db	32
  4077  00F38D  20                 	db	32
  4078  00F38E  20                 	db	32
  4079  00F38F  20                 	db	32
  4080  00F390  20                 	db	32
  4081  00F391  20                 	db	32
  4082  00F392  20                 	db	32
  4083  00F393  20                 	db	32
  4084  00F394  2B                 	db	43
  4085  00F395  31                 	db	49	;'1'
  4086  00F396  32                 	db	50	;'2'
  4087  00F397  56                 	db	86	;'V'
  4088  00F398  20                 	db	32
  4089  00F399  72                 	db	114	;'r'
  4090  00F39A  61                 	db	97	;'a'
  4091  00F39B  69                 	db	105	;'i'
  4092  00F39C  6C                 	db	108	;'l'
  4093  00F39D  20                 	db	32
  4094  00F39E  6D                 	db	109	;'m'
  4095  00F39F  65                 	db	101	;'e'
  4096  00F3A0  61                 	db	97	;'a'
  4097  00F3A1  73                 	db	115	;'s'
  4098  00F3A2  75                 	db	117	;'u'
  4099  00F3A3  72                 	db	114	;'r'
  4100  00F3A4  65                 	db	101	;'e'
  4101  00F3A5  64                 	db	100	;'d'
  4102  00F3A6  20                 	db	32
  4103  00F3A7  61                 	db	97	;'a'
  4104  00F3A8  73                 	db	115	;'s'
  4105  00F3A9  20                 	db	32
  4106  00F3AA  25                 	db	37
  4107  00F3AB  2B                 	db	43
  4108  00F3AC  2E                 	db	46
  4109  00F3AD  33                 	db	51	;'3'
  4110  00F3AE  66                 	db	102	;'f'
  4111  00F3AF  20                 	db	32
  4112  00F3B0  56                 	db	86	;'V'
  4113  00F3B1  6F                 	db	111	;'o'
  4114  00F3B2  6C                 	db	108	;'l'
  4115  00F3B3  74                 	db	116	;'t'
  4116  00F3B4  73                 	db	115	;'s'
  4117  00F3B5  0A                 	db	10
  4118  00F3B6  0D                 	db	13
  4119  00F3B7  00                 	db	0
  4120  00F3B8                     STR_3:
  4121  00F3B8  43                 	db	67	;'C'
  4122  00F3B9  61                 	db	97	;'a'
  4123  00F3BA  75                 	db	117	;'u'
  4124  00F3BB  73                 	db	115	;'s'
  4125  00F3BC  65                 	db	101	;'e'
  4126  00F3BD  20                 	db	32
  4127  00F3BE  6F                 	db	111	;'o'
  4128  00F3BF  66                 	db	102	;'f'
  4129  00F3C0  20                 	db	32
  4130  00F3C1  6D                 	db	109	;'m'
  4131  00F3C2  6F                 	db	111	;'o'
  4132  00F3C3  73                 	db	115	;'s'
  4133  00F3C4  74                 	db	116	;'t'
  4134  00F3C5  20                 	db	32
  4135  00F3C6  72                 	db	114	;'r'
  4136  00F3C7  65                 	db	101	;'e'
  4137  00F3C8  63                 	db	99	;'c'
  4138  00F3C9  65                 	db	101	;'e'
  4139  00F3CA  6E                 	db	110	;'n'
  4140  00F3CB  74                 	db	116	;'t'
  4141  00F3CC  20                 	db	32
  4142  00F3CD  64                 	db	100	;'d'
  4143  00F3CE  65                 	db	101	;'e'
  4144  00F3CF  76                 	db	118	;'v'
  4145  00F3D0  69                 	db	105	;'i'
  4146  00F3D1  63                 	db	99	;'c'
  4147  00F3D2  65                 	db	101	;'e'
  4148  00F3D3  20                 	db	32
  4149  00F3D4  72                 	db	114	;'r'
  4150  00F3D5  65                 	db	101	;'e'
  4151  00F3D6  73                 	db	115	;'s'
  4152  00F3D7  65                 	db	101	;'e'
  4153  00F3D8  74                 	db	116	;'t'
  4154  00F3D9  20                 	db	32
  4155  00F3DA  77                 	db	119	;'w'
  4156  00F3DB  61                 	db	97	;'a'
  4157  00F3DC  73                 	db	115	;'s'
  4158  00F3DD  3A                 	db	58	;':'
  4159  00F3DE  20                 	db	32
  4160  00F3DF  25                 	db	37
  4161  00F3E0  73                 	db	115	;'s'
  4162  00F3E1  0A                 	db	10
  4163  00F3E2  0D                 	db	13
  4164  00F3E3  00                 	db	0
  4165  00F3E4                     STR_266:
  4166  00F3E4  20                 	db	32
  4167  00F3E5  20                 	db	32
  4168  00F3E6  20                 	db	32
  4169  00F3E7  20                 	db	32
  4170  00F3E8  20                 	db	32
  4171  00F3E9  20                 	db	32
  4172  00F3EA  20                 	db	32
  4173  00F3EB  20                 	db	32
  4174  00F3EC  2B                 	db	43
  4175  00F3ED  35                 	db	53	;'5'
  4176  00F3EE  56                 	db	86	;'V'
  4177  00F3EF  20                 	db	32
  4178  00F3F0  72                 	db	114	;'r'
  4179  00F3F1  61                 	db	97	;'a'
  4180  00F3F2  69                 	db	105	;'i'
  4181  00F3F3  6C                 	db	108	;'l'
  4182  00F3F4  20                 	db	32
  4183  00F3F5  6D                 	db	109	;'m'
  4184  00F3F6  65                 	db	101	;'e'
  4185  00F3F7  61                 	db	97	;'a'
  4186  00F3F8  73                 	db	115	;'s'
  4187  00F3F9  75                 	db	117	;'u'
  4188  00F3FA  72                 	db	114	;'r'
  4189  00F3FB  65                 	db	101	;'e'
  4190  00F3FC  64                 	db	100	;'d'
  4191  00F3FD  20                 	db	32
  4192  00F3FE  61                 	db	97	;'a'
  4193  00F3FF  73                 	db	115	;'s'
  4194  00F400  20                 	db	32
  4195  00F401  25                 	db	37
  4196  00F402  2B                 	db	43
  4197  00F403  2E                 	db	46
  4198  00F404  33                 	db	51	;'3'
  4199  00F405  66                 	db	102	;'f'
  4200  00F406  20                 	db	32
  4201  00F407  56                 	db	86	;'V'
  4202  00F408  6F                 	db	111	;'o'
  4203  00F409  6C                 	db	108	;'l'
  4204  00F40A  74                 	db	116	;'t'
  4205  00F40B  73                 	db	115	;'s'
  4206  00F40C  0A                 	db	10
  4207  00F40D  0D                 	db	13
  4208  00F40E  00                 	db	0
  4209  00F40F                     STR_283:
  4210  00F40F  20                 	db	32
  4211  00F410  20                 	db	32
  4212  00F411  20                 	db	32
  4213  00F412  20                 	db	32
  4214  00F413  20                 	db	32
  4215  00F414  20                 	db	32
  4216  00F415  20                 	db	32
  4217  00F416  20                 	db	32
  4218  00F417  50                 	db	80	;'P'
  4219  00F418  4F                 	db	79	;'O'
  4220  00F419  53                 	db	83	;'S'
  4221  00F41A  35                 	db	53	;'5'
  4222  00F41B  20                 	db	32
  4223  00F41C  43                 	db	67	;'C'
  4224  00F41D  6F                 	db	111	;'o'
  4225  00F41E  6E                 	db	110	;'n'
  4226  00F41F  76                 	db	118	;'v'
  4227  00F420  65                 	db	101	;'e'
  4228  00F421  72                 	db	114	;'r'
  4229  00F422  74                 	db	116	;'t'
  4230  00F423  65                 	db	101	;'e'
  4231  00F424  72                 	db	114	;'r'
  4232  00F425  20                 	db	32
  4233  00F426  69                 	db	105	;'i'
  4234  00F427  73                 	db	115	;'s'
  4235  00F428  20                 	db	32
  4236  00F429  69                 	db	105	;'i'
  4237  00F42A  6E                 	db	110	;'n'
  4238  00F42B  20                 	db	32
  4239  00F42C  42                 	db	66	;'B'
  4240  00F42D  75                 	db	117	;'u'
  4241  00F42E  72                 	db	114	;'r'
  4242  00F42F  73                 	db	115	;'s'
  4243  00F430  74                 	db	116	;'t'
  4244  00F431  20                 	db	32
  4245  00F432  4D                 	db	77	;'M'
  4246  00F433  6F                 	db	111	;'o'
  4247  00F434  64                 	db	100	;'d'
  4248  00F435  65                 	db	101	;'e'
  4249  00F436  0A                 	db	10
  4250  00F437  0D                 	db	13
  4251  00F438  00                 	db	0
  4252  00F439                     STR_28:
  4253  00F439  57                 	db	87	;'W'
  4254  00F43A  69                 	db	105	;'i'
  4255  00F43B  6E                 	db	110	;'n'
  4256  00F43C  64                 	db	100	;'d'
  4257  00F43D  6F                 	db	111	;'o'
  4258  00F43E  77                 	db	119	;'w'
  4259  00F43F  65                 	db	101	;'e'
  4260  00F440  64                 	db	100	;'d'
  4261  00F441  20                 	db	32
  4262  00F442  57                 	db	87	;'W'
  4263  00F443  61                 	db	97	;'a'
  4264  00F444  74                 	db	116	;'t'
  4265  00F445  63                 	db	99	;'c'
  4266  00F446  68                 	db	104	;'h'
  4267  00F447  20                 	db	32
  4268  00F448  44                 	db	68	;'D'
  4269  00F449  6F                 	db	111	;'o'
  4270  00F44A  67                 	db	103	;'g'
  4271  00F44B  20                 	db	32
  4272  00F44C  54                 	db	84	;'T'
  4273  00F44D  69                 	db	105	;'i'
  4274  00F44E  6D                 	db	109	;'m'
  4275  00F44F  65                 	db	101	;'e'
  4276  00F450  72                 	db	114	;'r'
  4277  00F451  20                 	db	32
  4278  00F452  56                 	db	86	;'V'
  4279  00F453  69                 	db	105	;'i'
  4280  00F454  6F                 	db	111	;'o'
  4281  00F455  6C                 	db	108	;'l'
  4282  00F456  61                 	db	97	;'a'
  4283  00F457  74                 	db	116	;'t'
  4284  00F458  69                 	db	105	;'i'
  4285  00F459  6F                 	db	111	;'o'
  4286  00F45A  6E                 	db	110	;'n'
  4287  00F45B  20                 	db	32
  4288  00F45C  52                 	db	82	;'R'
  4289  00F45D  65                 	db	101	;'e'
  4290  00F45E  73                 	db	115	;'s'
  4291  00F45F  65                 	db	101	;'e'
  4292  00F460  74                 	db	116	;'t'
  4293  00F461  00                 	db	0
  4294  00F462                     STR_285:
  4295  00F462  20                 	db	32
  4296  00F463  20                 	db	32
  4297  00F464  20                 	db	32
  4298  00F465  20                 	db	32
  4299  00F466  20                 	db	32
  4300  00F467  20                 	db	32
  4301  00F468  20                 	db	32
  4302  00F469  20                 	db	32
  4303  00F46A  51                 	db	81	;'Q'
  4304  00F46B  49                 	db	73	;'I'
  4305  00F46C  20                 	db	32
  4306  00F46D  43                 	db	67	;'C'
  4307  00F46E  6F                 	db	111	;'o'
  4308  00F46F  6E                 	db	110	;'n'
  4309  00F470  76                 	db	118	;'v'
  4310  00F471  65                 	db	101	;'e'
  4311  00F472  72                 	db	114	;'r'
  4312  00F473  74                 	db	116	;'t'
  4313  00F474  65                 	db	101	;'e'
  4314  00F475  72                 	db	114	;'r'
  4315  00F476  20                 	db	32
  4316  00F477  69                 	db	105	;'i'
  4317  00F478  73                 	db	115	;'s'
  4318  00F479  20                 	db	32
  4319  00F47A  69                 	db	105	;'i'
  4320  00F47B  6E                 	db	110	;'n'
  4321  00F47C  20                 	db	32
  4322  00F47D  42                 	db	66	;'B'
  4323  00F47E  75                 	db	117	;'u'
  4324  00F47F  72                 	db	114	;'r'
  4325  00F480  73                 	db	115	;'s'
  4326  00F481  74                 	db	116	;'t'
  4327  00F482  20                 	db	32
  4328  00F483  4D                 	db	77	;'M'
  4329  00F484  6F                 	db	111	;'o'
  4330  00F485  64                 	db	100	;'d'
  4331  00F486  65                 	db	101	;'e'
  4332  00F487  0A                 	db	10
  4333  00F488  0D                 	db	13
  4334  00F489  00                 	db	0
  4335  00F48A                     STR_250:
  4336  00F48A  20                 	db	32
  4337  00F48B  20                 	db	32
  4338  00F48C  20                 	db	32
  4339  00F48D  20                 	db	32
  4340  00F48E  20                 	db	32
  4341  00F48F  20                 	db	32
  4342  00F490  20                 	db	32
  4343  00F491  20                 	db	32
  4344  00F492  49                 	db	73	;'I'
  4345  00F493  32                 	db	50	;'2'
  4346  00F494  43                 	db	67	;'C'
  4347  00F495  20                 	db	32
  4348  00F496  41                 	db	65	;'A'
  4349  00F497  6D                 	db	109	;'m'
  4350  00F498  62                 	db	98	;'b'
  4351  00F499  69                 	db	105	;'i'
  4352  00F49A  65                 	db	101	;'e'
  4353  00F49B  6E                 	db	110	;'n'
  4354  00F49C  74                 	db	116	;'t'
  4355  00F49D  20                 	db	32
  4356  00F49E  54                 	db	84	;'T'
  4357  00F49F  65                 	db	101	;'e'
  4358  00F4A0  6D                 	db	109	;'m'
  4359  00F4A1  70                 	db	112	;'p'
  4360  00F4A2  20                 	db	32
  4361  00F4A3  53                 	db	83	;'S'
  4362  00F4A4  65                 	db	101	;'e'
  4363  00F4A5  6E                 	db	110	;'n'
  4364  00F4A6  73                 	db	115	;'s'
  4365  00F4A7  6F                 	db	111	;'o'
  4366  00F4A8  72                 	db	114	;'r'
  4367  00F4A9  20                 	db	32
  4368  00F4AA  45                 	db	69	;'E'
  4369  00F4AB  72                 	db	114	;'r'
  4370  00F4AC  72                 	db	114	;'r'
  4371  00F4AD  6F                 	db	111	;'o'
  4372  00F4AE  72                 	db	114	;'r'
  4373  00F4AF  0A                 	db	10
  4374  00F4B0  0D                 	db	13
  4375  00F4B1  00                 	db	0
  4376  00F4B2                     STR_296:
  4377  00F4B2  20                 	db	32
  4378  00F4B3  20                 	db	32
  4379  00F4B4  20                 	db	32
  4380  00F4B5  20                 	db	32
  4381  00F4B6  20                 	db	32
  4382  00F4B7  20                 	db	32
  4383  00F4B8  20                 	db	32
  4384  00F4B9  20                 	db	32
  4385  00F4BA  41                 	db	65	;'A'
  4386  00F4BB  56                 	db	86	;'V'
  4387  00F4BC  53                 	db	83	;'S'
  4388  00F4BD  53                 	db	83	;'S'
  4389  00F4BE  20                 	db	32
  4390  00F4BF  6D                 	db	109	;'m'
  4391  00F4C0  65                 	db	101	;'e'
  4392  00F4C1  61                 	db	97	;'a'
  4393  00F4C2  73                 	db	115	;'s'
  4394  00F4C3  75                 	db	117	;'u'
  4395  00F4C4  72                 	db	114	;'r'
  4396  00F4C5  65                 	db	101	;'e'
  4397  00F4C6  64                 	db	100	;'d'
  4398  00F4C7  20                 	db	32
  4399  00F4C8  61                 	db	97	;'a'
  4400  00F4C9  73                 	db	115	;'s'
  4401  00F4CA  20                 	db	32
  4402  00F4CB  25                 	db	37
  4403  00F4CC  2B                 	db	43
  4404  00F4CD  2E                 	db	46
  4405  00F4CE  33                 	db	51	;'3'
  4406  00F4CF  66                 	db	102	;'f'
  4407  00F4D0  20                 	db	32
  4408  00F4D1  56                 	db	86	;'V'
  4409  00F4D2  6F                 	db	111	;'o'
  4410  00F4D3  6C                 	db	108	;'l'
  4411  00F4D4  74                 	db	116	;'t'
  4412  00F4D5  73                 	db	115	;'s'
  4413  00F4D6  0A                 	db	10
  4414  00F4D7  0D                 	db	13
  4415  00F4D8  00                 	db	0
  4416  00F4D9                     STR_4:
  4417  00F4D9  51                 	db	81	;'Q'
  4418  00F4DA  49                 	db	73	;'I'
  4419  00F4DB  20                 	db	32
  4420  00F4DC  57                 	db	87	;'W'
  4421  00F4DD  69                 	db	105	;'i'
  4422  00F4DE  72                 	db	114	;'r'
  4423  00F4DF  65                 	db	101	;'e'
  4424  00F4E0  6C                 	db	108	;'l'
  4425  00F4E1  65                 	db	101	;'e'
  4426  00F4E2  73                 	db	115	;'s'
  4427  00F4E3  73                 	db	115	;'s'
  4428  00F4E4  20                 	db	32
  4429  00F4E5  50                 	db	80	;'P'
  4430  00F4E6  6F                 	db	111	;'o'
  4431  00F4E7  77                 	db	119	;'w'
  4432  00F4E8  65                 	db	101	;'e'
  4433  00F4E9  72                 	db	114	;'r'
  4434  00F4EA  20                 	db	32
  4435  00F4EB  43                 	db	67	;'C'
  4436  00F4EC  6F                 	db	111	;'o'
  4437  00F4ED  6E                 	db	110	;'n'
  4438  00F4EE  76                 	db	118	;'v'
  4439  00F4EF  65                 	db	101	;'e'
  4440  00F4F0  72                 	db	114	;'r'
  4441  00F4F1  73                 	db	115	;'s'
  4442  00F4F2  69                 	db	105	;'i'
  4443  00F4F3  6F                 	db	111	;'o'
  4444  00F4F4  6E                 	db	110	;'n'
  4445  00F4F5  20                 	db	32
  4446  00F4F6  45                 	db	69	;'E'
  4447  00F4F7  6E                 	db	110	;'n'
  4448  00F4F8  61                 	db	97	;'a'
  4449  00F4F9  62                 	db	98	;'b'
  4450  00F4FA  6C                 	db	108	;'l'
  4451  00F4FB  65                 	db	101	;'e'
  4452  00F4FC  64                 	db	100	;'d'
  4453  00F4FD  0A                 	db	10
  4454  00F4FE  0D                 	db	13
  4455  00F4FF  00                 	db	0
  4456  00F500                     STR_7:
  4457  00F500  4D                 	db	77	;'M'
  4458  00F501  65                 	db	101	;'e'
  4459  00F502  61                 	db	97	;'a'
  4460  00F503  73                 	db	115	;'s'
  4461  00F504  75                 	db	117	;'u'
  4462  00F505  72                 	db	114	;'r'
  4463  00F506  65                 	db	101	;'e'
  4464  00F507  6D                 	db	109	;'m'
  4465  00F508  65                 	db	101	;'e'
  4466  00F509  6E                 	db	110	;'n'
  4467  00F50A  74                 	db	116	;'t'
  4468  00F50B  20                 	db	32
  4469  00F50C  72                 	db	114	;'r'
  4470  00F50D  65                 	db	101	;'e'
  4471  00F50E  73                 	db	115	;'s'
  4472  00F50F  70                 	db	112	;'p'
  4473  00F510  6F                 	db	111	;'o'
  4474  00F511  6E                 	db	110	;'n'
  4475  00F512  73                 	db	115	;'s'
  4476  00F513  65                 	db	101	;'e'
  4477  00F514  73                 	db	115	;'s'
  4478  00F515  20                 	db	32
  4479  00F516  61                 	db	97	;'a'
  4480  00F517  70                 	db	112	;'p'
  4481  00F518  70                 	db	112	;'p'
  4482  00F519  65                 	db	101	;'e'
  4483  00F51A  61                 	db	97	;'a'
  4484  00F51B  72                 	db	114	;'r'
  4485  00F51C  20                 	db	32
  4486  00F51D  69                 	db	105	;'i'
  4487  00F51E  6E                 	db	110	;'n'
  4488  00F51F  20                 	db	32
  4489  00F520  63                 	db	99	;'c'
  4490  00F521  79                 	db	121	;'y'
  4491  00F522  61                 	db	97	;'a'
  4492  00F523  6E                 	db	110	;'n'
  4493  00F524  0A                 	db	10
  4494  00F525  0D                 	db	13
  4495  00F526  00                 	db	0
  4496  00F527  54                 	db	84	;'T'
  4497  00F528  68                 	db	104	;'h'
  4498  00F529  69                 	db	105	;'i'
  4499  00F52A  73                 	db	115	;'s'
  4500  00F52B  20                 	db	32
  4501  00F52C  74                 	db	116	;'t'
  4502  00F52D  65                 	db	101	;'e'
  4503  00F52E  78                 	db	120	;'x'
  4504  00F52F  74                 	db	116	;'t'
  4505  00F530  20                 	db	32
  4506  00F531  68                 	db	104	;'h'
  4507  00F532  61                 	db	97	;'a'
  4508  00F533  73                 	db	115	;'s'
  4509  00F534  20                 	db	32
  4510  00F535  61                 	db	97	;'a'
  4511  00F536  20                 	db	32
  4512  00F537  6D                 	db	109	;'m'
  4513  00F538  61                 	db	97	;'a'
  4514  00F539  67                 	db	103	;'g'
  4515  00F53A  65                 	db	101	;'e'
  4516  00F53B  6E                 	db	110	;'n'
  4517  00F53C  74                 	db	116	;'t'
  4518  00F53D  61                 	db	97	;'a'
  4519  00F53E  20                 	db	32
  4520  00F53F  62                 	db	98	;'b'
  4521  00F540  61                 	db	97	;'a'
  4522  00F541  63                 	db	99	;'c'
  4523  00F542  6B                 	db	107	;'k'
  4524  00F543  67                 	db	103	;'g'
  4525  00F544  72                 	db	114	;'r'
  4526  00F545  6F                 	db	111	;'o'
  4527  00F546  75                 	db	117	;'u'
  4528  00F547  6E                 	db	110	;'n'
  4529  00F548  64                 	db	100	;'d'
  4530  00F549  0A                 	db	10
  4531  00F54A  0D                 	db	13
  4532  00F54B  00                 	db	0
  4533  00F54C                     STR_238:
  4534  00F54C  55                 	db	85	;'U'
  4535  00F54D  6E                 	db	110	;'n'
  4536  00F54E  73                 	db	115	;'s'
  4537  00F54F  75                 	db	117	;'u'
  4538  00F550  70                 	db	112	;'p'
  4539  00F551  70                 	db	112	;'p'
  4540  00F552  6F                 	db	111	;'o'
  4541  00F553  72                 	db	114	;'r'
  4542  00F554  74                 	db	116	;'t'
  4543  00F555  65                 	db	101	;'e'
  4544  00F556  64                 	db	100	;'d'
  4545  00F557  20                 	db	32
  4546  00F558  6F                 	db	111	;'o'
  4547  00F559  72                 	db	114	;'r'
  4548  00F55A  20                 	db	32
  4549  00F55B  6D                 	db	109	;'m'
  4550  00F55C  69                 	db	105	;'i'
  4551  00F55D  73                 	db	115	;'s'
  4552  00F55E  2D                 	db	45
  4553  00F55F  65                 	db	101	;'e'
  4554  00F560  6E                 	db	110	;'n'
  4555  00F561  74                 	db	116	;'t'
  4556  00F562  65                 	db	101	;'e'
  4557  00F563  72                 	db	114	;'r'
  4558  00F564  65                 	db	101	;'e'
  4559  00F565  64                 	db	100	;'d'
  4560  00F566  20                 	db	32
  4561  00F567  63                 	db	99	;'c'
  4562  00F568  6F                 	db	111	;'o'
  4563  00F569  6D                 	db	109	;'m'
  4564  00F56A  6D                 	db	109	;'m'
  4565  00F56B  61                 	db	97	;'a'
  4566  00F56C  6E                 	db	110	;'n'
  4567  00F56D  64                 	db	100	;'d'
  4568  00F56E  0A                 	db	10
  4569  00F56F  0D                 	db	13
  4570  00F570  00                 	db	0
  4571  00F571                     STR_251:
  4572  00F571  20                 	db	32
  4573  00F572  20                 	db	32
  4574  00F573  20                 	db	32
  4575  00F574  20                 	db	32
  4576  00F575  20                 	db	32
  4577  00F576  20                 	db	32
  4578  00F577  20                 	db	32
  4579  00F578  20                 	db	32
  4580  00F579  49                 	db	73	;'I'
  4581  00F57A  32                 	db	50	;'2'
  4582  00F57B  43                 	db	67	;'C'
  4583  00F57C  20                 	db	32
  4584  00F57D  50                 	db	80	;'P'
  4585  00F57E  4F                 	db	79	;'O'
  4586  00F57F  53                 	db	83	;'S'
  4587  00F580  35                 	db	53	;'5'
  4588  00F581  20                 	db	32
  4589  00F582  54                 	db	84	;'T'
  4590  00F583  65                 	db	101	;'e'
  4591  00F584  6D                 	db	109	;'m'
  4592  00F585  70                 	db	112	;'p'
  4593  00F586  20                 	db	32
  4594  00F587  53                 	db	83	;'S'
  4595  00F588  65                 	db	101	;'e'
  4596  00F589  6E                 	db	110	;'n'
  4597  00F58A  73                 	db	115	;'s'
  4598  00F58B  6F                 	db	111	;'o'
  4599  00F58C  72                 	db	114	;'r'
  4600  00F58D  20                 	db	32
  4601  00F58E  45                 	db	69	;'E'
  4602  00F58F  72                 	db	114	;'r'
  4603  00F590  72                 	db	114	;'r'
  4604  00F591  6F                 	db	111	;'o'
  4605  00F592  72                 	db	114	;'r'
  4606  00F593  0A                 	db	10
  4607  00F594  0D                 	db	13
  4608  00F595  00                 	db	0
  4609  00F596  54                 	db	84	;'T'
  4610  00F597  68                 	db	104	;'h'
  4611  00F598  69                 	db	105	;'i'
  4612  00F599  73                 	db	115	;'s'
  4613  00F59A  20                 	db	32
  4614  00F59B  74                 	db	116	;'t'
  4615  00F59C  65                 	db	101	;'e'
  4616  00F59D  78                 	db	120	;'x'
  4617  00F59E  74                 	db	116	;'t'
  4618  00F59F  20                 	db	32
  4619  00F5A0  68                 	db	104	;'h'
  4620  00F5A1  61                 	db	97	;'a'
  4621  00F5A2  73                 	db	115	;'s'
  4622  00F5A3  20                 	db	32
  4623  00F5A4  61                 	db	97	;'a'
  4624  00F5A5  20                 	db	32
  4625  00F5A6  79                 	db	121	;'y'
  4626  00F5A7  65                 	db	101	;'e'
  4627  00F5A8  6C                 	db	108	;'l'
  4628  00F5A9  6C                 	db	108	;'l'
  4629  00F5AA  6F                 	db	111	;'o'
  4630  00F5AB  77                 	db	119	;'w'
  4631  00F5AC  20                 	db	32
  4632  00F5AD  62                 	db	98	;'b'
  4633  00F5AE  61                 	db	97	;'a'
  4634  00F5AF  63                 	db	99	;'c'
  4635  00F5B0  6B                 	db	107	;'k'
  4636  00F5B1  67                 	db	103	;'g'
  4637  00F5B2  72                 	db	114	;'r'
  4638  00F5B3  6F                 	db	111	;'o'
  4639  00F5B4  75                 	db	117	;'u'
  4640  00F5B5  6E                 	db	110	;'n'
  4641  00F5B6  64                 	db	100	;'d'
  4642  00F5B7  0A                 	db	10
  4643  00F5B8  0D                 	db	13
  4644  00F5B9  00                 	db	0
  4645  00F5BA                     STR_282:
  4646  00F5BA  20                 	db	32
  4647  00F5BB  20                 	db	32
  4648  00F5BC  20                 	db	32
  4649  00F5BD  20                 	db	32
  4650  00F5BE  53                 	db	83	;'S'
  4651  00F5BF  79                 	db	121	;'y'
  4652  00F5C0  73                 	db	115	;'s'
  4653  00F5C1  74                 	db	116	;'t'
  4654  00F5C2  65                 	db	101	;'e'
  4655  00F5C3  6D                 	db	109	;'m'
  4656  00F5C4  20                 	db	32
  4657  00F5C5  53                 	db	83	;'S'
  4658  00F5C6  77                 	db	119	;'w'
  4659  00F5C7  69                 	db	105	;'i'
  4660  00F5C8  74                 	db	116	;'t'
  4661  00F5C9  63                 	db	99	;'c'
  4662  00F5CA  68                 	db	104	;'h'
  4663  00F5CB  69                 	db	105	;'i'
  4664  00F5CC  6E                 	db	110	;'n'
  4665  00F5CD  67                 	db	103	;'g'
  4666  00F5CE  20                 	db	32
  4667  00F5CF  46                 	db	70	;'F'
  4668  00F5D0  72                 	db	114	;'r'
  4669  00F5D1  65                 	db	101	;'e'
  4670  00F5D2  71                 	db	113	;'q'
  4671  00F5D3  75                 	db	117	;'u'
  4672  00F5D4  65                 	db	101	;'e'
  4673  00F5D5  6E                 	db	110	;'n'
  4674  00F5D6  63                 	db	99	;'c'
  4675  00F5D7  69                 	db	105	;'i'
  4676  00F5D8  65                 	db	101	;'e'
  4677  00F5D9  73                 	db	115	;'s'
  4678  00F5DA  3A                 	db	58	;':'
  4679  00F5DB  0A                 	db	10
  4680  00F5DC  0D                 	db	13
  4681  00F5DD  00                 	db	0
  4682  00F5DE                     STR_241:
  4683  00F5DE  4C                 	db	76	;'L'
  4684  00F5DF  69                 	db	105	;'i'
  4685  00F5E0  76                 	db	118	;'v'
  4686  00F5E1  65                 	db	101	;'e'
  4687  00F5E2  20                 	db	32
  4688  00F5E3  6D                 	db	109	;'m'
  4689  00F5E4  65                 	db	101	;'e'
  4690  00F5E5  61                 	db	97	;'a'
  4691  00F5E6  73                 	db	115	;'s'
  4692  00F5E7  75                 	db	117	;'u'
  4693  00F5E8  72                 	db	114	;'r'
  4694  00F5E9  65                 	db	101	;'e'
  4695  00F5EA  6D                 	db	109	;'m'
  4696  00F5EB  65                 	db	101	;'e'
  4697  00F5EC  6E                 	db	110	;'n'
  4698  00F5ED  74                 	db	116	;'t'
  4699  00F5EE  20                 	db	32
  4700  00F5EF  75                 	db	117	;'u'
  4701  00F5F0  70                 	db	112	;'p'
  4702  00F5F1  64                 	db	100	;'d'
  4703  00F5F2  61                 	db	97	;'a'
  4704  00F5F3  74                 	db	116	;'t'
  4705  00F5F4  65                 	db	101	;'e'
  4706  00F5F5  73                 	db	115	;'s'
  4707  00F5F6  20                 	db	32
  4708  00F5F7  64                 	db	100	;'d'
  4709  00F5F8  69                 	db	105	;'i'
  4710  00F5F9  73                 	db	115	;'s'
  4711  00F5FA  61                 	db	97	;'a'
  4712  00F5FB  62                 	db	98	;'b'
  4713  00F5FC  6C                 	db	108	;'l'
  4714  00F5FD  65                 	db	101	;'e'
  4715  00F5FE  64                 	db	100	;'d'
  4716  00F5FF  0A                 	db	10
  4717  00F600  0D                 	db	13
  4718  00F601  00                 	db	0
  4719  00F602  54                 	db	84	;'T'
  4720  00F603  68                 	db	104	;'h'
  4721  00F604  69                 	db	105	;'i'
  4722  00F605  73                 	db	115	;'s'
  4723  00F606  20                 	db	32
  4724  00F607  74                 	db	116	;'t'
  4725  00F608  65                 	db	101	;'e'
  4726  00F609  78                 	db	120	;'x'
  4727  00F60A  74                 	db	116	;'t'
  4728  00F60B  20                 	db	32
  4729  00F60C  68                 	db	104	;'h'
  4730  00F60D  61                 	db	97	;'a'
  4731  00F60E  73                 	db	115	;'s'
  4732  00F60F  20                 	db	32
  4733  00F610  61                 	db	97	;'a'
  4734  00F611  20                 	db	32
  4735  00F612  77                 	db	119	;'w'
  4736  00F613  68                 	db	104	;'h'
  4737  00F614  69                 	db	105	;'i'
  4738  00F615  74                 	db	116	;'t'
  4739  00F616  65                 	db	101	;'e'
  4740  00F617  20                 	db	32
  4741  00F618  62                 	db	98	;'b'
  4742  00F619  61                 	db	97	;'a'
  4743  00F61A  63                 	db	99	;'c'
  4744  00F61B  6B                 	db	107	;'k'
  4745  00F61C  67                 	db	103	;'g'
  4746  00F61D  72                 	db	114	;'r'
  4747  00F61E  6F                 	db	111	;'o'
  4748  00F61F  75                 	db	117	;'u'
  4749  00F620  6E                 	db	110	;'n'
  4750  00F621  64                 	db	100	;'d'
  4751  00F622  0A                 	db	10
  4752  00F623  0D                 	db	13
  4753  00F624  00                 	db	0
  4754  00F625  54                 	db	84	;'T'
  4755  00F626  68                 	db	104	;'h'
  4756  00F627  69                 	db	105	;'i'
  4757  00F628  73                 	db	115	;'s'
  4758  00F629  20                 	db	32
  4759  00F62A  74                 	db	116	;'t'
  4760  00F62B  65                 	db	101	;'e'
  4761  00F62C  78                 	db	120	;'x'
  4762  00F62D  74                 	db	116	;'t'
  4763  00F62E  20                 	db	32
  4764  00F62F  68                 	db	104	;'h'
  4765  00F630  61                 	db	97	;'a'
  4766  00F631  73                 	db	115	;'s'
  4767  00F632  20                 	db	32
  4768  00F633  61                 	db	97	;'a'
  4769  00F634  20                 	db	32
  4770  00F635  62                 	db	98	;'b'
  4771  00F636  6C                 	db	108	;'l'
  4772  00F637  61                 	db	97	;'a'
  4773  00F638  63                 	db	99	;'c'
  4774  00F639  6B                 	db	107	;'k'
  4775  00F63A  20                 	db	32
  4776  00F63B  62                 	db	98	;'b'
  4777  00F63C  61                 	db	97	;'a'
  4778  00F63D  63                 	db	99	;'c'
  4779  00F63E  6B                 	db	107	;'k'
  4780  00F63F  67                 	db	103	;'g'
  4781  00F640  72                 	db	114	;'r'
  4782  00F641  6F                 	db	111	;'o'
  4783  00F642  75                 	db	117	;'u'
  4784  00F643  6E                 	db	110	;'n'
  4785  00F644  64                 	db	100	;'d'
  4786  00F645  0A                 	db	10
  4787  00F646  0D                 	db	13
  4788  00F647  00                 	db	0
  4789  00F648  54                 	db	84	;'T'
  4790  00F649  68                 	db	104	;'h'
  4791  00F64A  69                 	db	105	;'i'
  4792  00F64B  73                 	db	115	;'s'
  4793  00F64C  20                 	db	32
  4794  00F64D  74                 	db	116	;'t'
  4795  00F64E  65                 	db	101	;'e'
  4796  00F64F  78                 	db	120	;'x'
  4797  00F650  74                 	db	116	;'t'
  4798  00F651  20                 	db	32
  4799  00F652  68                 	db	104	;'h'
  4800  00F653  61                 	db	97	;'a'
  4801  00F654  73                 	db	115	;'s'
  4802  00F655  20                 	db	32
  4803  00F656  61                 	db	97	;'a'
  4804  00F657  20                 	db	32
  4805  00F658  67                 	db	103	;'g'
  4806  00F659  72                 	db	114	;'r'
  4807  00F65A  65                 	db	101	;'e'
  4808  00F65B  65                 	db	101	;'e'
  4809  00F65C  6E                 	db	110	;'n'
  4810  00F65D  20                 	db	32
  4811  00F65E  62                 	db	98	;'b'
  4812  00F65F  61                 	db	97	;'a'
  4813  00F660  63                 	db	99	;'c'
  4814  00F661  6B                 	db	107	;'k'
  4815  00F662  67                 	db	103	;'g'
  4816  00F663  72                 	db	114	;'r'
  4817  00F664  6F                 	db	111	;'o'
  4818  00F665  75                 	db	117	;'u'
  4819  00F666  6E                 	db	110	;'n'
  4820  00F667  64                 	db	100	;'d'
  4821  00F668  0A                 	db	10
  4822  00F669  0D                 	db	13
  4823  00F66A  00                 	db	0
  4824  00F66B                     STR_259:
  4825  00F66B  20                 	db	32
  4826  00F66C  20                 	db	32
  4827  00F66D  20                 	db	32
  4828  00F66E  20                 	db	32
  4829  00F66F  51                 	db	81	;'Q'
  4830  00F670  49                 	db	73	;'I'
  4831  00F671  20                 	db	32
  4832  00F672  43                 	db	67	;'C'
  4833  00F673  68                 	db	104	;'h'
  4834  00F674  61                 	db	97	;'a'
  4835  00F675  72                 	db	114	;'r'
  4836  00F676  67                 	db	103	;'g'
  4837  00F677  65                 	db	101	;'e'
  4838  00F678  72                 	db	114	;'r'
  4839  00F679  20                 	db	32
  4840  00F67A  69                 	db	105	;'i'
  4841  00F67B  73                 	db	115	;'s'
  4842  00F67C  20                 	db	32
  4843  00F67D  69                 	db	105	;'i'
  4844  00F67E  6E                 	db	110	;'n'
  4845  00F67F  20                 	db	32
  4846  00F680  45                 	db	69	;'E'
  4847  00F681  72                 	db	114	;'r'
  4848  00F682  72                 	db	114	;'r'
  4849  00F683  6F                 	db	111	;'o'
  4850  00F684  72                 	db	114	;'r'
  4851  00F685  20                 	db	32
  4852  00F686  53                 	db	83	;'S'
  4853  00F687  74                 	db	116	;'t'
  4854  00F688  61                 	db	97	;'a'
  4855  00F689  74                 	db	116	;'t'
  4856  00F68A  65                 	db	101	;'e'
  4857  00F68B  0A                 	db	10
  4858  00F68C  0D                 	db	13
  4859  00F68D  00                 	db	0
  4860  00F68E                     STR_252:
  4861  00F68E  20                 	db	32
  4862  00F68F  20                 	db	32
  4863  00F690  20                 	db	32
  4864  00F691  20                 	db	32
  4865  00F692  20                 	db	32
  4866  00F693  20                 	db	32
  4867  00F694  20                 	db	32
  4868  00F695  20                 	db	32
  4869  00F696  49                 	db	73	;'I'
  4870  00F697  32                 	db	50	;'2'
  4871  00F698  43                 	db	67	;'C'
  4872  00F699  20                 	db	32
  4873  00F69A  51                 	db	81	;'Q'
  4874  00F69B  49                 	db	73	;'I'
  4875  00F69C  20                 	db	32
  4876  00F69D  54                 	db	84	;'T'
  4877  00F69E  65                 	db	101	;'e'
  4878  00F69F  6D                 	db	109	;'m'
  4879  00F6A0  70                 	db	112	;'p'
  4880  00F6A1  20                 	db	32
  4881  00F6A2  53                 	db	83	;'S'
  4882  00F6A3  65                 	db	101	;'e'
  4883  00F6A4  6E                 	db	110	;'n'
  4884  00F6A5  73                 	db	115	;'s'
  4885  00F6A6  6F                 	db	111	;'o'
  4886  00F6A7  72                 	db	114	;'r'
  4887  00F6A8  20                 	db	32
  4888  00F6A9  45                 	db	69	;'E'
  4889  00F6AA  72                 	db	114	;'r'
  4890  00F6AB  72                 	db	114	;'r'
  4891  00F6AC  6F                 	db	111	;'o'
  4892  00F6AD  72                 	db	114	;'r'
  4893  00F6AE  0A                 	db	10
  4894  00F6AF  0D                 	db	13
  4895  00F6B0  00                 	db	0
  4896  00F6B1  54                 	db	84	;'T'
  4897  00F6B2  68                 	db	104	;'h'
  4898  00F6B3  69                 	db	105	;'i'
  4899  00F6B4  73                 	db	115	;'s'
  4900  00F6B5  20                 	db	32
  4901  00F6B6  74                 	db	116	;'t'
  4902  00F6B7  65                 	db	101	;'e'
  4903  00F6B8  78                 	db	120	;'x'
  4904  00F6B9  74                 	db	116	;'t'
  4905  00F6BA  20                 	db	32
  4906  00F6BB  68                 	db	104	;'h'
  4907  00F6BC  61                 	db	97	;'a'
  4908  00F6BD  73                 	db	115	;'s'
  4909  00F6BE  20                 	db	32
  4910  00F6BF  61                 	db	97	;'a'
  4911  00F6C0  20                 	db	32
  4912  00F6C1  62                 	db	98	;'b'
  4913  00F6C2  6C                 	db	108	;'l'
  4914  00F6C3  75                 	db	117	;'u'
  4915  00F6C4  65                 	db	101	;'e'
  4916  00F6C5  20                 	db	32
  4917  00F6C6  62                 	db	98	;'b'
  4918  00F6C7  61                 	db	97	;'a'
  4919  00F6C8  63                 	db	99	;'c'
  4920  00F6C9  6B                 	db	107	;'k'
  4921  00F6CA  67                 	db	103	;'g'
  4922  00F6CB  72                 	db	114	;'r'
  4923  00F6CC  6F                 	db	111	;'o'
  4924  00F6CD  75                 	db	117	;'u'
  4925  00F6CE  6E                 	db	110	;'n'
  4926  00F6CF  64                 	db	100	;'d'
  4927  00F6D0  0A                 	db	10
  4928  00F6D1  0D                 	db	13
  4929  00F6D2  00                 	db	0
  4930  00F6D3  54                 	db	84	;'T'
  4931  00F6D4  68                 	db	104	;'h'
  4932  00F6D5  69                 	db	105	;'i'
  4933  00F6D6  73                 	db	115	;'s'
  4934  00F6D7  20                 	db	32
  4935  00F6D8  74                 	db	116	;'t'
  4936  00F6D9  65                 	db	101	;'e'
  4937  00F6DA  78                 	db	120	;'x'
  4938  00F6DB  74                 	db	116	;'t'
  4939  00F6DC  20                 	db	32
  4940  00F6DD  68                 	db	104	;'h'
  4941  00F6DE  61                 	db	97	;'a'
  4942  00F6DF  73                 	db	115	;'s'
  4943  00F6E0  20                 	db	32
  4944  00F6E1  61                 	db	97	;'a'
  4945  00F6E2  20                 	db	32
  4946  00F6E3  63                 	db	99	;'c'
  4947  00F6E4  79                 	db	121	;'y'
  4948  00F6E5  61                 	db	97	;'a'
  4949  00F6E6  6E                 	db	110	;'n'
  4950  00F6E7  20                 	db	32
  4951  00F6E8  62                 	db	98	;'b'
  4952  00F6E9  61                 	db	97	;'a'
  4953  00F6EA  63                 	db	99	;'c'
  4954  00F6EB  6B                 	db	107	;'k'
  4955  00F6EC  67                 	db	103	;'g'
  4956  00F6ED  72                 	db	114	;'r'
  4957  00F6EE  6F                 	db	111	;'o'
  4958  00F6EF  75                 	db	117	;'u'
  4959  00F6F0  6E                 	db	110	;'n'
  4960  00F6F1  64                 	db	100	;'d'
  4961  00F6F2  0A                 	db	10
  4962  00F6F3  0D                 	db	13
  4963  00F6F4  00                 	db	0
  4964  00F6F5                     STR_293:
  4965  00F6F5  20                 	db	32
  4966  00F6F6  20                 	db	32
  4967  00F6F7  20                 	db	32
  4968  00F6F8  20                 	db	32
  4969  00F6F9  4D                 	db	77	;'M'
  4970  00F6FA  69                 	db	105	;'i'
  4971  00F6FB  63                 	db	99	;'c'
  4972  00F6FC  72                 	db	114	;'r'
  4973  00F6FD  6F                 	db	111	;'o'
  4974  00F6FE  63                 	db	99	;'c'
  4975  00F6FF  6F                 	db	111	;'o'
  4976  00F700  6E                 	db	110	;'n'
  4977  00F701  74                 	db	116	;'t'
  4978  00F702  72                 	db	114	;'r'
  4979  00F703  6F                 	db	111	;'o'
  4980  00F704  6C                 	db	108	;'l'
  4981  00F705  6C                 	db	108	;'l'
  4982  00F706  65                 	db	101	;'e'
  4983  00F707  72                 	db	114	;'r'
  4984  00F708  20                 	db	32
  4985  00F709  50                 	db	80	;'P'
  4986  00F70A  61                 	db	97	;'a'
  4987  00F70B  72                 	db	114	;'r'
  4988  00F70C  61                 	db	97	;'a'
  4989  00F70D  6D                 	db	109	;'m'
  4990  00F70E  65                 	db	101	;'e'
  4991  00F70F  74                 	db	116	;'t'
  4992  00F710  65                 	db	101	;'e'
  4993  00F711  72                 	db	114	;'r'
  4994  00F712  73                 	db	115	;'s'
  4995  00F713  3A                 	db	58	;':'
  4996  00F714  0A                 	db	10
  4997  00F715  0D                 	db	13
  4998  00F716  00                 	db	0
  4999  00F717  54                 	db	84	;'T'
  5000  00F718  68                 	db	104	;'h'
  5001  00F719  69                 	db	105	;'i'
  5002  00F71A  73                 	db	115	;'s'
  5003  00F71B  20                 	db	32
  5004  00F71C  74                 	db	116	;'t'
  5005  00F71D  65                 	db	101	;'e'
  5006  00F71E  78                 	db	120	;'x'
  5007  00F71F  74                 	db	116	;'t'
  5008  00F720  20                 	db	32
  5009  00F721  68                 	db	104	;'h'
  5010  00F722  61                 	db	97	;'a'
  5011  00F723  73                 	db	115	;'s'
  5012  00F724  20                 	db	32
  5013  00F725  61                 	db	97	;'a'
  5014  00F726  20                 	db	32
  5015  00F727  72                 	db	114	;'r'
  5016  00F728  65                 	db	101	;'e'
  5017  00F729  64                 	db	100	;'d'
  5018  00F72A  20                 	db	32
  5019  00F72B  62                 	db	98	;'b'
  5020  00F72C  61                 	db	97	;'a'
  5021  00F72D  63                 	db	99	;'c'
  5022  00F72E  6B                 	db	107	;'k'
  5023  00F72F  67                 	db	103	;'g'
  5024  00F730  72                 	db	114	;'r'
  5025  00F731  6F                 	db	111	;'o'
  5026  00F732  75                 	db	117	;'u'
  5027  00F733  6E                 	db	110	;'n'
  5028  00F734  64                 	db	100	;'d'
  5029  00F735  0A                 	db	10
  5030  00F736  0D                 	db	13
  5031  00F737  00                 	db	0
  5032  00F738                     STR_253:
  5033  00F738  20                 	db	32
  5034  00F739  20                 	db	32
  5035  00F73A  20                 	db	32
  5036  00F73B  20                 	db	32
  5037  00F73C  20                 	db	32
  5038  00F73D  20                 	db	32
  5039  00F73E  20                 	db	32
  5040  00F73F  20                 	db	32
  5041  00F740  49                 	db	73	;'I'
  5042  00F741  32                 	db	50	;'2'
  5043  00F742  43                 	db	67	;'C'
  5044  00F743  20                 	db	32
  5045  00F744  4F                 	db	79	;'O'
  5046  00F745  4C                 	db	76	;'L'
  5047  00F746  45                 	db	69	;'E'
  5048  00F747  44                 	db	68	;'D'
  5049  00F748  20                 	db	32
  5050  00F749  44                 	db	68	;'D'
  5051  00F74A  69                 	db	105	;'i'
  5052  00F74B  73                 	db	115	;'s'
  5053  00F74C  70                 	db	112	;'p'
  5054  00F74D  6C                 	db	108	;'l'
  5055  00F74E  61                 	db	97	;'a'
  5056  00F74F  79                 	db	121	;'y'
  5057  00F750  20                 	db	32
  5058  00F751  45                 	db	69	;'E'
  5059  00F752  72                 	db	114	;'r'
  5060  00F753  72                 	db	114	;'r'
  5061  00F754  6F                 	db	111	;'o'
  5062  00F755  72                 	db	114	;'r'
  5063  00F756  0A                 	db	10
  5064  00F757  0D                 	db	13
  5065  00F758  00                 	db	0
  5066  00F759                     STR_258:
  5067  00F759  20                 	db	32
  5068  00F75A  20                 	db	32
  5069  00F75B  20                 	db	32
  5070  00F75C  20                 	db	32
  5071  00F75D  4E                 	db	78	;'N'
  5072  00F75E  6F                 	db	111	;'o'
  5073  00F75F  20                 	db	32
  5074  00F760  55                 	db	85	;'U'
  5075  00F761  41                 	db	65	;'A'
  5076  00F762  52                 	db	82	;'R'
  5077  00F763  54                 	db	84	;'T'
  5078  00F764  20                 	db	32
  5079  00F765  65                 	db	101	;'e'
  5080  00F766  72                 	db	114	;'r'
  5081  00F767  72                 	db	114	;'r'
  5082  00F768  6F                 	db	111	;'o'
  5083  00F769  72                 	db	114	;'r'
  5084  00F76A  28                 	db	40
  5085  00F76B  73                 	db	115	;'s'
  5086  00F76C  29                 	db	41
  5087  00F76D  20                 	db	32
  5088  00F76E  64                 	db	100	;'d'
  5089  00F76F  65                 	db	101	;'e'
  5090  00F770  74                 	db	116	;'t'
  5091  00F771  65                 	db	101	;'e'
  5092  00F772  63                 	db	99	;'c'
  5093  00F773  74                 	db	116	;'t'
  5094  00F774  65                 	db	101	;'e'
  5095  00F775  64                 	db	100	;'d'
  5096  00F776  0A                 	db	10
  5097  00F777  0D                 	db	13
  5098  00F778  00                 	db	0
  5099  00F779                     STR_255:
  5100  00F779  20                 	db	32
  5101  00F77A  20                 	db	32
  5102  00F77B  20                 	db	32
  5103  00F77C  20                 	db	32
  5104  00F77D  4E                 	db	78	;'N'
  5105  00F77E  6F                 	db	111	;'o'
  5106  00F77F  20                 	db	32
  5107  00F780  49                 	db	73	;'I'
  5108  00F781  32                 	db	50	;'2'
  5109  00F782  43                 	db	67	;'C'
  5110  00F783  20                 	db	32
  5111  00F784  65                 	db	101	;'e'
  5112  00F785  72                 	db	114	;'r'
  5113  00F786  72                 	db	114	;'r'
  5114  00F787  6F                 	db	111	;'o'
  5115  00F788  72                 	db	114	;'r'
  5116  00F789  28                 	db	40
  5117  00F78A  73                 	db	115	;'s'
  5118  00F78B  29                 	db	41
  5119  00F78C  20                 	db	32
  5120  00F78D  64                 	db	100	;'d'
  5121  00F78E  65                 	db	101	;'e'
  5122  00F78F  74                 	db	116	;'t'
  5123  00F790  65                 	db	101	;'e'
  5124  00F791  63                 	db	99	;'c'
  5125  00F792  74                 	db	116	;'t'
  5126  00F793  65                 	db	101	;'e'
  5127  00F794  64                 	db	100	;'d'
  5128  00F795  0A                 	db	10
  5129  00F796  0D                 	db	13
  5130  00F797  00                 	db	0
  5131  00F798                     STR_247:
  5132  00F798  20                 	db	32
  5133  00F799  20                 	db	32
  5134  00F79A  20                 	db	32
  5135  00F79B  20                 	db	32
  5136  00F79C  4E                 	db	78	;'N'
  5137  00F79D  6F                 	db	111	;'o'
  5138  00F79E  20                 	db	32
  5139  00F79F  41                 	db	65	;'A'
  5140  00F7A0  44                 	db	68	;'D'
  5141  00F7A1  43                 	db	67	;'C'
  5142  00F7A2  20                 	db	32
  5143  00F7A3  65                 	db	101	;'e'
  5144  00F7A4  72                 	db	114	;'r'
  5145  00F7A5  72                 	db	114	;'r'
  5146  00F7A6  6F                 	db	111	;'o'
  5147  00F7A7  72                 	db	114	;'r'
  5148  00F7A8  28                 	db	40
  5149  00F7A9  73                 	db	115	;'s'
  5150  00F7AA  29                 	db	41
  5151  00F7AB  20                 	db	32
  5152  00F7AC  64                 	db	100	;'d'
  5153  00F7AD  65                 	db	101	;'e'
  5154  00F7AE  74                 	db	116	;'t'
  5155  00F7AF  65                 	db	101	;'e'
  5156  00F7B0  63                 	db	99	;'c'
  5157  00F7B1  74                 	db	116	;'t'
  5158  00F7B2  65                 	db	101	;'e'
  5159  00F7B3  64                 	db	100	;'d'
  5160  00F7B4  0A                 	db	10
  5161  00F7B5  0D                 	db	13
  5162  00F7B6  00                 	db	0
  5163  00F7B7                     STR_256:
  5164  00F7B7  20                 	db	32
  5165  00F7B8  20                 	db	32
  5166  00F7B9  20                 	db	32
  5167  00F7BA  20                 	db	32
  5168  00F7BB  55                 	db	85	;'U'
  5169  00F7BC  53                 	db	83	;'S'
  5170  00F7BD  42                 	db	66	;'B'
  5171  00F7BE  20                 	db	32
  5172  00F7BF  55                 	db	85	;'U'
  5173  00F7C0  41                 	db	65	;'A'
  5174  00F7C1  52                 	db	82	;'R'
  5175  00F7C2  54                 	db	84	;'T'
  5176  00F7C3  20                 	db	32
  5177  00F7C4  45                 	db	69	;'E'
  5178  00F7C5  72                 	db	114	;'r'
  5179  00F7C6  72                 	db	114	;'r'
  5180  00F7C7  6F                 	db	111	;'o'
  5181  00F7C8  72                 	db	114	;'r'
  5182  00F7C9  20                 	db	32
  5183  00F7CA  44                 	db	68	;'D'
  5184  00F7CB  65                 	db	101	;'e'
  5185  00F7CC  74                 	db	116	;'t'
  5186  00F7CD  65                 	db	101	;'e'
  5187  00F7CE  63                 	db	99	;'c'
  5188  00F7CF  74                 	db	116	;'t'
  5189  00F7D0  65                 	db	101	;'e'
  5190  00F7D1  64                 	db	100	;'d'
  5191  00F7D2  0A                 	db	10
  5192  00F7D3  0D                 	db	13
  5193  00F7D4  00                 	db	0
  5194  00F7D5                     STR_9:
  5195  00F7D5  55                 	db	85	;'U'
  5196  00F7D6  73                 	db	115	;'s'
  5197  00F7D7  65                 	db	101	;'e'
  5198  00F7D8  72                 	db	114	;'r'
  5199  00F7D9  20                 	db	32
  5200  00F7DA  69                 	db	105	;'i'
  5201  00F7DB  6E                 	db	110	;'n'
  5202  00F7DC  70                 	db	112	;'p'
  5203  00F7DD  75                 	db	117	;'u'
  5204  00F7DE  74                 	db	116	;'t'
  5205  00F7DF  20                 	db	32
  5206  00F7E0  61                 	db	97	;'a'
  5207  00F7E1  70                 	db	112	;'p'
  5208  00F7E2  70                 	db	112	;'p'
  5209  00F7E3  65                 	db	101	;'e'
  5210  00F7E4  61                 	db	97	;'a'
  5211  00F7E5  72                 	db	114	;'r'
  5212  00F7E6  73                 	db	115	;'s'
  5213  00F7E7  20                 	db	32
  5214  00F7E8  69                 	db	105	;'i'
  5215  00F7E9  6E                 	db	110	;'n'
  5216  00F7EA  20                 	db	32
  5217  00F7EB  77                 	db	119	;'w'
  5218  00F7EC  68                 	db	104	;'h'
  5219  00F7ED  69                 	db	105	;'i'
  5220  00F7EE  74                 	db	116	;'t'
  5221  00F7EF  65                 	db	101	;'e'
  5222  00F7F0  0A                 	db	10
  5223  00F7F1  0D                 	db	13
  5224  00F7F2  00                 	db	0
  5225  00F7F3                     STR_242:
  5226  00F7F3  20                 	db	32
  5227  00F7F4  20                 	db	32
  5228  00F7F5  20                 	db	32
  5229  00F7F6  20                 	db	32
  5230  00F7F7  41                 	db	65	;'A'
  5231  00F7F8  44                 	db	68	;'D'
  5232  00F7F9  43                 	db	67	;'C'
  5233  00F7FA  20                 	db	32
  5234  00F7FB  65                 	db	101	;'e'
  5235  00F7FC  72                 	db	114	;'r'
  5236  00F7FD  72                 	db	114	;'r'
  5237  00F7FE  6F                 	db	111	;'o'
  5238  00F7FF  72                 	db	114	;'r'
  5239  00F800  28                 	db	40
  5240  00F801  73                 	db	115	;'s'
  5241  00F802  29                 	db	41
  5242  00F803  20                 	db	32
  5243  00F804  64                 	db	100	;'d'
  5244  00F805  65                 	db	101	;'e'
  5245  00F806  74                 	db	116	;'t'
  5246  00F807  65                 	db	101	;'e'
  5247  00F808  63                 	db	99	;'c'
  5248  00F809  74                 	db	116	;'t'
  5249  00F80A  65                 	db	101	;'e'
  5250  00F80B  64                 	db	100	;'d'
  5251  00F80C  21                 	db	33
  5252  00F80D  0A                 	db	10
  5253  00F80E  0D                 	db	13
  5254  00F80F  00                 	db	0
  5255  00F810                     STR_227:
  5256  00F810  45                 	db	69	;'E'
  5257  00F811  6E                 	db	110	;'n'
  5258  00F812  61                 	db	97	;'a'
  5259  00F813  62                 	db	98	;'b'
  5260  00F814  6C                 	db	108	;'l'
  5261  00F815  69                 	db	105	;'i'
  5262  00F816  6E                 	db	110	;'n'
  5263  00F817  67                 	db	103	;'g'
  5264  00F818  20                 	db	32
  5265  00F819  6C                 	db	108	;'l'
  5266  00F81A  69                 	db	105	;'i'
  5267  00F81B  76                 	db	118	;'v'
  5268  00F81C  65                 	db	101	;'e'
  5269  00F81D  20                 	db	32
  5270  00F81E  6D                 	db	109	;'m'
  5271  00F81F  65                 	db	101	;'e'
  5272  00F820  61                 	db	97	;'a'
  5273  00F821  73                 	db	115	;'s'
  5274  00F822  75                 	db	117	;'u'
  5275  00F823  72                 	db	114	;'r'
  5276  00F824  65                 	db	101	;'e'
  5277  00F825  6D                 	db	109	;'m'
  5278  00F826  65                 	db	101	;'e'
  5279  00F827  6E                 	db	110	;'n'
  5280  00F828  74                 	db	116	;'t'
  5281  00F829  73                 	db	115	;'s'
  5282  00F82A  0A                 	db	10
  5283  00F82B  0D                 	db	13
  5284  00F82C  00                 	db	0
  5285  00F82D                     STR_249:
  5286  00F82D  20                 	db	32
  5287  00F82E  20                 	db	32
  5288  00F82F  20                 	db	32
  5289  00F830  20                 	db	32
  5290  00F831  20                 	db	32
  5291  00F832  20                 	db	32
  5292  00F833  20                 	db	32
  5293  00F834  20                 	db	32
  5294  00F835  49                 	db	73	;'I'
  5295  00F836  32                 	db	50	;'2'
  5296  00F837  43                 	db	67	;'C'
  5297  00F838  20                 	db	32
  5298  00F839  47                 	db	71	;'G'
  5299  00F83A  65                 	db	101	;'e'
  5300  00F83B  6E                 	db	110	;'n'
  5301  00F83C  65                 	db	101	;'e'
  5302  00F83D  72                 	db	114	;'r'
  5303  00F83E  61                 	db	97	;'a'
  5304  00F83F  6C                 	db	108	;'l'
  5305  00F840  20                 	db	32
  5306  00F841  45                 	db	69	;'E'
  5307  00F842  72                 	db	114	;'r'
  5308  00F843  72                 	db	114	;'r'
  5309  00F844  6F                 	db	111	;'o'
  5310  00F845  72                 	db	114	;'r'
  5311  00F846  0A                 	db	10
  5312  00F847  0D                 	db	13
  5313  00F848  00                 	db	0
  5314  00F849                     STR_244:
  5315  00F849  20                 	db	32
  5316  00F84A  20                 	db	32
  5317  00F84B  20                 	db	32
  5318  00F84C  20                 	db	32
  5319  00F84D  20                 	db	32
  5320  00F84E  20                 	db	32
  5321  00F84F  20                 	db	32
  5322  00F850  20                 	db	32
  5323  00F851  47                 	db	71	;'G'
  5324  00F852  65                 	db	101	;'e'
  5325  00F853  6E                 	db	110	;'n'
  5326  00F854  65                 	db	101	;'e'
  5327  00F855  72                 	db	114	;'r'
  5328  00F856  61                 	db	97	;'a'
  5329  00F857  6C                 	db	108	;'l'
  5330  00F858  20                 	db	32
  5331  00F859  41                 	db	65	;'A'
  5332  00F85A  44                 	db	68	;'D'
  5333  00F85B  43                 	db	67	;'C'
  5334  00F85C  20                 	db	32
  5335  00F85D  65                 	db	101	;'e'
  5336  00F85E  72                 	db	114	;'r'
  5337  00F85F  72                 	db	114	;'r'
  5338  00F860  6F                 	db	111	;'o'
  5339  00F861  72                 	db	114	;'r'
  5340  00F862  0A                 	db	10
  5341  00F863  0D                 	db	13
  5342  00F864  00                 	db	0
  5343  00F865  54                 	db	84	;'T'
  5344  00F866  65                 	db	101	;'e'
  5345  00F867  73                 	db	115	;'s'
  5346  00F868  74                 	db	116	;'t'
  5347  00F869  69                 	db	105	;'i'
  5348  00F86A  6E                 	db	110	;'n'
  5349  00F86B  67                 	db	103	;'g'
  5350  00F86C  20                 	db	32
  5351  00F86D  74                 	db	116	;'t'
  5352  00F86E  65                 	db	101	;'e'
  5353  00F86F  78                 	db	120	;'x'
  5354  00F870  74                 	db	116	;'t'
  5355  00F871  20                 	db	32
  5356  00F872  61                 	db	97	;'a'
  5357  00F873  74                 	db	116	;'t'
  5358  00F874  74                 	db	116	;'t'
  5359  00F875  72                 	db	114	;'r'
  5360  00F876  69                 	db	105	;'i'
  5361  00F877  62                 	db	98	;'b'
  5362  00F878  75                 	db	117	;'u'
  5363  00F879  74                 	db	116	;'t'
  5364  00F87A  65                 	db	101	;'e'
  5365  00F87B  73                 	db	115	;'s'
  5366  00F87C  3A                 	db	58	;':'
  5367  00F87D  0A                 	db	10
  5368  00F87E  0D                 	db	13
  5369  00F87F  00                 	db	0
  5370  00F880  54                 	db	84	;'T'
  5371  00F881  68                 	db	104	;'h'
  5372  00F882  69                 	db	105	;'i'
  5373  00F883  73                 	db	115	;'s'
  5374  00F884  20                 	db	32
  5375  00F885  74                 	db	116	;'t'
  5376  00F886  65                 	db	101	;'e'
  5377  00F887  78                 	db	120	;'x'
  5378  00F888  74                 	db	116	;'t'
  5379  00F889  20                 	db	32
  5380  00F88A  69                 	db	105	;'i'
  5381  00F88B  73                 	db	115	;'s'
  5382  00F88C  20                 	db	32
  5383  00F88D  75                 	db	117	;'u'
  5384  00F88E  6E                 	db	110	;'n'
  5385  00F88F  64                 	db	100	;'d'
  5386  00F890  65                 	db	101	;'e'
  5387  00F891  72                 	db	114	;'r'
  5388  00F892  73                 	db	115	;'s'
  5389  00F893  63                 	db	99	;'c'
  5390  00F894  6F                 	db	111	;'o'
  5391  00F895  72                 	db	114	;'r'
  5392  00F896  65                 	db	101	;'e'
  5393  00F897  64                 	db	100	;'d'
  5394  00F898  0A                 	db	10
  5395  00F899  0D                 	db	13
  5396  00F89A  00                 	db	0
  5397  00F89B                     STR_288:
  5398  00F89B  20                 	db	32
  5399  00F89C  20                 	db	32
  5400  00F89D  20                 	db	32
  5401  00F89E  20                 	db	32
  5402  00F89F  53                 	db	83	;'S'
  5403  00F8A0  79                 	db	121	;'y'
  5404  00F8A1  73                 	db	115	;'s'
  5405  00F8A2  74                 	db	116	;'t'
  5406  00F8A3  65                 	db	101	;'e'
  5407  00F8A4  6D                 	db	109	;'m'
  5408  00F8A5  20                 	db	32
  5409  00F8A6  54                 	db	84	;'T'
  5410  00F8A7  65                 	db	101	;'e'
  5411  00F8A8  6D                 	db	109	;'m'
  5412  00F8A9  70                 	db	112	;'p'
  5413  00F8AA  65                 	db	101	;'e'
  5414  00F8AB  72                 	db	114	;'r'
  5415  00F8AC  61                 	db	97	;'a'
  5416  00F8AD  74                 	db	116	;'t'
  5417  00F8AE  75                 	db	117	;'u'
  5418  00F8AF  72                 	db	114	;'r'
  5419  00F8B0  65                 	db	101	;'e'
  5420  00F8B1  73                 	db	115	;'s'
  5421  00F8B2  3A                 	db	58	;':'
  5422  00F8B3  0A                 	db	10
  5423  00F8B4  0D                 	db	13
  5424  00F8B5  00                 	db	0
  5425  00F8B6                     STR_29:
  5426  00F8B6  52                 	db	82	;'R'
  5427  00F8B7  45                 	db	69	;'E'
  5428  00F8B8  53                 	db	83	;'S'
  5429  00F8B9  45                 	db	69	;'E'
  5430  00F8BA  54                 	db	84	;'T'
  5431  00F8BB  20                 	db	32
  5432  00F8BC  49                 	db	73	;'I'
  5433  00F8BD  6E                 	db	110	;'n'
  5434  00F8BE  73                 	db	115	;'s'
  5435  00F8BF  74                 	db	116	;'t'
  5436  00F8C0  72                 	db	114	;'r'
  5437  00F8C1  75                 	db	117	;'u'
  5438  00F8C2  63                 	db	99	;'c'
  5439  00F8C3  74                 	db	116	;'t'
  5440  00F8C4  69                 	db	105	;'i'
  5441  00F8C5  6F                 	db	111	;'o'
  5442  00F8C6  6E                 	db	110	;'n'
  5443  00F8C7  20                 	db	32
  5444  00F8C8  45                 	db	69	;'E'
  5445  00F8C9  78                 	db	120	;'x'
  5446  00F8CA  65                 	db	101	;'e'
  5447  00F8CB  63                 	db	99	;'c'
  5448  00F8CC  75                 	db	117	;'u'
  5449  00F8CD  74                 	db	116	;'t'
  5450  00F8CE  65                 	db	101	;'e'
  5451  00F8CF  64                 	db	100	;'d'
  5452  00F8D0  00                 	db	0
  5453  00F8D1                     STR_12:
  5454  00F8D1  50                 	db	80	;'P'
  5455  00F8D2  72                 	db	114	;'r'
  5456  00F8D3  65                 	db	101	;'e'
  5457  00F8D4  73                 	db	115	;'s'
  5458  00F8D5  73                 	db	115	;'s'
  5459  00F8D6  20                 	db	32
  5460  00F8D7  65                 	db	101	;'e'
  5461  00F8D8  6E                 	db	110	;'n'
  5462  00F8D9  74                 	db	116	;'t'
  5463  00F8DA  65                 	db	101	;'e'
  5464  00F8DB  72                 	db	114	;'r'
  5465  00F8DC  20                 	db	32
  5466  00F8DD  6B                 	db	107	;'k'
  5467  00F8DE  65                 	db	101	;'e'
  5468  00F8DF  79                 	db	121	;'y'
  5469  00F8E0  20                 	db	32
  5470  00F8E1  74                 	db	116	;'t'
  5471  00F8E2  6F                 	db	111	;'o'
  5472  00F8E3  20                 	db	32
  5473  00F8E4  65                 	db	101	;'e'
  5474  00F8E5  78                 	db	120	;'x'
  5475  00F8E6  69                 	db	105	;'i'
  5476  00F8E7  74                 	db	116	;'t'
  5477  00F8E8  0A                 	db	10
  5478  00F8E9  0D                 	db	13
  5479  00F8EA  00                 	db	0
  5480  00F8EB                     STR_226:
  5481  00F8EB  45                 	db	69	;'E'
  5482  00F8EC  6E                 	db	110	;'n'
  5483  00F8ED  61                 	db	97	;'a'
  5484  00F8EE  62                 	db	98	;'b'
  5485  00F8EF  6C                 	db	108	;'l'
  5486  00F8F0  65                 	db	101	;'e'
  5487  00F8F1  20                 	db	32
  5488  00F8F2  4C                 	db	76	;'L'
  5489  00F8F3  69                 	db	105	;'i'
  5490  00F8F4  76                 	db	118	;'v'
  5491  00F8F5  65                 	db	101	;'e'
  5492  00F8F6  20                 	db	32
  5493  00F8F7  4D                 	db	77	;'M'
  5494  00F8F8  65                 	db	101	;'e'
  5495  00F8F9  61                 	db	97	;'a'
  5496  00F8FA  73                 	db	115	;'s'
  5497  00F8FB  75                 	db	117	;'u'
  5498  00F8FC  72                 	db	114	;'r'
  5499  00F8FD  65                 	db	101	;'e'
  5500  00F8FE  6D                 	db	109	;'m'
  5501  00F8FF  65                 	db	101	;'e'
  5502  00F900  6E                 	db	110	;'n'
  5503  00F901  74                 	db	116	;'t'
  5504  00F902  73                 	db	115	;'s'
  5505  00F903  00                 	db	0
  5506  00F904  54                 	db	84	;'T'
  5507  00F905  68                 	db	104	;'h'
  5508  00F906  69                 	db	105	;'i'
  5509  00F907  73                 	db	115	;'s'
  5510  00F908  20                 	db	32
  5511  00F909  74                 	db	116	;'t'
  5512  00F90A  65                 	db	101	;'e'
  5513  00F90B  78                 	db	120	;'x'
  5514  00F90C  74                 	db	116	;'t'
  5515  00F90D  20                 	db	32
  5516  00F90E  69                 	db	105	;'i'
  5517  00F90F  73                 	db	115	;'s'
  5518  00F910  20                 	db	32
  5519  00F911  6E                 	db	110	;'n'
  5520  00F912  6F                 	db	111	;'o'
  5521  00F913  72                 	db	114	;'r'
  5522  00F914  6D                 	db	109	;'m'
  5523  00F915  61                 	db	97	;'a'
  5524  00F916  6C                 	db	108	;'l'
  5525  00F917  0A                 	db	10
  5526  00F918  0D                 	db	13
  5527  00F919  0A                 	db	10
  5528  00F91A  0D                 	db	13
  5529  00F91B  00                 	db	0
  5530  00F91C  54                 	db	84	;'T'
  5531  00F91D  68                 	db	104	;'h'
  5532  00F91E  69                 	db	105	;'i'
  5533  00F91F  73                 	db	115	;'s'
  5534  00F920  20                 	db	32
  5535  00F921  74                 	db	116	;'t'
  5536  00F922  65                 	db	101	;'e'
  5537  00F923  78                 	db	120	;'x'
  5538  00F924  74                 	db	116	;'t'
  5539  00F925  20                 	db	32
  5540  00F926  69                 	db	105	;'i'
  5541  00F927  73                 	db	115	;'s'
  5542  00F928  20                 	db	32
  5543  00F929  72                 	db	114	;'r'
  5544  00F92A  65                 	db	101	;'e'
  5545  00F92B  76                 	db	118	;'v'
  5546  00F92C  65                 	db	101	;'e'
  5547  00F92D  72                 	db	114	;'r'
  5548  00F92E  73                 	db	115	;'s'
  5549  00F92F  65                 	db	101	;'e'
  5550  00F930  64                 	db	100	;'d'
  5551  00F931  0A                 	db	10
  5552  00F932  0D                 	db	13
  5553  00F933  00                 	db	0
  5554  00F934  54                 	db	84	;'T'
  5555  00F935  68                 	db	104	;'h'
  5556  00F936  69                 	db	105	;'i'
  5557  00F937  73                 	db	115	;'s'
  5558  00F938  20                 	db	32
  5559  00F939  74                 	db	116	;'t'
  5560  00F93A  65                 	db	101	;'e'
  5561  00F93B  78                 	db	120	;'x'
  5562  00F93C  74                 	db	116	;'t'
  5563  00F93D  20                 	db	32
  5564  00F93E  69                 	db	105	;'i'
  5565  00F93F  73                 	db	115	;'s'
  5566  00F940  20                 	db	32
  5567  00F941  62                 	db	98	;'b'
  5568  00F942  6C                 	db	108	;'l'
  5569  00F943  69                 	db	105	;'i'
  5570  00F944  6E                 	db	110	;'n'
  5571  00F945  6B                 	db	107	;'k'
  5572  00F946  69                 	db	105	;'i'
  5573  00F947  6E                 	db	110	;'n'
  5574  00F948  67                 	db	103	;'g'
  5575  00F949  0A                 	db	10
  5576  00F94A  0D                 	db	13
  5577  00F94B  00                 	db	0
  5578  00F94C                     STR_220:
  5579  00F94C  55                 	db	85	;'U'
  5580  00F94D  41                 	db	65	;'A'
  5581  00F94E  52                 	db	82	;'R'
  5582  00F94F  54                 	db	84	;'T'
  5583  00F950  20                 	db	32
  5584  00F951  65                 	db	101	;'e'
  5585  00F952  72                 	db	114	;'r'
  5586  00F953  72                 	db	114	;'r'
  5587  00F954  6F                 	db	111	;'o'
  5588  00F955  72                 	db	114	;'r'
  5589  00F956  28                 	db	40
  5590  00F957  73                 	db	115	;'s'
  5591  00F958  29                 	db	41
  5592  00F959  20                 	db	32
  5593  00F95A  63                 	db	99	;'c'
  5594  00F95B  6C                 	db	108	;'l'
  5595  00F95C  65                 	db	101	;'e'
  5596  00F95D  61                 	db	97	;'a'
  5597  00F95E  72                 	db	114	;'r'
  5598  00F95F  65                 	db	101	;'e'
  5599  00F960  64                 	db	100	;'d'
  5600  00F961  0A                 	db	10
  5601  00F962  0D                 	db	13
  5602  00F963  00                 	db	0
  5603  00F964  54                 	db	84	;'T'
  5604  00F965  68                 	db	104	;'h'
  5605  00F966  69                 	db	105	;'i'
  5606  00F967  73                 	db	115	;'s'
  5607  00F968  20                 	db	32
  5608  00F969  74                 	db	116	;'t'
  5609  00F96A  65                 	db	101	;'e'
  5610  00F96B  78                 	db	120	;'x'
  5611  00F96C  74                 	db	116	;'t'
  5612  00F96D  20                 	db	32
  5613  00F96E  69                 	db	105	;'i'
  5614  00F96F  73                 	db	115	;'s'
  5615  00F970  20                 	db	32
  5616  00F971  6D                 	db	109	;'m'
  5617  00F972  61                 	db	97	;'a'
  5618  00F973  67                 	db	103	;'g'
  5619  00F974  65                 	db	101	;'e'
  5620  00F975  6E                 	db	110	;'n'
  5621  00F976  74                 	db	116	;'t'
  5622  00F977  61                 	db	97	;'a'
  5623  00F978  0A                 	db	10
  5624  00F979  0D                 	db	13
  5625  00F97A  00                 	db	0
  5626  00F97B                     STR_264:
  5627  00F97B  20                 	db	32
  5628  00F97C  20                 	db	32
  5629  00F97D  20                 	db	32
  5630  00F97E  20                 	db	32
  5631  00F97F  53                 	db	83	;'S'
  5632  00F980  79                 	db	121	;'y'
  5633  00F981  73                 	db	115	;'s'
  5634  00F982  74                 	db	116	;'t'
  5635  00F983  65                 	db	101	;'e'
  5636  00F984  6D                 	db	109	;'m'
  5637  00F985  20                 	db	32
  5638  00F986  56                 	db	86	;'V'
  5639  00F987  6F                 	db	111	;'o'
  5640  00F988  6C                 	db	108	;'l'
  5641  00F989  74                 	db	116	;'t'
  5642  00F98A  61                 	db	97	;'a'
  5643  00F98B  67                 	db	103	;'g'
  5644  00F98C  65                 	db	101	;'e'
  5645  00F98D  73                 	db	115	;'s'
  5646  00F98E  3A                 	db	58	;':'
  5647  00F98F  0A                 	db	10
  5648  00F990  0D                 	db	13
  5649  00F991  00                 	db	0
  5650  00F992                     STR_268:
  5651  00F992  20                 	db	32
  5652  00F993  20                 	db	32
  5653  00F994  20                 	db	32
  5654  00F995  20                 	db	32
  5655  00F996  53                 	db	83	;'S'
  5656  00F997  79                 	db	121	;'y'
  5657  00F998  73                 	db	115	;'s'
  5658  00F999  74                 	db	116	;'t'
  5659  00F99A  65                 	db	101	;'e'
  5660  00F99B  6D                 	db	109	;'m'
  5661  00F99C  20                 	db	32
  5662  00F99D  43                 	db	67	;'C'
  5663  00F99E  75                 	db	117	;'u'
  5664  00F99F  72                 	db	114	;'r'
  5665  00F9A0  72                 	db	114	;'r'
  5666  00F9A1  65                 	db	101	;'e'
  5667  00F9A2  6E                 	db	110	;'n'
  5668  00F9A3  74                 	db	116	;'t'
  5669  00F9A4  73                 	db	115	;'s'
  5670  00F9A5  3A                 	db	58	;':'
  5671  00F9A6  0A                 	db	10
  5672  00F9A7  0D                 	db	13
  5673  00F9A8  00                 	db	0
  5674  00F9A9                     STR_216:
  5675  00F9A9  41                 	db	65	;'A'
  5676  00F9AA  44                 	db	68	;'D'
  5677  00F9AB  43                 	db	67	;'C'
  5678  00F9AC  20                 	db	32
  5679  00F9AD  45                 	db	69	;'E'
  5680  00F9AE  72                 	db	114	;'r'
  5681  00F9AF  72                 	db	114	;'r'
  5682  00F9B0  6F                 	db	111	;'o'
  5683  00F9B1  72                 	db	114	;'r'
  5684  00F9B2  28                 	db	40
  5685  00F9B3  73                 	db	115	;'s'
  5686  00F9B4  29                 	db	41
  5687  00F9B5  20                 	db	32
  5688  00F9B6  63                 	db	99	;'c'
  5689  00F9B7  6C                 	db	108	;'l'
  5690  00F9B8  65                 	db	101	;'e'
  5691  00F9B9  61                 	db	97	;'a'
  5692  00F9BA  72                 	db	114	;'r'
  5693  00F9BB  65                 	db	101	;'e'
  5694  00F9BC  64                 	db	100	;'d'
  5695  00F9BD  0A                 	db	10
  5696  00F9BE  0D                 	db	13
  5697  00F9BF  00                 	db	0
  5698  00F9C0                     STR_218:
  5699  00F9C0  49                 	db	73	;'I'
  5700  00F9C1  32                 	db	50	;'2'
  5701  00F9C2  43                 	db	67	;'C'
  5702  00F9C3  20                 	db	32
  5703  00F9C4  65                 	db	101	;'e'
  5704  00F9C5  72                 	db	114	;'r'
  5705  00F9C6  72                 	db	114	;'r'
  5706  00F9C7  6F                 	db	111	;'o'
  5707  00F9C8  72                 	db	114	;'r'
  5708  00F9C9  28                 	db	40
  5709  00F9CA  73                 	db	115	;'s'
  5710  00F9CB  29                 	db	41
  5711  00F9CC  20                 	db	32
  5712  00F9CD  63                 	db	99	;'c'
  5713  00F9CE  6C                 	db	108	;'l'
  5714  00F9CF  65                 	db	101	;'e'
  5715  00F9D0  61                 	db	97	;'a'
  5716  00F9D1  72                 	db	114	;'r'
  5717  00F9D2  65                 	db	101	;'e'
  5718  00F9D3  64                 	db	100	;'d'
  5719  00F9D4  0A                 	db	10
  5720  00F9D5  0D                 	db	13
  5721  00F9D6  00                 	db	0
  5722  00F9D7                     STR_11:
  5723  00F9D7  4C                 	db	76	;'L'
  5724  00F9D8  69                 	db	105	;'i'
  5725  00F9D9  76                 	db	118	;'v'
  5726  00F9DA  65                 	db	101	;'e'
  5727  00F9DB  20                 	db	32
  5728  00F9DC  4D                 	db	77	;'M'
  5729  00F9DD  65                 	db	101	;'e'
  5730  00F9DE  61                 	db	97	;'a'
  5731  00F9DF  73                 	db	115	;'s'
  5732  00F9E0  75                 	db	117	;'u'
  5733  00F9E1  72                 	db	114	;'r'
  5734  00F9E2  65                 	db	101	;'e'
  5735  00F9E3  6D                 	db	109	;'m'
  5736  00F9E4  65                 	db	101	;'e'
  5737  00F9E5  6E                 	db	110	;'n'
  5738  00F9E6  74                 	db	116	;'t'
  5739  00F9E7  73                 	db	115	;'s'
  5740  00F9E8  3A                 	db	58	;':'
  5741  00F9E9  0A                 	db	10
  5742  00F9EA  0D                 	db	13
  5743  00F9EB  0A                 	db	10
  5744  00F9EC  0D                 	db	13
  5745  00F9ED  00                 	db	0
  5746  00F9EE  54                 	db	84	;'T'
  5747  00F9EF  68                 	db	104	;'h'
  5748  00F9F0  69                 	db	105	;'i'
  5749  00F9F1  73                 	db	115	;'s'
  5750  00F9F2  20                 	db	32
  5751  00F9F3  74                 	db	116	;'t'
  5752  00F9F4  65                 	db	101	;'e'
  5753  00F9F5  78                 	db	120	;'x'
  5754  00F9F6  74                 	db	116	;'t'
  5755  00F9F7  20                 	db	32
  5756  00F9F8  69                 	db	105	;'i'
  5757  00F9F9  73                 	db	115	;'s'
  5758  00F9FA  20                 	db	32
  5759  00F9FB  79                 	db	121	;'y'
  5760  00F9FC  65                 	db	101	;'e'
  5761  00F9FD  6C                 	db	108	;'l'
  5762  00F9FE  6C                 	db	108	;'l'
  5763  00F9FF  6F                 	db	111	;'o'
  5764  00FA00  77                 	db	119	;'w'
  5765  00FA01  0A                 	db	10
  5766  00FA02  0D                 	db	13
  5767  00FA03  00                 	db	0
  5768  00FA04                     STR_230:
  5769  00FA04  41                 	db	65	;'A'
  5770  00FA05  76                 	db	118	;'v'
  5771  00FA06  61                 	db	97	;'a'
  5772  00FA07  69                 	db	105	;'i'
  5773  00FA08  6C                 	db	108	;'l'
  5774  00FA09  61                 	db	97	;'a'
  5775  00FA0A  62                 	db	98	;'b'
  5776  00FA0B  6C                 	db	108	;'l'
  5777  00FA0C  65                 	db	101	;'e'
  5778  00FA0D  20                 	db	32
  5779  00FA0E  43                 	db	67	;'C'
  5780  00FA0F  6F                 	db	111	;'o'
  5781  00FA10  6D                 	db	109	;'m'
  5782  00FA11  6D                 	db	109	;'m'
  5783  00FA12  61                 	db	97	;'a'
  5784  00FA13  6E                 	db	110	;'n'
  5785  00FA14  64                 	db	100	;'d'
  5786  00FA15  73                 	db	115	;'s'
  5787  00FA16  3A                 	db	58	;':'
  5788  00FA17  0A                 	db	10
  5789  00FA18  0D                 	db	13
  5790  00FA19  00                 	db	0
  5791  00FA1A                     STR_222:
  5792  00FA1A  43                 	db	67	;'C'
  5793  00FA1B  75                 	db	117	;'u'
  5794  00FA1C  72                 	db	114	;'r'
  5795  00FA1D  72                 	db	114	;'r'
  5796  00FA1E  65                 	db	101	;'e'
  5797  00FA1F  6E                 	db	110	;'n'
  5798  00FA20  74                 	db	116	;'t'
  5799  00FA21  20                 	db	32
  5800  00FA22  4D                 	db	77	;'M'
  5801  00FA23  65                 	db	101	;'e'
  5802  00FA24  61                 	db	97	;'a'
  5803  00FA25  73                 	db	115	;'s'
  5804  00FA26  75                 	db	117	;'u'
  5805  00FA27  72                 	db	114	;'r'
  5806  00FA28  65                 	db	101	;'e'
  5807  00FA29  6D                 	db	109	;'m'
  5808  00FA2A  65                 	db	101	;'e'
  5809  00FA2B  6E                 	db	110	;'n'
  5810  00FA2C  74                 	db	116	;'t'
  5811  00FA2D  73                 	db	115	;'s'
  5812  00FA2E  3F                 	db	63	;'?'
  5813  00FA2F  00                 	db	0
  5814  00FA30                     STR_31:
  5815  00FA30  53                 	db	83	;'S'
  5816  00FA31  74                 	db	116	;'t'
  5817  00FA32  61                 	db	97	;'a'
  5818  00FA33  63                 	db	99	;'c'
  5819  00FA34  6B                 	db	107	;'k'
  5820  00FA35  20                 	db	32
  5821  00FA36  55                 	db	85	;'U'
  5822  00FA37  6E                 	db	110	;'n'
  5823  00FA38  64                 	db	100	;'d'
  5824  00FA39  65                 	db	101	;'e'
  5825  00FA3A  72                 	db	114	;'r'
  5826  00FA3B  66                 	db	102	;'f'
  5827  00FA3C  6C                 	db	108	;'l'
  5828  00FA3D  6F                 	db	111	;'o'
  5829  00FA3E  77                 	db	119	;'w'
  5830  00FA3F  20                 	db	32
  5831  00FA40  52                 	db	82	;'R'
  5832  00FA41  65                 	db	101	;'e'
  5833  00FA42  73                 	db	115	;'s'
  5834  00FA43  65                 	db	101	;'e'
  5835  00FA44  74                 	db	116	;'t'
  5836  00FA45  00                 	db	0
  5837  00FA46  54                 	db	84	;'T'
  5838  00FA47  68                 	db	104	;'h'
  5839  00FA48  69                 	db	105	;'i'
  5840  00FA49  73                 	db	115	;'s'
  5841  00FA4A  20                 	db	32
  5842  00FA4B  74                 	db	116	;'t'
  5843  00FA4C  65                 	db	101	;'e'
  5844  00FA4D  78                 	db	120	;'x'
  5845  00FA4E  74                 	db	116	;'t'
  5846  00FA4F  20                 	db	32
  5847  00FA50  69                 	db	105	;'i'
  5848  00FA51  73                 	db	115	;'s'
  5849  00FA52  20                 	db	32
  5850  00FA53  62                 	db	98	;'b'
  5851  00FA54  6C                 	db	108	;'l'
  5852  00FA55  61                 	db	97	;'a'
  5853  00FA56  63                 	db	99	;'c'
  5854  00FA57  6B                 	db	107	;'k'
  5855  00FA58  0A                 	db	10
  5856  00FA59  0D                 	db	13
  5857  00FA5A  00                 	db	0
  5858  00FA5B  54                 	db	84	;'T'
  5859  00FA5C  68                 	db	104	;'h'
  5860  00FA5D  69                 	db	105	;'i'
  5861  00FA5E  73                 	db	115	;'s'
  5862  00FA5F  20                 	db	32
  5863  00FA60  74                 	db	116	;'t'
  5864  00FA61  65                 	db	101	;'e'
  5865  00FA62  78                 	db	120	;'x'
  5866  00FA63  74                 	db	116	;'t'
  5867  00FA64  20                 	db	32
  5868  00FA65  69                 	db	105	;'i'
  5869  00FA66  73                 	db	115	;'s'
  5870  00FA67  20                 	db	32
  5871  00FA68  67                 	db	103	;'g'
  5872  00FA69  72                 	db	114	;'r'
  5873  00FA6A  65                 	db	101	;'e'
  5874  00FA6B  65                 	db	101	;'e'
  5875  00FA6C  6E                 	db	110	;'n'
  5876  00FA6D  0A                 	db	10
  5877  00FA6E  0D                 	db	13
  5878  00FA6F  00                 	db	0
  5879  00FA70                     STR_30:
  5880  00FA70  53                 	db	83	;'S'
  5881  00FA71  74                 	db	116	;'t'
  5882  00FA72  61                 	db	97	;'a'
  5883  00FA73  63                 	db	99	;'c'
  5884  00FA74  6B                 	db	107	;'k'
  5885  00FA75  20                 	db	32
  5886  00FA76  4F                 	db	79	;'O'
  5887  00FA77  76                 	db	118	;'v'
  5888  00FA78  65                 	db	101	;'e'
  5889  00FA79  72                 	db	114	;'r'
  5890  00FA7A  66                 	db	102	;'f'
  5891  00FA7B  6C                 	db	108	;'l'
  5892  00FA7C  6F                 	db	111	;'o'
  5893  00FA7D  77                 	db	119	;'w'
  5894  00FA7E  20                 	db	32
  5895  00FA7F  52                 	db	82	;'R'
  5896  00FA80  65                 	db	101	;'e'
  5897  00FA81  73                 	db	115	;'s'
  5898  00FA82  65                 	db	101	;'e'
  5899  00FA83  74                 	db	116	;'t'
  5900  00FA84  00                 	db	0
  5901  00FA85  54                 	db	84	;'T'
  5902  00FA86  68                 	db	104	;'h'
  5903  00FA87  69                 	db	105	;'i'
  5904  00FA88  73                 	db	115	;'s'
  5905  00FA89  20                 	db	32
  5906  00FA8A  74                 	db	116	;'t'
  5907  00FA8B  65                 	db	101	;'e'
  5908  00FA8C  78                 	db	120	;'x'
  5909  00FA8D  74                 	db	116	;'t'
  5910  00FA8E  20                 	db	32
  5911  00FA8F  69                 	db	105	;'i'
  5912  00FA90  73                 	db	115	;'s'
  5913  00FA91  20                 	db	32
  5914  00FA92  62                 	db	98	;'b'
  5915  00FA93  6F                 	db	111	;'o'
  5916  00FA94  6C                 	db	108	;'l'
  5917  00FA95  64                 	db	100	;'d'
  5918  00FA96  0A                 	db	10
  5919  00FA97  0D                 	db	13
  5920  00FA98  00                 	db	0
  5921  00FA99  54                 	db	84	;'T'
  5922  00FA9A  68                 	db	104	;'h'
  5923  00FA9B  69                 	db	105	;'i'
  5924  00FA9C  73                 	db	115	;'s'
  5925  00FA9D  20                 	db	32
  5926  00FA9E  74                 	db	116	;'t'
  5927  00FA9F  65                 	db	101	;'e'
  5928  00FAA0  78                 	db	120	;'x'
  5929  00FAA1  74                 	db	116	;'t'
  5930  00FAA2  20                 	db	32
  5931  00FAA3  69                 	db	105	;'i'
  5932  00FAA4  73                 	db	115	;'s'
  5933  00FAA5  20                 	db	32
  5934  00FAA6  62                 	db	98	;'b'
  5935  00FAA7  6C                 	db	108	;'l'
  5936  00FAA8  75                 	db	117	;'u'
  5937  00FAA9  65                 	db	101	;'e'
  5938  00FAAA  0A                 	db	10
  5939  00FAAB  0D                 	db	13
  5940  00FAAC  00                 	db	0
  5941  00FAAD  54                 	db	84	;'T'
  5942  00FAAE  68                 	db	104	;'h'
  5943  00FAAF  69                 	db	105	;'i'
  5944  00FAB0  73                 	db	115	;'s'
  5945  00FAB1  20                 	db	32
  5946  00FAB2  74                 	db	116	;'t'
  5947  00FAB3  65                 	db	101	;'e'
  5948  00FAB4  78                 	db	120	;'x'
  5949  00FAB5  74                 	db	116	;'t'
  5950  00FAB6  20                 	db	32
  5951  00FAB7  69                 	db	105	;'i'
  5952  00FAB8  73                 	db	115	;'s'
  5953  00FAB9  20                 	db	32
  5954  00FABA  63                 	db	99	;'c'
  5955  00FABB  79                 	db	121	;'y'
  5956  00FABC  61                 	db	97	;'a'
  5957  00FABD  6E                 	db	110	;'n'
  5958  00FABE  0A                 	db	10
  5959  00FABF  0D                 	db	13
  5960  00FAC0  00                 	db	0
  5961  00FAC1                     STR_272:
  5962  00FAC1  20                 	db	32
  5963  00FAC2  20                 	db	32
  5964  00FAC3  20                 	db	32
  5965  00FAC4  20                 	db	32
  5966  00FAC5  53                 	db	83	;'S'
  5967  00FAC6  79                 	db	121	;'y'
  5968  00FAC7  73                 	db	115	;'s'
  5969  00FAC8  74                 	db	116	;'t'
  5970  00FAC9  65                 	db	101	;'e'
  5971  00FACA  6D                 	db	109	;'m'
  5972  00FACB  20                 	db	32
  5973  00FACC  50                 	db	80	;'P'
  5974  00FACD  6F                 	db	111	;'o'
  5975  00FACE  77                 	db	119	;'w'
  5976  00FACF  65                 	db	101	;'e'
  5977  00FAD0  72                 	db	114	;'r'
  5978  00FAD1  3A                 	db	58	;':'
  5979  00FAD2  0A                 	db	10
  5980  00FAD3  0D                 	db	13
  5981  00FAD4  00                 	db	0
  5982  00FAD5  54                 	db	84	;'T'
  5983  00FAD6  68                 	db	104	;'h'
  5984  00FAD7  69                 	db	105	;'i'
  5985  00FAD8  73                 	db	115	;'s'
  5986  00FAD9  20                 	db	32
  5987  00FADA  74                 	db	116	;'t'
  5988  00FADB  65                 	db	101	;'e'
  5989  00FADC  78                 	db	120	;'x'
  5990  00FADD  74                 	db	116	;'t'
  5991  00FADE  20                 	db	32
  5992  00FADF  69                 	db	105	;'i'
  5993  00FAE0  73                 	db	115	;'s'
  5994  00FAE1  20                 	db	32
  5995  00FAE2  72                 	db	114	;'r'
  5996  00FAE3  65                 	db	101	;'e'
  5997  00FAE4  64                 	db	100	;'d'
  5998  00FAE5  0A                 	db	10
  5999  00FAE6  0D                 	db	13
  6000  00FAE7  00                 	db	0
  6001  00FAE8                     STR_26:
  6002  00FAE8  4D                 	db	77	;'M'
  6003  00FAE9  61                 	db	97	;'a'
  6004  00FAEA  73                 	db	115	;'s'
  6005  00FAEB  74                 	db	116	;'t'
  6006  00FAEC  65                 	db	101	;'e'
  6007  00FAED  72                 	db	114	;'r'
  6008  00FAEE  20                 	db	32
  6009  00FAEF  43                 	db	67	;'C'
  6010  00FAF0  6C                 	db	108	;'l'
  6011  00FAF1  65                 	db	101	;'e'
  6012  00FAF2  61                 	db	97	;'a'
  6013  00FAF3  72                 	db	114	;'r'
  6014  00FAF4  20                 	db	32
  6015  00FAF5  52                 	db	82	;'R'
  6016  00FAF6  65                 	db	101	;'e'
  6017  00FAF7  73                 	db	115	;'s'
  6018  00FAF8  65                 	db	101	;'e'
  6019  00FAF9  74                 	db	116	;'t'
  6020  00FAFA  00                 	db	0
  6021  00FAFB  55                 	db	85	;'U'
  6022  00FAFC  53                 	db	83	;'S'
  6023  00FAFD  42                 	db	66	;'B'
  6024  00FAFE  20                 	db	32
  6025  00FAFF  55                 	db	85	;'U'
  6026  00FB00  41                 	db	65	;'A'
  6027  00FB01  52                 	db	82	;'R'
  6028  00FB02  54                 	db	84	;'T'
  6029  00FB03  20                 	db	32
  6030  00FB04  54                 	db	84	;'T'
  6031  00FB05  65                 	db	101	;'e'
  6032  00FB06  73                 	db	115	;'s'
  6033  00FB07  74                 	db	116	;'t'
  6034  00FB08  0A                 	db	10
  6035  00FB09  0D                 	db	13
  6036  00FB0A  0A                 	db	10
  6037  00FB0B  0D                 	db	13
  6038  00FB0C  00                 	db	0
  6039  00FB0D                     STR_219:
  6040  00FB0D  43                 	db	67	;'C'
  6041  00FB0E  6C                 	db	108	;'l'
  6042  00FB0F  65                 	db	101	;'e'
  6043  00FB10  61                 	db	97	;'a'
  6044  00FB11  72                 	db	114	;'r'
  6045  00FB12  20                 	db	32
  6046  00FB13  55                 	db	85	;'U'
  6047  00FB14  41                 	db	65	;'A'
  6048  00FB15  52                 	db	82	;'R'
  6049  00FB16  54                 	db	84	;'T'
  6050  00FB17  20                 	db	32
  6051  00FB18  45                 	db	69	;'E'
  6052  00FB19  72                 	db	114	;'r'
  6053  00FB1A  72                 	db	114	;'r'
  6054  00FB1B  6F                 	db	111	;'o'
  6055  00FB1C  72                 	db	114	;'r'
  6056  00FB1D  73                 	db	115	;'s'
  6057  00FB1E  00                 	db	0
  6058  00FB1F                     STR_364:
  6059  00FB1F  30                 	db	48	;'0'
  6060  00FB20  31                 	db	49	;'1'
  6061  00FB21  32                 	db	50	;'2'
  6062  00FB22  33                 	db	51	;'3'
  6063  00FB23  34                 	db	52	;'4'
  6064  00FB24  35                 	db	53	;'5'
  6065  00FB25  36                 	db	54	;'6'
  6066  00FB26  37                 	db	55	;'7'
  6067  00FB27  38                 	db	56	;'8'
  6068  00FB28  39                 	db	57	;'9'
  6069  00FB29  41                 	db	65	;'A'
  6070  00FB2A  42                 	db	66	;'B'
  6071  00FB2B  43                 	db	67	;'C'
  6072  00FB2C  44                 	db	68	;'D'
  6073  00FB2D  45                 	db	69	;'E'
  6074  00FB2E  46                 	db	70	;'F'
  6075  00FB2F  00                 	db	0
  6076  00FB30                     STR_217:
  6077  00FB30  43                 	db	67	;'C'
  6078  00FB31  6C                 	db	108	;'l'
  6079  00FB32  65                 	db	101	;'e'
  6080  00FB33  61                 	db	97	;'a'
  6081  00FB34  72                 	db	114	;'r'
  6082  00FB35  20                 	db	32
  6083  00FB36  49                 	db	73	;'I'
  6084  00FB37  32                 	db	50	;'2'
  6085  00FB38  43                 	db	67	;'C'
  6086  00FB39  20                 	db	32
  6087  00FB3A  45                 	db	69	;'E'
  6088  00FB3B  72                 	db	114	;'r'
  6089  00FB3C  72                 	db	114	;'r'
  6090  00FB3D  6F                 	db	111	;'o'
  6091  00FB3E  72                 	db	114	;'r'
  6092  00FB3F  73                 	db	115	;'s'
  6093  00FB40  00                 	db	0
  6094  00FB41                     STR_215:
  6095  00FB41  43                 	db	67	;'C'
  6096  00FB42  6C                 	db	108	;'l'
  6097  00FB43  65                 	db	101	;'e'
  6098  00FB44  61                 	db	97	;'a'
  6099  00FB45  72                 	db	114	;'r'
  6100  00FB46  20                 	db	32
  6101  00FB47  41                 	db	65	;'A'
  6102  00FB48  44                 	db	68	;'D'
  6103  00FB49  43                 	db	67	;'C'
  6104  00FB4A  20                 	db	32
  6105  00FB4B  45                 	db	69	;'E'
  6106  00FB4C  72                 	db	114	;'r'
  6107  00FB4D  72                 	db	114	;'r'
  6108  00FB4E  6F                 	db	111	;'o'
  6109  00FB4F  72                 	db	114	;'r'
  6110  00FB50  73                 	db	115	;'s'
  6111  00FB51  00                 	db	0
  6112  00FB52                     STR_76:
  6113  00FB52  76                 	db	118	;'v'
  6114  00FB53  69                 	db	105	;'i'
  6115  00FB54  61                 	db	97	;'a'
  6116  00FB55  20                 	db	32
  6117  00FB56  55                 	db	85	;'U'
  6118  00FB57  53                 	db	83	;'S'
  6119  00FB58  42                 	db	66	;'B'
  6120  00FB59  2C                 	db	44
  6121  00FB5A  20                 	db	32
  6122  00FB5B  27                 	db	39
  6123  00FB5C  48                 	db	72	;'H'
  6124  00FB5D  65                 	db	101	;'e'
  6125  00FB5E  6C                 	db	108	;'l'
  6126  00FB5F  70                 	db	112	;'p'
  6127  00FB60  27                 	db	39
  6128  00FB61  00                 	db	0
  6129  00FB62                     STR_69:
  6130  00FB62  43                 	db	67	;'C'
  6131  00FB63  4F                 	db	79	;'O'
  6132  00FB64  4D                 	db	77	;'M'
  6133  00FB65  20                 	db	32
  6134  00FB66  50                 	db	80	;'P'
  6135  00FB67  6F                 	db	111	;'o'
  6136  00FB68  72                 	db	114	;'r'
  6137  00FB69  74                 	db	116	;'t'
  6138  00FB6A  20                 	db	32
  6139  00FB6B  53                 	db	83	;'S'
  6140  00FB6C  65                 	db	101	;'e'
  6141  00FB6D  74                 	db	116	;'t'
  6142  00FB6E  75                 	db	117	;'u'
  6143  00FB6F  70                 	db	112	;'p'
  6144  00FB70  3A                 	db	58	;':'
  6145  00FB71  00                 	db	0
  6146  00FB72                     STR_64:
  6147  00FB72  43                 	db	67	;'C'
  6148  00FB73  61                 	db	97	;'a'
  6149  00FB74  75                 	db	117	;'u'
  6150  00FB75  73                 	db	115	;'s'
  6151  00FB76  65                 	db	101	;'e'
  6152  00FB77  20                 	db	32
  6153  00FB78  6F                 	db	111	;'o'
  6154  00FB79  66                 	db	102	;'f'
  6155  00FB7A  20                 	db	32
  6156  00FB7B  52                 	db	82	;'R'
  6157  00FB7C  65                 	db	101	;'e'
  6158  00FB7D  73                 	db	115	;'s'
  6159  00FB7E  65                 	db	101	;'e'
  6160  00FB7F  74                 	db	116	;'t'
  6161  00FB80  3A                 	db	58	;':'
  6162  00FB81  00                 	db	0
  6163  00FB82                     STR_63:
  6164  00FB82  44                 	db	68	;'D'
  6165  00FB83  69                 	db	105	;'i'
  6166  00FB84  67                 	db	103	;'g'
  6167  00FB85  69                 	db	105	;'i'
  6168  00FB86  74                 	db	116	;'t'
  6169  00FB87  61                 	db	97	;'a'
  6170  00FB88  6C                 	db	108	;'l'
  6171  00FB89  20                 	db	32
  6172  00FB8A  4D                 	db	77	;'M'
  6173  00FB8B  6F                 	db	111	;'o'
  6174  00FB8C  6E                 	db	110	;'n'
  6175  00FB8D  69                 	db	105	;'i'
  6176  00FB8E  74                 	db	116	;'t'
  6177  00FB8F  6F                 	db	111	;'o'
  6178  00FB90  72                 	db	114	;'r'
  6179  00FB91  00                 	db	0
  6180  00FB92                     STR_71:
  6181  00FB92  38                 	db	56	;'8'
  6182  00FB93  62                 	db	98	;'b'
  6183  00FB94  69                 	db	105	;'i'
  6184  00FB95  74                 	db	116	;'t'
  6185  00FB96  2C                 	db	44
  6186  00FB97  20                 	db	32
  6187  00FB98  6E                 	db	110	;'n'
  6188  00FB99  6F                 	db	111	;'o'
  6189  00FB9A  20                 	db	32
  6190  00FB9B  70                 	db	112	;'p'
  6191  00FB9C  61                 	db	97	;'a'
  6192  00FB9D  72                 	db	114	;'r'
  6193  00FB9E  69                 	db	105	;'i'
  6194  00FB9F  74                 	db	116	;'t'
  6195  00FBA0  79                 	db	121	;'y'
  6196  00FBA1  00                 	db	0
  6197  00FBA2                     STR_23:
  6198  00FBA2  55                 	db	85	;'U'
  6199  00FBA3  6E                 	db	110	;'n'
  6200  00FBA4  64                 	db	100	;'d'
  6201  00FBA5  65                 	db	101	;'e'
  6202  00FBA6  66                 	db	102	;'f'
  6203  00FBA7  69                 	db	105	;'i'
  6204  00FBA8  6E                 	db	110	;'n'
  6205  00FBA9  65                 	db	101	;'e'
  6206  00FBAA  64                 	db	100	;'d'
  6207  00FBAB  20                 	db	32
  6208  00FBAC  52                 	db	82	;'R'
  6209  00FBAD  65                 	db	101	;'e'
  6210  00FBAE  73                 	db	115	;'s'
  6211  00FBAF  65                 	db	101	;'e'
  6212  00FBB0  74                 	db	116	;'t'
  6213  00FBB1  00                 	db	0
  6214  00FBB2                     STR_25:
  6215  00FBB2  42                 	db	66	;'B'
  6216  00FBB3  72                 	db	114	;'r'
  6217  00FBB4  6F                 	db	111	;'o'
  6218  00FBB5  77                 	db	119	;'w'
  6219  00FBB6  6E                 	db	110	;'n'
  6220  00FBB7  20                 	db	32
  6221  00FBB8  4F                 	db	79	;'O'
  6222  00FBB9  75                 	db	117	;'u'
  6223  00FBBA  74                 	db	116	;'t'
  6224  00FBBB  20                 	db	32
  6225  00FBBC  52                 	db	82	;'R'
  6226  00FBBD  65                 	db	101	;'e'
  6227  00FBBE  73                 	db	115	;'s'
  6228  00FBBF  65                 	db	101	;'e'
  6229  00FBC0  74                 	db	116	;'t'
  6230  00FBC1  00                 	db	0
  6231  00FBC2                     STR_199:
  6232  00FBC2  44                 	db	68	;'D'
  6233  00FBC3  65                 	db	101	;'e'
  6234  00FBC4  76                 	db	118	;'v'
  6235  00FBC5  69                 	db	105	;'i'
  6236  00FBC6  63                 	db	99	;'c'
  6237  00FBC7  65                 	db	101	;'e'
  6238  00FBC8  20                 	db	32
  6239  00FBC9  53                 	db	83	;'S'
  6240  00FBCA  74                 	db	116	;'t'
  6241  00FBCB  61                 	db	97	;'a'
  6242  00FBCC  74                 	db	116	;'t'
  6243  00FBCD  75                 	db	117	;'u'
  6244  00FBCE  73                 	db	115	;'s'
  6245  00FBCF  3F                 	db	63	;'?'
  6246  00FBD0  00                 	db	0
  6247  00FBD1                     STR_166:
  6248  00FBD1  4F                 	db	79	;'O'
  6249  00FBD2  75                 	db	117	;'u'
  6250  00FBD3  74                 	db	116	;'t'
  6251  00FBD4  70                 	db	112	;'p'
  6252  00FBD5  75                 	db	117	;'u'
  6253  00FBD6  74                 	db	116	;'t'
  6254  00FBD7  20                 	db	32
  6255  00FBD8  43                 	db	67	;'C'
  6256  00FBD9  68                 	db	104	;'h'
  6257  00FBDA  61                 	db	97	;'a'
  6258  00FBDB  72                 	db	114	;'r'
  6259  00FBDC  67                 	db	103	;'g'
  6260  00FBDD  65                 	db	101	;'e'
  6261  00FBDE  3A                 	db	58	;':'
  6262  00FBDF  00                 	db	0
  6263  00FBE0                     STR_77:
  6264  00FBE0  43                 	db	67	;'C'
  6265  00FBE1  68                 	db	104	;'h'
  6266  00FBE2  61                 	db	97	;'a'
  6267  00FBE3  72                 	db	114	;'r'
  6268  00FBE4  67                 	db	103	;'g'
  6269  00FBE5  65                 	db	101	;'e'
  6270  00FBE6  20                 	db	32
  6271  00FBE7  53                 	db	83	;'S'
  6272  00FBE8  74                 	db	116	;'t'
  6273  00FBE9  61                 	db	97	;'a'
  6274  00FBEA  74                 	db	116	;'t'
  6275  00FBEB  75                 	db	117	;'u'
  6276  00FBEC  73                 	db	115	;'s'
  6277  00FBED  3A                 	db	58	;':'
  6278  00FBEE  00                 	db	0
  6279  00FBEF                     STR_171:
  6280  00FBEF  4F                 	db	79	;'O'
  6281  00FBF0  75                 	db	117	;'u'
  6282  00FBF1  74                 	db	116	;'t'
  6283  00FBF2  70                 	db	112	;'p'
  6284  00FBF3  75                 	db	117	;'u'
  6285  00FBF4  74                 	db	116	;'t'
  6286  00FBF5  20                 	db	32
  6287  00FBF6  45                 	db	69	;'E'
  6288  00FBF7  6E                 	db	110	;'n'
  6289  00FBF8  65                 	db	101	;'e'
  6290  00FBF9  72                 	db	114	;'r'
  6291  00FBFA  67                 	db	103	;'g'
  6292  00FBFB  79                 	db	121	;'y'
  6293  00FBFC  3A                 	db	58	;':'
  6294  00FBFD  00                 	db	0
  6295  00FBFE                     STR_72:
  6296  00FBFE  31                 	db	49	;'1'
  6297  00FBFF  20                 	db	32
  6298  00FC00  73                 	db	115	;'s'
  6299  00FC01  74                 	db	116	;'t'
  6300  00FC02  70                 	db	112	;'p'
  6301  00FC03  2C                 	db	44
  6302  00FC04  20                 	db	32
  6303  00FC05  6E                 	db	110	;'n'
  6304  00FC06  6F                 	db	111	;'o'
  6305  00FC07  20                 	db	32
  6306  00FC08  66                 	db	102	;'f'
  6307  00FC09  6C                 	db	108	;'l'
  6308  00FC0A  6F                 	db	111	;'o'
  6309  00FC0B  77                 	db	119	;'w'
  6310  00FC0C  00                 	db	0
  6311  00FC0D                     STR_39:
  6312  00FC0D  52                 	db	82	;'R'
  6313  00FC0E  45                 	db	69	;'E'
  6314  00FC0F  53                 	db	83	;'S'
  6315  00FC10  45                 	db	69	;'E'
  6316  00FC11  54                 	db	84	;'T'
  6317  00FC12  20                 	db	32
  6318  00FC13  45                 	db	69	;'E'
  6319  00FC14  78                 	db	120	;'x'
  6320  00FC15  65                 	db	101	;'e'
  6321  00FC16  63                 	db	99	;'c'
  6322  00FC17  75                 	db	117	;'u'
  6323  00FC18  74                 	db	116	;'t'
  6324  00FC19  65                 	db	101	;'e'
  6325  00FC1A  64                 	db	100	;'d'
  6326  00FC1B  00                 	db	0
  6327  00FC1C                     STR_24:
  6328  00FC1C  50                 	db	80	;'P'
  6329  00FC1D  6F                 	db	111	;'o'
  6330  00FC1E  77                 	db	119	;'w'
  6331  00FC1F  65                 	db	101	;'e'
  6332  00FC20  72                 	db	114	;'r'
  6333  00FC21  20                 	db	32
  6334  00FC22  4F                 	db	79	;'O'
  6335  00FC23  6E                 	db	110	;'n'
  6336  00FC24  20                 	db	32
  6337  00FC25  52                 	db	82	;'R'
  6338  00FC26  65                 	db	101	;'e'
  6339  00FC27  73                 	db	115	;'s'
  6340  00FC28  65                 	db	101	;'e'
  6341  00FC29  74                 	db	116	;'t'
  6342  00FC2A  00                 	db	0
  6343  00FC2B                     STR_245:
  6344  00FC2B  20                 	db	32
  6345  00FC2C  20                 	db	32
  6346  00FC2D  20                 	db	32
  6347  00FC2E  20                 	db	32
  6348  00FC2F  20                 	db	32
  6349  00FC30  20                 	db	32
  6350  00FC31  20                 	db	32
  6351  00FC32  20                 	db	32
  6352  00FC33  46                 	db	70	;'F'
  6353  00FC34  56                 	db	86	;'V'
  6354  00FC35  52                 	db	82	;'R'
  6355  00FC36  0A                 	db	10
  6356  00FC37  0D                 	db	13
  6357  00FC38  00                 	db	0
  6358  00FC39                     STR_221:
  6359  00FC39  45                 	db	69	;'E'
  6360  00FC3A  72                 	db	114	;'r'
  6361  00FC3B  72                 	db	114	;'r'
  6362  00FC3C  6F                 	db	111	;'o'
  6363  00FC3D  72                 	db	114	;'r'
  6364  00FC3E  20                 	db	32
  6365  00FC3F  53                 	db	83	;'S'
  6366  00FC40  74                 	db	116	;'t'
  6367  00FC41  61                 	db	97	;'a'
  6368  00FC42  74                 	db	116	;'t'
  6369  00FC43  75                 	db	117	;'u'
  6370  00FC44  73                 	db	115	;'s'
  6371  00FC45  3F                 	db	63	;'?'
  6372  00FC46  00                 	db	0
  6373  00FC47                     STR_62:
  6374  00FC47  51                 	db	81	;'Q'
  6375  00FC48  49                 	db	73	;'I'
  6376  00FC49  20                 	db	32
  6377  00FC4A  43                 	db	67	;'C'
  6378  00FC4B  68                 	db	104	;'h'
  6379  00FC4C  61                 	db	97	;'a'
  6380  00FC4D  72                 	db	114	;'r'
  6381  00FC4E  67                 	db	103	;'g'
  6382  00FC4F  65                 	db	101	;'e'
  6383  00FC50  72                 	db	114	;'r'
  6384  00FC51  20                 	db	32
  6385  00FC52  77                 	db	119	;'w'
  6386  00FC53  2F                 	db	47
  6387  00FC54  00                 	db	0
  6388  00FC55                     STR_80:
  6389  00FC55  2B                 	db	43
  6390  00FC56  31                 	db	49	;'1'
  6391  00FC57  32                 	db	50	;'2'
  6392  00FC58  56                 	db	86	;'V'
  6393  00FC59  20                 	db	32
  6394  00FC5A  56                 	db	86	;'V'
  6395  00FC5B  6F                 	db	111	;'o'
  6396  00FC5C  6C                 	db	108	;'l'
  6397  00FC5D  74                 	db	116	;'t'
  6398  00FC5E  61                 	db	97	;'a'
  6399  00FC5F  67                 	db	103	;'g'
  6400  00FC60  65                 	db	101	;'e'
  6401  00FC61  3A                 	db	58	;':'
  6402  00FC62  00                 	db	0
  6403  00FC63                     STR_137:
  6404  00FC63  44                 	db	68	;'D'
  6405  00FC64  65                 	db	101	;'e'
  6406  00FC65  76                 	db	118	;'v'
  6407  00FC66  2E                 	db	46
  6408  00FC67  20                 	db	32
  6409  00FC68  4F                 	db	79	;'O'
  6410  00FC69  6E                 	db	110	;'n'
  6411  00FC6A  20                 	db	32
  6412  00FC6B  54                 	db	84	;'T'
  6413  00FC6C  69                 	db	105	;'i'
  6414  00FC6D  6D                 	db	109	;'m'
  6415  00FC6E  65                 	db	101	;'e'
  6416  00FC6F  3A                 	db	58	;':'
  6417  00FC70  00                 	db	0
  6418  00FC71                     STR_119:
  6419  00FC71  41                 	db	65	;'A'
  6420  00FC72  6D                 	db	109	;'m'
  6421  00FC73  62                 	db	98	;'b'
  6422  00FC74  69                 	db	105	;'i'
  6423  00FC75  65                 	db	101	;'e'
  6424  00FC76  6E                 	db	110	;'n'
  6425  00FC77  74                 	db	116	;'t'
  6426  00FC78  20                 	db	32
  6427  00FC79  54                 	db	84	;'T'
  6428  00FC7A  65                 	db	101	;'e'
  6429  00FC7B  6D                 	db	109	;'m'
  6430  00FC7C  70                 	db	112	;'p'
  6431  00FC7D  3A                 	db	58	;':'
  6432  00FC7E  00                 	db	0
  6433  00FC7F                     STR_127:
  6434  00FC7F  2B                 	db	43
  6435  00FC80  35                 	db	53	;'5'
  6436  00FC81  56                 	db	86	;'V'
  6437  00FC82  20                 	db	32
  6438  00FC83  53                 	db	83	;'S'
  6439  00FC84  77                 	db	119	;'w'
  6440  00FC85  2E                 	db	46
  6441  00FC86  20                 	db	32
  6442  00FC87  46                 	db	70	;'F'
  6443  00FC88  72                 	db	114	;'r'
  6444  00FC89  65                 	db	101	;'e'
  6445  00FC8A  71                 	db	113	;'q'
  6446  00FC8B  3A                 	db	58	;':'
  6447  00FC8C  00                 	db	0
  6448  00FC8D                     STR_101:
  6449  00FC8D  4F                 	db	79	;'O'
  6450  00FC8E  75                 	db	117	;'u'
  6451  00FC8F  74                 	db	116	;'t'
  6452  00FC90  70                 	db	112	;'p'
  6453  00FC91  75                 	db	117	;'u'
  6454  00FC92  74                 	db	116	;'t'
  6455  00FC93  20                 	db	32
  6456  00FC94  50                 	db	80	;'P'
  6457  00FC95  6F                 	db	111	;'o'
  6458  00FC96  77                 	db	119	;'w'
  6459  00FC97  65                 	db	101	;'e'
  6460  00FC98  72                 	db	114	;'r'
  6461  00FC99  3A                 	db	58	;':'
  6462  00FC9A  00                 	db	0
  6463  00FC9B                     STR_88:
  6464  00FC9B  2B                 	db	43
  6465  00FC9C  31                 	db	49	;'1'
  6466  00FC9D  32                 	db	50	;'2'
  6467  00FC9E  56                 	db	86	;'V'
  6468  00FC9F  20                 	db	32
  6469  00FCA0  43                 	db	67	;'C'
  6470  00FCA1  75                 	db	117	;'u'
  6471  00FCA2  72                 	db	114	;'r'
  6472  00FCA3  72                 	db	114	;'r'
  6473  00FCA4  65                 	db	101	;'e'
  6474  00FCA5  6E                 	db	110	;'n'
  6475  00FCA6  74                 	db	116	;'t'
  6476  00FCA7  3A                 	db	58	;':'
  6477  00FCA8  00                 	db	0
  6478  00FCA9                     STR_73:
  6479  00FCA9  42                 	db	66	;'B'
  6480  00FCAA  6F                 	db	111	;'o'
  6481  00FCAB  6F                 	db	111	;'o'
  6482  00FCAC  74                 	db	116	;'t'
  6483  00FCAD  20                 	db	32
  6484  00FCAE  43                 	db	67	;'C'
  6485  00FCAF  6F                 	db	111	;'o'
  6486  00FCB0  6D                 	db	109	;'m'
  6487  00FCB1  70                 	db	112	;'p'
  6488  00FCB2  6C                 	db	108	;'l'
  6489  00FCB3  65                 	db	101	;'e'
  6490  00FCB4  74                 	db	116	;'t'
  6491  00FCB5  65                 	db	101	;'e'
  6492  00FCB6  00                 	db	0
  6493  00FCB7                     STR_75:
  6494  00FCB7  4D                 	db	77	;'M'
  6495  00FCB8  6F                 	db	111	;'o'
  6496  00FCB9  72                 	db	114	;'r'
  6497  00FCBA  65                 	db	101	;'e'
  6498  00FCBB  20                 	db	32
  6499  00FCBC  53                 	db	83	;'S'
  6500  00FCBD  65                 	db	101	;'e'
  6501  00FCBE  74                 	db	116	;'t'
  6502  00FCBF  74                 	db	116	;'t'
  6503  00FCC0  69                 	db	105	;'i'
  6504  00FCC1  6E                 	db	110	;'n'
  6505  00FCC2  67                 	db	103	;'g'
  6506  00FCC3  73                 	db	115	;'s'
  6507  00FCC4  00                 	db	0
  6508  00FCC5                     STR_20:
  6509  00FCC5  46                 	db	70	;'F'
  6510  00FCC6  75                 	db	117	;'u'
  6511  00FCC7  6C                 	db	108	;'l'
  6512  00FCC8  6C                 	db	108	;'l'
  6513  00FCC9  79                 	db	121	;'y'
  6514  00FCCA  20                 	db	32
  6515  00FCCB  43                 	db	67	;'C'
  6516  00FCCC  68                 	db	104	;'h'
  6517  00FCCD  61                 	db	97	;'a'
  6518  00FCCE  72                 	db	114	;'r'
  6519  00FCCF  67                 	db	103	;'g'
  6520  00FCD0  65                 	db	101	;'e'
  6521  00FCD1  64                 	db	100	;'d'
  6522  00FCD2  00                 	db	0
  6523  00FCD3                     STR_15:
  6524  00FCD3  66                 	db	102	;'f'
  6525  00FCD4  75                 	db	117	;'u'
  6526  00FCD5  6C                 	db	108	;'l'
  6527  00FCD6  6C                 	db	108	;'l'
  6528  00FCD7  79                 	db	121	;'y'
  6529  00FCD8  20                 	db	32
  6530  00FCD9  63                 	db	99	;'c'
  6531  00FCDA  68                 	db	104	;'h'
  6532  00FCDB  61                 	db	97	;'a'
  6533  00FCDC  72                 	db	114	;'r'
  6534  00FCDD  67                 	db	103	;'g'
  6535  00FCDE  65                 	db	101	;'e'
  6536  00FCDF  64                 	db	100	;'d'
  6537  00FCE0  00                 	db	0
  6538  00FCE1                     STR_67:
  6539  00FCE1  52                 	db	82	;'R'
  6540  00FCE2  65                 	db	101	;'e'
  6541  00FCE3  76                 	db	118	;'v'
  6542  00FCE4  69                 	db	105	;'i'
  6543  00FCE5  73                 	db	115	;'s'
  6544  00FCE6  69                 	db	105	;'i'
  6545  00FCE7  6F                 	db	111	;'o'
  6546  00FCE8  6E                 	db	110	;'n'
  6547  00FCE9  20                 	db	32
  6548  00FCEA  49                 	db	73	;'I'
  6549  00FCEB  44                 	db	68	;'D'
  6550  00FCEC  3A                 	db	58	;':'
  6551  00FCED  00                 	db	0
  6552  00FCEE                     STR_84:
  6553  00FCEE  2B                 	db	43
  6554  00FCEF  35                 	db	53	;'5'
  6555  00FCF0  56                 	db	86	;'V'
  6556  00FCF1  20                 	db	32
  6557  00FCF2  56                 	db	86	;'V'
  6558  00FCF3  6F                 	db	111	;'o'
  6559  00FCF4  6C                 	db	108	;'l'
  6560  00FCF5  74                 	db	116	;'t'
  6561  00FCF6  61                 	db	97	;'a'
  6562  00FCF7  67                 	db	103	;'g'
  6563  00FCF8  65                 	db	101	;'e'
  6564  00FCF9  3A                 	db	58	;':'
  6565  00FCFA  00                 	db	0
  6566  00FCFB                     STR_153:
  6567  00FCFB  43                 	db	67	;'C'
  6568  00FCFC  68                 	db	104	;'h'
  6569  00FCFD  61                 	db	97	;'a'
  6570  00FCFE  72                 	db	114	;'r'
  6571  00FCFF  67                 	db	103	;'g'
  6572  00FD00  65                 	db	101	;'e'
  6573  00FD01  20                 	db	32
  6574  00FD02  54                 	db	84	;'T'
  6575  00FD03  69                 	db	105	;'i'
  6576  00FD04  6D                 	db	109	;'m'
  6577  00FD05  65                 	db	101	;'e'
  6578  00FD06  3A                 	db	58	;':'
  6579  00FD07  00                 	db	0
  6580  00FD08                     STR_132:
  6581  00FD08  51                 	db	81	;'Q'
  6582  00FD09  49                 	db	73	;'I'
  6583  00FD0A  20                 	db	32
  6584  00FD0B  53                 	db	83	;'S'
  6585  00FD0C  77                 	db	119	;'w'
  6586  00FD0D  2E                 	db	46
  6587  00FD0E  20                 	db	32
  6588  00FD0F  46                 	db	70	;'F'
  6589  00FD10  72                 	db	114	;'r'
  6590  00FD11  65                 	db	101	;'e'
  6591  00FD12  71                 	db	113	;'q'
  6592  00FD13  3A                 	db	58	;':'
  6593  00FD14  00                 	db	0
  6594  00FD15                     STR_97:
  6595  00FD15  49                 	db	73	;'I'
  6596  00FD16  6E                 	db	110	;'n'
  6597  00FD17  70                 	db	112	;'p'
  6598  00FD18  75                 	db	117	;'u'
  6599  00FD19  74                 	db	116	;'t'
  6600  00FD1A  20                 	db	32
  6601  00FD1B  50                 	db	80	;'P'
  6602  00FD1C  6F                 	db	111	;'o'
  6603  00FD1D  77                 	db	119	;'w'
  6604  00FD1E  65                 	db	101	;'e'
  6605  00FD1F  72                 	db	114	;'r'
  6606  00FD20  3A                 	db	58	;':'
  6607  00FD21  00                 	db	0
  6608  00FD22                     STR_93:
  6609  00FD22  4E                 	db	78	;'N'
  6610  00FD23  6F                 	db	111	;'o'
  6611  00FD24  74                 	db	116	;'t'
  6612  00FD25  20                 	db	32
  6613  00FD26  43                 	db	67	;'C'
  6614  00FD27  68                 	db	104	;'h'
  6615  00FD28  61                 	db	97	;'a'
  6616  00FD29  72                 	db	114	;'r'
  6617  00FD2A  67                 	db	103	;'g'
  6618  00FD2B  69                 	db	105	;'i'
  6619  00FD2C  6E                 	db	110	;'n'
  6620  00FD2D  67                 	db	103	;'g'
  6621  00FD2E  00                 	db	0
  6622  00FD2F                     STR_189:
  6623  00FD2F  44                 	db	68	;'D'
  6624  00FD30  72                 	db	114	;'r'
  6625  00FD31  65                 	db	101	;'e'
  6626  00FD32  77                 	db	119	;'w'
  6627  00FD33  20                 	db	32
  6628  00FD34  4D                 	db	77	;'M'
  6629  00FD35  61                 	db	97	;'a'
  6630  00FD36  61                 	db	97	;'a'
  6631  00FD37  74                 	db	116	;'t'
  6632  00FD38  6D                 	db	109	;'m'
  6633  00FD39  61                 	db	97	;'a'
  6634  00FD3A  6E                 	db	110	;'n'
  6635  00FD3B  00                 	db	0
  6636  00FD3C                     STR_57:
  6637  00FD3C  25                 	db	37
  6638  00FD3D  64                 	db	100	;'d'
  6639  00FD3E  20                 	db	32
  6640  00FD3F  6D                 	db	109	;'m'
  6641  00FD40  69                 	db	105	;'i'
  6642  00FD41  6E                 	db	110	;'n'
  6643  00FD42  75                 	db	117	;'u'
  6644  00FD43  74                 	db	116	;'t'
  6645  00FD44  65                 	db	101	;'e'
  6646  00FD45  73                 	db	115	;'s'
  6647  00FD46  2C                 	db	44
  6648  00FD47  20                 	db	32
  6649  00FD48  00                 	db	0
  6650  00FD49                     STR_47:
  6651  00FD49  50                 	db	80	;'P'
  6652  00FD4A  49                 	db	73	;'I'
  6653  00FD4B  43                 	db	67	;'C'
  6654  00FD4C  31                 	db	49	;'1'
  6655  00FD4D  38                 	db	56	;'8'
  6656  00FD4E  4C                 	db	76	;'L'
  6657  00FD4F  46                 	db	70	;'F'
  6658  00FD50  32                 	db	50	;'2'
  6659  00FD51  37                 	db	55	;'7'
  6660  00FD52  4B                 	db	75	;'K'
  6661  00FD53  34                 	db	52	;'4'
  6662  00FD54  30                 	db	48	;'0'
  6663  00FD55  00                 	db	0
  6664  00FD56                     STR_48:
  6665  00FD56  50                 	db	80	;'P'
  6666  00FD57  49                 	db	73	;'I'
  6667  00FD58  43                 	db	67	;'C'
  6668  00FD59  31                 	db	49	;'1'
  6669  00FD5A  38                 	db	56	;'8'
  6670  00FD5B  4C                 	db	76	;'L'
  6671  00FD5C  46                 	db	70	;'F'
  6672  00FD5D  34                 	db	52	;'4'
  6673  00FD5E  37                 	db	55	;'7'
  6674  00FD5F  4B                 	db	75	;'K'
  6675  00FD60  34                 	db	52	;'4'
  6676  00FD61  30                 	db	48	;'0'
  6677  00FD62  00                 	db	0
  6678  00FD63                     STR_44:
  6679  00FD63  50                 	db	80	;'P'
  6680  00FD64  49                 	db	73	;'I'
  6681  00FD65  43                 	db	67	;'C'
  6682  00FD66  31                 	db	49	;'1'
  6683  00FD67  38                 	db	56	;'8'
  6684  00FD68  4C                 	db	76	;'L'
  6685  00FD69  46                 	db	70	;'F'
  6686  00FD6A  36                 	db	54	;'6'
  6687  00FD6B  37                 	db	55	;'7'
  6688  00FD6C  4B                 	db	75	;'K'
  6689  00FD6D  34                 	db	52	;'4'
  6690  00FD6E  30                 	db	48	;'0'
  6691  00FD6F  00                 	db	0
  6692  00FD70                     STR_190:
  6693  00FD70  53                 	db	83	;'S'
  6694  00FD71  70                 	db	112	;'p'
  6695  00FD72  72                 	db	114	;'r'
  6696  00FD73  69                 	db	105	;'i'
  6697  00FD74  6E                 	db	110	;'n'
  6698  00FD75  67                 	db	103	;'g'
  6699  00FD76  20                 	db	32
  6700  00FD77  32                 	db	50	;'2'
  6701  00FD78  30                 	db	48	;'0'
  6702  00FD79  31                 	db	49	;'1'
  6703  00FD7A  39                 	db	57	;'9'
  6704  00FD7B  00                 	db	0
  6705  00FD7C                     STR_123:
  6706  00FD7C  4D                 	db	77	;'M'
  6707  00FD7D  69                 	db	105	;'i'
  6708  00FD7E  63                 	db	99	;'c'
  6709  00FD7F  72                 	db	114	;'r'
  6710  00FD80  6F                 	db	111	;'o'
  6711  00FD81  20                 	db	32
  6712  00FD82  54                 	db	84	;'T'
  6713  00FD83  65                 	db	101	;'e'
  6714  00FD84  6D                 	db	109	;'m'
  6715  00FD85  70                 	db	112	;'p'
  6716  00FD86  3A                 	db	58	;':'
  6717  00FD87  00                 	db	0
  6718  00FD88                     STR_92:
  6719  00FD88  51                 	db	81	;'Q'
  6720  00FD89  49                 	db	73	;'I'
  6721  00FD8A  20                 	db	32
  6722  00FD8B  43                 	db	67	;'C'
  6723  00FD8C  75                 	db	117	;'u'
  6724  00FD8D  72                 	db	114	;'r'
  6725  00FD8E  72                 	db	114	;'r'
  6726  00FD8F  65                 	db	101	;'e'
  6727  00FD90  6E                 	db	110	;'n'
  6728  00FD91  74                 	db	116	;'t'
  6729  00FD92  3A                 	db	58	;':'
  6730  00FD93  00                 	db	0
  6731  00FD94                     STR_106:
  6732  00FD94  45                 	db	69	;'E'
  6733  00FD95  66                 	db	102	;'f'
  6734  00FD96  66                 	db	102	;'f'
  6735  00FD97  69                 	db	105	;'i'
  6736  00FD98  63                 	db	99	;'c'
  6737  00FD99  69                 	db	105	;'i'
  6738  00FD9A  65                 	db	101	;'e'
  6739  00FD9B  6E                 	db	110	;'n'
  6740  00FD9C  63                 	db	99	;'c'
  6741  00FD9D  79                 	db	121	;'y'
  6742  00FD9E  3A                 	db	58	;':'
  6743  00FD9F  00                 	db	0
  6744  00FDA0                     STR_56:
  6745  00FDA0  25                 	db	37
  6746  00FDA1  64                 	db	100	;'d'
  6747  00FDA2  20                 	db	32
  6748  00FDA3  6D                 	db	109	;'m'
  6749  00FDA4  69                 	db	105	;'i'
  6750  00FDA5  6E                 	db	110	;'n'
  6751  00FDA6  75                 	db	117	;'u'
  6752  00FDA7  74                 	db	116	;'t'
  6753  00FDA8  65                 	db	101	;'e'
  6754  00FDA9  2C                 	db	44
  6755  00FDAA  20                 	db	32
  6756  00FDAB  00                 	db	0
  6757  00FDAC                     STR_45:
  6758  00FDAC  50                 	db	80	;'P'
  6759  00FDAD  49                 	db	73	;'I'
  6760  00FDAE  43                 	db	67	;'C'
  6761  00FDAF  31                 	db	49	;'1'
  6762  00FDB0  38                 	db	56	;'8'
  6763  00FDB1  46                 	db	70	;'F'
  6764  00FDB2  32                 	db	50	;'2'
  6765  00FDB3  37                 	db	55	;'7'
  6766  00FDB4  4B                 	db	75	;'K'
  6767  00FDB5  34                 	db	52	;'4'
  6768  00FDB6  30                 	db	48	;'0'
  6769  00FDB7  00                 	db	0
  6770  00FDB8                     STR_46:
  6771  00FDB8  50                 	db	80	;'P'
  6772  00FDB9  49                 	db	73	;'I'
  6773  00FDBA  43                 	db	67	;'C'
  6774  00FDBB  31                 	db	49	;'1'
  6775  00FDBC  38                 	db	56	;'8'
  6776  00FDBD  46                 	db	70	;'F'
  6777  00FDBE  34                 	db	52	;'4'
  6778  00FDBF  37                 	db	55	;'7'
  6779  00FDC0  4B                 	db	75	;'K'
  6780  00FDC1  34                 	db	52	;'4'
  6781  00FDC2  30                 	db	48	;'0'
  6782  00FDC3  00                 	db	0
  6783  00FDC4                     STR_43:
  6784  00FDC4  50                 	db	80	;'P'
  6785  00FDC5  49                 	db	73	;'I'
  6786  00FDC6  43                 	db	67	;'C'
  6787  00FDC7  31                 	db	49	;'1'
  6788  00FDC8  38                 	db	56	;'8'
  6789  00FDC9  46                 	db	70	;'F'
  6790  00FDCA  36                 	db	54	;'6'
  6791  00FDCB  37                 	db	55	;'7'
  6792  00FDCC  4B                 	db	75	;'K'
  6793  00FDCD  34                 	db	52	;'4'
  6794  00FDCE  30                 	db	48	;'0'
  6795  00FDCF  00                 	db	0
  6796  00FDD0  25                 	db	37
  6797  00FDD1  6C                 	db	108	;'l'
  6798  00FDD2  75                 	db	117	;'u'
  6799  00FDD3  2E                 	db	46
  6800  00FDD4  25                 	db	37
  6801  00FDD5  36                 	db	54	;'6'
  6802  00FDD6  2E                 	db	46
  6803  00FDD7  36                 	db	54	;'6'
  6804  00FDD8  6C                 	db	108	;'l'
  6805  00FDD9  75                 	db	117	;'u'
  6806  00FDDA  00                 	db	0
  6807  00FDDB                     STR_339:
  6808  00FDDB  1B                 	db	27
  6809  00FDDC  5B                 	db	91	;'['
  6810  00FDDD  30                 	db	48	;'0'
  6811  00FDDE  3B                 	db	59	;';'
  6812  00FDDF  33                 	db	51	;'3'
  6813  00FDE0  37                 	db	55	;'7'
  6814  00FDE1  3B                 	db	59	;';'
  6815  00FDE2  34                 	db	52	;'4'
  6816  00FDE3  30                 	db	48	;'0'
  6817  00FDE4  6D                 	db	109	;'m'
  6818  00FDE5  00                 	db	0
  6819  00FDE6                     STR_65:
  6820  00FDE6  44                 	db	68	;'D'
  6821  00FDE7  65                 	db	101	;'e'
  6822  00FDE8  76                 	db	118	;'v'
  6823  00FDE9  69                 	db	105	;'i'
  6824  00FDEA  63                 	db	99	;'c'
  6825  00FDEB  65                 	db	101	;'e'
  6826  00FDEC  20                 	db	32
  6827  00FDED  49                 	db	73	;'I'
  6828  00FDEE  44                 	db	68	;'D'
  6829  00FDEF  3A                 	db	58	;':'
  6830  00FDF0  00                 	db	0
  6831  00FDF1                     STR_74:
  6832  00FDF1  51                 	db	81	;'Q'
  6833  00FDF2  49                 	db	73	;'I'
  6834  00FDF3  20                 	db	32
  6835  00FDF4  45                 	db	69	;'E'
  6836  00FDF5  6E                 	db	110	;'n'
  6837  00FDF6  61                 	db	97	;'a'
  6838  00FDF7  62                 	db	98	;'b'
  6839  00FDF8  6C                 	db	108	;'l'
  6840  00FDF9  65                 	db	101	;'e'
  6841  00FDFA  64                 	db	100	;'d'
  6842  00FDFB  00                 	db	0
  6843  00FDFC                     STR_128:
  6844  00FDFC  42                 	db	66	;'B'
  6845  00FDFD  75                 	db	117	;'u'
  6846  00FDFE  72                 	db	114	;'r'
  6847  00FDFF  73                 	db	115	;'s'
  6848  00FE00  74                 	db	116	;'t'
  6849  00FE01  20                 	db	32
  6850  00FE02  4D                 	db	77	;'M'
  6851  00FE03  6F                 	db	111	;'o'
  6852  00FE04  64                 	db	100	;'d'
  6853  00FE05  65                 	db	101	;'e'
  6854  00FE06  00                 	db	0
  6855  00FE07                     STR_146:
  6856  00FE07  25                 	db	37
  6857  00FE08  75                 	db	117	;'u'
  6858  00FE09  20                 	db	32
  6859  00FE0A  73                 	db	115	;'s'
  6860  00FE0B  65                 	db	101	;'e'
  6861  00FE0C  63                 	db	99	;'c'
  6862  00FE0D  6F                 	db	111	;'o'
  6863  00FE0E  6E                 	db	110	;'n'
  6864  00FE0F  64                 	db	100	;'d'
  6865  00FE10  73                 	db	115	;'s'
  6866  00FE11  00                 	db	0
  6867  00FE12                     STR_143:
  6868  00FE12  25                 	db	37
  6869  00FE13  75                 	db	117	;'u'
  6870  00FE14  20                 	db	32
  6871  00FE15  6D                 	db	109	;'m'
  6872  00FE16  69                 	db	105	;'i'
  6873  00FE17  6E                 	db	110	;'n'
  6874  00FE18  75                 	db	117	;'u'
  6875  00FE19  74                 	db	116	;'t'
  6876  00FE1A  65                 	db	101	;'e'
  6877  00FE1B  73                 	db	115	;'s'
  6878  00FE1C  00                 	db	0
  6879  00FE1D                     STR_51:
  6880  00FE1D  25                 	db	37
  6881  00FE1E  64                 	db	100	;'d'
  6882  00FE1F  20                 	db	32
  6883  00FE20  79                 	db	121	;'y'
  6884  00FE21  65                 	db	101	;'e'
  6885  00FE22  61                 	db	97	;'a'
  6886  00FE23  72                 	db	114	;'r'
  6887  00FE24  73                 	db	115	;'s'
  6888  00FE25  2C                 	db	44
  6889  00FE26  20                 	db	32
  6890  00FE27  00                 	db	0
  6891  00FE28                     STR_55:
  6892  00FE28  25                 	db	37
  6893  00FE29  64                 	db	100	;'d'
  6894  00FE2A  20                 	db	32
  6895  00FE2B  68                 	db	104	;'h'
  6896  00FE2C  6F                 	db	111	;'o'
  6897  00FE2D  75                 	db	117	;'u'
  6898  00FE2E  72                 	db	114	;'r'
  6899  00FE2F  73                 	db	115	;'s'
  6900  00FE30  2C                 	db	44
  6901  00FE31  20                 	db	32
  6902  00FE32  00                 	db	0
  6903  00FE33                     STR_59:
  6904  00FE33  25                 	db	37
  6905  00FE34  64                 	db	100	;'d'
  6906  00FE35  20                 	db	32
  6907  00FE36  73                 	db	115	;'s'
  6908  00FE37  65                 	db	101	;'e'
  6909  00FE38  63                 	db	99	;'c'
  6910  00FE39  6F                 	db	111	;'o'
  6911  00FE3A  6E                 	db	110	;'n'
  6912  00FE3B  64                 	db	100	;'d'
  6913  00FE3C  73                 	db	115	;'s'
  6914  00FE3D  00                 	db	0
  6915  00FE3E                     STR_40:
  6916  00FE3E  53                 	db	83	;'S'
  6917  00FE3F  54                 	db	84	;'T'
  6918  00FE40  4F                 	db	79	;'O'
  6919  00FE41  46                 	db	70	;'F'
  6920  00FE42  20                 	db	32
  6921  00FE43  52                 	db	82	;'R'
  6922  00FE44  65                 	db	101	;'e'
  6923  00FE45  73                 	db	115	;'s'
  6924  00FE46  65                 	db	101	;'e'
  6925  00FE47  74                 	db	116	;'t'
  6926  00FE48  00                 	db	0
  6927  00FE49                     STR_41:
  6928  00FE49  53                 	db	83	;'S'
  6929  00FE4A  54                 	db	84	;'T'
  6930  00FE4B  55                 	db	85	;'U'
  6931  00FE4C  46                 	db	70	;'F'
  6932  00FE4D  20                 	db	32
  6933  00FE4E  52                 	db	82	;'R'
  6934  00FE4F  65                 	db	101	;'e'
  6935  00FE50  73                 	db	115	;'s'
  6936  00FE51  65                 	db	101	;'e'
  6937  00FE52  74                 	db	116	;'t'
  6938  00FE53  00                 	db	0
  6939  00FE54                     STR_36:
  6940  00FE54  4D                 	db	77	;'M'
  6941  00FE55  43                 	db	67	;'C'
  6942  00FE56  4C                 	db	76	;'L'
  6943  00FE57  52                 	db	82	;'R'
  6944  00FE58  20                 	db	32
  6945  00FE59  52                 	db	82	;'R'
  6946  00FE5A  65                 	db	101	;'e'
  6947  00FE5B  73                 	db	115	;'s'
  6948  00FE5C  65                 	db	101	;'e'
  6949  00FE5D  74                 	db	116	;'t'
  6950  00FE5E  00                 	db	0
  6951  00FE5F                     STR_38:
  6952  00FE5F  57                 	db	87	;'W'
  6953  00FE60  57                 	db	87	;'W'
  6954  00FE61  44                 	db	68	;'D'
  6955  00FE62  54                 	db	84	;'T'
  6956  00FE63  20                 	db	32
  6957  00FE64  52                 	db	82	;'R'
  6958  00FE65  65                 	db	101	;'e'
  6959  00FE66  73                 	db	115	;'s'
  6960  00FE67  65                 	db	101	;'e'
  6961  00FE68  74                 	db	116	;'t'
  6962  00FE69  00                 	db	0
  6963  00FE6A                     STR_115:
  6964  00FE6A  2B                 	db	43
  6965  00FE6B  35                 	db	53	;'5'
  6966  00FE6C  56                 	db	86	;'V'
  6967  00FE6D  20                 	db	32
  6968  00FE6E  54                 	db	84	;'T'
  6969  00FE6F  65                 	db	101	;'e'
  6970  00FE70  6D                 	db	109	;'m'
  6971  00FE71  70                 	db	112	;'p'
  6972  00FE72  3A                 	db	58	;':'
  6973  00FE73  00                 	db	0
  6974  00FE74                     STR_70:
  6975  00FE74  31                 	db	49	;'1'
  6976  00FE75  31                 	db	49	;'1'
  6977  00FE76  35                 	db	53	;'5'
  6978  00FE77  2E                 	db	46
  6979  00FE78  32                 	db	50	;'2'
  6980  00FE79  20                 	db	32
  6981  00FE7A  6B                 	db	107	;'k'
  6982  00FE7B  62                 	db	98	;'b'
  6983  00FE7C  73                 	db	115	;'s'
  6984  00FE7D  00                 	db	0
  6985  00FE7E                     STR_50:
  6986  00FE7E  25                 	db	37
  6987  00FE7F  64                 	db	100	;'d'
  6988  00FE80  20                 	db	32
  6989  00FE81  79                 	db	121	;'y'
  6990  00FE82  65                 	db	101	;'e'
  6991  00FE83  61                 	db	97	;'a'
  6992  00FE84  72                 	db	114	;'r'
  6993  00FE85  2C                 	db	44
  6994  00FE86  20                 	db	32
  6995  00FE87  00                 	db	0
  6996  00FE88                     STR_54:
  6997  00FE88  25                 	db	37
  6998  00FE89  64                 	db	100	;'d'
  6999  00FE8A  20                 	db	32
  7000  00FE8B  68                 	db	104	;'h'
  7001  00FE8C  6F                 	db	111	;'o'
  7002  00FE8D  75                 	db	117	;'u'
  7003  00FE8E  72                 	db	114	;'r'
  7004  00FE8F  2C                 	db	44
  7005  00FE90  20                 	db	32
  7006  00FE91  00                 	db	0
  7007  00FE92                     STR_53:
  7008  00FE92  25                 	db	37
  7009  00FE93  64                 	db	100	;'d'
  7010  00FE94  20                 	db	32
  7011  00FE95  64                 	db	100	;'d'
  7012  00FE96  61                 	db	97	;'a'
  7013  00FE97  79                 	db	121	;'y'
  7014  00FE98  73                 	db	115	;'s'
  7015  00FE99  2C                 	db	44
  7016  00FE9A  20                 	db	32
  7017  00FE9B  00                 	db	0
  7018  00FE9C                     STR_58:
  7019  00FE9C  25                 	db	37
  7020  00FE9D  64                 	db	100	;'d'
  7021  00FE9E  20                 	db	32
  7022  00FE9F  73                 	db	115	;'s'
  7023  00FEA0  65                 	db	101	;'e'
  7024  00FEA1  63                 	db	99	;'c'
  7025  00FEA2  6F                 	db	111	;'o'
  7026  00FEA3  6E                 	db	110	;'n'
  7027  00FEA4  64                 	db	100	;'d'
  7028  00FEA5  00                 	db	0
  7029  00FEA6                     STR_35:
  7030  00FEA6  42                 	db	66	;'B'
  7031  00FEA7  4F                 	db	79	;'O'
  7032  00FEA8  52                 	db	82	;'R'
  7033  00FEA9  20                 	db	32
  7034  00FEAA  52                 	db	82	;'R'
  7035  00FEAB  65                 	db	101	;'e'
  7036  00FEAC  73                 	db	115	;'s'
  7037  00FEAD  65                 	db	101	;'e'
  7038  00FEAE  74                 	db	116	;'t'
  7039  00FEAF  00                 	db	0
  7040  00FEB0                     STR_34:
  7041  00FEB0  50                 	db	80	;'P'
  7042  00FEB1  4F                 	db	79	;'O'
  7043  00FEB2  52                 	db	82	;'R'
  7044  00FEB3  20                 	db	32
  7045  00FEB4  52                 	db	82	;'R'
  7046  00FEB5  65                 	db	101	;'e'
  7047  00FEB6  73                 	db	115	;'s'
  7048  00FEB7  65                 	db	101	;'e'
  7049  00FEB8  74                 	db	116	;'t'
  7050  00FEB9  00                 	db	0
  7051  00FEBA                     STR_22:
  7052  00FEBA  55                 	db	85	;'U'
  7053  00FEBB  6E                 	db	110	;'n'
  7054  00FEBC  64                 	db	100	;'d'
  7055  00FEBD  65                 	db	101	;'e'
  7056  00FEBE  66                 	db	102	;'f'
  7057  00FEBF  69                 	db	105	;'i'
  7058  00FEC0  6E                 	db	110	;'n'
  7059  00FEC1  65                 	db	101	;'e'
  7060  00FEC2  64                 	db	100	;'d'
  7061  00FEC3  00                 	db	0
  7062  00FEC4                     STR_17:
  7063  00FEC4  75                 	db	117	;'u'
  7064  00FEC5  6E                 	db	110	;'n'
  7065  00FEC6  64                 	db	100	;'d'
  7066  00FEC7  65                 	db	101	;'e'
  7067  00FEC8  66                 	db	102	;'f'
  7068  00FEC9  69                 	db	105	;'i'
  7069  00FECA  6E                 	db	110	;'n'
  7070  00FECB  65                 	db	101	;'e'
  7071  00FECC  64                 	db	100	;'d'
  7072  00FECD  00                 	db	0
  7073  00FECE                     STR_298:
  7074  00FECE  2B                 	db	43
  7075  00FECF  25                 	db	37
  7076  00FED0  30                 	db	48	;'0'
  7077  00FED1  2E                 	db	46
  7078  00FED2  33                 	db	51	;'3'
  7079  00FED3  66                 	db	102	;'f'
  7080  00FED4  20                 	db	32
  7081  00FED5  4D                 	db	77	;'M'
  7082  00FED6  00                 	db	0
  7083  00FED7                     STR_299:
  7084  00FED7  2B                 	db	43
  7085  00FED8  25                 	db	37
  7086  00FED9  30                 	db	48	;'0'
  7087  00FEDA  2E                 	db	46
  7088  00FEDB  33                 	db	51	;'3'
  7089  00FEDC  66                 	db	102	;'f'
  7090  00FEDD  20                 	db	32
  7091  00FEDE  6B                 	db	107	;'k'
  7092  00FEDF  00                 	db	0
  7093  00FEE0                     STR_301:
  7094  00FEE0  2B                 	db	43
  7095  00FEE1  25                 	db	37
  7096  00FEE2  30                 	db	48	;'0'
  7097  00FEE3  2E                 	db	46
  7098  00FEE4  33                 	db	51	;'3'
  7099  00FEE5  66                 	db	102	;'f'
  7100  00FEE6  20                 	db	32
  7101  00FEE7  6D                 	db	109	;'m'
  7102  00FEE8  00                 	db	0
  7103  00FEE9                     STR_303:
  7104  00FEE9  2B                 	db	43
  7105  00FEEA  25                 	db	37
  7106  00FEEB  30                 	db	48	;'0'
  7107  00FEEC  2E                 	db	46
  7108  00FEED  33                 	db	51	;'3'
  7109  00FEEE  66                 	db	102	;'f'
  7110  00FEEF  20                 	db	32
  7111  00FEF0  6E                 	db	110	;'n'
  7112  00FEF1  00                 	db	0
  7113  00FEF2                     STR_302:
  7114  00FEF2  2B                 	db	43
  7115  00FEF3  25                 	db	37
  7116  00FEF4  30                 	db	48	;'0'
  7117  00FEF5  2E                 	db	46
  7118  00FEF6  33                 	db	51	;'3'
  7119  00FEF7  66                 	db	102	;'f'
  7120  00FEF8  20                 	db	32
  7121  00FEF9  75                 	db	117	;'u'
  7122  00FEFA  00                 	db	0
  7123  00FEFB                     STR_108:
  7124  00FEFB  25                 	db	37
  7125  00FEFC  2B                 	db	43
  7126  00FEFD  2E                 	db	46
  7127  00FEFE  33                 	db	51	;'3'
  7128  00FEFF  66                 	db	102	;'f'
  7129  00FF00  20                 	db	32
  7130  00FF01  25                 	db	37
  7131  00FF02  25                 	db	37
  7132  00FF03  00                 	db	0
  7133  00FF04                     STR_111:
  7134  00FF04  51                 	db	81	;'Q'
  7135  00FF05  49                 	db	73	;'I'
  7136  00FF06  20                 	db	32
  7137  00FF07  54                 	db	84	;'T'
  7138  00FF08  65                 	db	101	;'e'
  7139  00FF09  6D                 	db	109	;'m'
  7140  00FF0A  70                 	db	112	;'p'
  7141  00FF0B  3A                 	db	58	;':'
  7142  00FF0C  00                 	db	0
  7143  00FF0D                     STR_138:
  7144  00FF0D  25                 	db	37
  7145  00FF0E  75                 	db	117	;'u'
  7146  00FF0F  20                 	db	32
  7147  00FF10  79                 	db	121	;'y'
  7148  00FF11  65                 	db	101	;'e'
  7149  00FF12  61                 	db	97	;'a'
  7150  00FF13  72                 	db	114	;'r'
  7151  00FF14  73                 	db	115	;'s'
  7152  00FF15  00                 	db	0
  7153  00FF16                     STR_140:
  7154  00FF16  25                 	db	37
  7155  00FF17  75                 	db	117	;'u'
  7156  00FF18  20                 	db	32
  7157  00FF19  68                 	db	104	;'h'
  7158  00FF1A  6F                 	db	111	;'o'
  7159  00FF1B  75                 	db	117	;'u'
  7160  00FF1C  72                 	db	114	;'r'
  7161  00FF1D  73                 	db	115	;'s'
  7162  00FF1E  00                 	db	0
  7163  00FF1F                     STR_129:
  7164  00FF1F  2B                 	db	43
  7165  00FF20  32                 	db	50	;'2'
  7166  00FF21  2E                 	db	46
  7167  00FF22  35                 	db	53	;'5'
  7168  00FF23  20                 	db	32
  7169  00FF24  4D                 	db	77	;'M'
  7170  00FF25  48                 	db	72	;'H'
  7171  00FF26  7A                 	db	122	;'z'
  7172  00FF27  00                 	db	0
  7173  00FF28                     STR_52:
  7174  00FF28  25                 	db	37
  7175  00FF29  64                 	db	100	;'d'
  7176  00FF2A  20                 	db	32
  7177  00FF2B  64                 	db	100	;'d'
  7178  00FF2C  61                 	db	97	;'a'
  7179  00FF2D  79                 	db	121	;'y'
  7180  00FF2E  2C                 	db	44
  7181  00FF2F  20                 	db	32
  7182  00FF30  00                 	db	0
  7183  00FF31                     STR_14:
  7184  00FF31  63                 	db	99	;'c'
  7185  00FF32  68                 	db	104	;'h'
  7186  00FF33  61                 	db	97	;'a'
  7187  00FF34  72                 	db	114	;'r'
  7188  00FF35  67                 	db	103	;'g'
  7189  00FF36  69                 	db	105	;'i'
  7190  00FF37  6E                 	db	110	;'n'
  7191  00FF38  67                 	db	103	;'g'
  7192  00FF39  00                 	db	0
  7193  00FF3A                     STR_300:
  7194  00FF3A  2B                 	db	43
  7195  00FF3B  25                 	db	37
  7196  00FF3C  30                 	db	48	;'0'
  7197  00FF3D  2E                 	db	46
  7198  00FF3E  33                 	db	51	;'3'
  7199  00FF3F  66                 	db	102	;'f'
  7200  00FF40  20                 	db	32
  7201  00FF41  00                 	db	0
  7202  00FF42                     STR_89:
  7203  00FF42  25                 	db	37
  7204  00FF43  2B                 	db	43
  7205  00FF44  2E                 	db	46
  7206  00FF45  33                 	db	51	;'3'
  7207  00FF46  66                 	db	102	;'f'
  7208  00FF47  20                 	db	32
  7209  00FF48  41                 	db	65	;'A'
  7210  00FF49  00                 	db	0
  7211  00FF4A                     STR_112:
  7212  00FF4A  25                 	db	37
  7213  00FF4B  2B                 	db	43
  7214  00FF4C  2E                 	db	46
  7215  00FF4D  33                 	db	51	;'3'
  7216  00FF4E  66                 	db	102	;'f'
  7217  00FF4F  20                 	db	32
  7218  00FF50  43                 	db	67	;'C'
  7219  00FF51  00                 	db	0
  7220  00FF52                     STR_81:
  7221  00FF52  25                 	db	37
  7222  00FF53  2B                 	db	43
  7223  00FF54  2E                 	db	46
  7224  00FF55  33                 	db	51	;'3'
  7225  00FF56  66                 	db	102	;'f'
  7226  00FF57  20                 	db	32
  7227  00FF58  56                 	db	86	;'V'
  7228  00FF59  00                 	db	0
  7229  00FF5A                     STR_98:
  7230  00FF5A  25                 	db	37
  7231  00FF5B  2B                 	db	43
  7232  00FF5C  2E                 	db	46
  7233  00FF5D  33                 	db	51	;'3'
  7234  00FF5E  66                 	db	102	;'f'
  7235  00FF5F  20                 	db	32
  7236  00FF60  57                 	db	87	;'W'
  7237  00FF61  00                 	db	0
  7238  00FF62                     STR_139:
  7239  00FF62  25                 	db	37
  7240  00FF63  75                 	db	117	;'u'
  7241  00FF64  20                 	db	32
  7242  00FF65  64                 	db	100	;'d'
  7243  00FF66  61                 	db	97	;'a'
  7244  00FF67  79                 	db	121	;'y'
  7245  00FF68  73                 	db	115	;'s'
  7246  00FF69  00                 	db	0
  7247  00FF6A                     STR_363:
  7248  00FF6A  28                 	db	40
  7249  00FF6B  6E                 	db	110	;'n'
  7250  00FF6C  75                 	db	117	;'u'
  7251  00FF6D  6C                 	db	108	;'l'
  7252  00FF6E  6C                 	db	108	;'l'
  7253  00FF6F  29                 	db	41
  7254  00FF70  00                 	db	0
  7255  00FF71                     STR_68:
  7256  00FF71  25                 	db	37
  7257  00FF72  63                 	db	99	;'c'
  7258  00FF73  25                 	db	37
  7259  00FF74  30                 	db	48	;'0'
  7260  00FF75  33                 	db	51	;'3'
  7261  00FF76  64                 	db	100	;'d'
  7262  00FF77  00                 	db	0
  7263  00FF78                     STR_197:
  7264  00FF78  2A                 	db	42
  7265  00FF79  49                 	db	73	;'I'
  7266  00FF7A  44                 	db	68	;'D'
  7267  00FF7B  4E                 	db	78	;'N'
  7268  00FF7C  3F                 	db	63	;'?'
  7269  00FF7D  00                 	db	0
  7270  00FF7E                     STR_194:
  7271  00FF7E  43                 	db	67	;'C'
  7272  00FF7F  6C                 	db	108	;'l'
  7273  00FF80  65                 	db	101	;'e'
  7274  00FF81  61                 	db	97	;'a'
  7275  00FF82  72                 	db	114	;'r'
  7276  00FF83  00                 	db	0
  7277  00FF84                     STR_21:
  7278  00FF84  45                 	db	69	;'E'
  7279  00FF85  72                 	db	114	;'r'
  7280  00FF86  72                 	db	114	;'r'
  7281  00FF87  6F                 	db	111	;'o'
  7282  00FF88  72                 	db	114	;'r'
  7283  00FF89  00                 	db	0
  7284  00FF8A                     STR_16:
  7285  00FF8A  65                 	db	101	;'e'
  7286  00FF8B  72                 	db	114	;'r'
  7287  00FF8C  72                 	db	114	;'r'
  7288  00FF8D  6F                 	db	111	;'o'
  7289  00FF8E  72                 	db	114	;'r'
  7290  00FF8F  00                 	db	0
  7291  00FF90                     STR_304:
  7292  00FF90  30                 	db	48	;'0'
  7293  00FF91  2E                 	db	46
  7294  00FF92  30                 	db	48	;'0'
  7295  00FF93  20                 	db	32
  7296  00FF94  00                 	db	0
  7297  00FF95                     STR_192:
  7298  00FF95  1B                 	db	27
  7299  00FF96  5B                 	db	91	;'['
  7300  00FF97  32                 	db	50	;'2'
  7301  00FF98  4A                 	db	74	;'J'
  7302  00FF99  00                 	db	0
  7303  00FF9A                     STR_228:
  7304  00FF9A  48                 	db	72	;'H'
  7305  00FF9B  65                 	db	101	;'e'
  7306  00FF9C  6C                 	db	108	;'l'
  7307  00FF9D  70                 	db	112	;'p'
  7308  00FF9E  00                 	db	0
  7309  00FF9F                     STR_66:
  7310  00FF9F  30                 	db	48	;'0'
  7311  00FFA0  78                 	db	120	;'x'
  7312  00FFA1  25                 	db	37
  7313  00FFA2  58                 	db	88	;'X'
  7314  00FFA3  00                 	db	0
  7315  00FFA4                     STR_134:
  7316  00FFA4  25                 	db	37
  7317  00FFA5  73                 	db	115	;'s'
  7318  00FFA6  48                 	db	72	;'H'
  7319  00FFA7  7A                 	db	122	;'z'
  7320  00FFA8  00                 	db	0
  7321  00FFA9                     STR_18:
  7322  00FFA9  49                 	db	73	;'I'
  7323  00FFAA  64                 	db	100	;'d'
  7324  00FFAB  6C                 	db	108	;'l'
  7325  00FFAC  65                 	db	101	;'e'
  7326  00FFAD  00                 	db	0
  7327  00FFAE                     STR_13:
  7328  00FFAE  69                 	db	105	;'i'
  7329  00FFAF  64                 	db	100	;'d'
  7330  00FFB0  6C                 	db	108	;'l'
  7331  00FFB1  65                 	db	101	;'e'
  7332  00FFB2  00                 	db	0
  7333  00FFB3  1B                 	db	27
  7334  00FFB4  5B                 	db	91	;'['
  7335  00FFB5  73                 	db	115	;'s'
  7336  00FFB6  00                 	db	0
  7337  00FFB7  1B                 	db	27
  7338  00FFB8  5B                 	db	91	;'['
  7339  00FFB9  75                 	db	117	;'u'
  7340  00FFBA  00                 	db	0
  7341  00FFBB                     STR_193:
  7342  00FFBB  1B                 	db	27
  7343  00FFBC  5B                 	db	91	;'['
  7344  00FFBD  48                 	db	72	;'H'
  7345  00FFBE  00                 	db	0
  7346  00FFBF                     STR_168:
  7347  00FFBF  25                 	db	37
  7348  00FFC0  73                 	db	115	;'s'
  7349  00FFC1  43                 	db	67	;'C'
  7350  00FFC2  00                 	db	0
  7351  00FFC3                     STR_173:
  7352  00FFC3  25                 	db	37
  7353  00FFC4  73                 	db	115	;'s'
  7354  00FFC5  4A                 	db	74	;'J'
  7355  00FFC6  00                 	db	0
  7356  00FFC7                     STR_1:
  7357  00FFC7  1B                 	db	27
  7358  00FFC8  5B                 	db	91	;'['
  7359  00FFC9  4B                 	db	75	;'K'
  7360  00FFCA  00                 	db	0
  7361  00FFCB                     STR_319:
  7362  00FFCB  33                 	db	51	;'3'
  7363  00FFCC  30                 	db	48	;'0'
  7364  00FFCD  00                 	db	0
  7365  00FFCE                     STR_320:
  7366  00FFCE  33                 	db	51	;'3'
  7367  00FFCF  31                 	db	49	;'1'
  7368  00FFD0  00                 	db	0
  7369  00FFD1                     STR_330:
  7370  00FFD1  34                 	db	52	;'4'
  7371  00FFD2  31                 	db	49	;'1'
  7372  00FFD3  00                 	db	0
  7373  00FFD4                     STR_321:
  7374  00FFD4  33                 	db	51	;'3'
  7375  00FFD5  32                 	db	50	;'2'
  7376  00FFD6  00                 	db	0
  7377  00FFD7                     STR_331:
  7378  00FFD7  34                 	db	52	;'4'
  7379  00FFD8  32                 	db	50	;'2'
  7380  00FFD9  00                 	db	0
  7381  00FFDA                     STR_322:
  7382  00FFDA  33                 	db	51	;'3'
  7383  00FFDB  33                 	db	51	;'3'
  7384  00FFDC  00                 	db	0
  7385  00FFDD                     STR_332:
  7386  00FFDD  34                 	db	52	;'4'
  7387  00FFDE  33                 	db	51	;'3'
  7388  00FFDF  00                 	db	0
  7389  00FFE0                     STR_323:
  7390  00FFE0  33                 	db	51	;'3'
  7391  00FFE1  34                 	db	52	;'4'
  7392  00FFE2  00                 	db	0
  7393  00FFE3                     STR_333:
  7394  00FFE3  34                 	db	52	;'4'
  7395  00FFE4  34                 	db	52	;'4'
  7396  00FFE5  00                 	db	0
  7397  00FFE6                     STR_324:
  7398  00FFE6  33                 	db	51	;'3'
  7399  00FFE7  35                 	db	53	;'5'
  7400  00FFE8  00                 	db	0
  7401  00FFE9                     STR_334:
  7402  00FFE9  34                 	db	52	;'4'
  7403  00FFEA  35                 	db	53	;'5'
  7404  00FFEB  00                 	db	0
  7405  00FFEC                     STR_325:
  7406  00FFEC  33                 	db	51	;'3'
  7407  00FFED  36                 	db	54	;'6'
  7408  00FFEE  00                 	db	0
  7409  00FFEF                     STR_335:
  7410  00FFEF  34                 	db	52	;'4'
  7411  00FFF0  36                 	db	54	;'6'
  7412  00FFF1  00                 	db	0
  7413  00FFF2                     STR_326:
  7414  00FFF2  33                 	db	51	;'3'
  7415  00FFF3  37                 	db	55	;'7'
  7416  00FFF4  00                 	db	0
  7417  00FFF5                     STR_336:
  7418  00FFF5  34                 	db	52	;'4'
  7419  00FFF6  37                 	db	55	;'7'
  7420  00FFF7  00                 	db	0
  7421  00FFF8                     STR_310:
  7422  00FFF8  1B                 	db	27
  7423  00FFF9  5B                 	db	91	;'['
  7424  00FFFA  00                 	db	0
  7425  00FFFB                     STR_316:
  7426  00FFFB  38                 	db	56	;'8'
  7427  00FFFC  00                 	db	0
  7428  00FFFD                     STR_318:
  7429  00FFFD  3B                 	db	59	;';'
  7430  00FFFE  00                 	db	0
  7431  0000                     
  7432                           ; #config settings
  7433  00FFFF  00                 	db	0	; dummy byte at the end
  7434  0000                     
  7435                           	psect	nvBANK2
  7436  0002FF                     __pnvBANK2:
  7437                           	opt callstack 0
  7438  0002FF                     _reset_cause:
  7439                           	opt callstack 0
  7440  0002FF                     	ds	1
  7441  0000                     _SSP2BUF	set	3730
  7442  0000                     _SSP2CON2bits	set	3735
  7443  0000                     _SSP2CON1bits	set	3734
  7444  0000                     _SSP2ADD	set	3731
  7445  0000                     _SSP2CON3	set	3736
  7446  0000                     _SSP2CON1	set	3734
  7447  0000                     _SSP2STAT	set	3733
  7448  0000                     _PIR7bits	set	3793
  7449  0000                     _SSP2CLKPPS	set	3727
  7450  0000                     _RX2PPS	set	3725
  7451  0000                     _INT1PPS	set	3746
  7452  0000                     _INT2PPS	set	3747
  7453  0000                     _RB4PPS	set	3827
  7454  0000                     _RC4PPS	set	3835
  7455  0000                     _RB5PPS	set	3828
  7456  0000                     _SSP2DATPPS	set	3728
  7457  0000                     _CCP2PPS	set	3760
  7458  0000                     _PMD5	set	3814
  7459  0000                     _PMD4	set	3813
  7460  0000                     _PMD3	set	3812
  7461  0000                     _PMD2	set	3811
  7462  0000                     _PMD1	set	3810
  7463  0000                     _PMD0	set	3809
  7464  0000                     _OSCTUNE	set	3805
  7465  0000                     _OSCFRQ	set	3806
  7466  0000                     _OSCEN	set	3804
  7467  0000                     _OSCCON3	set	3802
  7468  0000                     _OSCCON1	set	3800
  7469  0000                     _PIR6bits	set	3792
  7470  0000                     _PIE6bits	set	3784
  7471  0000                     _PIR1bits	set	3787
  7472  0000                     _PIE1bits	set	3779
  7473  0000                     _PIR3bits	set	3789
  7474  0000                     _PIR4bits	set	3790
  7475  0000                     _PIE4bits	set	3782
  7476  0000                     _IPR6bits	set	3776
  7477  0000                     _IPR1bits	set	3771
  7478  0000                     _IPR3bits	set	3773
  7479  0000                     _IPR0bits	set	3770
  7480  0000                     _IPR4bits	set	3774
  7481  0000                     _RC2REG	set	3737
  7482  0000                     _RC2STAbits	set	3741
  7483  0000                     _TX2REG	set	3738
  7484  0000                     _TX2STAbits	set	3742
  7485  0000                     _SP2BRGH	set	3740
  7486  0000                     _SP2BRGL	set	3739
  7487  0000                     _TX2STA	set	3742
  7488  0000                     _RC2STA	set	3741
  7489  0000                     _BAUD2CON	set	3743
  7490  0000                     _PIE3bits	set	3781
  7491  0000                     _PIE0bits	set	3778
  7492  0000                     _PIR0bits	set	3786
  7493  0000                     _FVRCONbits	set	3889
  7494  0000                     _FVRCON	set	3889
  7495  0000                     _ADCON1bits	set	3929
  7496  0000                     _ADCON2bits	set	3930
  7497  0000                     _ADPRE	set	3934
  7498  0000                     _ADCON3bits	set	3931
  7499  0000                     _ADACQ	set	3932
  7500  0000                     _ADCLK	set	3927
  7501  0000                     _ADACT	set	3926
  7502  0000                     _ADREF	set	3928
  7503  0000                     _ADCON3	set	3931
  7504  0000                     _ADCON2	set	3930
  7505  0000                     _ADCON1	set	3929
  7506  0000                     _ADCAP	set	3933
  7507  0000                     _ADPCH	set	3935
  7508  0000                     _IOCBPbits	set	3860
  7509  0000                     _IOCBNbits	set	3859
  7510  0000                     _IOCBFbits	set	3858
  7511  0000                     _SLRCONC	set	3870
  7512  0000                     _SLRCONB	set	3862
  7513  0000                     _SLRCONA	set	3854
  7514  0000                     _ODCONC	set	3871
  7515  0000                     _ODCONB	set	3863
  7516  0000                     _ODCONA	set	3855
  7517  0000                     _WPUC	set	3872
  7518  0000                     _WPUA	set	3856
  7519  0000                     _WPUB	set	3864
  7520  0000                     _WPUE	set	3885
  7521  0000                     _ANSELA	set	3857
  7522  0000                     _ANSELB	set	3865
  7523  0000                     _ANSELC	set	3873
  7524  0000                     _CCP2CONbits	set	4008
  7525  0000                     _LATBbits	set	3972
  7526  0000                     _PCON0bits	set	4055
  7527  0000                     _PORTBbits	set	3982
  7528  0000                     _LATCbits	set	3973
  7529  0000                     _T1GCONbits	set	4048
  7530  0000                     _T1CONbits	set	4047
  7531  0000                     _T1CON	set	4047
  7532  0000                     _TMR1L	set	4045
  7533  0000                     _TMR1H	set	4046
  7534  0000                     _T1CLK	set	4050
  7535  0000                     _T1GATE	set	4049
  7536  0000                     _T1GCON	set	4048
  7537  0000                     _T5GCONbits	set	4036
  7538  0000                     _T5CON	set	4035
  7539  0000                     _T5CLK	set	4038
  7540  0000                     _T5GATE	set	4037
  7541  0000                     _T5GCON	set	4036
  7542  0000                     _T5CONbits	set	4035
  7543  0000                     _TMR5L	set	4033
  7544  0000                     _TMR5H	set	4034
  7545  0000                     _CCPTMRSbits	set	4014
  7546  0000                     _CCPR2L	set	4006
  7547  0000                     _CCPR2H	set	4007
  7548  0000                     _CCP2CAP	set	4009
  7549  0000                     _CCP2CON	set	4008
  7550  0000                     _T3GCONbits	set	4042
  7551  0000                     _T3CONbits	set	4041
  7552  0000                     _T3CON	set	4041
  7553  0000                     _TMR3L	set	4039
  7554  0000                     _TMR3H	set	4040
  7555  0000                     _T3CLK	set	4044
  7556  0000                     _T3GATE	set	4043
  7557  0000                     _T3GCON	set	4042
  7558  0000                     _PR2	set	4028
  7559  0000                     _TMR2	set	4027
  7560  0000                     _T2CONbits	set	4029
  7561  0000                     _T2RSTbits	set	4032
  7562  0000                     _T2HLTbits	set	4030
  7563  0000                     _T2CON	set	4029
  7564  0000                     _T2TMR	set	4027
  7565  0000                     _T2PR	set	4028
  7566  0000                     _T2RST	set	4032
  7567  0000                     _T2HLT	set	4030
  7568  0000                     _T2CLKCON	set	4031
  7569  0000                     _NVMDAT	set	3968
  7570  0000                     _NVMADRL	set	3966
  7571  0000                     _NVMADRH	set	3967
  7572  0000                     _NVMCON2	set	3970
  7573  0000                     _TABLAT	set	4085
  7574  0000                     _TBLPTRL	set	4086
  7575  0000                     _TBLPTRH	set	4087
  7576  0000                     _TBLPTRU	set	4088
  7577  0000                     _NVMCON1bits	set	3969
  7578  0000                     _T0CON0bits	set	4053
  7579  0000                     _T0CON0	set	4053
  7580  0000                     _TMR0L	set	4051
  7581  0000                     _TMR0H	set	4052
  7582  0000                     _T0CON1	set	4054
  7583  0000                     _ADERRL	set	3950
  7584  0000                     _ADERRH	set	3951
  7585  0000                     _ADPREVL	set	3937
  7586  0000                     _ADPREVH	set	3938
  7587  0000                     _ADFLTRL	set	3954
  7588  0000                     _ADFLTRH	set	3955
  7589  0000                     _ADSTATbits	set	3941
  7590  0000                     _ADACCL	set	3952
  7591  0000                     _ADACCH	set	3953
  7592  0000                     _ADCNT	set	3943
  7593  0000                     _ADRESL	set	3939
  7594  0000                     _ADRESH	set	3940
  7595  0000                     _ADCON0bits	set	3936
  7596  0000                     _ADCON0	set	3936
  7597  0000                     _ADSTAT	set	3941
  7598  0000                     _ADRPT	set	3942
  7599  0000                     _ADSTPTH	set	3945
  7600  0000                     _ADSTPTL	set	3944
  7601  0000                     _ADUTHH	set	3949
  7602  0000                     _ADUTHL	set	3948
  7603  0000                     _ADLTHH	set	3947
  7604  0000                     _ADLTHL	set	3946
  7605  0000                     _TRISC	set	3978
  7606  0000                     _TRISB	set	3977
  7607  0000                     _TRISA	set	3976
  7608  0000                     _LATC	set	3973
  7609  0000                     _LATB	set	3972
  7610  0000                     _LATA	set	3971
  7611  0000                     _INTCONbits	set	4082
  7612                           
  7613                           	psect	cinit
  7614  01ADEE                     __pcinit:
  7615                           	opt callstack 0
  7616  01ADEE                     start_initialization:
  7617                           	opt callstack 0
  7618  01ADEE                     __initialization:
  7619                           	opt callstack 0
  7620                           
  7621                           ; Initialize objects allocated to BANK2 (18 bytes)
  7622                           ; load TBLPTR registers with __pidataBANK2
  7623  01ADEE  0E4A               	movlw	low __pidataBANK2
  7624  01ADF0  6EF6               	movwf	tblptrl,c
  7625  01ADF2  0ECA               	movlw	high __pidataBANK2
  7626  01ADF4  6EF7               	movwf	tblptrh,c
  7627  01ADF6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  7628  01ADF8  6EF8               	movwf	tblptru,c
  7629  01ADFA  EE02  F0ED         	lfsr	0,__pdataBANK2
  7630  01ADFE  EE10 F012          	lfsr	1,18
  7631  01AE02                     copy_data0:
  7632  01AE02  0009               	tblrd		*+
  7633  01AE04  CFF5 FFEE          	movff	tablat,postinc0
  7634  01AE08  50E5               	movf	postdec1,w,c
  7635  01AE0A  50E1               	movf	fsr1l,w,c
  7636  01AE0C  E1FA               	bnz	copy_data0
  7637                           
  7638                           ; Initialize objects allocated to BANK1 (18 bytes)
  7639                           ; load TBLPTR registers with __pidataBANK1
  7640  01AE0E  0E38               	movlw	low __pidataBANK1
  7641  01AE10  6EF6               	movwf	tblptrl,c
  7642  01AE12  0ECA               	movlw	high __pidataBANK1
  7643  01AE14  6EF7               	movwf	tblptrh,c
  7644  01AE16  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  7645  01AE18  6EF8               	movwf	tblptru,c
  7646  01AE1A  EE01  F0A6         	lfsr	0,__pdataBANK1
  7647  01AE1E  EE10 F012          	lfsr	1,18
  7648  01AE22                     copy_data1:
  7649  01AE22  0009               	tblrd		*+
  7650  01AE24  CFF5 FFEE          	movff	tablat,postinc0
  7651  01AE28  50E5               	movf	postdec1,w,c
  7652  01AE2A  50E1               	movf	fsr1l,w,c
  7653  01AE2C  E1FA               	bnz	copy_data1
  7654                           
  7655                           ; Initialize objects allocated to BANK0 (2 bytes)
  7656                           ; load TBLPTR registers with __pidataBANK0
  7657  01AE2E  0E38               	movlw	low __pidataBANK0
  7658  01AE30  6EF6               	movwf	tblptrl,c
  7659  01AE32  0ECC               	movlw	high __pidataBANK0
  7660  01AE34  6EF7               	movwf	tblptrh,c
  7661  01AE36  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  7662  01AE38  6EF8               	movwf	tblptru,c
  7663  01AE3A  0009               	tblrd		*+	;fetch initializer
  7664  01AE3C  CFF5 F0FB          	movff	tablat,__pdataBANK0
  7665  01AE40  0009               	tblrd		*+	;fetch initializer
  7666  01AE42  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
  7667                           
  7668                           ; Clear objects allocated to BANK4 (256 bytes)
  7669  01AE46  EE04  F000         	lfsr	0,__pbssBANK4
  7670  01AE4A  EE11 F000          	lfsr	1,256
  7671  01AE4E                     clear_0:
  7672  01AE4E  6AEE               	clrf	postinc0,c
  7673  01AE50  50E5               	movf	postdec1,w,c
  7674  01AE52  50E1               	movf	fsr1l,w,c
  7675  01AE54  E1FC               	bnz	clear_0
  7676  01AE56  50E2               	movf	fsr1h,w,c
  7677  01AE58  E1FA               	bnz	clear_0
  7678                           
  7679                           ; Clear objects allocated to BANK3 (209 bytes)
  7680  01AE5A  EE03  F000         	lfsr	0,__pbssBANK3
  7681  01AE5E  0ED1               	movlw	209
  7682  01AE60                     clear_1:
  7683  01AE60  6AEE               	clrf	postinc0,c
  7684  01AE62  06E8               	decf	wreg,f,c
  7685  01AE64  E1FD               	bnz	clear_1
  7686                           
  7687                           ; Clear objects allocated to BANK2 (47 bytes)
  7688  01AE66  EE02  F0BE         	lfsr	0,__pbssBANK2
  7689  01AE6A  0E2F               	movlw	47
  7690  01AE6C                     clear_2:
  7691  01AE6C  6AEE               	clrf	postinc0,c
  7692  01AE6E  06E8               	decf	wreg,f,c
  7693  01AE70  E1FD               	bnz	clear_2
  7694                           
  7695                           ; Clear objects allocated to BANK1 (69 bytes)
  7696  01AE72  EE01  F061         	lfsr	0,__pbssBANK1
  7697  01AE76  0E45               	movlw	69
  7698  01AE78                     clear_3:
  7699  01AE78  6AEE               	clrf	postinc0,c
  7700  01AE7A  06E8               	decf	wreg,f,c
  7701  01AE7C  E1FD               	bnz	clear_3
  7702                           
  7703                           ; Clear objects allocated to BITBANK0 (1 bytes)
  7704  01AE7E  0100               	movlb	0
  7705  01AE80  6BFD               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  7706                           
  7707                           ; Clear objects allocated to BANK0 (66 bytes)
  7708  01AE82  EE00  F0B9         	lfsr	0,__pbssBANK0
  7709  01AE86  0E42               	movlw	66
  7710  01AE88                     clear_4:
  7711  01AE88  6AEE               	clrf	postinc0,c
  7712  01AE8A  06E8               	decf	wreg,f,c
  7713  01AE8C  E1FD               	bnz	clear_4
  7714  01AE8E                     end_of_initialization:
  7715                           	opt callstack 0
  7716  01AE8E                     __end_of__initialization:
  7717                           	opt callstack 0
  7718  01AE8E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7719  01AE90  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7720  01AE92  0100               	movlb	0
  7721  01AE94  EFD2  F0BE         	goto	_main	;jump to C main() function
  7722                           
  7723                           	psect	bitbssBANK0
  7724  0007E8                     __pbitbssBANK0:
  7725                           	opt callstack 0
  7726  0007E8                     _eusart2RxStringReady:
  7727                           	opt callstack 0
  7728  0007E8                     	ds	1
  7729                           
  7730                           	psect	bssBANK0
  7731  0000B9                     __pbssBANK0:
  7732                           	opt callstack 0
  7733  0000B9                     _error_handler:
  7734                           	opt callstack 0
  7735  0000B9                     	ds	8
  7736  0000C1                     _adc_result_scaling:
  7737                           	opt callstack 0
  7738  0000C1                     	ds	4
  7739  0000C5                     _device_on_time:
  7740                           	opt callstack 0
  7741  0000C5                     	ds	4
  7742  0000C9                     _TMR0_InterruptHandler:
  7743                           	opt callstack 0
  7744  0000C9                     	ds	3
  7745  0000CC                     _ADCC_ADTI_InterruptHandler:
  7746                           	opt callstack 0
  7747  0000CC                     	ds	3
  7748  0000CF                     I2C2_ISR@pi2c_buf_ptr:
  7749                           	opt callstack 0
  7750  0000CF                     	ds	2
  7751  0000D1                     _p_i2c2_current:
  7752                           	opt callstack 0
  7753  0000D1                     	ds	2
  7754  0000D3                     _p_i2c2_trb_current:
  7755                           	opt callstack 0
  7756  0000D3                     	ds	2
  7757  0000D5                     _qi_isns_average_index:
  7758                           	opt callstack 0
  7759  0000D5                     	ds	1
  7760  0000D6                     _pos12_isns_average_index:
  7761                           	opt callstack 0
  7762  0000D6                     	ds	1
  7763  0000D7                     _live_measurement_enable_flag:
  7764                           	opt callstack 0
  7765  0000D7                     	ds	1
  7766  0000D8                     I2C2_ISR@i2c_10bit_address_restart:
  7767                           	opt callstack 0
  7768  0000D8                     	ds	1
  7769  0000D9                     I2C2_ISR@i2c_bytes_left:
  7770                           	opt callstack 0
  7771  0000D9                     	ds	1
  7772  0000DA                     _i2c2_trb_count:
  7773                           	opt callstack 0
  7774  0000DA                     	ds	1
  7775  0000DB                     _i2c2_state:
  7776                           	opt callstack 0
  7777  0000DB                     	ds	1
  7778  0000DC                     _eusart2RxHead:
  7779                           	opt callstack 0
  7780  0000DC                     	ds	1
  7781  0000DD                     _adc_results:
  7782                           	opt callstack 0
  7783  0000DD                     	ds	28
  7784  0000F9                     I2C2_ISR@i2c_address:
  7785                           	opt callstack 0
  7786  0000F9                     	ds	2
  7787                           
  7788                           	psect	dataBANK0
  7789  0000FB                     __pdataBANK0:
  7790                           	opt callstack 0
  7791  0000FB                     _OLED_update_time:
  7792                           	opt callstack 0
  7793  0000FB                     	ds	1
  7794  0000FC                     _next_adc_channel:
  7795                           	opt callstack 0
  7796  0000FC                     	ds	1
  7797                           
  7798                           	psect	bssBANK1
  7799  000161                     __pbssBANK1:
  7800                           	opt callstack 0
  7801  000161                     _i2c2_object:
  7802                           	opt callstack 0
  7803  000161                     	ds	7
  7804  000168                     _freq_meas_results:
  7805                           	opt callstack 0
  7806  000168                     	ds	6
  7807  00016E                     _TMR1_InterruptHandler:
  7808                           	opt callstack 0
  7809  00016E                     	ds	3
  7810  000171                     _TMR3_InterruptHandler:
  7811                           	opt callstack 0
  7812  000171                     	ds	3
  7813  000174                     _TMR2_InterruptHandler:
  7814                           	opt callstack 0
  7815  000174                     	ds	3
  7816  000177                     _IOCBF3_InterruptHandler:
  7817                           	opt callstack 0
  7818  000177                     	ds	3
  7819  00017A                     _IOCBF2_InterruptHandler:
  7820                           	opt callstack 0
  7821  00017A                     	ds	3
  7822  00017D                     _EUSART2_RxDefaultInterruptHandler:
  7823                           	opt callstack 0
  7824  00017D                     	ds	3
  7825  000180                     _EUSART2_TxDefaultInterruptHandler:
  7826                           	opt callstack 0
  7827  000180                     	ds	3
  7828  000183                     _INT2_InterruptHandler:
  7829                           	opt callstack 0
  7830  000183                     	ds	3
  7831  000186                     _INT1_InterruptHandler:
  7832                           	opt callstack 0
  7833  000186                     	ds	3
  7834  000189                     _timer1ReloadVal:
  7835                           	opt callstack 0
  7836  000189                     	ds	2
  7837  00018B                     _timer5ReloadVal:
  7838                           	opt callstack 0
  7839  00018B                     	ds	2
  7840  00018D                     _timer3ReloadVal:
  7841                           	opt callstack 0
  7842  00018D                     	ds	2
  7843  00018F                     _nxq_charge_state:
  7844                           	opt callstack 0
  7845  00018F                     	ds	1
  7846  000190                     _QI_current_edge:
  7847                           	opt callstack 0
  7848  000190                     	ds	1
  7849  000191                     _eusart2RxCount:
  7850                           	opt callstack 0
  7851  000191                     	ds	1
  7852  000192                     _eusart2RxTail:
  7853                           	opt callstack 0
  7854  000192                     	ds	1
  7855  000193                     _eusart2TxBufferRemaining:
  7856                           	opt callstack 0
  7857  000193                     	ds	1
  7858  000194                     _eusart2TxTail:
  7859                           	opt callstack 0
  7860  000194                     	ds	1
  7861  000195                     _eusart2TxHead:
  7862                           	opt callstack 0
  7863  000195                     	ds	1
  7864  000196                     I2C2_MasterRead@trBlock:
  7865                           	opt callstack 0
  7866  000196                     	ds	5
  7867  00019B                     I2C2_MasterWrite@trBlock:
  7868                           	opt callstack 0
  7869  00019B                     	ds	5
  7870  0001A0                     _i2c2_tr_queue:
  7871                           	opt callstack 0
  7872  0001A0                     	ds	5
  7873  0001A5                     _I2C_STATUS:
  7874                           	opt callstack 0
  7875  0001A5                     	ds	1
  7876                           
  7877                           	psect	dataBANK1
  7878  0001A6                     __pdataBANK1:
  7879                           	opt callstack 0
  7880  0001A6                     getCauseOfResetString@strings:
  7881                           	opt callstack 0
  7882  0001A6                     	ds	18
  7883                           
  7884                           	psect	bssBANK2
  7885  0002BE                     __pbssBANK2:
  7886                           	opt callstack 0
  7887  0002BE                     _adc_calculations:
  7888                           	opt callstack 0
  7889  0002BE                     	ds	20
  7890  0002D2                     _QI_charge_time:
  7891                           	opt callstack 0
  7892  0002D2                     	ds	4
  7893  0002D6                     _OLED_update_flag:
  7894                           	opt callstack 0
  7895  0002D6                     	ds	1
  7896  0002D7                     _OLED_Frame:
  7897                           	opt callstack 0
  7898  0002D7                     	ds	1
  7899  0002D8                     _LM73_start_flag:
  7900                           	opt callstack 0
  7901  0002D8                     	ds	1
  7902  0002D9                     _live_measurement_request_flag:
  7903                           	opt callstack 0
  7904  0002D9                     	ds	1
  7905  0002DA                     _freq_meas_start_flag:
  7906                           	opt callstack 0
  7907  0002DA                     	ds	1
  7908  0002DB                     _LM73_temp_results:
  7909                           	opt callstack 0
  7910  0002DB                     	ds	18
  7911                           
  7912                           	psect	dataBANK2
  7913  0002ED                     __pdataBANK2:
  7914                           	opt callstack 0
  7915  0002ED                     getCauseOfResetStringSmall@strings:
  7916                           	opt callstack 0
  7917  0002ED                     	ds	18
  7918                           
  7919                           	psect	bssBANK3
  7920  000300                     __pbssBANK3:
  7921                           	opt callstack 0
  7922  000300                     _OLED_RAM_Buffer:
  7923                           	opt callstack 0
  7924  000300                     	ds	68
  7925  000344                     _line:
  7926                           	opt callstack 0
  7927  000344                     	ds	64
  7928  000384                     getStringSecondsAsTime@return_string:
  7929                           	opt callstack 0
  7930  000384                     	ds	40
  7931  0003AC                     floatToEngineeringFormat@result:
  7932                           	opt callstack 0
  7933  0003AC                     	ds	20
  7934  0003C0                     ftoa@buf:
  7935                           	opt callstack 0
  7936  0003C0                     	ds	17
  7937                           
  7938                           	psect	bssBANK4
  7939  000400                     __pbssBANK4:
  7940                           	opt callstack 0
  7941  000400                     _qi_isns_average_buffer:
  7942                           	opt callstack 0
  7943  000400                     	ds	64
  7944  000440                     _pos12_isns_average_buffer:
  7945                           	opt callstack 0
  7946  000440                     	ds	64
  7947  000480                     _eusart2RxBuffer:
  7948                           	opt callstack 0
  7949  000480                     	ds	64
  7950  0004C0                     _eusart2TxBuffer:
  7951                           	opt callstack 0
  7952  0004C0                     	ds	64
  7953                           
  7954                           	psect	cstackBANK5
  7955  000500                     __pcstackBANK5:
  7956                           	opt callstack 0
  7957  000500                     terminalTextAttributes@foreground_color:
  7958                           	opt callstack 0
  7959                           
  7960                           ; 1 bytes @ 0x0
  7961  000500                     	ds	1
  7962  000501                     terminalTextAttributes@print_string:
  7963                           	opt callstack 0
  7964                           
  7965                           ; 16 bytes @ 0x1
  7966  000501                     	ds	16
  7967  000511                     terminalTextAttributes@i:
  7968                           	opt callstack 0
  7969                           
  7970                           ; 1 bytes @ 0x11
  7971  000511                     	ds	1
  7972  000512                     terminal_ringBufferPull@charNumber:
  7973                           	opt callstack 0
  7974                           
  7975                           ; 2 bytes @ 0x12
  7976  000512                     	ds	2
  7977  000514                     terminal_ringBufferPull@index_4754:
  7978                           	opt callstack 0
  7979                           
  7980                           ; 2 bytes @ 0x14
  7981  000514                     	ds	2
  7982  000516                     terminal_ringBufferPull@index:
  7983                           	opt callstack 0
  7984                           
  7985                           ; 2 bytes @ 0x16
  7986  000516                     	ds	2
  7987                           
  7988                           	psect	cstackBANK3
  7989  0003D1                     __pcstackBANK3:
  7990                           	opt callstack 0
  7991  0003D1                     OLED_updateHandler@dev_id_str:
  7992                           	opt callstack 0
  7993  0003D1                     getStringSecondsAsTime@buff:
  7994                           	opt callstack 0
  7995                           
  7996                           ; 20 bytes @ 0x0
  7997  0003D1                     	ds	17
  7998  0003E2                     OLED_updateHandler@rev_id_str:
  7999                           	opt callstack 0
  8000                           
  8001                           ; 17 bytes @ 0x11
  8002  0003E2                     	ds	3
  8003  0003E5                     getStringSecondsAsTime@i:
  8004                           	opt callstack 0
  8005                           
  8006                           ; 1 bytes @ 0x14
  8007  0003E5                     	ds	1
  8008  0003E6                     getStringSecondsAsTime@seconds:
  8009                           	opt callstack 0
  8010                           
  8011                           ; 1 bytes @ 0x15
  8012  0003E6                     	ds	1
  8013  0003E7                     getStringSecondsAsTime@years:
  8014                           	opt callstack 0
  8015                           
  8016                           ; 1 bytes @ 0x16
  8017  0003E7                     	ds	1
  8018  0003E8                     getStringSecondsAsTime@days:
  8019                           	opt callstack 0
  8020                           
  8021                           ; 1 bytes @ 0x17
  8022  0003E8                     	ds	1
  8023  0003E9                     getStringSecondsAsTime@hours:
  8024                           	opt callstack 0
  8025                           
  8026                           ; 1 bytes @ 0x18
  8027  0003E9                     	ds	1
  8028  0003EA                     getStringSecondsAsTime@minutes:
  8029                           	opt callstack 0
  8030                           
  8031                           ; 1 bytes @ 0x19
  8032  0003EA                     	ds	1
  8033  0003EB                     ?_printf:
  8034                           	opt callstack 0
  8035  0003EB                     printf@f:
  8036                           	opt callstack 0
  8037                           
  8038                           ; 2 bytes @ 0x1A
  8039  0003EB                     	ds	8
  8040  0003F3                     printf@ap:
  8041                           	opt callstack 0
  8042  0003F3                     _OLED_updateHandler$6043:
  8043                           	opt callstack 0
  8044                           
  8045                           ; 2 bytes @ 0x22
  8046  0003F3                     	ds	2
  8047  0003F5                     printf@pb:
  8048                           	opt callstack 0
  8049                           
  8050                           ; 5 bytes @ 0x24
  8051  0003F5                     	ds	5
  8052  0003FA                     ??_ringBufferLUT:
  8053                           
  8054                           ; 1 bytes @ 0x29
  8055  0003FA                     	ds	2
  8056  0003FC                     ringBufferLUT@userID:
  8057                           	opt callstack 0
  8058                           
  8059                           ; 2 bytes @ 0x2B
  8060  0003FC                     	ds	2
  8061  0003FE                     ??_main:
  8062                           
  8063                           ; 1 bytes @ 0x2D
  8064  0003FE                     	ds	2
  8065                           
  8066                           	psect	cstackBANK2
  8067  000200                     __pcstackBANK2:
  8068                           	opt callstack 0
  8069  000200                     ??_TMR5_Initialize:
  8070  000200                     ??_updateErrorLEDs:
  8071  000200                     ??_isdigit:
  8072  000200                     ?_getCauseOfResetString:
  8073                           	opt callstack 0
  8074  000200                     ?_getNXQChargeStateString:
  8075                           	opt callstack 0
  8076  000200                     ?_getNXQChargeStateStringCaps:
  8077                           	opt callstack 0
  8078  000200                     ?_getCauseOfResetStringSmall:
  8079                           	opt callstack 0
  8080  000200                     ?_strlen:
  8081                           	opt callstack 0
  8082  000200                     ?_strcmp:
  8083                           	opt callstack 0
  8084  000200                     ?___wmul:
  8085                           	opt callstack 0
  8086  000200                     ?___awmod:
  8087                           	opt callstack 0
  8088  000200                     ?___lwmod:
  8089                           	opt callstack 0
  8090  000200                     ?__tdiv_to_l_:
  8091                           	opt callstack 0
  8092  000200                     ?__div_to_l_:
  8093                           	opt callstack 0
  8094  000200                     ?___lldiv:
  8095                           	opt callstack 0
  8096  000200                     ?___flneg:
  8097                           	opt callstack 0
  8098  000200                     EUSART2_Read@readValue:
  8099                           	opt callstack 0
  8100  000200                     EUSART2_Write@txData:
  8101                           	opt callstack 0
  8102  000200                     getCauseOfReset@return_reset_cause:
  8103                           	opt callstack 0
  8104  000200                     TMR3_WriteTimer@timerVal:
  8105                           	opt callstack 0
  8106  000200                     I2C2_MasterTRBInsert@ptrb_list:
  8107                           	opt callstack 0
  8108  000200                     I2C2_MasterReadTRBBuild@ptrb:
  8109                           	opt callstack 0
  8110  000200                     I2C2_MasterWriteTRBBuild@ptrb:
  8111                           	opt callstack 0
  8112  000200                     TMR5_WriteTimer@timerVal:
  8113                           	opt callstack 0
  8114  000200                     TMR1_WriteTimer@timerVal:
  8115                           	opt callstack 0
  8116  000200                     ___wmul@multiplier:
  8117                           	opt callstack 0
  8118  000200                     ___awmod@dividend:
  8119                           	opt callstack 0
  8120  000200                     ___lwmod@dividend:
  8121                           	opt callstack 0
  8122  000200                     memmove@d1:
  8123                           	opt callstack 0
  8124  000200                     strcat@to:
  8125                           	opt callstack 0
  8126  000200                     strcmp@s1:
  8127                           	opt callstack 0
  8128  000200                     strlen@s:
  8129                           	opt callstack 0
  8130  000200                     strncpy@to:
  8131                           	opt callstack 0
  8132  000200                     INT1_SetInterruptHandler@InterruptHandler:
  8133                           	opt callstack 0
  8134  000200                     INT2_SetInterruptHandler@InterruptHandler:
  8135                           	opt callstack 0
  8136  000200                     EUSART2_SetTxInterruptHandler@interruptHandler:
  8137                           	opt callstack 0
  8138  000200                     EUSART2_SetRxInterruptHandler@interruptHandler:
  8139                           	opt callstack 0
  8140  000200                     IOCBF2_SetInterruptHandler@InterruptHandler:
  8141                           	opt callstack 0
  8142  000200                     IOCBF3_SetInterruptHandler@InterruptHandler:
  8143                           	opt callstack 0
  8144  000200                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  8145                           	opt callstack 0
  8146  000200                     TMR0_SetInterruptHandler@InterruptHandler:
  8147                           	opt callstack 0
  8148  000200                     TMR2_SetInterruptHandler@InterruptHandler:
  8149                           	opt callstack 0
  8150  000200                     TMR3_SetInterruptHandler@InterruptHandler:
  8151                           	opt callstack 0
  8152  000200                     TMR1_SetInterruptHandler@InterruptHandler:
  8153                           	opt callstack 0
  8154  000200                     FLASH_ReadByte@flashAddr:
  8155                           	opt callstack 0
  8156  000200                     ___lldiv@dividend:
  8157                           	opt callstack 0
  8158  000200                     __div_to_l_@f1:
  8159                           	opt callstack 0
  8160  000200                     ___fleq@ff1:
  8161                           	opt callstack 0
  8162  000200                     ___flneg@f1:
  8163                           	opt callstack 0
  8164  000200                     __tdiv_to_l_@f1:
  8165                           	opt callstack 0
  8166                           
  8167                           ; 4 bytes @ 0x0
  8168  000200                     	ds	1
  8169  000201                     putch@txData:
  8170                           	opt callstack 0
  8171  000201                     _isdigit$5463:
  8172                           	opt callstack 0
  8173                           
  8174                           ; 1 bytes @ 0x1
  8175  000201                     	ds	1
  8176  000202                     getCauseOfResetString@r:
  8177                           	opt callstack 0
  8178  000202                     getCauseOfResetStringSmall@r:
  8179                           	opt callstack 0
  8180  000202                     isdigit@c:
  8181                           	opt callstack 0
  8182  000202                     I2C2_MasterTRBInsert@pflag:
  8183                           	opt callstack 0
  8184  000202                     I2C2_MasterReadTRBBuild@pdata:
  8185                           	opt callstack 0
  8186  000202                     I2C2_MasterWriteTRBBuild@pdata:
  8187                           	opt callstack 0
  8188  000202                     ___wmul@multiplicand:
  8189                           	opt callstack 0
  8190  000202                     ___awmod@divisor:
  8191                           	opt callstack 0
  8192  000202                     ___lwmod@divisor:
  8193                           	opt callstack 0
  8194  000202                     memmove@s1:
  8195                           	opt callstack 0
  8196  000202                     strcat@from:
  8197                           	opt callstack 0
  8198  000202                     strcmp@s2:
  8199                           	opt callstack 0
  8200  000202                     strlen@cp:
  8201                           	opt callstack 0
  8202  000202                     strncpy@from:
  8203                           	opt callstack 0
  8204                           
  8205                           ; 2 bytes @ 0x2
  8206  000202                     	ds	1
  8207  000203                     ??_TMR3_Initialize:
  8208  000203                     ??_TMR1_Initialize:
  8209  000203                     strcpy@to:
  8210                           	opt callstack 0
  8211                           
  8212                           ; 2 bytes @ 0x3
  8213  000203                     	ds	1
  8214  000204                     ??_strcmp:
  8215  000204                     ?_FLASH_ReadWord:
  8216                           	opt callstack 0
  8217  000204                     I2C2_MasterReadTRBBuild@length:
  8218                           	opt callstack 0
  8219  000204                     I2C2_MasterWriteTRBBuild@length:
  8220                           	opt callstack 0
  8221  000204                     ___awmod@counter:
  8222                           	opt callstack 0
  8223  000204                     ___lwmod@counter:
  8224                           	opt callstack 0
  8225  000204                     ___wmul@product:
  8226                           	opt callstack 0
  8227  000204                     memmove@n:
  8228                           	opt callstack 0
  8229  000204                     strcat@cp:
  8230                           	opt callstack 0
  8231  000204                     strncpy@size:
  8232                           	opt callstack 0
  8233  000204                     FLASH_ReadWord@flashAddr:
  8234                           	opt callstack 0
  8235  000204                     ___lldiv@divisor:
  8236                           	opt callstack 0
  8237  000204                     __div_to_l_@f2:
  8238                           	opt callstack 0
  8239  000204                     ___fleq@ff2:
  8240                           	opt callstack 0
  8241  000204                     __tdiv_to_l_@f2:
  8242                           	opt callstack 0
  8243                           
  8244                           ; 4 bytes @ 0x4
  8245  000204                     	ds	1
  8246  000205                     ?___lwdiv:
  8247                           	opt callstack 0
  8248  000205                     I2C2_MasterTRBInsert@count:
  8249                           	opt callstack 0
  8250  000205                     ___awmod@sign:
  8251                           	opt callstack 0
  8252  000205                     I2C2_MasterReadTRBBuild@address:
  8253                           	opt callstack 0
  8254  000205                     I2C2_MasterWriteTRBBuild@address:
  8255                           	opt callstack 0
  8256  000205                     ___lwdiv@dividend:
  8257                           	opt callstack 0
  8258  000205                     strcpy@from:
  8259                           	opt callstack 0
  8260                           
  8261                           ; 2 bytes @ 0x5
  8262  000205                     	ds	1
  8263  000206                     ??_memmove:
  8264  000206                     ?___awdiv:
  8265                           	opt callstack 0
  8266  000206                     strcmp@r:
  8267                           	opt callstack 0
  8268  000206                     ___awdiv@dividend:
  8269                           	opt callstack 0
  8270  000206                     strncpy@cp:
  8271                           	opt callstack 0
  8272                           
  8273                           ; 2 bytes @ 0x6
  8274  000206                     	ds	1
  8275  000207                     ??_I2C2_MasterWriteTRBBuild:
  8276  000207                     ??_I2C2_MasterReadTRBBuild:
  8277  000207                     ___lwdiv@divisor:
  8278                           	opt callstack 0
  8279  000207                     strcpy@cp:
  8280                           	opt callstack 0
  8281                           
  8282                           ; 2 bytes @ 0x7
  8283  000207                     	ds	1
  8284  000208                     ??__tdiv_to_l_:
  8285  000208                     ??_FLASH_ReadWord:
  8286  000208                     ??___fleq:
  8287  000208                     ___awdiv@divisor:
  8288                           	opt callstack 0
  8289  000208                     memmove@d:
  8290                           	opt callstack 0
  8291  000208                     ___lldiv@quotient:
  8292                           	opt callstack 0
  8293  000208                     __div_to_l_@quot:
  8294                           	opt callstack 0
  8295                           
  8296                           ; 4 bytes @ 0x8
  8297  000208                     	ds	1
  8298  000209                     ___lwdiv@counter:
  8299                           	opt callstack 0
  8300  000209                     I2C2_MasterWrite@pdata:
  8301                           	opt callstack 0
  8302  000209                     I2C2_MasterRead@pdata:
  8303                           	opt callstack 0
  8304                           
  8305                           ; 2 bytes @ 0x9
  8306  000209                     	ds	1
  8307  00020A                     ___awdiv@counter:
  8308                           	opt callstack 0
  8309  00020A                     ___lwdiv@quotient:
  8310                           	opt callstack 0
  8311  00020A                     memmove@s:
  8312                           	opt callstack 0
  8313                           
  8314                           ; 2 bytes @ 0xA
  8315  00020A                     	ds	1
  8316  00020B                     ??_getMajorRevisionID:
  8317  00020B                     ?_getDeviceID:
  8318                           	opt callstack 0
  8319  00020B                     ?_getUserID:
  8320                           	opt callstack 0
  8321  00020B                     I2C2_MasterWrite@length:
  8322                           	opt callstack 0
  8323  00020B                     I2C2_MasterRead@length:
  8324                           	opt callstack 0
  8325  00020B                     ___awdiv@sign:
  8326                           	opt callstack 0
  8327  00020B                     getMinorRevisionID@REVID_RAW:
  8328                           	opt callstack 0
  8329  00020B                     __tdiv_to_l_@quot:
  8330                           	opt callstack 0
  8331                           
  8332                           ; 4 bytes @ 0xB
  8333  00020B                     	ds	1
  8334  00020C                     ___lldiv@counter:
  8335                           	opt callstack 0
  8336  00020C                     __div_to_l_@cntr:
  8337                           	opt callstack 0
  8338  00020C                     I2C2_MasterWrite@address:
  8339                           	opt callstack 0
  8340  00020C                     I2C2_MasterRead@address:
  8341                           	opt callstack 0
  8342  00020C                     ___awdiv@quotient:
  8343                           	opt callstack 0
  8344                           
  8345                           ; 2 bytes @ 0xC
  8346  00020C                     	ds	1
  8347  00020D                     ?_getDeviceIDString:
  8348                           	opt callstack 0
  8349  00020D                     ?___llmod:
  8350                           	opt callstack 0
  8351  00020D                     __div_to_l_@exp1:
  8352                           	opt callstack 0
  8353  00020D                     getDeviceIDString@inputDevID:
  8354                           	opt callstack 0
  8355  00020D                     getYearsFromOnTime@input_seconds:
  8356                           	opt callstack 0
  8357  00020D                     getDaysFromOnTime@input_seconds:
  8358                           	opt callstack 0
  8359  00020D                     getHoursFromOnTime@input_seconds:
  8360                           	opt callstack 0
  8361  00020D                     getMinutesFromOnTime@input_seconds:
  8362                           	opt callstack 0
  8363  00020D                     getSecondsFromOnTime@input_seconds:
  8364                           	opt callstack 0
  8365  00020D                     ___llmod@dividend:
  8366                           	opt callstack 0
  8367                           
  8368                           ; 4 bytes @ 0xD
  8369  00020D                     	ds	1
  8370  00020E                     ?___flmul:
  8371                           	opt callstack 0
  8372  00020E                     I2C2_MasterWrite@pflag:
  8373                           	opt callstack 0
  8374  00020E                     I2C2_MasterRead@pflag:
  8375                           	opt callstack 0
  8376  00020E                     getMajorRevisionID@REVID_RAW:
  8377                           	opt callstack 0
  8378  00020E                     ___flmul@b:
  8379                           	opt callstack 0
  8380                           
  8381                           ; 4 bytes @ 0xE
  8382  00020E                     	ds	1
  8383  00020F                     ??_getDeviceIDString:
  8384  00020F                     __tdiv_to_l_@cntr:
  8385                           	opt callstack 0
  8386                           
  8387                           ; 1 bytes @ 0xF
  8388  00020F                     	ds	1
  8389  000210                     ??_OLED_PutChar:
  8390  000210                     OLED_Command@temp:
  8391                           	opt callstack 0
  8392  000210                     __tdiv_to_l_@exp1:
  8393                           	opt callstack 0
  8394  000210                     LM73TempSensorInitialize@output_data_array:
  8395                           	opt callstack 0
  8396                           
  8397                           ; 2 bytes @ 0x10
  8398  000210                     	ds	1
  8399  000211                     ??_getDaysFromOnTime:
  8400  000211                     ??_getHoursFromOnTime:
  8401  000211                     ??_getMinutesFromOnTime:
  8402  000211                     ??_getSecondsFromOnTime:
  8403  000211                     getUserID@inputUserID:
  8404                           	opt callstack 0
  8405  000211                     getYearsFromOnTime@years:
  8406                           	opt callstack 0
  8407  000211                     ___llmod@divisor:
  8408                           	opt callstack 0
  8409                           
  8410                           ; 4 bytes @ 0x11
  8411  000211                     	ds	1
  8412  000212                     getUserID@IDOffset:
  8413                           	opt callstack 0
  8414  000212                     OLED_Command@data_array:
  8415                           	opt callstack 0
  8416  000212                     ___flmul@a:
  8417                           	opt callstack 0
  8418                           
  8419                           ; 4 bytes @ 0x12
  8420  000212                     	ds	2
  8421  000214                     OLED_YX@Column:
  8422                           	opt callstack 0
  8423  000214                     OLED_PutChar@data_array:
  8424                           	opt callstack 0
  8425                           
  8426                           ; 9 bytes @ 0x14
  8427  000214                     	ds	1
  8428  000215                     ??_OLED_YX:
  8429  000215                     getDaysFromOnTime@days:
  8430                           	opt callstack 0
  8431  000215                     getHoursFromOnTime@hours:
  8432                           	opt callstack 0
  8433  000215                     getMinutesFromOnTime@minutes:
  8434                           	opt callstack 0
  8435  000215                     getSecondsFromOnTime@seconds:
  8436                           	opt callstack 0
  8437  000215                     ___llmod@counter:
  8438                           	opt callstack 0
  8439                           
  8440                           ; 1 bytes @ 0x15
  8441  000215                     	ds	1
  8442  000216                     ??___flmul:
  8443  000216                     getDaysFromOnTime@years:
  8444                           	opt callstack 0
  8445  000216                     getHoursFromOnTime@years:
  8446                           	opt callstack 0
  8447  000216                     getMinutesFromOnTime@years:
  8448                           	opt callstack 0
  8449  000216                     getSecondsFromOnTime@years:
  8450                           	opt callstack 0
  8451                           
  8452                           ; 1 bytes @ 0x16
  8453  000216                     	ds	1
  8454  000217                     getHoursFromOnTime@days:
  8455                           	opt callstack 0
  8456  000217                     getMinutesFromOnTime@days:
  8457                           	opt callstack 0
  8458  000217                     getSecondsFromOnTime@days:
  8459                           	opt callstack 0
  8460                           
  8461                           ; 1 bytes @ 0x17
  8462  000217                     	ds	1
  8463  000218                     getMinutesFromOnTime@hours:
  8464                           	opt callstack 0
  8465  000218                     getSecondsFromOnTime@hours:
  8466                           	opt callstack 0
  8467  000218                     OLED_YX@Row:
  8468                           	opt callstack 0
  8469                           
  8470                           ; 1 bytes @ 0x18
  8471  000218                     	ds	1
  8472  000219                     getSecondsFromOnTime@minutes:
  8473                           	opt callstack 0
  8474                           
  8475                           ; 1 bytes @ 0x19
  8476  000219                     	ds	1
  8477  00021A                     ___flmul@sign:
  8478                           	opt callstack 0
  8479                           
  8480                           ; 1 bytes @ 0x1A
  8481  00021A                     	ds	1
  8482  00021B                     ___flmul@aexp:
  8483                           	opt callstack 0
  8484                           
  8485                           ; 1 bytes @ 0x1B
  8486  00021B                     	ds	1
  8487  00021C                     ___flmul@grs:
  8488                           	opt callstack 0
  8489                           
  8490                           ; 4 bytes @ 0x1C
  8491  00021C                     	ds	1
  8492  00021D                     OLED_PutChar@input_base:
  8493                           	opt callstack 0
  8494                           
  8495                           ; 2 bytes @ 0x1D
  8496  00021D                     	ds	3
  8497  000220                     OLED_PutChar@ch:
  8498                           	opt callstack 0
  8499  000220                     ___flmul@bexp:
  8500                           	opt callstack 0
  8501                           
  8502                           ; 1 bytes @ 0x20
  8503  000220                     	ds	1
  8504  000221                     OLED_Clear@row:
  8505                           	opt callstack 0
  8506  000221                     OLED_WriteString@s:
  8507                           	opt callstack 0
  8508  000221                     ___flmul@prod:
  8509                           	opt callstack 0
  8510                           
  8511                           ; 4 bytes @ 0x21
  8512  000221                     	ds	2
  8513  000223                     OLED_UpdateFromRAMBuffer@char_index:
  8514                           	opt callstack 0
  8515  000223                     OLED_Clear@col:
  8516                           	opt callstack 0
  8517                           
  8518                           ; 2 bytes @ 0x23
  8519  000223                     	ds	1
  8520  000224                     OLED_UpdateFromRAMBuffer@char_index_4304:
  8521                           	opt callstack 0
  8522                           
  8523                           ; 1 bytes @ 0x24
  8524  000224                     	ds	1
  8525  000225                     OLED_UpdateFromRAMBuffer@char_index_4305:
  8526                           	opt callstack 0
  8527  000225                     ___flmul@temp:
  8528                           	opt callstack 0
  8529                           
  8530                           ; 2 bytes @ 0x25
  8531  000225                     	ds	1
  8532  000226                     OLED_UpdateFromRAMBuffer@char_index_4306:
  8533                           	opt callstack 0
  8534                           
  8535                           ; 1 bytes @ 0x26
  8536  000226                     	ds	1
  8537  000227                     ?___fldiv:
  8538                           	opt callstack 0
  8539  000227                     ?_fround:
  8540                           	opt callstack 0
  8541  000227                     ?_scale:
  8542                           	opt callstack 0
  8543  000227                     ___fldiv@b:
  8544                           	opt callstack 0
  8545                           
  8546                           ; 4 bytes @ 0x27
  8547  000227                     	ds	4
  8548  00022B                     ___fldiv@a:
  8549                           	opt callstack 0
  8550  00022B                     _fround$6046:
  8551                           	opt callstack 0
  8552  00022B                     _scale$6047:
  8553                           	opt callstack 0
  8554                           
  8555                           ; 4 bytes @ 0x2B
  8556  00022B                     	ds	4
  8557  00022F                     ??___fldiv:
  8558  00022F                     scale@scl:
  8559                           	opt callstack 0
  8560  00022F                     _fround$6045:
  8561                           	opt callstack 0
  8562                           
  8563                           ; 4 bytes @ 0x2F
  8564  00022F                     	ds	1
  8565  000230                     ?___fltol:
  8566                           	opt callstack 0
  8567  000230                     ___fltol@f1:
  8568                           	opt callstack 0
  8569                           
  8570                           ; 4 bytes @ 0x30
  8571  000230                     	ds	3
  8572  000233                     fround@prec:
  8573                           	opt callstack 0
  8574  000233                     ___fldiv@rem:
  8575                           	opt callstack 0
  8576                           
  8577                           ; 4 bytes @ 0x33
  8578  000233                     	ds	1
  8579  000234                     ??___fltol:
  8580  000234                     ?___fladd:
  8581                           	opt callstack 0
  8582  000234                     ___fladd@b:
  8583                           	opt callstack 0
  8584                           
  8585                           ; 4 bytes @ 0x34
  8586  000234                     	ds	3
  8587  000237                     ___fldiv@sign:
  8588                           	opt callstack 0
  8589                           
  8590                           ; 1 bytes @ 0x37
  8591  000237                     	ds	1
  8592  000238                     ___fltol@sign1:
  8593                           	opt callstack 0
  8594  000238                     ___fldiv@new_exp:
  8595                           	opt callstack 0
  8596  000238                     ___fladd@a:
  8597                           	opt callstack 0
  8598                           
  8599                           ; 4 bytes @ 0x38
  8600  000238                     	ds	1
  8601  000239                     ___fltol@exp1:
  8602                           	opt callstack 0
  8603                           
  8604                           ; 1 bytes @ 0x39
  8605  000239                     	ds	1
  8606  00023A                     ?_abs:
  8607                           	opt callstack 0
  8608  00023A                     abs@a:
  8609                           	opt callstack 0
  8610  00023A                     ___fldiv@grs:
  8611                           	opt callstack 0
  8612                           
  8613                           ; 4 bytes @ 0x3A
  8614  00023A                     	ds	2
  8615  00023C                     ??_abs:
  8616  00023C                     ??___fladd:
  8617                           
  8618                           ; 1 bytes @ 0x3C
  8619  00023C                     	ds	2
  8620  00023E                     ?___xxtofl:
  8621                           	opt callstack 0
  8622  00023E                     ___fldiv@bexp:
  8623                           	opt callstack 0
  8624  00023E                     ___xxtofl@val:
  8625                           	opt callstack 0
  8626                           
  8627                           ; 4 bytes @ 0x3E
  8628  00023E                     	ds	1
  8629  00023F                     ___fldiv@aexp:
  8630                           	opt callstack 0
  8631                           
  8632                           ; 1 bytes @ 0x3F
  8633  00023F                     	ds	1
  8634  000240                     ___fladd@signs:
  8635                           	opt callstack 0
  8636                           
  8637                           ; 1 bytes @ 0x40
  8638  000240                     	ds	1
  8639  000241                     ___fladd@aexp:
  8640                           	opt callstack 0
  8641                           
  8642                           ; 1 bytes @ 0x41
  8643  000241                     	ds	1
  8644  000242                     ??___xxtofl:
  8645  000242                     ___fladd@bexp:
  8646                           	opt callstack 0
  8647                           
  8648                           ; 1 bytes @ 0x42
  8649  000242                     	ds	1
  8650  000243                     ___fladd@grs:
  8651                           	opt callstack 0
  8652                           
  8653                           ; 1 bytes @ 0x43
  8654  000243                     	ds	3
  8655  000246                     ___xxtofl@sign:
  8656                           	opt callstack 0
  8657                           
  8658                           ; 1 bytes @ 0x46
  8659  000246                     	ds	1
  8660  000247                     ___xxtofl@exp:
  8661                           	opt callstack 0
  8662                           
  8663                           ; 1 bytes @ 0x47
  8664  000247                     	ds	1
  8665  000248                     ___xxtofl@arg:
  8666                           	opt callstack 0
  8667                           
  8668                           ; 4 bytes @ 0x48
  8669  000248                     	ds	4
  8670  00024C                     ??_LM73Convert:
  8671  00024C                     ?___flsub:
  8672                           	opt callstack 0
  8673  00024C                     ___flge@ff1:
  8674                           	opt callstack 0
  8675  00024C                     ___flsub@b:
  8676                           	opt callstack 0
  8677                           
  8678                           ; 4 bytes @ 0x4C
  8679  00024C                     	ds	3
  8680  00024F                     LM73Convert@QI_Conv:
  8681                           	opt callstack 0
  8682                           
  8683                           ; 2 bytes @ 0x4F
  8684  00024F                     	ds	1
  8685  000250                     ___flge@ff2:
  8686                           	opt callstack 0
  8687  000250                     ___flsub@a:
  8688                           	opt callstack 0
  8689                           
  8690                           ; 4 bytes @ 0x50
  8691  000250                     	ds	1
  8692  000251                     LM73Convert@POS5_Conv:
  8693                           	opt callstack 0
  8694                           
  8695                           ; 2 bytes @ 0x51
  8696  000251                     	ds	2
  8697  000253                     LM73Convert@Ambient_Conv:
  8698                           	opt callstack 0
  8699                           
  8700                           ; 2 bytes @ 0x53
  8701  000253                     	ds	1
  8702  000254                     ??___flge:
  8703                           
  8704                           ; 1 bytes @ 0x54
  8705  000254                     	ds	1
  8706  000255                     
  8707                           ; 1 bytes @ 0x55
  8708  000255                     	ds	3
  8709  000258                     ?__doprnt:
  8710                           	opt callstack 0
  8711  000258                     __doprnt@pb:
  8712                           	opt callstack 0
  8713                           
  8714                           ; 2 bytes @ 0x58
  8715  000258                     	ds	2
  8716  00025A                     __doprnt@f:
  8717                           	opt callstack 0
  8718                           
  8719                           ; 2 bytes @ 0x5A
  8720  00025A                     	ds	2
  8721  00025C                     __doprnt@ap:
  8722                           	opt callstack 0
  8723                           
  8724                           ; 2 bytes @ 0x5C
  8725  00025C                     	ds	2
  8726  00025E                     ??__doprnt:
  8727                           
  8728                           ; 1 bytes @ 0x5E
  8729  00025E                     	ds	4
  8730  000262                     __doprnt$6048:
  8731                           	opt callstack 0
  8732                           
  8733                           ; 4 bytes @ 0x62
  8734  000262                     	ds	4
  8735  000266                     __doprnt@idx:
  8736                           	opt callstack 0
  8737                           
  8738                           ; 1 bytes @ 0x66
  8739  000266                     	ds	1
  8740  000267                     __doprnt$4989:
  8741                           	opt callstack 0
  8742                           
  8743                           ; 2 bytes @ 0x67
  8744  000267                     	ds	2
  8745  000269                     __doprnt$4990:
  8746                           	opt callstack 0
  8747                           
  8748                           ; 2 bytes @ 0x69
  8749  000269                     	ds	2
  8750  00026B                     __doprnt$4991:
  8751                           	opt callstack 0
  8752                           
  8753                           ; 2 bytes @ 0x6B
  8754  00026B                     	ds	2
  8755  00026D                     __doprnt$4992:
  8756                           	opt callstack 0
  8757                           
  8758                           ; 2 bytes @ 0x6D
  8759  00026D                     	ds	2
  8760  00026F                     __doprnt$4993:
  8761                           	opt callstack 0
  8762                           
  8763                           ; 2 bytes @ 0x6F
  8764  00026F                     	ds	2
  8765  000271                     __doprnt$4994:
  8766                           	opt callstack 0
  8767                           
  8768                           ; 2 bytes @ 0x71
  8769  000271                     	ds	2
  8770  000273                     __doprnt$4995:
  8771                           	opt callstack 0
  8772                           
  8773                           ; 2 bytes @ 0x73
  8774  000273                     	ds	2
  8775  000275                     __doprnt$4996:
  8776                           	opt callstack 0
  8777                           
  8778                           ; 2 bytes @ 0x75
  8779  000275                     	ds	2
  8780  000277                     __doprnt@cp:
  8781                           	opt callstack 0
  8782                           
  8783                           ; 2 bytes @ 0x77
  8784  000277                     	ds	2
  8785  000279                     __doprnt@len:
  8786                           	opt callstack 0
  8787                           
  8788                           ; 2 bytes @ 0x79
  8789  000279                     	ds	2
  8790  00027B                     __doprnt@eexp:
  8791                           	opt callstack 0
  8792                           
  8793                           ; 2 bytes @ 0x7B
  8794  00027B                     	ds	2
  8795  00027D                     __doprnt@tmpval:
  8796                           	opt callstack 0
  8797                           
  8798                           ; 4 bytes @ 0x7D
  8799  00027D                     	ds	4
  8800  000281                     __doprnt@fval:
  8801                           	opt callstack 0
  8802                           
  8803                           ; 4 bytes @ 0x81
  8804  000281                     	ds	4
  8805  000285                     __doprnt@val:
  8806                           	opt callstack 0
  8807                           
  8808                           ; 4 bytes @ 0x85
  8809  000285                     	ds	4
  8810  000289                     __doprnt@width:
  8811                           	opt callstack 0
  8812                           
  8813                           ; 2 bytes @ 0x89
  8814  000289                     	ds	2
  8815  00028B                     __doprnt@prec:
  8816                           	opt callstack 0
  8817                           
  8818                           ; 2 bytes @ 0x8B
  8819  00028B                     	ds	2
  8820  00028D                     __doprnt@flag:
  8821                           	opt callstack 0
  8822                           
  8823                           ; 2 bytes @ 0x8D
  8824  00028D                     	ds	2
  8825  00028F                     __doprnt@c:
  8826                           	opt callstack 0
  8827                           
  8828                           ; 1 bytes @ 0x8F
  8829  00028F                     	ds	1
  8830  000290                     ?_sprintf:
  8831                           	opt callstack 0
  8832  000290                     sprintf@wh:
  8833                           	opt callstack 0
  8834                           
  8835                           ; 2 bytes @ 0x90
  8836  000290                     	ds	2
  8837  000292                     sprintf@f:
  8838                           	opt callstack 0
  8839                           
  8840                           ; 2 bytes @ 0x92
  8841  000292                     	ds	10
  8842  00029C                     sprintf@ap:
  8843                           	opt callstack 0
  8844                           
  8845                           ; 2 bytes @ 0x9C
  8846  00029C                     	ds	2
  8847  00029E                     sprintf@pb:
  8848                           	opt callstack 0
  8849                           
  8850                           ; 5 bytes @ 0x9E
  8851  00029E                     	ds	5
  8852  0002A3                     ?_getStringSecondsAsTime:
  8853                           	opt callstack 0
  8854  0002A3                     ?_floatToEngineeringFormat:
  8855                           	opt callstack 0
  8856  0002A3                     getStringSecondsAsTime@input_seconds:
  8857                           	opt callstack 0
  8858  0002A3                     floatToEngineeringFormat@input_value:
  8859                           	opt callstack 0
  8860                           
  8861                           ; 4 bytes @ 0xA3
  8862  0002A3                     	ds	4
  8863  0002A7                     ??_getStringSecondsAsTime:
  8864  0002A7                     _floatToEngineeringFormat$4719:
  8865                           	opt callstack 0
  8866                           
  8867                           ; 4 bytes @ 0xA7
  8868  0002A7                     	ds	4
  8869  0002AB                     _floatToEngineeringFormat$4720:
  8870                           	opt callstack 0
  8871                           
  8872                           ; 4 bytes @ 0xAB
  8873  0002AB                     	ds	4
  8874  0002AF                     floatToEngineeringFormat@sign:
  8875                           	opt callstack 0
  8876                           
  8877                           ; 4 bytes @ 0xAF
  8878  0002AF                     	ds	4
  8879  0002B3                     floatToEngineeringFormat@res:
  8880                           	opt callstack 0
  8881                           
  8882                           ; 2 bytes @ 0xB3
  8883  0002B3                     	ds	2
  8884  0002B5                     _floatToEngineeringFormat$6044:
  8885                           	opt callstack 0
  8886                           
  8887                           ; 4 bytes @ 0xB5
  8888  0002B5                     	ds	4
  8889  0002B9                     ??_OLED_updateHandler:
  8890  0002B9                     terminalTextAttributes@background_color:
  8891                           	opt callstack 0
  8892                           
  8893                           ; 1 bytes @ 0xB9
  8894  0002B9                     	ds	1
  8895  0002BA                     terminalTextAttributes@input_attribute:
  8896                           	opt callstack 0
  8897                           
  8898                           ; 1 bytes @ 0xBA
  8899  0002BA                     	ds	1
  8900  0002BB                     ringBufferLUT@line:
  8901                           	opt callstack 0
  8902                           
  8903                           ; 2 bytes @ 0xBB
  8904  0002BB                     	ds	2
  8905  0002BD                     ??_terminal_ringBufferPull:
  8906                           
  8907                           ; 1 bytes @ 0xBD
  8908  0002BD                     	ds	1
  8909                           
  8910                           	psect	cstackBANK1
  8911  000100                     __pcstackBANK1:
  8912                           	opt callstack 0
  8913  000100                     ??_I2C2_Stop:
  8914  000100                     ?i1___xxtofl:
  8915                           	opt callstack 0
  8916  000100                     ADCC_StartConversion@channel:
  8917                           	opt callstack 0
  8918  000100                     i1TMR3_WriteTimer@timerVal:
  8919                           	opt callstack 0
  8920  000100                     i1___xxtofl@val:
  8921                           	opt callstack 0
  8922                           
  8923                           ; 4 bytes @ 0x0
  8924  000100                     	ds	1
  8925  000101                     
  8926                           ; 1 bytes @ 0x1
  8927  000101                     	ds	1
  8928  000102                     I2C2_Stop@completion_code:
  8929                           	opt callstack 0
  8930                           
  8931                           ; 1 bytes @ 0x2
  8932  000102                     	ds	1
  8933  000103                     ??_I2C2_ISR:
  8934                           
  8935                           ; 1 bytes @ 0x3
  8936  000103                     	ds	1
  8937  000104                     ??i1___xxtofl:
  8938                           
  8939                           ; 1 bytes @ 0x4
  8940  000104                     	ds	4
  8941  000108                     i1___xxtofl@sign:
  8942                           	opt callstack 0
  8943                           
  8944                           ; 1 bytes @ 0x8
  8945  000108                     	ds	1
  8946  000109                     i1___xxtofl@exp:
  8947                           	opt callstack 0
  8948                           
  8949                           ; 1 bytes @ 0x9
  8950  000109                     	ds	1
  8951  00010A                     i1___xxtofl@arg:
  8952                           	opt callstack 0
  8953                           
  8954                           ; 4 bytes @ 0xA
  8955  00010A                     	ds	4
  8956  00010E                     ?i1___fladd:
  8957                           	opt callstack 0
  8958  00010E                     i1___fladd@b:
  8959                           	opt callstack 0
  8960                           
  8961                           ; 4 bytes @ 0xE
  8962  00010E                     	ds	4
  8963  000112                     i1___fladd@a:
  8964                           	opt callstack 0
  8965                           
  8966                           ; 4 bytes @ 0x12
  8967  000112                     	ds	4
  8968  000116                     ??i1___fladd:
  8969                           
  8970                           ; 1 bytes @ 0x16
  8971  000116                     	ds	4
  8972  00011A                     i1___fladd@signs:
  8973                           	opt callstack 0
  8974                           
  8975                           ; 1 bytes @ 0x1A
  8976  00011A                     	ds	1
  8977  00011B                     i1___fladd@aexp:
  8978                           	opt callstack 0
  8979                           
  8980                           ; 1 bytes @ 0x1B
  8981  00011B                     	ds	1
  8982  00011C                     i1___fladd@bexp:
  8983                           	opt callstack 0
  8984                           
  8985                           ; 1 bytes @ 0x1C
  8986  00011C                     	ds	1
  8987  00011D                     i1___fladd@grs:
  8988                           	opt callstack 0
  8989                           
  8990                           ; 1 bytes @ 0x1D
  8991  00011D                     	ds	1
  8992  00011E                     ?i1___fldiv:
  8993                           	opt callstack 0
  8994  00011E                     i1___fldiv@b:
  8995                           	opt callstack 0
  8996                           
  8997                           ; 4 bytes @ 0x1E
  8998  00011E                     	ds	4
  8999  000122                     i1___fldiv@a:
  9000                           	opt callstack 0
  9001                           
  9002                           ; 4 bytes @ 0x22
  9003  000122                     	ds	4
  9004  000126                     ??i1___fldiv:
  9005                           
  9006                           ; 1 bytes @ 0x26
  9007  000126                     	ds	4
  9008  00012A                     i1___fldiv@rem:
  9009                           	opt callstack 0
  9010                           
  9011                           ; 4 bytes @ 0x2A
  9012  00012A                     	ds	4
  9013  00012E                     i1___fldiv@sign:
  9014                           	opt callstack 0
  9015                           
  9016                           ; 1 bytes @ 0x2E
  9017  00012E                     	ds	1
  9018  00012F                     i1___fldiv@new_exp:
  9019                           	opt callstack 0
  9020                           
  9021                           ; 2 bytes @ 0x2F
  9022  00012F                     	ds	2
  9023  000131                     i1___fldiv@grs:
  9024                           	opt callstack 0
  9025                           
  9026                           ; 4 bytes @ 0x31
  9027  000131                     	ds	4
  9028  000135                     i1___fldiv@bexp:
  9029                           	opt callstack 0
  9030                           
  9031                           ; 1 bytes @ 0x35
  9032  000135                     	ds	1
  9033  000136                     i1___fldiv@aexp:
  9034                           	opt callstack 0
  9035                           
  9036                           ; 1 bytes @ 0x36
  9037  000136                     	ds	1
  9038  000137                     ?i1___flmul:
  9039                           	opt callstack 0
  9040  000137                     i1___flmul@b:
  9041                           	opt callstack 0
  9042                           
  9043                           ; 4 bytes @ 0x37
  9044  000137                     	ds	4
  9045  00013B                     i1___flmul@a:
  9046                           	opt callstack 0
  9047                           
  9048                           ; 4 bytes @ 0x3B
  9049  00013B                     	ds	4
  9050  00013F                     ??i1___flmul:
  9051                           
  9052                           ; 1 bytes @ 0x3F
  9053  00013F                     	ds	4
  9054  000143                     i1___flmul@sign:
  9055                           	opt callstack 0
  9056                           
  9057                           ; 1 bytes @ 0x43
  9058  000143                     	ds	1
  9059  000144                     i1___flmul@grs:
  9060                           	opt callstack 0
  9061                           
  9062                           ; 4 bytes @ 0x44
  9063  000144                     	ds	4
  9064  000148                     i1___flmul@aexp:
  9065                           	opt callstack 0
  9066                           
  9067                           ; 1 bytes @ 0x48
  9068  000148                     	ds	1
  9069  000149                     i1___flmul@bexp:
  9070                           	opt callstack 0
  9071                           
  9072                           ; 1 bytes @ 0x49
  9073  000149                     	ds	1
  9074  00014A                     i1___flmul@prod:
  9075                           	opt callstack 0
  9076                           
  9077                           ; 4 bytes @ 0x4A
  9078  00014A                     	ds	4
  9079  00014E                     i1___flmul@temp:
  9080                           	opt callstack 0
  9081                           
  9082                           ; 2 bytes @ 0x4E
  9083  00014E                     	ds	2
  9084  000150                     freqMeasConvert@qi_period:
  9085                           	opt callstack 0
  9086                           
  9087                           ; 4 bytes @ 0x50
  9088  000150                     	ds	4
  9089  000154                     CCP2_CallBack@capturedValue:
  9090                           	opt callstack 0
  9091                           
  9092                           ; 2 bytes @ 0x54
  9093  000154                     	ds	2
  9094  000156                     CCP2_CaptureISR@module:
  9095                           	opt callstack 0
  9096                           
  9097                           ; 2 bytes @ 0x56
  9098  000156                     	ds	2
  9099  000158                     ??_INTERRUPT_InterruptManagerLow:
  9100                           
  9101                           ; 1 bytes @ 0x58
  9102  000158                     	ds	9
  9103                           
  9104                           	psect	cstackBANK0
  9105  000060                     __pcstackBANK0:
  9106                           	opt callstack 0
  9107  000060                     i2___fladd@signs:
  9108                           	opt callstack 0
  9109                           
  9110                           ; 1 bytes @ 0x0
  9111  000060                     	ds	1
  9112  000061                     i2___fladd@aexp:
  9113                           	opt callstack 0
  9114                           
  9115                           ; 1 bytes @ 0x1
  9116  000061                     	ds	1
  9117  000062                     i2___fladd@bexp:
  9118                           	opt callstack 0
  9119                           
  9120                           ; 1 bytes @ 0x2
  9121  000062                     	ds	1
  9122  000063                     i2___fladd@grs:
  9123                           	opt callstack 0
  9124                           
  9125                           ; 1 bytes @ 0x3
  9126  000063                     	ds	1
  9127  000064                     ?i2___flsub:
  9128                           	opt callstack 0
  9129  000064                     i2___flsub@b:
  9130                           	opt callstack 0
  9131                           
  9132                           ; 4 bytes @ 0x4
  9133  000064                     	ds	4
  9134  000068                     i2___flsub@a:
  9135                           	opt callstack 0
  9136                           
  9137                           ; 4 bytes @ 0x8
  9138  000068                     	ds	4
  9139  00006C                     ?i2__doprnt:
  9140                           	opt callstack 0
  9141  00006C                     i2__doprnt@pb:
  9142                           	opt callstack 0
  9143  00006C                     _ADC_PostProcessingHandler$6428:
  9144                           	opt callstack 0
  9145                           
  9146                           ; 4 bytes @ 0xC
  9147  00006C                     	ds	2
  9148  00006E                     i2__doprnt@f:
  9149                           	opt callstack 0
  9150                           
  9151                           ; 2 bytes @ 0xE
  9152  00006E                     	ds	2
  9153  000070                     i2__doprnt@ap:
  9154                           	opt callstack 0
  9155  000070                     _ADC_PostProcessingHandler$6429:
  9156                           	opt callstack 0
  9157                           
  9158                           ; 4 bytes @ 0x10
  9159  000070                     	ds	2
  9160  000072                     ??i2__doprnt:
  9161                           
  9162                           ; 1 bytes @ 0x12
  9163  000072                     	ds	2
  9164  000074                     _ADC_PostProcessingHandler$6430:
  9165                           	opt callstack 0
  9166                           
  9167                           ; 4 bytes @ 0x14
  9168  000074                     	ds	2
  9169  000076                     i2__doprnt$6434:
  9170                           	opt callstack 0
  9171                           
  9172                           ; 4 bytes @ 0x16
  9173  000076                     	ds	2
  9174  000078                     ADC_PostProcessingHandler@current_adc_channel:
  9175                           	opt callstack 0
  9176                           
  9177                           ; 1 bytes @ 0x18
  9178  000078                     	ds	1
  9179  000079                     ADC_PostProcessingHandler@i:
  9180                           	opt callstack 0
  9181                           
  9182                           ; 1 bytes @ 0x19
  9183  000079                     	ds	1
  9184  00007A                     ADC_PostProcessingHandler@i_3557:
  9185                           	opt callstack 0
  9186  00007A                     i2__doprnt@idx:
  9187                           	opt callstack 0
  9188                           
  9189                           ; 1 bytes @ 0x1A
  9190  00007A                     	ds	1
  9191  00007B                     i2__doprnt$4989:
  9192                           	opt callstack 0
  9193  00007B                     _ADC_PostProcessingHandler$6426:
  9194                           	opt callstack 0
  9195                           
  9196                           ; 4 bytes @ 0x1B
  9197  00007B                     	ds	2
  9198  00007D                     i2__doprnt$4990:
  9199                           	opt callstack 0
  9200                           
  9201                           ; 2 bytes @ 0x1D
  9202  00007D                     	ds	2
  9203  00007F                     i2__doprnt$4991:
  9204                           	opt callstack 0
  9205  00007F                     _ADC_PostProcessingHandler$6427:
  9206                           	opt callstack 0
  9207                           
  9208                           ; 4 bytes @ 0x1F
  9209  00007F                     	ds	2
  9210  000081                     i2__doprnt$4992:
  9211                           	opt callstack 0
  9212                           
  9213                           ; 2 bytes @ 0x21
  9214  000081                     	ds	2
  9215  000083                     i2__doprnt$4993:
  9216                           	opt callstack 0
  9217                           
  9218                           ; 2 bytes @ 0x23
  9219  000083                     	ds	2
  9220  000085                     i2__doprnt$4994:
  9221                           	opt callstack 0
  9222                           
  9223                           ; 2 bytes @ 0x25
  9224  000085                     	ds	2
  9225  000087                     i2__doprnt$4995:
  9226                           	opt callstack 0
  9227                           
  9228                           ; 2 bytes @ 0x27
  9229  000087                     	ds	2
  9230  000089                     i2__doprnt$4996:
  9231                           	opt callstack 0
  9232                           
  9233                           ; 2 bytes @ 0x29
  9234  000089                     	ds	2
  9235  00008B                     i2__doprnt@cp:
  9236                           	opt callstack 0
  9237                           
  9238                           ; 2 bytes @ 0x2B
  9239  00008B                     	ds	2
  9240  00008D                     i2__doprnt@len:
  9241                           	opt callstack 0
  9242                           
  9243                           ; 2 bytes @ 0x2D
  9244  00008D                     	ds	2
  9245  00008F                     i2__doprnt@eexp:
  9246                           	opt callstack 0
  9247                           
  9248                           ; 2 bytes @ 0x2F
  9249  00008F                     	ds	2
  9250  000091                     i2__doprnt@tmpval:
  9251                           	opt callstack 0
  9252                           
  9253                           ; 4 bytes @ 0x31
  9254  000091                     	ds	4
  9255  000095                     i2__doprnt@fval:
  9256                           	opt callstack 0
  9257                           
  9258                           ; 4 bytes @ 0x35
  9259  000095                     	ds	4
  9260  000099                     i2__doprnt@val:
  9261                           	opt callstack 0
  9262                           
  9263                           ; 4 bytes @ 0x39
  9264  000099                     	ds	4
  9265  00009D                     i2__doprnt@width:
  9266                           	opt callstack 0
  9267                           
  9268                           ; 2 bytes @ 0x3D
  9269  00009D                     	ds	2
  9270  00009F                     i2__doprnt@prec:
  9271                           	opt callstack 0
  9272                           
  9273                           ; 2 bytes @ 0x3F
  9274  00009F                     	ds	2
  9275  0000A1                     i2__doprnt@flag:
  9276                           	opt callstack 0
  9277                           
  9278                           ; 2 bytes @ 0x41
  9279  0000A1                     	ds	2
  9280  0000A3                     i2__doprnt@c:
  9281                           	opt callstack 0
  9282                           
  9283                           ; 1 bytes @ 0x43
  9284  0000A3                     	ds	1
  9285  0000A4                     ?i2_printf:
  9286                           	opt callstack 0
  9287  0000A4                     i2printf@f:
  9288                           	opt callstack 0
  9289                           
  9290                           ; 2 bytes @ 0x44
  9291  0000A4                     	ds	2
  9292  0000A6                     i2printf@ap:
  9293                           	opt callstack 0
  9294                           
  9295                           ; 2 bytes @ 0x46
  9296  0000A6                     	ds	2
  9297  0000A8                     i2printf@pb:
  9298                           	opt callstack 0
  9299                           
  9300                           ; 5 bytes @ 0x48
  9301  0000A8                     	ds	5
  9302  0000AD                     ??_INTERRUPT_InterruptManagerHigh:
  9303                           
  9304                           ; 1 bytes @ 0x4D
  9305  0000AD                     	ds	12
  9306                           
  9307                           	psect	cstackCOMRAM
  9308  000001                     __pcstackCOMRAM:
  9309                           	opt callstack 0
  9310  000001                     ??i2_isdigit:
  9311  000001                     ?_ADCC_GetConversionResult:
  9312                           	opt callstack 0
  9313  000001                     ?_ADCC_GetFilterValue:
  9314                           	opt callstack 0
  9315  000001                     ?i2___wmul:
  9316                           	opt callstack 0
  9317  000001                     ?i2___awmod:
  9318                           	opt callstack 0
  9319  000001                     ?i2___lwmod:
  9320                           	opt callstack 0
  9321  000001                     ?i2___lldiv:
  9322                           	opt callstack 0
  9323  000001                     ?i2__div_to_l_:
  9324                           	opt callstack 0
  9325  000001                     ?i2___flneg:
  9326                           	opt callstack 0
  9327  000001                     ?i2__tdiv_to_l_:
  9328                           	opt callstack 0
  9329  000001                     i2EUSART2_Write@txData:
  9330                           	opt callstack 0
  9331  000001                     i2TMR3_WriteTimer@timerVal:
  9332                           	opt callstack 0
  9333  000001                     i2TMR1_WriteTimer@timerVal:
  9334                           	opt callstack 0
  9335  000001                     i2___wmul@multiplier:
  9336                           	opt callstack 0
  9337  000001                     i2___awmod@dividend:
  9338                           	opt callstack 0
  9339  000001                     i2___lwmod@dividend:
  9340                           	opt callstack 0
  9341  000001                     i2___lldiv@dividend:
  9342                           	opt callstack 0
  9343  000001                     i2__div_to_l_@f1:
  9344                           	opt callstack 0
  9345  000001                     i2___fleq@ff1:
  9346                           	opt callstack 0
  9347  000001                     i2___flge@ff1:
  9348                           	opt callstack 0
  9349  000001                     i2___flneg@f1:
  9350                           	opt callstack 0
  9351  000001                     i2__tdiv_to_l_@f1:
  9352                           	opt callstack 0
  9353                           
  9354                           ; 4 bytes @ 0x0
  9355  000001                     	ds	1
  9356  000002                     i2putch@txData:
  9357                           	opt callstack 0
  9358  000002                     i2_isdigit$5463:
  9359                           	opt callstack 0
  9360                           
  9361                           ; 1 bytes @ 0x1
  9362  000002                     	ds	1
  9363  000003                     ??_ADCC_GetConversionResult:
  9364  000003                     ??_ADCC_GetFilterValue:
  9365  000003                     i2isdigit@c:
  9366                           	opt callstack 0
  9367  000003                     i2___wmul@multiplicand:
  9368                           	opt callstack 0
  9369  000003                     i2___awmod@divisor:
  9370                           	opt callstack 0
  9371  000003                     i2___lwmod@divisor:
  9372                           	opt callstack 0
  9373                           
  9374                           ; 2 bytes @ 0x2
  9375  000003                     	ds	2
  9376  000005                     ?_fabs:
  9377                           	opt callstack 0
  9378  000005                     ?i2___xxtofl:
  9379                           	opt callstack 0
  9380  000005                     i2___awmod@counter:
  9381                           	opt callstack 0
  9382  000005                     i2___lwmod@counter:
  9383                           	opt callstack 0
  9384  000005                     i2___wmul@product:
  9385                           	opt callstack 0
  9386  000005                     fabs@d:
  9387                           	opt callstack 0
  9388  000005                     i2___lldiv@divisor:
  9389                           	opt callstack 0
  9390  000005                     i2__div_to_l_@f2:
  9391                           	opt callstack 0
  9392  000005                     i2___fleq@ff2:
  9393                           	opt callstack 0
  9394  000005                     i2___flge@ff2:
  9395                           	opt callstack 0
  9396  000005                     i2__tdiv_to_l_@f2:
  9397                           	opt callstack 0
  9398  000005                     i2___xxtofl@val:
  9399                           	opt callstack 0
  9400                           
  9401                           ; 4 bytes @ 0x4
  9402  000005                     	ds	1
  9403  000006                     ?i2___lwdiv:
  9404                           	opt callstack 0
  9405  000006                     i2___awmod@sign:
  9406                           	opt callstack 0
  9407  000006                     i2___lwdiv@dividend:
  9408                           	opt callstack 0
  9409                           
  9410                           ; 2 bytes @ 0x5
  9411  000006                     	ds	1
  9412  000007                     ?i2___awdiv:
  9413                           	opt callstack 0
  9414  000007                     i2___awdiv@dividend:
  9415                           	opt callstack 0
  9416                           
  9417                           ; 2 bytes @ 0x6
  9418  000007                     	ds	1
  9419  000008                     i2___lwdiv@divisor:
  9420                           	opt callstack 0
  9421                           
  9422                           ; 2 bytes @ 0x7
  9423  000008                     	ds	1
  9424  000009                     ??i2___fleq:
  9425  000009                     ??i2___flge:
  9426  000009                     ??i2__tdiv_to_l_:
  9427  000009                     ??i2___xxtofl:
  9428  000009                     i2___awdiv@divisor:
  9429                           	opt callstack 0
  9430  000009                     i2___lldiv@quotient:
  9431                           	opt callstack 0
  9432  000009                     i2__div_to_l_@quot:
  9433                           	opt callstack 0
  9434                           
  9435                           ; 4 bytes @ 0x8
  9436  000009                     	ds	1
  9437  00000A                     i2___lwdiv@counter:
  9438                           	opt callstack 0
  9439                           
  9440                           ; 1 bytes @ 0x9
  9441  00000A                     	ds	1
  9442  00000B                     i2___awdiv@counter:
  9443                           	opt callstack 0
  9444  00000B                     i2___lwdiv@quotient:
  9445                           	opt callstack 0
  9446                           
  9447                           ; 2 bytes @ 0xA
  9448  00000B                     	ds	1
  9449  00000C                     i2___awdiv@sign:
  9450                           	opt callstack 0
  9451  00000C                     i2__tdiv_to_l_@quot:
  9452                           	opt callstack 0
  9453                           
  9454                           ; 4 bytes @ 0xB
  9455  00000C                     	ds	1
  9456  00000D                     i2___lldiv@counter:
  9457                           	opt callstack 0
  9458  00000D                     i2__div_to_l_@cntr:
  9459                           	opt callstack 0
  9460  00000D                     i2___xxtofl@sign:
  9461                           	opt callstack 0
  9462  00000D                     i2___awdiv@quotient:
  9463                           	opt callstack 0
  9464                           
  9465                           ; 2 bytes @ 0xC
  9466  00000D                     	ds	1
  9467  00000E                     ?i2___llmod:
  9468                           	opt callstack 0
  9469  00000E                     i2__div_to_l_@exp1:
  9470                           	opt callstack 0
  9471  00000E                     i2___xxtofl@exp:
  9472                           	opt callstack 0
  9473  00000E                     i2___llmod@dividend:
  9474                           	opt callstack 0
  9475                           
  9476                           ; 4 bytes @ 0xD
  9477  00000E                     	ds	1
  9478  00000F                     i2___xxtofl@arg:
  9479                           	opt callstack 0
  9480                           
  9481                           ; 4 bytes @ 0xE
  9482  00000F                     	ds	1
  9483  000010                     i2__tdiv_to_l_@cntr:
  9484                           	opt callstack 0
  9485                           
  9486                           ; 1 bytes @ 0xF
  9487  000010                     	ds	1
  9488  000011                     i2__tdiv_to_l_@exp1:
  9489                           	opt callstack 0
  9490                           
  9491                           ; 1 bytes @ 0x10
  9492  000011                     	ds	1
  9493  000012                     i2___llmod@divisor:
  9494                           	opt callstack 0
  9495                           
  9496                           ; 4 bytes @ 0x11
  9497  000012                     	ds	1
  9498  000013                     ?i2___fldiv:
  9499                           	opt callstack 0
  9500  000013                     i2___fldiv@b:
  9501                           	opt callstack 0
  9502                           
  9503                           ; 4 bytes @ 0x12
  9504  000013                     	ds	3
  9505  000016                     i2___llmod@counter:
  9506                           	opt callstack 0
  9507                           
  9508                           ; 1 bytes @ 0x15
  9509  000016                     	ds	1
  9510  000017                     i2___fldiv@a:
  9511                           	opt callstack 0
  9512                           
  9513                           ; 4 bytes @ 0x16
  9514  000017                     	ds	4
  9515  00001B                     ??i2___fldiv:
  9516                           
  9517                           ; 1 bytes @ 0x1A
  9518  00001B                     	ds	4
  9519  00001F                     i2___fldiv@rem:
  9520                           	opt callstack 0
  9521                           
  9522                           ; 4 bytes @ 0x1E
  9523  00001F                     	ds	4
  9524  000023                     i2___fldiv@sign:
  9525                           	opt callstack 0
  9526                           
  9527                           ; 1 bytes @ 0x22
  9528  000023                     	ds	1
  9529  000024                     i2___fldiv@new_exp:
  9530                           	opt callstack 0
  9531                           
  9532                           ; 2 bytes @ 0x23
  9533  000024                     	ds	2
  9534  000026                     i2___fldiv@grs:
  9535                           	opt callstack 0
  9536                           
  9537                           ; 4 bytes @ 0x25
  9538  000026                     	ds	4
  9539  00002A                     i2___fldiv@bexp:
  9540                           	opt callstack 0
  9541                           
  9542                           ; 1 bytes @ 0x29
  9543  00002A                     	ds	1
  9544  00002B                     i2___fldiv@aexp:
  9545                           	opt callstack 0
  9546                           
  9547                           ; 1 bytes @ 0x2A
  9548  00002B                     	ds	1
  9549  00002C                     ?i2___flmul:
  9550                           	opt callstack 0
  9551  00002C                     i2___flmul@b:
  9552                           	opt callstack 0
  9553                           
  9554                           ; 4 bytes @ 0x2B
  9555  00002C                     	ds	4
  9556  000030                     i2___flmul@a:
  9557                           	opt callstack 0
  9558                           
  9559                           ; 4 bytes @ 0x2F
  9560  000030                     	ds	4
  9561  000034                     ??i2___flmul:
  9562                           
  9563                           ; 1 bytes @ 0x33
  9564  000034                     	ds	4
  9565  000038                     i2___flmul@sign:
  9566                           	opt callstack 0
  9567                           
  9568                           ; 1 bytes @ 0x37
  9569  000038                     	ds	1
  9570  000039                     i2___flmul@aexp:
  9571                           	opt callstack 0
  9572                           
  9573                           ; 1 bytes @ 0x38
  9574  000039                     	ds	1
  9575  00003A                     i2___flmul@grs:
  9576                           	opt callstack 0
  9577                           
  9578                           ; 4 bytes @ 0x39
  9579  00003A                     	ds	4
  9580  00003E                     i2___flmul@bexp:
  9581                           	opt callstack 0
  9582                           
  9583                           ; 1 bytes @ 0x3D
  9584  00003E                     	ds	1
  9585  00003F                     i2___flmul@prod:
  9586                           	opt callstack 0
  9587                           
  9588                           ; 4 bytes @ 0x3E
  9589  00003F                     	ds	4
  9590  000043                     i2___flmul@temp:
  9591                           	opt callstack 0
  9592                           
  9593                           ; 2 bytes @ 0x42
  9594  000043                     	ds	2
  9595  000045                     ?i2_fround:
  9596                           	opt callstack 0
  9597  000045                     ?i2_scale:
  9598                           	opt callstack 0
  9599                           
  9600                           ; 4 bytes @ 0x44
  9601  000045                     	ds	4
  9602  000049                     i2_fround$6432:
  9603                           	opt callstack 0
  9604  000049                     i2_scale$6433:
  9605                           	opt callstack 0
  9606                           
  9607                           ; 4 bytes @ 0x48
  9608  000049                     	ds	4
  9609  00004D                     i2scale@scl:
  9610                           	opt callstack 0
  9611  00004D                     i2_fround$6431:
  9612                           	opt callstack 0
  9613                           
  9614                           ; 4 bytes @ 0x4C
  9615  00004D                     	ds	1
  9616  00004E                     ?i2___fltol:
  9617                           	opt callstack 0
  9618  00004E                     i2___fltol@f1:
  9619                           	opt callstack 0
  9620                           
  9621                           ; 4 bytes @ 0x4D
  9622  00004E                     	ds	3
  9623  000051                     i2fround@prec:
  9624                           	opt callstack 0
  9625                           
  9626                           ; 1 bytes @ 0x50
  9627  000051                     	ds	1
  9628  000052                     ??i2___fltol:
  9629  000052                     ?i2___fladd:
  9630                           	opt callstack 0
  9631  000052                     i2___fladd@b:
  9632                           	opt callstack 0
  9633                           
  9634                           ; 4 bytes @ 0x51
  9635  000052                     	ds	4
  9636  000056                     i2___fltol@sign1:
  9637                           	opt callstack 0
  9638  000056                     i2___fladd@a:
  9639                           	opt callstack 0
  9640                           
  9641                           ; 4 bytes @ 0x55
  9642  000056                     	ds	1
  9643  000057                     i2___fltol@exp1:
  9644                           	opt callstack 0
  9645                           
  9646                           ; 1 bytes @ 0x56
  9647  000057                     	ds	3
  9648  00005A                     ??i2___fladd:
  9649                           
  9650                           ; 1 bytes @ 0x59
  9651  00005A                     	ds	4
  9652  00005E                     ??_heartbeatTimerHandler:
  9653  00005E                     
  9654                           ; 1 bytes @ 0x5D
  9655  00005E                     	ds	1
  9656  00005F                     
  9657                           ; 1 bytes @ 0x5E
  9658 ;;
  9659 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9660 ;;
  9661 ;; *************** function _main *****************
  9662 ;; Defined at:
  9663 ;;		line 76 in file "main.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9679 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9680 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  9681 ;;Total ram usage:        2 bytes
  9682 ;; Hardware stack levels required when called:   19
  9683 ;; This function calls:
  9684 ;;		_ADCC_SetADTIInterruptHandler
  9685 ;;		_INT1_SetInterruptHandler
  9686 ;;		_INT2_SetInterruptHandler
  9687 ;;		_IOCBF2_SetInterruptHandler
  9688 ;;		_IOCBF3_SetInterruptHandler
  9689 ;;		_LM73AcquisitionHandler
  9690 ;;		_LM73TempSensorInitialize
  9691 ;;		_OLED_Clear
  9692 ;;		_OLED_Init
  9693 ;;		_OLED_updateHandler
  9694 ;;		_SYSTEM_Initialize
  9695 ;;		_TMR0_SetInterruptHandler
  9696 ;;		_TMR1_Reload
  9697 ;;		_TMR1_SetInterruptHandler
  9698 ;;		_TMR1_StopTimer
  9699 ;;		_TMR2_SetInterruptHandler
  9700 ;;		_TMR3_Reload
  9701 ;;		_TMR3_SetInterruptHandler
  9702 ;;		_TMR3_StopTimer
  9703 ;;		_TMR5_StopTimer
  9704 ;;		_TMR5_WriteTimer
  9705 ;;		_freqMeasStartCaptures
  9706 ;;		_getCauseOfReset
  9707 ;;		_getCauseOfResetString
  9708 ;;		_printCurrentMeasurements
  9709 ;;		_printf
  9710 ;;		_terminalClearScreen
  9711 ;;		_terminalSetCursorHome
  9712 ;;		_terminalTextAttributes
  9713 ;;		_terminalTextAttributesReset
  9714 ;;		_terminal_ringBufferPull
  9715 ;;		_updateErrorLEDs
  9716 ;; This function is called by:
  9717 ;;		Startup code after reset
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text0
  9722  017DA4                     __ptext0:
  9723                           	opt callstack 0
  9724  017DA4                     _main:
  9725                           	opt callstack 12
  9726                           
  9727                           ;main.c: 80: reset_cause = getCauseOfReset();
  9728                           
  9729                           ;incstack = 0
  9730  017DA4  ECDE  F0DC         	call	_getCauseOfReset	;wreg free
  9731  017DA8  0102               	movlb	2	; () banked
  9732  017DAA  6FFF               	movwf	_reset_cause& (0+255),b
  9733                           
  9734                           ; BSR set to: 2
  9735                           ;main.c: 83: _delay((unsigned long)((250)*(64000000/4000.0)));
  9736  017DAC  0E15               	movlw	21
  9737  017DAE  0103               	movlb	3	; () banked
  9738  017DB0  6FFF               	movwf	(??_main+1)& (0+255),b
  9739  017DB2  0E4B               	movlw	75
  9740  017DB4  6FFE               	movwf	??_main& (0+255),b
  9741  017DB6  0EBE               	movlw	190
  9742  017DB8                     u29277:
  9743  017DB8  2EE8               	decfsz	wreg,f,c
  9744  017DBA  D7FE               	bra	u29277
  9745  017DBC  2FFE               	decfsz	??_main& (0+255),f,b
  9746  017DBE  D7FC               	bra	u29277
  9747  017DC0  2FFF               	decfsz	(??_main+1)& (0+255),f,b
  9748  017DC2  D7FA               	bra	u29277
  9749  017DC4  F000               	nop	
  9750                           
  9751                           ;main.c: 87: SYSTEM_Initialize();
  9752  017DC6  EC9A  F0E0         	call	_SYSTEM_Initialize	;wreg free
  9753                           
  9754                           ;main.c: 90: TMR0_SetInterruptHandler(heartbeatTimerHandler);
  9755  017DCA  0E50               	movlw	low _heartbeatTimerHandler
  9756  017DCC  0102               	movlb	2	; () banked
  9757  017DCE  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9758  017DD0  0E9A               	movlw	high _heartbeatTimerHandler
  9759  017DD2  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9760  017DD4  0E01               	movlw	low (_heartbeatTimerHandler shr (0+16))
  9761  017DD6  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9762  017DD8  EC71  F0E5         	call	_TMR0_SetInterruptHandler	;wreg free
  9763                           
  9764                           ;main.c: 93: TMR2_SetInterruptHandler(ADC_acquisitionTimerHandler);
  9765  017DDC  0E16               	movlw	low _ADC_acquisitionTimerHandler
  9766  017DDE  0102               	movlb	2	; () banked
  9767  017DE0  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  9768  017DE2  0EC9               	movlw	high _ADC_acquisitionTimerHandler
  9769  017DE4  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9770  017DE6  0E01               	movlw	low (_ADC_acquisitionTimerHandler shr (0+16))
  9771  017DE8  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9772  017DEA  EC63  F0E5         	call	_TMR2_SetInterruptHandler	;wreg free
  9773                           
  9774                           ;main.c: 96: ADCC_SetADTIInterruptHandler(ADC_PostProcessingHandler);
  9775  017DEE  0E82               	movlw	low _ADC_PostProcessingHandler
  9776  017DF0  0102               	movlb	2	; () banked
  9777  017DF2  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  9778  017DF4  0E40               	movlw	high _ADC_PostProcessingHandler
  9779  017DF6  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  9780  017DF8  0E01               	movlw	low (_ADC_PostProcessingHandler shr (0+16))
  9781  017DFA  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  9782  017DFC  ECA2  F0E5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9783                           
  9784                           ;main.c: 99: INT1_SetInterruptHandler(leftCapTouchHandler);
  9785  017E00  0EBE               	movlw	low _leftCapTouchHandler
  9786  017E02  0102               	movlb	2	; () banked
  9787  017E04  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  9788  017E06  0EC9               	movlw	high _leftCapTouchHandler
  9789  017E08  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9790  017E0A  0E01               	movlw	low (_leftCapTouchHandler shr (0+16))
  9791  017E0C  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9792  017E0E  EC8D  F0E5         	call	_INT1_SetInterruptHandler	;wreg free
  9793                           
  9794                           ;main.c: 102: INT2_SetInterruptHandler(rightCapTouchHandler);
  9795  017E12  0EA8               	movlw	low _rightCapTouchHandler
  9796  017E14  0102               	movlb	2	; () banked
  9797  017E16  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  9798  017E18  0EC9               	movlw	high _rightCapTouchHandler
  9799  017E1A  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9800  017E1C  0E01               	movlw	low (_rightCapTouchHandler shr (0+16))
  9801  017E1E  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9802  017E20  EC86  F0E5         	call	_INT2_SetInterruptHandler	;wreg free
  9803                           
  9804                           ;main.c: 105: IOCBF2_SetInterruptHandler(QIIdleIOCHandler);
  9805  017E24  0EFC               	movlw	low _QIIdleIOCHandler
  9806  017E26  0102               	movlb	2	; () banked
  9807  017E28  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
  9808  017E2A  0EC9               	movlw	high _QIIdleIOCHandler
  9809  017E2C  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9810  017E2E  0E01               	movlw	low (_QIIdleIOCHandler shr (0+16))
  9811  017E30  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9812  017E32  EC7F  F0E5         	call	_IOCBF2_SetInterruptHandler	;wreg free
  9813                           
  9814                           ;main.c: 108: IOCBF3_SetInterruptHandler(QIChargeIOCHandler);
  9815  017E36  0EA8               	movlw	low _QIChargeIOCHandler
  9816  017E38  0102               	movlb	2	; () banked
  9817  017E3A  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
  9818  017E3C  0EC8               	movlw	high _QIChargeIOCHandler
  9819  017E3E  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9820  017E40  0E01               	movlw	low (_QIChargeIOCHandler shr (0+16))
  9821  017E42  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9822  017E44  EC78  F0E5         	call	_IOCBF3_SetInterruptHandler	;wreg free
  9823                           
  9824                           ;main.c: 111: TMR3_SetInterruptHandler(QIIdleChargedTimerHandler);
  9825  017E48  0E12               	movlw	low _QIIdleChargedTimerHandler
  9826  017E4A  0102               	movlb	2	; () banked
  9827  017E4C  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  9828  017E4E  0EC8               	movlw	high _QIIdleChargedTimerHandler
  9829  017E50  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9830  017E52  0E01               	movlw	low (_QIIdleChargedTimerHandler shr (0+16))
  9831  017E54  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9832  017E56  EC5C  F0E5         	call	_TMR3_SetInterruptHandler	;wreg free
  9833                           
  9834                           ;main.c: 112: TMR3_StopTimer();
  9835  017E5A  EC08  F0E6         	call	_TMR3_StopTimer	;wreg free
  9836                           
  9837                           ;main.c: 113: TMR3_Reload();
  9838  017E5E  EC4E  F0E5         	call	_TMR3_Reload	;wreg free
  9839                           
  9840                           ;main.c: 116: TMR1_SetInterruptHandler(QIErrorTimerHandler);
  9841  017E62  0E92               	movlw	low _QIErrorTimerHandler
  9842  017E64  0102               	movlb	2	; () banked
  9843  017E66  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9844  017E68  0EC9               	movlw	high _QIErrorTimerHandler
  9845  017E6A  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9846  017E6C  0E01               	movlw	low (_QIErrorTimerHandler shr (0+16))
  9847  017E6E  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9848  017E70  EC6A  F0E5         	call	_TMR1_SetInterruptHandler	;wreg free
  9849                           
  9850                           ;main.c: 117: TMR1_StopTimer();
  9851  017E74  EC0A  F0E6         	call	_TMR1_StopTimer	;wreg free
  9852                           
  9853                           ;main.c: 118: TMR1_Reload();
  9854  017E78  EC55  F0E5         	call	_TMR1_Reload	;wreg free
  9855                           
  9856                           ;main.c: 122: TMR5_StopTimer();
  9857  017E7C  EC06  F0E6         	call	_TMR5_StopTimer	;wreg free
  9858                           
  9859                           ;main.c: 123: TMR5_WriteTimer(0);
  9860  017E80  0E00               	movlw	0
  9861  017E82  0102               	movlb	2	; () banked
  9862  017E84  6F01               	movwf	(TMR5_WriteTimer@timerVal+1)& (0+255),b
  9863  017E86  0E00               	movlw	0
  9864  017E88  6F00               	movwf	TMR5_WriteTimer@timerVal& (0+255),b
  9865  017E8A  ECB9  F0E3         	call	_TMR5_WriteTimer	;wreg free
  9866                           
  9867                           ;main.c: 126: (INTCONbits.GIEH = 1);
  9868  017E8E  8EF2               	bsf	4082,7,c	;volatile
  9869                           
  9870                           ;main.c: 129: (INTCONbits.GIEL = 1);
  9871  017E90  8CF2               	bsf	4082,6,c	;volatile
  9872                           
  9873                           ;main.c: 132: terminalClearScreen();
  9874  017E92  EC46  F0E5         	call	_terminalClearScreen	;wreg free
  9875                           
  9876                           ;main.c: 133: terminalSetCursorHome();
  9877  017E96  EC3E  F0E5         	call	_terminalSetCursorHome	;wreg free
  9878                           
  9879                           ;main.c: 135: OLED_Init();
  9880  017E9A  EC8B  F0D8         	call	_OLED_Init	;wreg free
  9881                           
  9882                           ;main.c: 136: OLED_Clear();
  9883  017E9E  ECB9  F0E0         	call	_OLED_Clear	;wreg free
  9884                           
  9885                           ;main.c: 139: OLED_Frame = OLED_Boot_Frame_1;
  9886  017EA2  0E00               	movlw	0
  9887  017EA4  0102               	movlb	2	; () banked
  9888  017EA6  6FD7               	movwf	_OLED_Frame& (0+255),b
  9889                           
  9890                           ; BSR set to: 2
  9891                           ;main.c: 140: OLED_updateHandler();
  9892  017EA8  EC1E  F097         	call	_OLED_updateHandler	;wreg free
  9893                           
  9894                           ;main.c: 143: LM73TempSensorInitialize();
  9895  017EAC  EC3F  F0C9         	call	_LM73TempSensorInitialize	;wreg free
  9896                           
  9897                           ;main.c: 146: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9898  017EB0  0E00               	movlw	0
  9899  017EB2  0102               	movlb	2	; () banked
  9900  017EB4  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9901  017EB6  0E00               	movlw	0
  9902  017EB8  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9903  017EBA  0E02               	movlw	2
  9904  017EBC  EC8D  F0B3         	call	_terminalTextAttributes
  9905                           
  9906                           ;main.c: 147: printf("QI Charger with Digital Monitoring\n\r";main.c: 148: "Boot Complet
      +                          e\n\r");
  9907  017EC0  0E4C               	movlw	low STR_2
  9908  017EC2  0103               	movlb	3	; () banked
  9909  017EC4  6FEB               	movwf	printf@f& (0+255),b
  9910  017EC6  0EF1               	movlw	high STR_2
  9911  017EC8  6FEC               	movwf	(printf@f+1)& (0+255),b
  9912  017ECA  EC7B  F0E0         	call	_printf	;wreg free
  9913                           
  9914                           ;main.c: 151: if ( reset_cause != Power_On_Reset) {
  9915  017ECE  0102               	movlb	2	; () banked
  9916  017ED0  05FF               	decf	_reset_cause& (0+255),w,b
  9917  017ED2  B4D8               	btfsc	status,2,c
  9918  017ED4  D008               	goto	l22678
  9919                           
  9920                           ; BSR set to: 2
  9921                           ;main.c: 153: terminalTextAttributes(RED, BLACK, NORMAL);
  9922  017ED6  0E00               	movlw	0
  9923  017ED8  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9924  017EDA  0E00               	movlw	0
  9925  017EDC  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9926  017EDE  0E01               	movlw	1
  9927  017EE0  EC8D  F0B3         	call	_terminalTextAttributes
  9928                           
  9929                           ;main.c: 155: }
  9930  017EE4  D007               	goto	l1339
  9931  017EE6                     l22678:
  9932                           
  9933                           ; BSR set to: 2
  9934                           ;main.c: 157: else {;main.c: 159: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9935  017EE6  0E00               	movlw	0
  9936  017EE8  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9937  017EEA  0E00               	movlw	0
  9938  017EEC  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9939  017EEE  0E02               	movlw	2
  9940  017EF0  EC8D  F0B3         	call	_terminalTextAttributes
  9941  017EF4                     l1339:
  9942                           
  9943                           ;main.c: 161: };main.c: 164: printf("Cause of most recent device reset was: %s\n\r", get
      +                          CauseOfResetString(reset_cause));
  9944  017EF4  0EB8               	movlw	low STR_3
  9945  017EF6  0103               	movlb	3	; () banked
  9946  017EF8  6FEB               	movwf	printf@f& (0+255),b
  9947  017EFA  0EF3               	movlw	high STR_3
  9948  017EFC  6FEC               	movwf	(printf@f+1)& (0+255),b
  9949  017EFE  0102               	movlb	2	; () banked
  9950  017F00  51FF               	movf	_reset_cause& (0+255),w,b
  9951  017F02  EC07  F0E2         	call	_getCauseOfResetString
  9952  017F06  C200  F3ED         	movff	?_getCauseOfResetString,?_printf+2
  9953  017F0A  C201  F3EE         	movff	?_getCauseOfResetString+1,?_printf+3
  9954  017F0E  EC7B  F0E0         	call	_printf	;wreg free
  9955                           
  9956                           ;main.c: 166: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9957  017F12  0E00               	movlw	0
  9958  017F14  0102               	movlb	2	; () banked
  9959  017F16  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9960  017F18  0E00               	movlw	0
  9961  017F1A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9962  017F1C  0E02               	movlw	2
  9963  017F1E  EC8D  F0B3         	call	_terminalTextAttributes
  9964                           
  9965                           ;main.c: 168: LATCbits.LATC2 = 0;
  9966  017F22  9485               	bcf	3973,2,c	;volatile
  9967                           
  9968                           ;main.c: 169: printf("QI Wireless Power Conversion Enabled\n\r");
  9969  017F24  0ED9               	movlw	low STR_4
  9970  017F26  0103               	movlb	3	; () banked
  9971  017F28  6FEB               	movwf	printf@f& (0+255),b
  9972  017F2A  0EF4               	movlw	high STR_4
  9973  017F2C  6FEC               	movwf	(printf@f+1)& (0+255),b
  9974  017F2E  EC7B  F0E0         	call	_printf	;wreg free
  9975                           
  9976                           ;main.c: 171: terminalTextAttributes(YELLOW, BLACK, NORMAL);
  9977  017F32  0E00               	movlw	0
  9978  017F34  0102               	movlb	2	; () banked
  9979  017F36  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9980  017F38  0E00               	movlw	0
  9981  017F3A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9982  017F3C  0E03               	movlw	3
  9983  017F3E  EC8D  F0B3         	call	_terminalTextAttributes
  9984                           
  9985                           ;main.c: 172: printf("\n\rHelp messages and neutral responses appear in yellow\n\r");
  9986  017F42  0E62               	movlw	low STR_5
  9987  017F44  0103               	movlb	3	; () banked
  9988  017F46  6FEB               	movwf	printf@f& (0+255),b
  9989  017F48  0EEF               	movlw	high STR_5
  9990  017F4A  6FEC               	movwf	(printf@f+1)& (0+255),b
  9991  017F4C  EC7B  F0E0         	call	_printf	;wreg free
  9992                           
  9993                           ;main.c: 173: terminalTextAttributes(GREEN, BLACK, NORMAL);
  9994  017F50  0E00               	movlw	0
  9995  017F52  0102               	movlb	2	; () banked
  9996  017F54  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
  9997  017F56  0E00               	movlw	0
  9998  017F58  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
  9999  017F5A  0E02               	movlw	2
 10000  017F5C  EC8D  F0B3         	call	_terminalTextAttributes
 10001                           
 10002                           ;main.c: 174: printf("System parameters and affirmative responses appear in green\n\r");
 10003  017F60  0E0E               	movlw	low STR_6
 10004  017F62  0103               	movlb	3	; () banked
 10005  017F64  6FEB               	movwf	printf@f& (0+255),b
 10006  017F66  0EED               	movlw	high STR_6
 10007  017F68  6FEC               	movwf	(printf@f+1)& (0+255),b
 10008  017F6A  EC7B  F0E0         	call	_printf	;wreg free
 10009                           
 10010                           ;main.c: 175: terminalTextAttributes(CYAN, BLACK, NORMAL);
 10011  017F6E  0E00               	movlw	0
 10012  017F70  0102               	movlb	2	; () banked
 10013  017F72  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10014  017F74  0E00               	movlw	0
 10015  017F76  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10016  017F78  0E06               	movlw	6
 10017  017F7A  EC8D  F0B3         	call	_terminalTextAttributes
 10018                           
 10019                           ;main.c: 176: printf("Measurement responses appear in cyan\n\r");
 10020  017F7E  0E00               	movlw	low STR_7
 10021  017F80  0103               	movlb	3	; () banked
 10022  017F82  6FEB               	movwf	printf@f& (0+255),b
 10023  017F84  0EF5               	movlw	high STR_7
 10024  017F86  6FEC               	movwf	(printf@f+1)& (0+255),b
 10025  017F88  EC7B  F0E0         	call	_printf	;wreg free
 10026                           
 10027                           ;main.c: 177: terminalTextAttributes(RED, BLACK, NORMAL);
 10028  017F8C  0E00               	movlw	0
 10029  017F8E  0102               	movlb	2	; () banked
 10030  017F90  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10031  017F92  0E00               	movlw	0
 10032  017F94  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10033  017F96  0E01               	movlw	1
 10034  017F98  EC8D  F0B3         	call	_terminalTextAttributes
 10035                           
 10036                           ;main.c: 178: printf("Errors and negative responses appear in red\n\r");
 10037  017F9C  0E04               	movlw	low STR_8
 10038  017F9E  0103               	movlb	3	; () banked
 10039  017FA0  6FEB               	movwf	printf@f& (0+255),b
 10040  017FA2  0EF3               	movlw	high STR_8
 10041  017FA4  6FEC               	movwf	(printf@f+1)& (0+255),b
 10042  017FA6  EC7B  F0E0         	call	_printf	;wreg free
 10043                           
 10044                           ;main.c: 179: terminalTextAttributesReset();
 10045  017FAA  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 10046                           
 10047                           ;main.c: 180: printf("User input appears in white\n\r");
 10048  017FAE  0ED5               	movlw	low STR_9
 10049  017FB0  0103               	movlb	3	; () banked
 10050  017FB2  6FEB               	movwf	printf@f& (0+255),b
 10051  017FB4  0EF7               	movlw	high STR_9
 10052  017FB6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10053  017FB8  EC7B  F0E0         	call	_printf	;wreg free
 10054                           
 10055                           ;main.c: 181: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 10056  017FBC  0E00               	movlw	0
 10057  017FBE  0102               	movlb	2	; () banked
 10058  017FC0  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10059  017FC2  0E00               	movlw	0
 10060  017FC4  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10061  017FC6  0E03               	movlw	3
 10062  017FC8  EC8D  F0B3         	call	_terminalTextAttributes
 10063                           
 10064                           ;main.c: 182: printf("\n\rCall 'Help' for list of supported commands\n\r");
 10065  017FCC  0EA7               	movlw	low STR_10
 10066  017FCE  0103               	movlb	3	; () banked
 10067  017FD0  6FEB               	movwf	printf@f& (0+255),b
 10068  017FD2  0EF2               	movlw	high STR_10
 10069  017FD4  6FEC               	movwf	(printf@f+1)& (0+255),b
 10070  017FD6  EC7B  F0E0         	call	_printf	;wreg free
 10071                           
 10072                           ;main.c: 185: terminalTextAttributesReset();
 10073  017FDA  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 10074                           
 10075                           ;main.c: 188: if (PORTBbits.RB3 == 0 && PORTBbits.RB2 == 0) nxq_charge_state = QI_Idle;
 10076  017FDE  A68E               	btfss	3982,3,c	;volatile
 10077  017FE0  B48E               	btfsc	3982,2,c	;volatile
 10078  017FE2  D002               	goto	l1340
 10079  017FE4  0E00               	movlw	0
 10080  017FE6  D004               	goto	L1
 10081  017FE8                     l1340:
 10082                           
 10083                           ;main.c: 189: else if (PORTBbits.RB3 == 1 && PORTBbits.RB2 == 1) nxq_charge_state = QI_F
      +                          ully_Charged;
 10084  017FE8  B68E               	btfsc	3982,3,c	;volatile
 10085  017FEA  A48E               	btfss	3982,2,c	;volatile
 10086  017FEC  D003               	goto	l22692
 10087  017FEE  0E02               	movlw	2
 10088  017FF0                     L1:
 10089  017FF0  0101               	movlb	1	; () banked
 10090  017FF2  6F8F               	movwf	_nxq_charge_state& (0+255),b
 10091  017FF4                     l22692:
 10092                           
 10093                           ;main.c: 195: if (eusart2RxStringReady) terminal_ringBufferPull();
 10094  017FF4  0100               	movlb	0	; () banked
 10095  017FF6  B1FD               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10096                           
 10097                           ; BSR set to: 0
 10098  017FF8  ECE8  F0D2         	call	_terminal_ringBufferPull	;wreg free
 10099                           
 10100                           ;main.c: 198: if (OLED_update_flag) OLED_updateHandler();
 10101  017FFC  0102               	movlb	2	; () banked
 10102  017FFE  51D6               	movf	_OLED_update_flag& (0+255),w,b
 10103  018000  A4D8               	btfss	status,2,c
 10104                           
 10105                           ; BSR set to: 2
 10106  018002  EC1E  F097         	call	_OLED_updateHandler	;wreg free
 10107                           
 10108                           ;main.c: 201: if (LM73_start_flag) LM73AcquisitionHandler();
 10109  018006  0102               	movlb	2	; () banked
 10110  018008  51D8               	movf	_LM73_start_flag& (0+255),w,b
 10111  01800A  A4D8               	btfss	status,2,c
 10112                           
 10113                           ; BSR set to: 2
 10114  01800C  EC5B  F0CA         	call	_LM73AcquisitionHandler	;wreg free
 10115                           
 10116                           ;main.c: 204: if (freq_meas_start_flag) freqMeasStartCaptures();
 10117  018010  0102               	movlb	2	; () banked
 10118  018012  51DA               	movf	_freq_meas_start_flag& (0+255),w,b
 10119  018014  A4D8               	btfss	status,2,c
 10120                           
 10121                           ; BSR set to: 2
 10122  018016  ECDD  F0E5         	call	_freqMeasStartCaptures	;wreg free
 10123                           
 10124                           ;main.c: 207: if (live_measurement_request_flag) {
 10125  01801A  0102               	movlb	2	; () banked
 10126  01801C  51D9               	movf	_live_measurement_request_flag& (0+255),w,b
 10127  01801E  B4D8               	btfsc	status,2,c
 10128  018020  D028               	goto	l22728
 10129                           
 10130                           ; BSR set to: 2
 10131                           ;main.c: 209: live_measurement_request_flag = 0;
 10132  018022  0E00               	movlw	0
 10133  018024  6FD9               	movwf	_live_measurement_request_flag& (0+255),b
 10134                           
 10135                           ; BSR set to: 2
 10136                           ;main.c: 211: terminalClearScreen();
 10137  018026  EC46  F0E5         	call	_terminalClearScreen	;wreg free
 10138                           
 10139                           ;main.c: 212: terminalSetCursorHome();
 10140  01802A  EC3E  F0E5         	call	_terminalSetCursorHome	;wreg free
 10141                           
 10142                           ;main.c: 214: terminalTextAttributes(GREEN, BLACK, BOLD);
 10143  01802E  0E00               	movlw	0
 10144  018030  0102               	movlb	2	; () banked
 10145  018032  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10146  018034  0E01               	movlw	1
 10147  018036  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10148  018038  0E02               	movlw	2
 10149  01803A  EC8D  F0B3         	call	_terminalTextAttributes
 10150                           
 10151                           ;main.c: 215: printf("Live Measurements:\n\r\n\r");
 10152  01803E  0ED7               	movlw	low STR_11
 10153  018040  0103               	movlb	3	; () banked
 10154  018042  6FEB               	movwf	printf@f& (0+255),b
 10155  018044  0EF9               	movlw	high STR_11
 10156  018046  6FEC               	movwf	(printf@f+1)& (0+255),b
 10157  018048  EC7B  F0E0         	call	_printf	;wreg free
 10158                           
 10159                           ;main.c: 217: printCurrentMeasurements();
 10160  01804C  ECF4  F0AA         	call	_printCurrentMeasurements	;wreg free
 10161                           
 10162                           ;main.c: 219: terminalTextAttributes(YELLOW, BLACK, REVERSE);
 10163  018050  0E00               	movlw	0
 10164  018052  0102               	movlb	2	; () banked
 10165  018054  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10166  018056  0E04               	movlw	4
 10167  018058  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10168  01805A  0E03               	movlw	3
 10169  01805C  EC8D  F0B3         	call	_terminalTextAttributes
 10170                           
 10171                           ;main.c: 220: printf("Press enter key to exit\n\r");
 10172  018060  0ED1               	movlw	low STR_12
 10173  018062  0103               	movlb	3	; () banked
 10174  018064  6FEB               	movwf	printf@f& (0+255),b
 10175  018066  0EF8               	movlw	high STR_12
 10176  018068  6FEC               	movwf	(printf@f+1)& (0+255),b
 10177  01806A  EC7B  F0E0         	call	_printf	;wreg free
 10178                           
 10179                           ;main.c: 221: terminalTextAttributesReset();
 10180  01806E  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 10181  018072                     l22728:
 10182                           
 10183                           ;main.c: 223: };main.c: 226: updateErrorLEDs();
 10184  018072  EC0B  F0DF         	call	_updateErrorLEDs	;wreg free
 10185  018076  D7BE               	goto	l22692
 10186  018078                     __end_of_main:
 10187                           	opt callstack 0
 10188                           
 10189 ;; *************** function _terminal_ringBufferPull *****************
 10190 ;; Defined at:
 10191 ;;		line 6 in file "ring_buffer_interface.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;		None
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;  index           2   20[BANK5 ] int 
 10196 ;;  index           2   22[BANK5 ] int 
 10197 ;;  charNumber      2   18[BANK5 ] int 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       6       0       0       0       0       0       
      +0       0       0       0
 10209 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;      Totals:         0       0       0       1       0       0       6       0       0       0       0       0       
      +0       0       0       0
 10211 ;;Total ram usage:        7 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:   18
 10214 ;; This function calls:
 10215 ;;		_EUSART2_Read
 10216 ;;		_ringBufferLUT
 10217 ;;		_strlen
 10218 ;; This function is called by:
 10219 ;;		_main
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text1
 10224  01A5D0                     __ptext1:
 10225                           	opt callstack 0
 10226  01A5D0                     _terminal_ringBufferPull:
 10227                           	opt callstack 12
 10228                           
 10229                           ;ring_buffer_interface.c: 8: int charNumber = eusart2RxCount;
 10230                           
 10231                           ;incstack = 0
 10232  01A5D0  C191  F512         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 10233  01A5D4  0105               	movlb	5	; () banked
 10234  01A5D6  6B13               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 10235                           
 10236                           ; BSR set to: 5
 10237                           ;ring_buffer_interface.c: 11: for (int index = 0; index < 64; index++) {
 10238  01A5D8  0E00               	movlw	0
 10239  01A5DA  6F17               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 10240  01A5DC  0E00               	movlw	0
 10241  01A5DE  6F16               	movwf	terminal_ringBufferPull@index& (0+255),b
 10242  01A5E0                     l22410:
 10243                           
 10244                           ; BSR set to: 5
 10245                           ;ring_buffer_interface.c: 13: line[index] = '\0';
 10246  01A5E0  0E44               	movlw	low _line
 10247  01A5E2  2516               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 10248  01A5E4  6ED9               	movwf	fsr2l,c
 10249  01A5E6  0E03               	movlw	high _line
 10250  01A5E8  2117               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 10251  01A5EA  6EDA               	movwf	fsr2h,c
 10252  01A5EC  0E00               	movlw	0
 10253  01A5EE  6EDF               	movwf	indf2,c
 10254                           
 10255                           ; BSR set to: 5
 10256  01A5F0  4B16               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 10257  01A5F2  2B17               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 10258                           
 10259                           ; BSR set to: 5
 10260  01A5F4  BF17               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 10261  01A5F6  D7F4               	goto	l22410
 10262  01A5F8  5117               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 10263  01A5FA  E104               	bnz	u28400
 10264  01A5FC  0E40               	movlw	64
 10265  01A5FE  5D16               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 10266  01A600  A0D8               	btfss	status,0,c
 10267  01A602  D7EE               	goto	l22410
 10268  01A604                     u28400:
 10269                           
 10270                           ; BSR set to: 5
 10271                           ;ring_buffer_interface.c: 15: };ring_buffer_interface.c: 18: for(int index = 0; index < 
      +                          charNumber; index++){
 10272  01A604  0E00               	movlw	0
 10273  01A606  6F15               	movwf	(terminal_ringBufferPull@index_4754+1)& (0+255),b
 10274  01A608  0E00               	movlw	0
 10275  01A60A  6F14               	movwf	terminal_ringBufferPull@index_4754& (0+255),b
 10276  01A60C  D00F               	goto	l22422
 10277  01A60E                     l22418:
 10278                           
 10279                           ; BSR set to: 2
 10280                           ;ring_buffer_interface.c: 20: line[index] = EUSART2_Read();
 10281  01A60E  EC5C  F0E0         	call	_EUSART2_Read	;wreg free
 10282  01A612  0102               	movlb	2	; () banked
 10283  01A614  6FBD               	movwf	??_terminal_ringBufferPull& (0+255),b
 10284  01A616  0E44               	movlw	low _line
 10285  01A618  0105               	movlb	5	; () banked
 10286  01A61A  2514               	addwf	terminal_ringBufferPull@index_4754& (0+255),w,b
 10287  01A61C  6ED9               	movwf	fsr2l,c
 10288  01A61E  0E03               	movlw	high _line
 10289  01A620  2115               	addwfc	(terminal_ringBufferPull@index_4754+1)& (0+255),w,b
 10290  01A622  6EDA               	movwf	fsr2h,c
 10291  01A624  C2BD  FFDF         	movff	??_terminal_ringBufferPull,indf2
 10292                           
 10293                           ; BSR set to: 5
 10294  01A628  4B14               	infsnz	terminal_ringBufferPull@index_4754& (0+255),f,b
 10295  01A62A  2B15               	incf	(terminal_ringBufferPull@index_4754+1)& (0+255),f,b
 10296  01A62C                     l22422:
 10297                           
 10298                           ; BSR set to: 5
 10299  01A62C  5112               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 10300  01A62E  5D14               	subwf	terminal_ringBufferPull@index_4754& (0+255),w,b
 10301  01A630  5115               	movf	(terminal_ringBufferPull@index_4754+1)& (0+255),w,b
 10302  01A632  0A80               	xorlw	128
 10303  01A634  0102               	movlb	2	; () banked
 10304  01A636  6FBD               	movwf	??_terminal_ringBufferPull& (0+255),b
 10305  01A638  0105               	movlb	5	; () banked
 10306  01A63A  5113               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 10307  01A63C  0A80               	xorlw	128
 10308  01A63E  0102               	movlb	2	; () banked
 10309  01A640  59BD               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 10310  01A642  A0D8               	btfss	status,0,c
 10311  01A644  D7E4               	goto	l22418
 10312                           
 10313                           ; BSR set to: 2
 10314                           ;ring_buffer_interface.c: 22: };ring_buffer_interface.c: 25: eusart2RxTail = eusart2RxHe
      +                          ad;
 10315  01A646  C0DC  F192         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 10316                           
 10317                           ;ring_buffer_interface.c: 28: while((line[strlen(line) - 1] == (int) '\n') ||;ring_buffe
      +                          r_interface.c: 29: (line[strlen(line) - 1] == (int) '\r')) {
 10318  01A64A  D00F               	goto	l2300
 10319  01A64C                     l22424:
 10320                           
 10321                           ; BSR set to: 2
 10322                           ;ring_buffer_interface.c: 32: line[strlen(line) - 1] = '\0';
 10323  01A64C  0E44               	movlw	low _line
 10324  01A64E  6F00               	movwf	strlen@s& (0+255),b
 10325  01A650  0E03               	movlw	high _line
 10326  01A652  6F01               	movwf	(strlen@s+1)& (0+255),b
 10327  01A654  EC67  F0E2         	call	_strlen	;wreg free
 10328  01A658  0E43               	movlw	low (_line+65535)
 10329  01A65A  0102               	movlb	2	; () banked
 10330  01A65C  2500               	addwf	?_strlen& (0+255),w,b
 10331  01A65E  6ED9               	movwf	fsr2l,c
 10332  01A660  0E03               	movlw	high (_line+65535)
 10333  01A662  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10334  01A664  6EDA               	movwf	fsr2h,c
 10335  01A666  0E00               	movlw	0
 10336  01A668  6EDF               	movwf	indf2,c
 10337  01A66A                     l2300:
 10338                           
 10339                           ; BSR set to: 2
 10340  01A66A  0E44               	movlw	low _line
 10341  01A66C  6F00               	movwf	strlen@s& (0+255),b
 10342  01A66E  0E03               	movlw	high _line
 10343  01A670  6F01               	movwf	(strlen@s+1)& (0+255),b
 10344  01A672  EC67  F0E2         	call	_strlen	;wreg free
 10345  01A676  0E43               	movlw	low (_line+65535)
 10346  01A678  0102               	movlb	2	; () banked
 10347  01A67A  2500               	addwf	?_strlen& (0+255),w,b
 10348  01A67C  6ED9               	movwf	fsr2l,c
 10349  01A67E  0E03               	movlw	high (_line+65535)
 10350  01A680  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10351  01A682  6EDA               	movwf	fsr2h,c
 10352  01A684  0E0A               	movlw	10
 10353  01A686  18DE               	xorwf	postinc2,w,c
 10354  01A688  B4D8               	btfsc	status,2,c
 10355  01A68A  D7E0               	goto	l22424
 10356                           
 10357                           ; BSR set to: 2
 10358  01A68C  0E44               	movlw	low _line
 10359  01A68E  6F00               	movwf	strlen@s& (0+255),b
 10360  01A690  0E03               	movlw	high _line
 10361  01A692  6F01               	movwf	(strlen@s+1)& (0+255),b
 10362  01A694  EC67  F0E2         	call	_strlen	;wreg free
 10363  01A698  0E43               	movlw	low (_line+65535)
 10364  01A69A  0102               	movlb	2	; () banked
 10365  01A69C  2500               	addwf	?_strlen& (0+255),w,b
 10366  01A69E  6ED9               	movwf	fsr2l,c
 10367  01A6A0  0E03               	movlw	high (_line+65535)
 10368  01A6A2  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10369  01A6A4  6EDA               	movwf	fsr2h,c
 10370  01A6A6  0E0D               	movlw	13
 10371  01A6A8  18DE               	xorwf	postinc2,w,c
 10372  01A6AA  B4D8               	btfsc	status,2,c
 10373  01A6AC  D7CF               	goto	l22424
 10374                           
 10375                           ; BSR set to: 2
 10376                           ;ring_buffer_interface.c: 34: };ring_buffer_interface.c: 38: eusart2RxStringReady = 0;
 10377  01A6AE  0100               	movlb	0	; () banked
 10378  01A6B0  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;ring_buffer_interface.c: 41: ringBufferLUT(line);
 10382  01A6B2  0E44               	movlw	low _line
 10383  01A6B4  0102               	movlb	2	; () banked
 10384  01A6B6  6FBB               	movwf	ringBufferLUT@line& (0+255),b
 10385  01A6B8  0E03               	movlw	high _line
 10386  01A6BA  6FBC               	movwf	(ringBufferLUT@line+1)& (0+255),b
 10387  01A6BC  EC1D  F0A8         	call	_ringBufferLUT	;wreg free
 10388  01A6C0  0012               	return		;funcret
 10389  01A6C2                     __end_of_terminal_ringBufferPull:
 10390                           	opt callstack 0
 10391                           
 10392 ;; *************** function _ringBufferLUT *****************
 10393 ;; Defined at:
 10394 ;;		line 20 in file "ring_buffer_LUT.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;  line            2  187[BANK2 ] PTR unsigned char 
 10397 ;;		 -> line(64), 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  userID          2   43[BANK3 ] int 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10409 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10410 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;      Totals:         0       0       0       2       4       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;Total ram usage:        6 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:   17
 10416 ;; This function calls:
 10417 ;;		_clearADCErrors
 10418 ;;		_clearI2CErrors
 10419 ;;		_clearUARTErrors
 10420 ;;		_getCauseOfResetString
 10421 ;;		_getDeviceID
 10422 ;;		_getDeviceIDString
 10423 ;;		_getMajorRevisionID
 10424 ;;		_getMinorRevisionID
 10425 ;;		_getStringSecondsAsTime
 10426 ;;		_getUserID
 10427 ;;		_printCurrentMeasurements
 10428 ;;		_printErrorHandlerStatus
 10429 ;;		_printf
 10430 ;;		_strcmp
 10431 ;;		_strlen
 10432 ;;		_terminalTextAttributes
 10433 ;;		_terminalTextAttributesReset
 10434 ;; This function is called by:
 10435 ;;		_terminal_ringBufferPull
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text2
 10440  01503A                     __ptext2:
 10441                           	opt callstack 0
 10442  01503A                     _ringBufferLUT:
 10443                           	opt callstack 12
 10444                           
 10445                           ;ring_buffer_LUT.c: 26: if((0 == strcmp(line, "Reset"))) {
 10446                           
 10447                           ;incstack = 0
 10448  01503A  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10449  01503E  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10450  015042  0E43               	movlw	low (STR_40+5)
 10451  015044  0102               	movlb	2	; () banked
 10452  015046  6F02               	movwf	strcmp@s2& (0+255),b
 10453  015048  0EFE               	movlw	high (STR_40+5)
 10454  01504A  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10455  01504C  ECB3  F0DD         	call	_strcmp	;wreg free
 10456  015050  0102               	movlb	2	; () banked
 10457  015052  5100               	movf	?_strcmp& (0+255),w,b
 10458  015054  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10459  015056  A4D8               	btfss	status,2,c
 10460  015058  D010               	goto	l21398
 10461                           
 10462                           ; BSR set to: 2
 10463                           ;ring_buffer_LUT.c: 29: printf("\033[2J");
 10464  01505A  0E95               	movlw	low STR_192
 10465  01505C  0103               	movlb	3	; () banked
 10466  01505E  6FEB               	movwf	printf@f& (0+255),b
 10467  015060  0EFF               	movlw	high STR_192
 10468  015062  6FEC               	movwf	(printf@f+1)& (0+255),b
 10469  015064  EC7B  F0E0         	call	_printf	;wreg free
 10470                           
 10471                           ;ring_buffer_LUT.c: 32: printf("\033[H");
 10472  015068  0EBB               	movlw	low STR_193
 10473  01506A  0103               	movlb	3	; () banked
 10474  01506C  6FEB               	movwf	printf@f& (0+255),b
 10475  01506E  0EFF               	movlw	high STR_193
 10476  015070  6FEC               	movwf	(printf@f+1)& (0+255),b
 10477  015072  EC7B  F0E0         	call	_printf	;wreg free
 10478  015076  00FF               	reset		;# 
 10479                           
 10480                           ;ring_buffer_LUT.c: 37: }
 10481  015078  0012               	return	
 10482  01507A                     l21398:
 10483                           
 10484                           ; BSR set to: 2
 10485                           ;ring_buffer_LUT.c: 40: else if((0 == strcmp(line, "Clear"))) {
 10486  01507A  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10487  01507E  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10488  015082  0E7E               	movlw	low STR_194
 10489  015084  6F02               	movwf	strcmp@s2& (0+255),b
 10490  015086  0EFF               	movlw	high STR_194
 10491  015088  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10492  01508A  ECB3  F0DD         	call	_strcmp	;wreg free
 10493  01508E  0102               	movlb	2	; () banked
 10494  015090  5100               	movf	?_strcmp& (0+255),w,b
 10495  015092  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10496  015094  A4D8               	btfss	status,2,c
 10497  015096  D00F               	goto	l21402
 10498                           
 10499                           ; BSR set to: 2
 10500                           ;ring_buffer_LUT.c: 43: printf("\033[2J");
 10501  015098  0E95               	movlw	low STR_192
 10502  01509A  0103               	movlb	3	; () banked
 10503  01509C  6FEB               	movwf	printf@f& (0+255),b
 10504  01509E  0EFF               	movlw	high STR_192
 10505  0150A0  6FEC               	movwf	(printf@f+1)& (0+255),b
 10506  0150A2  EC7B  F0E0         	call	_printf	;wreg free
 10507                           
 10508                           ;ring_buffer_LUT.c: 46: printf("\033[H");
 10509  0150A6  0EBB               	movlw	low STR_193
 10510  0150A8  0103               	movlb	3	; () banked
 10511  0150AA  6FEB               	movwf	printf@f& (0+255),b
 10512  0150AC  0EFF               	movlw	high STR_193
 10513  0150AE  6FEC               	movwf	(printf@f+1)& (0+255),b
 10514  0150B0  EC7B  F0E0         	call	_printf	;wreg free
 10515                           
 10516                           ;ring_buffer_LUT.c: 48: }
 10517  0150B4  0012               	return	
 10518  0150B6                     l21402:
 10519                           
 10520                           ; BSR set to: 2
 10521                           ;ring_buffer_LUT.c: 51: else if((0 == strcmp(line, "*IDN?"))) {
 10522  0150B6  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10523  0150BA  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10524  0150BE  0E78               	movlw	low STR_197
 10525  0150C0  6F02               	movwf	strcmp@s2& (0+255),b
 10526  0150C2  0EFF               	movlw	high STR_197
 10527  0150C4  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10528  0150C6  ECB3  F0DD         	call	_strcmp	;wreg free
 10529  0150CA  0102               	movlb	2	; () banked
 10530  0150CC  5100               	movf	?_strcmp& (0+255),w,b
 10531  0150CE  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10532  0150D0  A4D8               	btfss	status,2,c
 10533  0150D2  D011               	goto	l21406
 10534                           
 10535                           ; BSR set to: 2
 10536                           ;ring_buffer_LUT.c: 53: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10537  0150D4  0E00               	movlw	0
 10538  0150D6  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10539  0150D8  0E00               	movlw	0
 10540  0150DA  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10541  0150DC  0E02               	movlw	2
 10542  0150DE  EC8D  F0B3         	call	_terminalTextAttributes
 10543                           
 10544                           ;ring_buffer_LUT.c: 54: printf("QI Charger with Digital Monitoring, by Drew Maatman\n\r"
      +                          );
 10545  0150E2  0E42               	movlw	low STR_198
 10546  0150E4  0103               	movlb	3	; () banked
 10547  0150E6  6FEB               	movwf	printf@f& (0+255),b
 10548  0150E8  0EF0               	movlw	high STR_198
 10549  0150EA  6FEC               	movwf	(printf@f+1)& (0+255),b
 10550  0150EC  EC7B  F0E0         	call	_printf	;wreg free
 10551                           
 10552                           ;ring_buffer_LUT.c: 55: terminalTextAttributesReset();
 10553  0150F0  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 10554                           
 10555                           ;ring_buffer_LUT.c: 57: }
 10556  0150F4  0012               	return	
 10557  0150F6                     l21406:
 10558                           
 10559                           ; BSR set to: 2
 10560                           ;ring_buffer_LUT.c: 60: else if (0 == strcmp(line, "Device Status?")) {
 10561  0150F6  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10562  0150FA  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10563  0150FE  0EC2               	movlw	low STR_199
 10564  015100  6F02               	movwf	strcmp@s2& (0+255),b
 10565  015102  0EFB               	movlw	high STR_199
 10566  015104  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10567  015106  ECB3  F0DD         	call	_strcmp	;wreg free
 10568  01510A  0102               	movlb	2	; () banked
 10569  01510C  5100               	movf	?_strcmp& (0+255),w,b
 10570  01510E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10571  015110  A4D8               	btfss	status,2,c
 10572  015112  D0D3               	goto	l21424
 10573                           
 10574                           ; BSR set to: 2
 10575                           ;ring_buffer_LUT.c: 62: printf("\n\r");
 10576  015114  0EEB               	movlw	low (STR_11+20)
 10577  015116  0103               	movlb	3	; () banked
 10578  015118  6FEB               	movwf	printf@f& (0+255),b
 10579  01511A  0EF9               	movlw	high (STR_11+20)
 10580  01511C  6FEC               	movwf	(printf@f+1)& (0+255),b
 10581  01511E  EC7B  F0E0         	call	_printf	;wreg free
 10582                           
 10583                           ;ring_buffer_LUT.c: 64: terminalTextAttributes(GREEN, BLACK, BOLD);
 10584  015122  0E00               	movlw	0
 10585  015124  0102               	movlb	2	; () banked
 10586  015126  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10587  015128  0E01               	movlw	1
 10588  01512A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10589  01512C  0E02               	movlw	2
 10590  01512E  EC8D  F0B3         	call	_terminalTextAttributes
 10591                           
 10592                           ;ring_buffer_LUT.c: 66: printf("Digital Monitoring Microcontroller Status:\n\r");
 10593  015132  0E5F               	movlw	low STR_201
 10594  015134  0103               	movlb	3	; () banked
 10595  015136  6FEB               	movwf	printf@f& (0+255),b
 10596  015138  0EF3               	movlw	high STR_201
 10597  01513A  6FEC               	movwf	(printf@f+1)& (0+255),b
 10598  01513C  EC7B  F0E0         	call	_printf	;wreg free
 10599                           
 10600                           ;ring_buffer_LUT.c: 68: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10601  015140  0E00               	movlw	0
 10602  015142  0102               	movlb	2	; () banked
 10603  015144  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10604  015146  0E00               	movlw	0
 10605  015148  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10606  01514A  0E02               	movlw	2
 10607  01514C  EC8D  F0B3         	call	_terminalTextAttributes
 10608                           
 10609                           ;ring_buffer_LUT.c: 70: printf("\n\r");
 10610  015150  0EEB               	movlw	low (STR_11+20)
 10611  015152  0103               	movlb	3	; () banked
 10612  015154  6FEB               	movwf	printf@f& (0+255),b
 10613  015156  0EF9               	movlw	high (STR_11+20)
 10614  015158  6FEC               	movwf	(printf@f+1)& (0+255),b
 10615  01515A  EC7B  F0E0         	call	_printf	;wreg free
 10616                           
 10617                           ;ring_buffer_LUT.c: 73: printf("    Device ID retrieved from flash: %s (0x%04X)\n\r",;ri
      +                          ng_buffer_LUT.c: 74: getDeviceIDString(getDeviceID()),;ring_buffer_LUT.c: 75: getDeviceI
      +                          D());
 10618  01515E  0E80               	movlw	low STR_203
 10619  015160  0103               	movlb	3	; () banked
 10620  015162  6FEB               	movwf	printf@f& (0+255),b
 10621  015164  0EF1               	movlw	high STR_203
 10622  015166  6FEC               	movwf	(printf@f+1)& (0+255),b
 10623  015168  ECF9  F0E3         	call	_getDeviceID	;wreg free
 10624  01516C  C20B  F20D         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 10625  015170  C20C  F20E         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 10626  015174  EC3F  F0D8         	call	_getDeviceIDString	;wreg free
 10627  015178  C20D  F3ED         	movff	?_getDeviceIDString,?_printf+2
 10628  01517C  C20E  F3EE         	movff	?_getDeviceIDString+1,?_printf+3
 10629  015180  ECF9  F0E3         	call	_getDeviceID	;wreg free
 10630  015184  C20B  F3EF         	movff	?_getDeviceID,?_printf+4
 10631  015188  C20C  F3F0         	movff	?_getDeviceID+1,?_printf+5
 10632  01518C  EC7B  F0E0         	call	_printf	;wreg free
 10633                           
 10634                           ;ring_buffer_LUT.c: 77: printf("\n\r");
 10635  015190  0EEB               	movlw	low (STR_11+20)
 10636  015192  0103               	movlb	3	; () banked
 10637  015194  6FEB               	movwf	printf@f& (0+255),b
 10638  015196  0EF9               	movlw	high (STR_11+20)
 10639  015198  6FEC               	movwf	(printf@f+1)& (0+255),b
 10640  01519A  EC7B  F0E0         	call	_printf	;wreg free
 10641                           
 10642                           ;ring_buffer_LUT.c: 79: printf("    Device silicon revision ID retrieved from flash: %c%
      +                          03d\n\r",;ring_buffer_LUT.c: 80: ((char) getMajorRevisionID() + 65),getMinorRevisionID()
      +                          );
 10643  01519E  0ED0               	movlw	low STR_205
 10644  0151A0  0103               	movlb	3	; () banked
 10645  0151A2  6FEB               	movwf	printf@f& (0+255),b
 10646  0151A4  0EEC               	movlw	high STR_205
 10647  0151A6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10648  0151A8  ECF6  F0E0         	call	_getMajorRevisionID	;wreg free
 10649  0151AC  0103               	movlb	3	; () banked
 10650  0151AE  6FFA               	movwf	??_ringBufferLUT& (0+255),b
 10651  0151B0  0E41               	movlw	65
 10652  0151B2  25FA               	addwf	??_ringBufferLUT& (0+255),w,b
 10653  0151B4  6FED               	movwf	(?_printf+2)& (0+255),b
 10654  0151B6  6BEE               	clrf	(?_printf+3)& (0+255),b
 10655  0151B8  0E00               	movlw	0
 10656  0151BA  23EE               	addwfc	(?_printf+3)& (0+255),f,b
 10657  0151BC  EC4D  F0E3         	call	_getMinorRevisionID	;wreg free
 10658  0151C0  0103               	movlb	3	; () banked
 10659  0151C2  6FFB               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10660  0151C4  51FB               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10661  0151C6  6FEF               	movwf	(?_printf+4)& (0+255),b
 10662  0151C8  6BF0               	clrf	(?_printf+5)& (0+255),b
 10663  0151CA  EC7B  F0E0         	call	_printf	;wreg free
 10664                           
 10665                           ;ring_buffer_LUT.c: 82: printf("\n\r");
 10666  0151CE  0EEB               	movlw	low (STR_11+20)
 10667  0151D0  0103               	movlb	3	; () banked
 10668  0151D2  6FEB               	movwf	printf@f& (0+255),b
 10669  0151D4  0EF9               	movlw	high (STR_11+20)
 10670  0151D6  6FEC               	movwf	(printf@f+1)& (0+255),b
 10671  0151D8  EC7B  F0E0         	call	_printf	;wreg free
 10672                           
 10673                           ;ring_buffer_LUT.c: 84: printf("    The following User IDs have been retrieved from flas
      +                          h:\n\r");
 10674  0151DC  0E4C               	movlw	low STR_207
 10675  0151DE  0103               	movlb	3	; () banked
 10676  0151E0  6FEB               	movwf	printf@f& (0+255),b
 10677  0151E2  0EED               	movlw	high STR_207
 10678  0151E4  6FEC               	movwf	(printf@f+1)& (0+255),b
 10679  0151E6  EC7B  F0E0         	call	_printf	;wreg free
 10680                           
 10681                           ;ring_buffer_LUT.c: 87: for (int userID = 0; userID <= 7; userID++) {
 10682  0151EA  0E00               	movlw	0
 10683  0151EC  0103               	movlb	3	; () banked
 10684  0151EE  6FFD               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 10685  0151F0  0E00               	movlw	0
 10686  0151F2  6FFC               	movwf	ringBufferLUT@userID& (0+255),b
 10687  0151F4                     l21416:
 10688                           
 10689                           ; BSR set to: 3
 10690                           ;ring_buffer_LUT.c: 89: printf("        User ID Word %d (Flash address 0x20000%X): 0x%04
      +                          X\n\r",;ring_buffer_LUT.c: 90: userID,;ring_buffer_LUT.c: 91: (2 * userID),;ring_buffer_
      +                          LUT.c: 92: getUserID(userID));
 10691  0151F4  0E02               	movlw	low STR_208
 10692  0151F6  6FEB               	movwf	printf@f& (0+255),b
 10693  0151F8  0EEE               	movlw	high STR_208
 10694  0151FA  6FEC               	movwf	(printf@f+1)& (0+255),b
 10695  0151FC  C3FC  F3ED         	movff	ringBufferLUT@userID,?_printf+2
 10696  015200  C3FD  F3EE         	movff	ringBufferLUT@userID+1,?_printf+3
 10697  015204  90D8               	bcf	status,0,c
 10698  015206  35FC               	rlcf	ringBufferLUT@userID& (0+255),w,b
 10699  015208  6FEF               	movwf	(?_printf+4)& (0+255),b
 10700  01520A  35FD               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 10701  01520C  6FF0               	movwf	(?_printf+5)& (0+255),b
 10702  01520E  51FC               	movf	ringBufferLUT@userID& (0+255),w,b
 10703  015210  EC87  F0E1         	call	_getUserID
 10704  015214  C20B  F3F1         	movff	?_getUserID,?_printf+6
 10705  015218  C20C  F3F2         	movff	?_getUserID+1,?_printf+7
 10706  01521C  EC7B  F0E0         	call	_printf	;wreg free
 10707  015220  0103               	movlb	3	; () banked
 10708  015222  4BFC               	infsnz	ringBufferLUT@userID& (0+255),f,b
 10709  015224  2BFD               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 10710                           
 10711                           ; BSR set to: 3
 10712  015226  BFFD               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 10713  015228  D7E5               	goto	l21416
 10714  01522A  51FD               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 10715  01522C  E104               	bnz	u27430
 10716  01522E  0E08               	movlw	8
 10717  015230  5DFC               	subwf	ringBufferLUT@userID& (0+255),w,b
 10718  015232  A0D8               	btfss	status,0,c
 10719  015234  D7DF               	goto	l21416
 10720  015236                     u27430:
 10721                           
 10722                           ; BSR set to: 3
 10723                           ;ring_buffer_LUT.c: 94: };ring_buffer_LUT.c: 96: printf("\n\r");
 10724  015236  0EEB               	movlw	low (STR_11+20)
 10725  015238  6FEB               	movwf	printf@f& (0+255),b
 10726  01523A  0EF9               	movlw	high (STR_11+20)
 10727  01523C  6FEC               	movwf	(printf@f+1)& (0+255),b
 10728  01523E  EC7B  F0E0         	call	_printf	;wreg free
 10729                           
 10730                           ;ring_buffer_LUT.c: 98: printf("    The cause of the most recent device reset was: %s\n\
      +                          r",;ring_buffer_LUT.c: 99: getCauseOfResetString(reset_cause));
 10731  015242  0ED3               	movlw	low STR_210
 10732  015244  0103               	movlb	3	; () banked
 10733  015246  6FEB               	movwf	printf@f& (0+255),b
 10734  015248  0EEF               	movlw	high STR_210
 10735  01524A  6FEC               	movwf	(printf@f+1)& (0+255),b
 10736  01524C  0102               	movlb	2	; () banked
 10737  01524E  51FF               	movf	_reset_cause& (0+255),w,b
 10738  015250  EC07  F0E2         	call	_getCauseOfResetString
 10739  015254  C200  F3ED         	movff	?_getCauseOfResetString,?_printf+2
 10740  015258  C201  F3EE         	movff	?_getCauseOfResetString+1,?_printf+3
 10741  01525C  EC7B  F0E0         	call	_printf	;wreg free
 10742                           
 10743                           ;ring_buffer_LUT.c: 101: printf("\n\r");
 10744  015260  0EEB               	movlw	low (STR_11+20)
 10745  015262  0103               	movlb	3	; () banked
 10746  015264  6FEB               	movwf	printf@f& (0+255),b
 10747  015266  0EF9               	movlw	high (STR_11+20)
 10748  015268  6FEC               	movwf	(printf@f+1)& (0+255),b
 10749  01526A  EC7B  F0E0         	call	_printf	;wreg free
 10750                           
 10751                           ;ring_buffer_LUT.c: 103: printf("    Device on time since last reset condition is %s\n\r
      +                          ", getStringSecondsAsTime(device_on_time));
 10752  01526E  0E78               	movlw	low STR_212
 10753  015270  0103               	movlb	3	; () banked
 10754  015272  6FEB               	movwf	printf@f& (0+255),b
 10755  015274  0EF0               	movlw	high STR_212
 10756  015276  6FEC               	movwf	(printf@f+1)& (0+255),b
 10757  015278  C0C5  F2A3         	movff	_device_on_time,getStringSecondsAsTime@input_seconds
 10758  01527C  C0C6  F2A4         	movff	_device_on_time+1,getStringSecondsAsTime@input_seconds+1
 10759  015280  C0C7  F2A5         	movff	_device_on_time+2,getStringSecondsAsTime@input_seconds+2
 10760  015284  C0C8  F2A6         	movff	_device_on_time+3,getStringSecondsAsTime@input_seconds+3
 10761  015288  ECBA  F0B1         	call	_getStringSecondsAsTime	;wreg free
 10762  01528C  C2A3  F3ED         	movff	?_getStringSecondsAsTime,?_printf+2
 10763  015290  C2A4  F3EE         	movff	?_getStringSecondsAsTime+1,?_printf+3
 10764  015294  EC7B  F0E0         	call	_printf	;wreg free
 10765                           
 10766                           ;ring_buffer_LUT.c: 105: printf("\n\r");
 10767  015298  0EEB               	movlw	low (STR_11+20)
 10768  01529A  0103               	movlb	3	; () banked
 10769  01529C  6FEB               	movwf	printf@f& (0+255),b
 10770  01529E  0EF9               	movlw	high (STR_11+20)
 10771  0152A0  6FEC               	movwf	(printf@f+1)& (0+255),b
 10772  0152A2  EC7B  F0E0         	call	_printf	;wreg free
 10773                           
 10774                           ;ring_buffer_LUT.c: 107: printErrorHandlerStatus();
 10775  0152A6  EC71  F0CB         	call	_printErrorHandlerStatus	;wreg free
 10776                           
 10777                           ;ring_buffer_LUT.c: 109: printf("\n\r");
 10778  0152AA  0EEB               	movlw	low (STR_11+20)
 10779  0152AC  0103               	movlb	3	; () banked
 10780  0152AE  6FEB               	movwf	printf@f& (0+255),b
 10781  0152B0  0EF9               	movlw	high (STR_11+20)
 10782  0152B2  6FEC               	movwf	(printf@f+1)& (0+255),b
 10783  0152B4  EC7B  F0E0         	call	_printf	;wreg free
 10784                           
 10785                           ;ring_buffer_LUT.c: 111: }
 10786  0152B8  0012               	return	
 10787  0152BA                     l21424:
 10788                           
 10789                           ; BSR set to: 2
 10790                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 10791  0152BA  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10792  0152BE  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10793  0152C2  0E41               	movlw	low STR_215
 10794  0152C4  6F02               	movwf	strcmp@s2& (0+255),b
 10795  0152C6  0EFB               	movlw	high STR_215
 10796  0152C8  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10797  0152CA  ECB3  F0DD         	call	_strcmp	;wreg free
 10798  0152CE  0102               	movlb	2	; () banked
 10799  0152D0  5100               	movf	?_strcmp& (0+255),w,b
 10800  0152D2  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10801  0152D4  A4D8               	btfss	status,2,c
 10802  0152D6  D014               	goto	l21434
 10803                           
 10804                           ; BSR set to: 2
 10805                           ;ring_buffer_LUT.c: 116: clearADCErrors();
 10806  0152D8  EC36  F0E5         	call	_clearADCErrors	;wreg free
 10807                           
 10808                           ;ring_buffer_LUT.c: 118: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10809  0152DC  0E00               	movlw	0
 10810  0152DE  0102               	movlb	2	; () banked
 10811  0152E0  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10812  0152E2  0E00               	movlw	0
 10813  0152E4  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10814  0152E6  0E02               	movlw	2
 10815  0152E8  EC8D  F0B3         	call	_terminalTextAttributes
 10816                           
 10817                           ;ring_buffer_LUT.c: 119: printf("ADC Error(s) cleared\n\r");
 10818  0152EC  0EA9               	movlw	low STR_216
 10819  0152EE  0103               	movlb	3	; () banked
 10820  0152F0  6FEB               	movwf	printf@f& (0+255),b
 10821  0152F2  0EF9               	movlw	high STR_216
 10822  0152F4  6FEC               	movwf	(printf@f+1)& (0+255),b
 10823  0152F6  EC7B  F0E0         	call	_printf	;wreg free
 10824  0152FA                     l21432:
 10825                           
 10826                           ;ring_buffer_LUT.c: 120: terminalTextAttributesReset();
 10827  0152FA  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 10828                           
 10829                           ;ring_buffer_LUT.c: 122: }
 10830  0152FE  0012               	return	
 10831  015300                     l21434:
 10832                           
 10833                           ; BSR set to: 2
 10834                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "Clear I2C Errors"))) {
 10835  015300  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10836  015304  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10837  015308  0E30               	movlw	low STR_217
 10838  01530A  6F02               	movwf	strcmp@s2& (0+255),b
 10839  01530C  0EFB               	movlw	high STR_217
 10840  01530E  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10841  015310  ECB3  F0DD         	call	_strcmp	;wreg free
 10842  015314  0102               	movlb	2	; () banked
 10843  015316  5100               	movf	?_strcmp& (0+255),w,b
 10844  015318  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10845  01531A  A4D8               	btfss	status,2,c
 10846  01531C  D012               	goto	l21444
 10847                           
 10848                           ; BSR set to: 2
 10849                           ;ring_buffer_LUT.c: 127: clearI2CErrors();
 10850  01531E  EC38  F0E4         	call	_clearI2CErrors	;wreg free
 10851                           
 10852                           ;ring_buffer_LUT.c: 129: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10853  015322  0E00               	movlw	0
 10854  015324  0102               	movlb	2	; () banked
 10855  015326  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10856  015328  0E00               	movlw	0
 10857  01532A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10858  01532C  0E02               	movlw	2
 10859  01532E  EC8D  F0B3         	call	_terminalTextAttributes
 10860                           
 10861                           ;ring_buffer_LUT.c: 130: printf("I2C error(s) cleared\n\r");
 10862  015332  0EC0               	movlw	low STR_218
 10863  015334  0103               	movlb	3	; () banked
 10864  015336  6FEB               	movwf	printf@f& (0+255),b
 10865  015338  0EF9               	movlw	high STR_218
 10866  01533A  6FEC               	movwf	(printf@f+1)& (0+255),b
 10867  01533C  EC7B  F0E0         	call	_printf	;wreg free
 10868  015340  D7DC               	goto	l21432
 10869  015342                     l21444:
 10870                           
 10871                           ; BSR set to: 2
 10872                           ;ring_buffer_LUT.c: 136: else if((0 == strcmp(line, "Clear UART Errors"))) {
 10873  015342  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10874  015346  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10875  01534A  0E0D               	movlw	low STR_219
 10876  01534C  6F02               	movwf	strcmp@s2& (0+255),b
 10877  01534E  0EFB               	movlw	high STR_219
 10878  015350  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10879  015352  ECB3  F0DD         	call	_strcmp	;wreg free
 10880  015356  0102               	movlb	2	; () banked
 10881  015358  5100               	movf	?_strcmp& (0+255),w,b
 10882  01535A  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10883  01535C  A4D8               	btfss	status,2,c
 10884  01535E  D012               	goto	l21454
 10885                           
 10886                           ; BSR set to: 2
 10887                           ;ring_buffer_LUT.c: 138: clearUARTErrors();
 10888  015360  ECC5  F0E5         	call	_clearUARTErrors	;wreg free
 10889                           
 10890                           ;ring_buffer_LUT.c: 140: terminalTextAttributes(GREEN, BLACK, NORMAL);
 10891  015364  0E00               	movlw	0
 10892  015366  0102               	movlb	2	; () banked
 10893  015368  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10894  01536A  0E00               	movlw	0
 10895  01536C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10896  01536E  0E02               	movlw	2
 10897  015370  EC8D  F0B3         	call	_terminalTextAttributes
 10898                           
 10899                           ;ring_buffer_LUT.c: 141: printf("UART error(s) cleared\n\r");
 10900  015374  0E4C               	movlw	low STR_220
 10901  015376  0103               	movlb	3	; () banked
 10902  015378  6FEB               	movwf	printf@f& (0+255),b
 10903  01537A  0EF9               	movlw	high STR_220
 10904  01537C  6FEC               	movwf	(printf@f+1)& (0+255),b
 10905  01537E  EC7B  F0E0         	call	_printf	;wreg free
 10906  015382  D7BB               	goto	l21432
 10907  015384                     l21454:
 10908                           
 10909                           ; BSR set to: 2
 10910                           ;ring_buffer_LUT.c: 146: else if ((0 == strcmp(line, "Error Status?"))) {
 10911  015384  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10912  015388  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10913  01538C  0E39               	movlw	low STR_221
 10914  01538E  6F02               	movwf	strcmp@s2& (0+255),b
 10915  015390  0EFC               	movlw	high STR_221
 10916  015392  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10917  015394  ECB3  F0DD         	call	_strcmp	;wreg free
 10918  015398  0102               	movlb	2	; () banked
 10919  01539A  5100               	movf	?_strcmp& (0+255),w,b
 10920  01539C  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10921  01539E  A4D8               	btfss	status,2,c
 10922  0153A0  D003               	goto	l21458
 10923                           
 10924                           ; BSR set to: 2
 10925                           ;ring_buffer_LUT.c: 148: printErrorHandlerStatus();
 10926  0153A2  EC71  F0CB         	call	_printErrorHandlerStatus	;wreg free
 10927                           
 10928                           ;ring_buffer_LUT.c: 150: }
 10929  0153A6  0012               	return	
 10930  0153A8                     l21458:
 10931                           
 10932                           ; BSR set to: 2
 10933                           ;ring_buffer_LUT.c: 153: else if (0 == strcmp(line, "Current Measurements?")) {
 10934  0153A8  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10935  0153AC  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10936  0153B0  0E1A               	movlw	low STR_222
 10937  0153B2  6F02               	movwf	strcmp@s2& (0+255),b
 10938  0153B4  0EFA               	movlw	high STR_222
 10939  0153B6  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10940  0153B8  ECB3  F0DD         	call	_strcmp	;wreg free
 10941  0153BC  0102               	movlb	2	; () banked
 10942  0153BE  5100               	movf	?_strcmp& (0+255),w,b
 10943  0153C0  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 10944  0153C2  A4D8               	btfss	status,2,c
 10945  0153C4  D020               	goto	l21462
 10946                           
 10947                           ; BSR set to: 2
 10948                           ;ring_buffer_LUT.c: 155: printf("\n\r");
 10949  0153C6  0EEB               	movlw	low (STR_11+20)
 10950  0153C8  0103               	movlb	3	; () banked
 10951  0153CA  6FEB               	movwf	printf@f& (0+255),b
 10952  0153CC  0EF9               	movlw	high (STR_11+20)
 10953  0153CE  6FEC               	movwf	(printf@f+1)& (0+255),b
 10954  0153D0  EC7B  F0E0         	call	_printf	;wreg free
 10955                           
 10956                           ;ring_buffer_LUT.c: 157: terminalTextAttributes(GREEN, BLACK, BOLD);
 10957  0153D4  0E00               	movlw	0
 10958  0153D6  0102               	movlb	2	; () banked
 10959  0153D8  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 10960  0153DA  0E01               	movlw	1
 10961  0153DC  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 10962  0153DE  0E02               	movlw	2
 10963  0153E0  EC8D  F0B3         	call	_terminalTextAttributes
 10964                           
 10965                           ;ring_buffer_LUT.c: 158: printf("System Measurements at time of command call:\n\r");
 10966  0153E4  0E78               	movlw	low STR_224
 10967  0153E6  0103               	movlb	3	; () banked
 10968  0153E8  6FEB               	movwf	printf@f& (0+255),b
 10969  0153EA  0EF2               	movlw	high STR_224
 10970  0153EC  6FEC               	movwf	(printf@f+1)& (0+255),b
 10971  0153EE  EC7B  F0E0         	call	_printf	;wreg free
 10972                           
 10973                           ;ring_buffer_LUT.c: 160: printf("\n\r");
 10974  0153F2  0EEB               	movlw	low (STR_11+20)
 10975  0153F4  0103               	movlb	3	; () banked
 10976  0153F6  6FEB               	movwf	printf@f& (0+255),b
 10977  0153F8  0EF9               	movlw	high (STR_11+20)
 10978  0153FA  6FEC               	movwf	(printf@f+1)& (0+255),b
 10979  0153FC  EC7B  F0E0         	call	_printf	;wreg free
 10980                           
 10981                           ;ring_buffer_LUT.c: 162: printCurrentMeasurements();
 10982  015400  ECF4  F0AA         	call	_printCurrentMeasurements	;wreg free
 10983                           
 10984                           ;ring_buffer_LUT.c: 164: }
 10985  015404  0012               	return	
 10986  015406                     l21462:
 10987                           
 10988                           ; BSR set to: 2
 10989                           ;ring_buffer_LUT.c: 166: else if ((0 == strcmp(line, "Enable Live Measurements"))) {
 10990  015406  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 10991  01540A  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10992  01540E  0EEB               	movlw	low STR_226
 10993  015410  6F02               	movwf	strcmp@s2& (0+255),b
 10994  015412  0EF8               	movlw	high STR_226
 10995  015414  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 10996  015416  ECB3  F0DD         	call	_strcmp	;wreg free
 10997  01541A  0102               	movlb	2	; () banked
 10998  01541C  5100               	movf	?_strcmp& (0+255),w,b
 10999  01541E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11000  015420  A4D8               	btfss	status,2,c
 11001  015422  D021               	goto	l21474
 11002                           
 11003                           ; BSR set to: 2
 11004                           ;ring_buffer_LUT.c: 168: live_measurement_enable_flag = 1;
 11005  015424  0E01               	movlw	1
 11006  015426  0100               	movlb	0	; () banked
 11007  015428  6FD7               	movwf	_live_measurement_enable_flag& (0+255),b
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;ring_buffer_LUT.c: 169: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11011  01542A  0E00               	movlw	0
 11012  01542C  0102               	movlb	2	; () banked
 11013  01542E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11014  015430  0E00               	movlw	0
 11015  015432  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11016  015434  0E02               	movlw	2
 11017  015436  EC8D  F0B3         	call	_terminalTextAttributes
 11018                           
 11019                           ;ring_buffer_LUT.c: 170: printf("Enabling live measurements\n\r");
 11020  01543A  0E10               	movlw	low STR_227
 11021  01543C  0103               	movlb	3	; () banked
 11022  01543E  6FEB               	movwf	printf@f& (0+255),b
 11023  015440  0EF8               	movlw	high STR_227
 11024  015442  6FEC               	movwf	(printf@f+1)& (0+255),b
 11025  015444  EC7B  F0E0         	call	_printf	;wreg free
 11026                           
 11027                           ;ring_buffer_LUT.c: 171: terminalTextAttributesReset();
 11028  015448  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11029                           
 11030                           ;ring_buffer_LUT.c: 172: _delay((unsigned long)((200)*(64000000/4000.0)));
 11031  01544C  0E11               	movlw	17
 11032  01544E  0103               	movlb	3	; () banked
 11033  015450  6FFB               	movwf	(??_ringBufferLUT+1)& (0+255),b
 11034  015452  0E3C               	movlw	60
 11035  015454  6FFA               	movwf	??_ringBufferLUT& (0+255),b
 11036  015456  0ECB               	movlw	203
 11037  015458                     u29287:
 11038  015458  2EE8               	decfsz	wreg,f,c
 11039  01545A  D7FE               	bra	u29287
 11040  01545C  2FFA               	decfsz	??_ringBufferLUT& (0+255),f,b
 11041  01545E  D7FC               	bra	u29287
 11042  015460  2FFB               	decfsz	(??_ringBufferLUT+1)& (0+255),f,b
 11043  015462  D7FA               	bra	u29287
 11044                           
 11045                           ;ring_buffer_LUT.c: 174: }
 11046  015464  0012               	return	
 11047  015466                     l21474:
 11048                           
 11049                           ; BSR set to: 2
 11050                           ;ring_buffer_LUT.c: 177: else if((0 == strcmp(line, "Help"))) {
 11051  015466  C2BB  F200         	movff	ringBufferLUT@line,strcmp@s1
 11052  01546A  C2BC  F201         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11053  01546E  0E9A               	movlw	low STR_228
 11054  015470  6F02               	movwf	strcmp@s2& (0+255),b
 11055  015472  0EFF               	movlw	high STR_228
 11056  015474  6F03               	movwf	(strcmp@s2+1)& (0+255),b
 11057  015476  ECB3  F0DD         	call	_strcmp	;wreg free
 11058  01547A  0102               	movlb	2	; () banked
 11059  01547C  5100               	movf	?_strcmp& (0+255),w,b
 11060  01547E  1101               	iorwf	(?_strcmp+1)& (0+255),w,b
 11061  015480  A4D8               	btfss	status,2,c
 11062  015482  D06A               	goto	l21478
 11063                           
 11064                           ; BSR set to: 2
 11065                           ;ring_buffer_LUT.c: 179: printf("\n\r");
 11066  015484  0EEB               	movlw	low (STR_11+20)
 11067  015486  0103               	movlb	3	; () banked
 11068  015488  6FEB               	movwf	printf@f& (0+255),b
 11069  01548A  0EF9               	movlw	high (STR_11+20)
 11070  01548C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11071  01548E  EC7B  F0E0         	call	_printf	;wreg free
 11072                           
 11073                           ;ring_buffer_LUT.c: 181: terminalTextAttributes(YELLOW, BLACK, BOLD);
 11074  015492  0E00               	movlw	0
 11075  015494  0102               	movlb	2	; () banked
 11076  015496  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11077  015498  0E01               	movlw	1
 11078  01549A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11079  01549C  0E03               	movlw	3
 11080  01549E  EC8D  F0B3         	call	_terminalTextAttributes
 11081                           
 11082                           ;ring_buffer_LUT.c: 183: printf("Available Commands:\n\r");
 11083  0154A2  0E04               	movlw	low STR_230
 11084  0154A4  0103               	movlb	3	; () banked
 11085  0154A6  6FEB               	movwf	printf@f& (0+255),b
 11086  0154A8  0EFA               	movlw	high STR_230
 11087  0154AA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11088  0154AC  EC7B  F0E0         	call	_printf	;wreg free
 11089                           
 11090                           ;ring_buffer_LUT.c: 185: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11091  0154B0  0E00               	movlw	0
 11092  0154B2  0102               	movlb	2	; () banked
 11093  0154B4  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11094  0154B6  0E00               	movlw	0
 11095  0154B8  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11096  0154BA  0E03               	movlw	3
 11097  0154BC  EC8D  F0B3         	call	_terminalTextAttributes
 11098                           
 11099                           ;ring_buffer_LUT.c: 187: printf( "    *IDN?: Prints identification string\n\r";ring_buff
      +                          er_LUT.c: 188: "    Reset: Executes software reset instruction\n\r";ring_buffer_LUT.c: 1
      +                          89: "    Clear: Clears the virtual COM port terminal\n\r";ring_buffer_LUT.c: 190: "    C
      +                          urrent Measurements?: Prints instantaneous system level electrical measurements\n\r";rin
      +                          g_buffer_LUT.c: 191: "    Enable Live Measurements: Prints a continuous stream of measur
      +                          ement data to the terminal\n\r";ring_buffer_LUT.c: 192: "    Device Status?: Prints digi
      +                          tal monitoring microcontroller device status\n\r"
 11100  0154C0  0E8F               	movlw	low STR_231
 11101  0154C2  0103               	movlb	3	; () banked
 11102  0154C4  6FEB               	movwf	printf@f& (0+255),b
 11103  0154C6  0EE8               	movlw	high STR_231
 11104  0154C8  6FEC               	movwf	(printf@f+1)& (0+255),b
 11105  0154CA  EC7B  F0E0         	call	_printf	;wreg free
 11106                           
 11107                           ;ring_buffer_LUT.c: 200: printf("\n\rHelp messages and neutral responses appear in yello
      +                          w\n\r");
 11108  0154CE  0E62               	movlw	low STR_5
 11109  0154D0  0103               	movlb	3	; () banked
 11110  0154D2  6FEB               	movwf	printf@f& (0+255),b
 11111  0154D4  0EEF               	movlw	high STR_5
 11112  0154D6  6FEC               	movwf	(printf@f+1)& (0+255),b
 11113  0154D8  EC7B  F0E0         	call	_printf	;wreg free
 11114                           
 11115                           ;ring_buffer_LUT.c: 202: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11116  0154DC  0E00               	movlw	0
 11117  0154DE  0102               	movlb	2	; () banked
 11118  0154E0  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11119  0154E2  0E00               	movlw	0
 11120  0154E4  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11121  0154E6  0E02               	movlw	2
 11122  0154E8  EC8D  F0B3         	call	_terminalTextAttributes
 11123                           
 11124                           ;ring_buffer_LUT.c: 203: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 11125  0154EC  0E0E               	movlw	low STR_6
 11126  0154EE  0103               	movlb	3	; () banked
 11127  0154F0  6FEB               	movwf	printf@f& (0+255),b
 11128  0154F2  0EED               	movlw	high STR_6
 11129  0154F4  6FEC               	movwf	(printf@f+1)& (0+255),b
 11130  0154F6  EC7B  F0E0         	call	_printf	;wreg free
 11131                           
 11132                           ;ring_buffer_LUT.c: 204: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11133  0154FA  0E00               	movlw	0
 11134  0154FC  0102               	movlb	2	; () banked
 11135  0154FE  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11136  015500  0E00               	movlw	0
 11137  015502  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11138  015504  0E06               	movlw	6
 11139  015506  EC8D  F0B3         	call	_terminalTextAttributes
 11140                           
 11141                           ;ring_buffer_LUT.c: 205: printf("Measurement responses appear in cyan\n\r");
 11142  01550A  0E00               	movlw	low STR_7
 11143  01550C  0103               	movlb	3	; () banked
 11144  01550E  6FEB               	movwf	printf@f& (0+255),b
 11145  015510  0EF5               	movlw	high STR_7
 11146  015512  6FEC               	movwf	(printf@f+1)& (0+255),b
 11147  015514  EC7B  F0E0         	call	_printf	;wreg free
 11148                           
 11149                           ;ring_buffer_LUT.c: 206: terminalTextAttributes(RED, BLACK, NORMAL);
 11150  015518  0E00               	movlw	0
 11151  01551A  0102               	movlb	2	; () banked
 11152  01551C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11153  01551E  0E00               	movlw	0
 11154  015520  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11155  015522  0E01               	movlw	1
 11156  015524  EC8D  F0B3         	call	_terminalTextAttributes
 11157                           
 11158                           ;ring_buffer_LUT.c: 207: printf("Errors and negative responses appear in red\n\r");
 11159  015528  0E04               	movlw	low STR_8
 11160  01552A  0103               	movlb	3	; () banked
 11161  01552C  6FEB               	movwf	printf@f& (0+255),b
 11162  01552E  0EF3               	movlw	high STR_8
 11163  015530  6FEC               	movwf	(printf@f+1)& (0+255),b
 11164  015532  EC7B  F0E0         	call	_printf	;wreg free
 11165                           
 11166                           ;ring_buffer_LUT.c: 208: terminalTextAttributesReset();
 11167  015536  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11168                           
 11169                           ;ring_buffer_LUT.c: 209: printf("User input appears in white\n\r");
 11170  01553A  0ED5               	movlw	low STR_9
 11171  01553C  0103               	movlb	3	; () banked
 11172  01553E  6FEB               	movwf	printf@f& (0+255),b
 11173  015540  0EF7               	movlw	high STR_9
 11174  015542  6FEC               	movwf	(printf@f+1)& (0+255),b
 11175  015544  EC7B  F0E0         	call	_printf	;wreg free
 11176                           
 11177                           ;ring_buffer_LUT.c: 211: printf("\n\r");
 11178  015548  0EEB               	movlw	low (STR_11+20)
 11179  01554A  0103               	movlb	3	; () banked
 11180  01554C  6FEB               	movwf	printf@f& (0+255),b
 11181  01554E  0EF9               	movlw	high (STR_11+20)
 11182  015550  6FEC               	movwf	(printf@f+1)& (0+255),b
 11183  015552  EC7B  F0E0         	call	_printf	;wreg free
 11184                           
 11185                           ;ring_buffer_LUT.c: 213: }
 11186  015556  0012               	return	
 11187  015558                     l21478:
 11188                           
 11189                           ; BSR set to: 2
 11190                           ;ring_buffer_LUT.c: 216: else {;ring_buffer_LUT.c: 218: if (strlen(line) >= 1) {
 11191  015558  C2BB  F200         	movff	ringBufferLUT@line,strlen@s
 11192  01555C  C2BC  F201         	movff	ringBufferLUT@line+1,strlen@s+1
 11193  015560  EC67  F0E2         	call	_strlen	;wreg free
 11194  015564  0102               	movlb	2	; () banked
 11195  015566  5100               	movf	?_strlen& (0+255),w,b
 11196  015568  1101               	iorwf	(?_strlen+1)& (0+255),w,b
 11197  01556A  B4D8               	btfsc	status,2,c
 11198  01556C  D027               	goto	l21482
 11199                           
 11200                           ; BSR set to: 2
 11201                           ;ring_buffer_LUT.c: 220: terminalTextAttributes(RED, BLACK, NORMAL);
 11202  01556E  0E00               	movlw	0
 11203  015570  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11204  015572  0E00               	movlw	0
 11205  015574  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11206  015576  0E01               	movlw	1
 11207  015578  EC8D  F0B3         	call	_terminalTextAttributes
 11208                           
 11209                           ;ring_buffer_LUT.c: 221: printf("Unsupported or mis-entered command\n\r");
 11210  01557C  0E4C               	movlw	low STR_238
 11211  01557E  0103               	movlb	3	; () banked
 11212  015580  6FEB               	movwf	printf@f& (0+255),b
 11213  015582  0EF5               	movlw	high STR_238
 11214  015584  6FEC               	movwf	(printf@f+1)& (0+255),b
 11215  015586  EC7B  F0E0         	call	_printf	;wreg free
 11216                           
 11217                           ;ring_buffer_LUT.c: 222: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11218  01558A  0E00               	movlw	0
 11219  01558C  0102               	movlb	2	; () banked
 11220  01558E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11221  015590  0E00               	movlw	0
 11222  015592  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11223  015594  0E03               	movlw	3
 11224  015596  EC8D  F0B3         	call	_terminalTextAttributes
 11225                           
 11226                           ;ring_buffer_LUT.c: 223: printf("Commands are case sensitive, backspace is supported, co
      +                          mmand history is not supported\n\r");
 11227  01559A  0E7C               	movlw	low STR_239
 11228  01559C  0103               	movlb	3	; () banked
 11229  01559E  6FEB               	movwf	printf@f& (0+255),b
 11230  0155A0  0EEB               	movlw	high STR_239
 11231  0155A2  6FEC               	movwf	(printf@f+1)& (0+255),b
 11232  0155A4  EC7B  F0E0         	call	_printf	;wreg free
 11233                           
 11234                           ;ring_buffer_LUT.c: 224: printf("Call 'Help' for list of supported commands\n\r");
 11235  0155A8  0EA9               	movlw	low (STR_10+2)
 11236  0155AA  0103               	movlb	3	; () banked
 11237  0155AC  6FEB               	movwf	printf@f& (0+255),b
 11238  0155AE  0EF2               	movlw	high (STR_10+2)
 11239  0155B0  6FEC               	movwf	(printf@f+1)& (0+255),b
 11240  0155B2  EC7B  F0E0         	call	_printf	;wreg free
 11241                           
 11242                           ;ring_buffer_LUT.c: 225: terminalTextAttributesReset();
 11243  0155B6  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11244                           
 11245                           ;ring_buffer_LUT.c: 227: }
 11246  0155BA  0012               	return	
 11247  0155BC                     l21482:
 11248                           
 11249                           ; BSR set to: 2
 11250                           ;ring_buffer_LUT.c: 229: else if (live_measurement_enable_flag) {
 11251  0155BC  0100               	movlb	0	; () banked
 11252  0155BE  51D7               	movf	_live_measurement_enable_flag& (0+255),w,b
 11253  0155C0  B4D8               	btfsc	status,2,c
 11254  0155C2  0012               	return	
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;ring_buffer_LUT.c: 231: live_measurement_enable_flag = 0;
 11258  0155C4  0E00               	movlw	0
 11259  0155C6  6FD7               	movwf	_live_measurement_enable_flag& (0+255),b
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;ring_buffer_LUT.c: 232: terminalTextAttributes(RED, BLACK, NORMAL);
 11263  0155C8  0E00               	movlw	0
 11264  0155CA  0102               	movlb	2	; () banked
 11265  0155CC  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11266  0155CE  0E00               	movlw	0
 11267  0155D0  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11268  0155D2  0E01               	movlw	1
 11269  0155D4  EC8D  F0B3         	call	_terminalTextAttributes
 11270                           
 11271                           ;ring_buffer_LUT.c: 233: printf("Live measurement updates disabled\n\r");
 11272  0155D8  0EDE               	movlw	low STR_241
 11273  0155DA  0103               	movlb	3	; () banked
 11274  0155DC  6FEB               	movwf	printf@f& (0+255),b
 11275  0155DE  0EF5               	movlw	high STR_241
 11276  0155E0  6FEC               	movwf	(printf@f+1)& (0+255),b
 11277  0155E2  EC7B  F0E0         	call	_printf	;wreg free
 11278  0155E6  D689               	goto	l21432
 11279  0155E8                     __end_of_ringBufferLUT:
 11280                           	opt callstack 0
 11281                           
 11282 ;; *************** function _strcmp *****************
 11283 ;; Defined at:
 11284 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcmp.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  s1              2    0[BANK2 ] PTR const unsigned char 
 11287 ;;		 -> line(64), 
 11288 ;;  s2              2    2[BANK2 ] PTR const unsigned char 
 11289 ;;		 -> STR_228(5), STR_226(25), STR_222(22), STR_221(14), 
 11290 ;;		 -> STR_219(18), STR_217(17), STR_215(17), STR_199(15), 
 11291 ;;		 -> STR_197(6), STR_194(6), STR_191(6), 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;  r               1    6[BANK2 ] char 
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  2    0[BANK2 ] int 
 11296 ;; Registers used:
 11297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11303 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11306 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11307 ;;Total ram usage:        7 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; Hardware stack levels required when called:   11
 11310 ;; This function calls:
 11311 ;;		Nothing
 11312 ;; This function is called by:
 11313 ;;		_ringBufferLUT
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317                           	psect	text3
 11318  01BB66                     __ptext3:
 11319                           	opt callstack 0
 11320  01BB66                     _strcmp:
 11321                           	opt callstack 17
 11322                           
 11323                           ;incstack = 0
 11324  01BB66  D004               	goto	l20190
 11325  01BB68                     l20188:
 11326                           
 11327                           ; BSR set to: 2
 11328  01BB68  4B00               	infsnz	strcmp@s1& (0+255),f,b
 11329  01BB6A  2B01               	incf	(strcmp@s1+1)& (0+255),f,b
 11330  01BB6C  4B02               	infsnz	strcmp@s2& (0+255),f,b
 11331  01BB6E  2B03               	incf	(strcmp@s2+1)& (0+255),f,b
 11332  01BB70                     l20190:
 11333  01BB70  C202  FFF6         	movff	strcmp@s2,tblptrl
 11334  01BB74  C203  FFF7         	movff	strcmp@s2+1,tblptrh
 11335  01BB78                     	if	0	;tblptru may be non-zero
 11336  01BB78                     	endif
 11337  01BB78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11338  01BB78  0E00               	movlw	low (__mediumconst shr (0+16))
 11339  01BB7A  6EF8               	movwf	tblptru,c
 11340  01BB7C                     	endif
 11341  01BB7C  0008               	tblrd		*
 11342  01BB7E  CFF5 F204          	movff	tablat,??_strcmp
 11343  01BB82  C200  FFD9         	movff	strcmp@s1,fsr2l
 11344  01BB86  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 11345  01BB8A  50DF               	movf	indf2,w,c
 11346  01BB8C  0102               	movlb	2	; () banked
 11347  01BB8E  6F05               	movwf	(??_strcmp+1)& (0+255),b
 11348  01BB90  5104               	movf	??_strcmp& (0+255),w,b
 11349  01BB92  5D05               	subwf	(??_strcmp+1)& (0+255),w,b
 11350  01BB94  6F06               	movwf	strcmp@r& (0+255),b
 11351  01BB96  5106               	movf	strcmp@r& (0+255),w,b
 11352  01BB98  A4D8               	btfss	status,2,c
 11353  01BB9A  D007               	goto	u25580
 11354                           
 11355                           ; BSR set to: 2
 11356  01BB9C  C200  FFD9         	movff	strcmp@s1,fsr2l
 11357  01BBA0  C201  FFDA         	movff	strcmp@s1+1,fsr2h
 11358  01BBA4  50DF               	movf	indf2,w,c
 11359  01BBA6  A4D8               	btfss	status,2,c
 11360  01BBA8  D7DF               	goto	l20188
 11361  01BBAA                     u25580:
 11362                           
 11363                           ; BSR set to: 2
 11364  01BBAA  5106               	movf	strcmp@r& (0+255),w,b
 11365  01BBAC  6F00               	movwf	?_strcmp& (0+255),b
 11366  01BBAE  6B01               	clrf	(?_strcmp+1)& (0+255),b
 11367  01BBB0  BF00               	btfsc	?_strcmp& (0+255),7,b
 11368  01BBB2  0701               	decf	(?_strcmp+1)& (0+255),f,b
 11369                           
 11370                           ; BSR set to: 2
 11371  01BBB4  0012               	return		;funcret
 11372  01BBB6                     __end_of_strcmp:
 11373                           	opt callstack 0
 11374                           
 11375 ;; *************** function _printErrorHandlerStatus *****************
 11376 ;; Defined at:
 11377 ;;		line 243 in file "ring_buffer_LUT.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;Total ram usage:        0 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:   16
 11398 ;; This function calls:
 11399 ;;		_getADCError
 11400 ;;		_getI2CError
 11401 ;;		_getUARTError
 11402 ;;		_printf
 11403 ;;		_terminalTextAttributes
 11404 ;;		_terminalTextAttributesReset
 11405 ;; This function is called by:
 11406 ;;		_ringBufferLUT
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text4
 11411  0196E2                     __ptext4:
 11412                           	opt callstack 0
 11413  0196E2                     _printErrorHandlerStatus:
 11414                           	opt callstack 12
 11415                           
 11416                           ;ring_buffer_LUT.c: 245: if (getADCError()) {
 11417                           
 11418                           ; BSR set to: 2
 11419                           ;incstack = 0
 11420  0196E2  ECBE  F0E4         	call	_getADCError	;wreg free
 11421  0196E6  0900               	iorlw	0
 11422  0196E8  B4D8               	btfsc	status,2,c
 11423  0196EA  D03E               	goto	l20210
 11424                           
 11425                           ;ring_buffer_LUT.c: 247: terminalTextAttributes(RED, BLACK, NORMAL);
 11426  0196EC  0E00               	movlw	0
 11427  0196EE  0102               	movlb	2	; () banked
 11428  0196F0  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11429  0196F2  0E00               	movlw	0
 11430  0196F4  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11431  0196F6  0E01               	movlw	1
 11432  0196F8  EC8D  F0B3         	call	_terminalTextAttributes
 11433                           
 11434                           ;ring_buffer_LUT.c: 248: printf("    ADC error(s) detected!\n\r");
 11435  0196FC  0EF3               	movlw	low STR_242
 11436  0196FE  0103               	movlb	3	; () banked
 11437  019700  6FEB               	movwf	printf@f& (0+255),b
 11438  019702  0EF7               	movlw	high STR_242
 11439  019704  6FEC               	movwf	(printf@f+1)& (0+255),b
 11440  019706  EC7B  F0E0         	call	_printf	;wreg free
 11441                           
 11442                           ;ring_buffer_LUT.c: 249: printf("    The following channels caused an ADC error:\n\r");
 11443  01970A  0EB2               	movlw	low STR_243
 11444  01970C  0103               	movlb	3	; () banked
 11445  01970E  6FEB               	movwf	printf@f& (0+255),b
 11446  019710  0EF1               	movlw	high STR_243
 11447  019712  6FEC               	movwf	(printf@f+1)& (0+255),b
 11448  019714  EC7B  F0E0         	call	_printf	;wreg free
 11449                           
 11450                           ;ring_buffer_LUT.c: 251: if (error_handler.ADC_general_error_flag) {
 11451  019718  0100               	movlb	0	; () banked
 11452  01971A  51BA               	movf	(_error_handler+1)& (0+255),w,b
 11453  01971C  B4D8               	btfsc	status,2,c
 11454  01971E  D007               	goto	l20206
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;ring_buffer_LUT.c: 252: printf("        General ADC error\n\r");
 11458  019720  0E49               	movlw	low STR_244
 11459  019722  0103               	movlb	3	; () banked
 11460  019724  6FEB               	movwf	printf@f& (0+255),b
 11461  019726  0EF8               	movlw	high STR_244
 11462  019728  6FEC               	movwf	(printf@f+1)& (0+255),b
 11463  01972A  EC7B  F0E0         	call	_printf	;wreg free
 11464  01972E                     l20206:
 11465                           
 11466                           ;ring_buffer_LUT.c: 253: };ring_buffer_LUT.c: 255: if (error_handler.FVR_ADC_error_flag)
      +                           {
 11467  01972E  0100               	movlb	0	; () banked
 11468  019730  51B9               	movf	_error_handler& (0+255),w,b
 11469  019732  B4D8               	btfsc	status,2,c
 11470  019734  D007               	goto	l2211
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;ring_buffer_LUT.c: 256: printf("        FVR\n\r");
 11474  019736  0E2B               	movlw	low STR_245
 11475  019738  0103               	movlb	3	; () banked
 11476  01973A  6FEB               	movwf	printf@f& (0+255),b
 11477  01973C  0EFC               	movlw	high STR_245
 11478  01973E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11479  019740  EC7B  F0E0         	call	_printf	;wreg free
 11480  019744                     l2211:
 11481                           
 11482                           ;ring_buffer_LUT.c: 257: };ring_buffer_LUT.c: 259: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11483  019744  0E00               	movlw	0
 11484  019746  0102               	movlb	2	; () banked
 11485  019748  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11486  01974A  0E00               	movlw	0
 11487  01974C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11488  01974E  0E03               	movlw	3
 11489  019750  EC8D  F0B3         	call	_terminalTextAttributes
 11490                           
 11491                           ;ring_buffer_LUT.c: 260: printf("    Call 'Clear ADC Errors' to clear ADC error(s)\n\r")
      +                          ;
 11492  019754  0EE4               	movlw	low STR_246
 11493  019756  0103               	movlb	3	; () banked
 11494  019758  6FEB               	movwf	printf@f& (0+255),b
 11495  01975A  0EF0               	movlw	high STR_246
 11496  01975C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11497  01975E  EC7B  F0E0         	call	_printf	;wreg free
 11498                           
 11499                           ;ring_buffer_LUT.c: 261: terminalTextAttributesReset();
 11500  019762  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11501                           
 11502                           ;ring_buffer_LUT.c: 263: }
 11503  019766  D011               	goto	l20212
 11504  019768                     l20210:
 11505                           
 11506                           ;ring_buffer_LUT.c: 265: else {;ring_buffer_LUT.c: 267: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11507  019768  0E00               	movlw	0
 11508  01976A  0102               	movlb	2	; () banked
 11509  01976C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11510  01976E  0E00               	movlw	0
 11511  019770  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11512  019772  0E02               	movlw	2
 11513  019774  EC8D  F0B3         	call	_terminalTextAttributes
 11514                           
 11515                           ;ring_buffer_LUT.c: 268: printf("    No ADC error(s) detected\n\r");
 11516  019778  0E98               	movlw	low STR_247
 11517  01977A  0103               	movlb	3	; () banked
 11518  01977C  6FEB               	movwf	printf@f& (0+255),b
 11519  01977E  0EF7               	movlw	high STR_247
 11520  019780  6FEC               	movwf	(printf@f+1)& (0+255),b
 11521  019782  EC7B  F0E0         	call	_printf	;wreg free
 11522                           
 11523                           ;ring_buffer_LUT.c: 269: terminalTextAttributesReset();
 11524  019786  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11525  01978A                     l20212:
 11526                           
 11527                           ;ring_buffer_LUT.c: 271: };ring_buffer_LUT.c: 273: if (getI2CError()) {
 11528  01978A  ECE9  F0E2         	call	_getI2CError	;wreg free
 11529  01978E  0900               	iorlw	0
 11530  019790  B4D8               	btfsc	status,2,c
 11531  019792  D058               	goto	l20236
 11532                           
 11533                           ;ring_buffer_LUT.c: 275: terminalTextAttributes(RED, BLACK, NORMAL);
 11534  019794  0E00               	movlw	0
 11535  019796  0102               	movlb	2	; () banked
 11536  019798  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11537  01979A  0E00               	movlw	0
 11538  01979C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11539  01979E  0E01               	movlw	1
 11540  0197A0  EC8D  F0B3         	call	_terminalTextAttributes
 11541                           
 11542                           ;ring_buffer_LUT.c: 276: printf("    The following I2C Errors were detected:\n\r");
 11543  0197A4  0ED6               	movlw	low STR_248
 11544  0197A6  0103               	movlb	3	; () banked
 11545  0197A8  6FEB               	movwf	printf@f& (0+255),b
 11546  0197AA  0EF2               	movlw	high STR_248
 11547  0197AC  6FEC               	movwf	(printf@f+1)& (0+255),b
 11548  0197AE  EC7B  F0E0         	call	_printf	;wreg free
 11549                           
 11550                           ;ring_buffer_LUT.c: 278: if (error_handler.I2C_General_error_flag) {
 11551  0197B2  0100               	movlb	0	; () banked
 11552  0197B4  51BB               	movf	(_error_handler+2)& (0+255),w,b
 11553  0197B6  B4D8               	btfsc	status,2,c
 11554  0197B8  D007               	goto	l20220
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;ring_buffer_LUT.c: 279: printf("        I2C General Error\n\r");
 11558  0197BA  0E2D               	movlw	low STR_249
 11559  0197BC  0103               	movlb	3	; () banked
 11560  0197BE  6FEB               	movwf	printf@f& (0+255),b
 11561  0197C0  0EF8               	movlw	high STR_249
 11562  0197C2  6FEC               	movwf	(printf@f+1)& (0+255),b
 11563  0197C4  EC7B  F0E0         	call	_printf	;wreg free
 11564  0197C8                     l20220:
 11565                           
 11566                           ;ring_buffer_LUT.c: 280: };ring_buffer_LUT.c: 282: if (error_handler.I2C_Ambient_Temp_Se
      +                          nse_error_flag) {
 11567  0197C8  0100               	movlb	0	; () banked
 11568  0197CA  51BF               	movf	(_error_handler+6)& (0+255),w,b
 11569  0197CC  B4D8               	btfsc	status,2,c
 11570  0197CE  D007               	goto	l20224
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;ring_buffer_LUT.c: 283: printf("        I2C Ambient Temp Sensor Error\n\r");
 11574  0197D0  0E8A               	movlw	low STR_250
 11575  0197D2  0103               	movlb	3	; () banked
 11576  0197D4  6FEB               	movwf	printf@f& (0+255),b
 11577  0197D6  0EF4               	movlw	high STR_250
 11578  0197D8  6FEC               	movwf	(printf@f+1)& (0+255),b
 11579  0197DA  EC7B  F0E0         	call	_printf	;wreg free
 11580  0197DE                     l20224:
 11581                           
 11582                           ;ring_buffer_LUT.c: 284: };ring_buffer_LUT.c: 286: if (error_handler.I2C_POS5_Temp_Sense
      +                          _error_flag) {
 11583  0197DE  0100               	movlb	0	; () banked
 11584  0197E0  51BE               	movf	(_error_handler+5)& (0+255),w,b
 11585  0197E2  B4D8               	btfsc	status,2,c
 11586  0197E4  D007               	goto	l20228
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;ring_buffer_LUT.c: 287: printf("        I2C POS5 Temp Sensor Error\n\r");
 11590  0197E6  0E71               	movlw	low STR_251
 11591  0197E8  0103               	movlb	3	; () banked
 11592  0197EA  6FEB               	movwf	printf@f& (0+255),b
 11593  0197EC  0EF5               	movlw	high STR_251
 11594  0197EE  6FEC               	movwf	(printf@f+1)& (0+255),b
 11595  0197F0  EC7B  F0E0         	call	_printf	;wreg free
 11596  0197F4                     l20228:
 11597                           
 11598                           ;ring_buffer_LUT.c: 288: };ring_buffer_LUT.c: 290: if (error_handler.I2C_QI_Temp_Sense_e
      +                          rror_flag) {
 11599  0197F4  0100               	movlb	0	; () banked
 11600  0197F6  51BD               	movf	(_error_handler+4)& (0+255),w,b
 11601  0197F8  B4D8               	btfsc	status,2,c
 11602  0197FA  D007               	goto	l20232
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;ring_buffer_LUT.c: 291: printf("        I2C QI Temp Sensor Error\n\r");
 11606  0197FC  0E8E               	movlw	low STR_252
 11607  0197FE  0103               	movlb	3	; () banked
 11608  019800  6FEB               	movwf	printf@f& (0+255),b
 11609  019802  0EF6               	movlw	high STR_252
 11610  019804  6FEC               	movwf	(printf@f+1)& (0+255),b
 11611  019806  EC7B  F0E0         	call	_printf	;wreg free
 11612  01980A                     l20232:
 11613                           
 11614                           ;ring_buffer_LUT.c: 292: };ring_buffer_LUT.c: 294: if (error_handler.I2C_OLED_error_flag
      +                          ) {
 11615  01980A  0100               	movlb	0	; () banked
 11616  01980C  51BC               	movf	(_error_handler+3)& (0+255),w,b
 11617  01980E  B4D8               	btfsc	status,2,c
 11618  019810  D007               	goto	l2218
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;ring_buffer_LUT.c: 295: printf("        I2C OLED Display Error\n\r");
 11622  019812  0E38               	movlw	low STR_253
 11623  019814  0103               	movlb	3	; () banked
 11624  019816  6FEB               	movwf	printf@f& (0+255),b
 11625  019818  0EF7               	movlw	high STR_253
 11626  01981A  6FEC               	movwf	(printf@f+1)& (0+255),b
 11627  01981C  EC7B  F0E0         	call	_printf	;wreg free
 11628  019820                     l2218:
 11629                           
 11630                           ;ring_buffer_LUT.c: 296: };ring_buffer_LUT.c: 298: terminalTextAttributes(YELLOW, BLACK,
      +                           NORMAL);
 11631  019820  0E00               	movlw	0
 11632  019822  0102               	movlb	2	; () banked
 11633  019824  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11634  019826  0E00               	movlw	0
 11635  019828  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11636  01982A  0E03               	movlw	3
 11637  01982C  EC8D  F0B3         	call	_terminalTextAttributes
 11638                           
 11639                           ;ring_buffer_LUT.c: 299: printf("    Call 'Clear I2C Errors' to clear communications err
      +                          or(s)\n\r");
 11640  019830  0E14               	movlw	low STR_254
 11641  019832  0103               	movlb	3	; () banked
 11642  019834  6FEB               	movwf	printf@f& (0+255),b
 11643  019836  0EEC               	movlw	high STR_254
 11644  019838  6FEC               	movwf	(printf@f+1)& (0+255),b
 11645  01983A  EC7B  F0E0         	call	_printf	;wreg free
 11646                           
 11647                           ;ring_buffer_LUT.c: 300: terminalTextAttributesReset();
 11648  01983E  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11649                           
 11650                           ;ring_buffer_LUT.c: 302: }
 11651  019842  D011               	goto	l20238
 11652  019844                     l20236:
 11653                           
 11654                           ;ring_buffer_LUT.c: 304: else {;ring_buffer_LUT.c: 306: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11655  019844  0E00               	movlw	0
 11656  019846  0102               	movlb	2	; () banked
 11657  019848  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11658  01984A  0E00               	movlw	0
 11659  01984C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11660  01984E  0E02               	movlw	2
 11661  019850  EC8D  F0B3         	call	_terminalTextAttributes
 11662                           
 11663                           ;ring_buffer_LUT.c: 307: printf("    No I2C error(s) detected\n\r");
 11664  019854  0E79               	movlw	low STR_255
 11665  019856  0103               	movlb	3	; () banked
 11666  019858  6FEB               	movwf	printf@f& (0+255),b
 11667  01985A  0EF7               	movlw	high STR_255
 11668  01985C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11669  01985E  EC7B  F0E0         	call	_printf	;wreg free
 11670                           
 11671                           ;ring_buffer_LUT.c: 308: terminalTextAttributesReset();
 11672  019862  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11673  019866                     l20238:
 11674                           
 11675                           ;ring_buffer_LUT.c: 310: };ring_buffer_LUT.c: 312: if (getUARTError()) {
 11676  019866  ECFA  F0E5         	call	_getUARTError	;wreg free
 11677  01986A  0900               	iorlw	0
 11678  01986C  B4D8               	btfsc	status,2,c
 11679  01986E  D021               	goto	l20242
 11680                           
 11681                           ;ring_buffer_LUT.c: 314: terminalTextAttributes(RED, BLACK, NORMAL);
 11682  019870  0E00               	movlw	0
 11683  019872  0102               	movlb	2	; () banked
 11684  019874  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11685  019876  0E00               	movlw	0
 11686  019878  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11687  01987A  0E01               	movlw	1
 11688  01987C  EC8D  F0B3         	call	_terminalTextAttributes
 11689                           
 11690                           ;ring_buffer_LUT.c: 315: printf("    USB UART Error Detected\n\r");
 11691  019880  0EB7               	movlw	low STR_256
 11692  019882  0103               	movlb	3	; () banked
 11693  019884  6FEB               	movwf	printf@f& (0+255),b
 11694  019886  0EF7               	movlw	high STR_256
 11695  019888  6FEC               	movwf	(printf@f+1)& (0+255),b
 11696  01988A  EC7B  F0E0         	call	_printf	;wreg free
 11697                           
 11698                           ;ring_buffer_LUT.c: 317: terminalTextAttributes(YELLOW, BLACK, NORMAL);
 11699  01988E  0E00               	movlw	0
 11700  019890  0102               	movlb	2	; () banked
 11701  019892  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11702  019894  0E00               	movlw	0
 11703  019896  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11704  019898  0E03               	movlw	3
 11705  01989A  EC8D  F0B3         	call	_terminalTextAttributes
 11706                           
 11707                           ;ring_buffer_LUT.c: 318: printf("    Call 'Clear UART Errors' to clear communications er
      +                          ror(s)\n\r");
 11708  01989E  0ED4               	movlw	low STR_257
 11709  0198A0  0103               	movlb	3	; () banked
 11710  0198A2  6FEB               	movwf	printf@f& (0+255),b
 11711  0198A4  0EEB               	movlw	high STR_257
 11712  0198A6  6FEC               	movwf	(printf@f+1)& (0+255),b
 11713  0198A8  EC7B  F0E0         	call	_printf	;wreg free
 11714                           
 11715                           ;ring_buffer_LUT.c: 319: terminalTextAttributesReset();
 11716  0198AC  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11717                           
 11718                           ;ring_buffer_LUT.c: 321: }
 11719  0198B0  0012               	return	
 11720  0198B2                     l20242:
 11721                           
 11722                           ;ring_buffer_LUT.c: 323: else {;ring_buffer_LUT.c: 325: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11723  0198B2  0E00               	movlw	0
 11724  0198B4  0102               	movlb	2	; () banked
 11725  0198B6  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11726  0198B8  0E00               	movlw	0
 11727  0198BA  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11728  0198BC  0E02               	movlw	2
 11729  0198BE  EC8D  F0B3         	call	_terminalTextAttributes
 11730                           
 11731                           ;ring_buffer_LUT.c: 326: printf("    No UART error(s) detected\n\r");
 11732  0198C2  0E59               	movlw	low STR_258
 11733  0198C4  0103               	movlb	3	; () banked
 11734  0198C6  6FEB               	movwf	printf@f& (0+255),b
 11735  0198C8  0EF7               	movlw	high STR_258
 11736  0198CA  6FEC               	movwf	(printf@f+1)& (0+255),b
 11737  0198CC  EC7B  F0E0         	call	_printf	;wreg free
 11738                           
 11739                           ;ring_buffer_LUT.c: 327: terminalTextAttributesReset();
 11740  0198D0  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 11741  0198D4  0012               	return		;funcret
 11742  0198D6                     __end_of_printErrorHandlerStatus:
 11743                           	opt callstack 0
 11744                           
 11745 ;; *************** function _printCurrentMeasurements *****************
 11746 ;; Defined at:
 11747 ;;		line 334 in file "ring_buffer_LUT.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;		None
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;		None
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1    wreg      void 
 11754 ;; Registers used:
 11755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; Hardware stack levels required when called:   16
 11768 ;; This function calls:
 11769 ;;		___flge
 11770 ;;		_floatToEngineeringFormat
 11771 ;;		_getNXQChargeStateString
 11772 ;;		_getStringSecondsAsTime
 11773 ;;		_printf
 11774 ;;		_terminalTextAttributes
 11775 ;;		_terminalTextAttributesReset
 11776 ;; This function is called by:
 11777 ;;		_main
 11778 ;;		_ringBufferLUT
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           	psect	text5
 11783  0155E8                     __ptext5:
 11784                           	opt callstack 0
 11785  0155E8                     _printCurrentMeasurements:
 11786                           	opt callstack 12
 11787                           
 11788                           ;ring_buffer_LUT.c: 336: if (nxq_charge_state == QI_Error) {
 11789                           
 11790                           ;incstack = 0
 11791  0155E8  0E03               	movlw	3
 11792  0155EA  0101               	movlb	1	; () banked
 11793  0155EC  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 11794  0155EE  A4D8               	btfss	status,2,c
 11795  0155F0  D010               	goto	l20036
 11796                           
 11797                           ; BSR set to: 1
 11798                           ;ring_buffer_LUT.c: 337: terminalTextAttributes(RED, BLACK, NORMAL);
 11799  0155F2  0E00               	movlw	0
 11800  0155F4  0102               	movlb	2	; () banked
 11801  0155F6  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11802  0155F8  0E00               	movlw	0
 11803  0155FA  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11804  0155FC  0E01               	movlw	1
 11805  0155FE  EC8D  F0B3         	call	_terminalTextAttributes
 11806                           
 11807                           ;ring_buffer_LUT.c: 338: printf("    QI Charger is in Error State\n\r");
 11808  015602  0E6B               	movlw	low STR_259
 11809  015604  0103               	movlb	3	; () banked
 11810  015606  6FEB               	movwf	printf@f& (0+255),b
 11811  015608  0EF6               	movlw	high STR_259
 11812  01560A  6FEC               	movwf	(printf@f+1)& (0+255),b
 11813  01560C  EC7B  F0E0         	call	_printf	;wreg free
 11814                           
 11815                           ;ring_buffer_LUT.c: 339: }
 11816  015610  D029               	goto	l2226
 11817  015612                     l20036:
 11818                           
 11819                           ; BSR set to: 1
 11820                           ;ring_buffer_LUT.c: 340: else if (nxq_charge_state == QI_Fully_Charged) {
 11821  015612  0E02               	movlw	2
 11822  015614  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 11823  015616  A4D8               	btfss	status,2,c
 11824  015618  D010               	goto	l20040
 11825                           
 11826                           ; BSR set to: 1
 11827                           ;ring_buffer_LUT.c: 341: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11828  01561A  0E00               	movlw	0
 11829  01561C  0102               	movlb	2	; () banked
 11830  01561E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11831  015620  0E00               	movlw	0
 11832  015622  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11833  015624  0E02               	movlw	2
 11834  015626  EC8D  F0B3         	call	_terminalTextAttributes
 11835                           
 11836                           ;ring_buffer_LUT.c: 342: printf("    QI wireless power converter has fully charged phone
      +                          \n\r");
 11837  01562A  0EB4               	movlw	low STR_260
 11838  01562C  0103               	movlb	3	; () banked
 11839  01562E  6FEB               	movwf	printf@f& (0+255),b
 11840  015630  0EEE               	movlw	high STR_260
 11841  015632  6FEC               	movwf	(printf@f+1)& (0+255),b
 11842  015634  EC7B  F0E0         	call	_printf	;wreg free
 11843                           
 11844                           ;ring_buffer_LUT.c: 343: }
 11845  015638  D015               	goto	l2226
 11846  01563A                     l20040:
 11847                           
 11848                           ; BSR set to: 1
 11849                           ;ring_buffer_LUT.c: 344: else {;ring_buffer_LUT.c: 345: terminalTextAttributes(GREEN, BL
      +                          ACK, NORMAL);
 11850  01563A  0E00               	movlw	0
 11851  01563C  0102               	movlb	2	; () banked
 11852  01563E  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11853  015640  0E00               	movlw	0
 11854  015642  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11855  015644  0E02               	movlw	2
 11856  015646  EC8D  F0B3         	call	_terminalTextAttributes
 11857                           
 11858                           ;ring_buffer_LUT.c: 346: printf("    QI wireless power converter is currently %s\n\r", g
      +                          etNXQChargeStateString());
 11859  01564A  0E16               	movlw	low STR_261
 11860  01564C  0103               	movlb	3	; () banked
 11861  01564E  6FEB               	movwf	printf@f& (0+255),b
 11862  015650  0EF2               	movlw	high STR_261
 11863  015652  6FEC               	movwf	(printf@f+1)& (0+255),b
 11864  015654  EC82  F0DC         	call	_getNXQChargeStateString	;wreg free
 11865  015658  C200  F3ED         	movff	?_getNXQChargeStateString,?_printf+2
 11866  01565C  C201  F3EE         	movff	?_getNXQChargeStateString+1,?_printf+3
 11867  015660  EC7B  F0E0         	call	_printf	;wreg free
 11868  015664                     l2226:
 11869                           
 11870                           ;ring_buffer_LUT.c: 347: };ring_buffer_LUT.c: 349: printf("\n\r");
 11871  015664  0EEB               	movlw	low (STR_11+20)
 11872  015666  0103               	movlb	3	; () banked
 11873  015668  6FEB               	movwf	printf@f& (0+255),b
 11874  01566A  0EF9               	movlw	high (STR_11+20)
 11875  01566C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11876  01566E  EC7B  F0E0         	call	_printf	;wreg free
 11877                           
 11878                           ;ring_buffer_LUT.c: 351: terminalTextAttributes(GREEN, BLACK, NORMAL);
 11879  015672  0E00               	movlw	0
 11880  015674  0102               	movlb	2	; () banked
 11881  015676  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11882  015678  0E00               	movlw	0
 11883  01567A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11884  01567C  0E02               	movlw	2
 11885  01567E  EC8D  F0B3         	call	_terminalTextAttributes
 11886                           
 11887                           ;ring_buffer_LUT.c: 352: if (QI_charge_time > 0) printf("    System has been charging a 
      +                          phone for %s\n\r\n\r", getStringSecondsAsTime(QI_charge_time));
 11888  015682  0102               	movlb	2	; () banked
 11889  015684  51D2               	movf	_QI_charge_time& (0+255),w,b
 11890  015686  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 11891  015688  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 11892  01568A  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 11893  01568C  B4D8               	btfsc	status,2,c
 11894  01568E  D015               	goto	l2229
 11895                           
 11896                           ; BSR set to: 2
 11897  015690  0E48               	movlw	low STR_263
 11898  015692  0103               	movlb	3	; () banked
 11899  015694  6FEB               	movwf	printf@f& (0+255),b
 11900  015696  0EF2               	movlw	high STR_263
 11901  015698  6FEC               	movwf	(printf@f+1)& (0+255),b
 11902  01569A  C2D2  F2A3         	movff	_QI_charge_time,getStringSecondsAsTime@input_seconds
 11903  01569E  C2D3  F2A4         	movff	_QI_charge_time+1,getStringSecondsAsTime@input_seconds+1
 11904  0156A2  C2D4  F2A5         	movff	_QI_charge_time+2,getStringSecondsAsTime@input_seconds+2
 11905  0156A6  C2D5  F2A6         	movff	_QI_charge_time+3,getStringSecondsAsTime@input_seconds+3
 11906  0156AA  ECBA  F0B1         	call	_getStringSecondsAsTime	;wreg free
 11907  0156AE  C2A3  F3ED         	movff	?_getStringSecondsAsTime,?_printf+2
 11908  0156B2  C2A4  F3EE         	movff	?_getStringSecondsAsTime+1,?_printf+3
 11909  0156B6  EC7B  F0E0         	call	_printf	;wreg free
 11910  0156BA                     l2229:
 11911                           
 11912                           ;ring_buffer_LUT.c: 354: terminalTextAttributes(CYAN, BLACK, BOLD);
 11913  0156BA  0E00               	movlw	0
 11914  0156BC  0102               	movlb	2	; () banked
 11915  0156BE  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11916  0156C0  0E01               	movlw	1
 11917  0156C2  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11918  0156C4  0E06               	movlw	6
 11919  0156C6  EC8D  F0B3         	call	_terminalTextAttributes
 11920                           
 11921                           ;ring_buffer_LUT.c: 355: printf("    System Voltages:\n\r");
 11922  0156CA  0E7B               	movlw	low STR_264
 11923  0156CC  0103               	movlb	3	; () banked
 11924  0156CE  6FEB               	movwf	printf@f& (0+255),b
 11925  0156D0  0EF9               	movlw	high STR_264
 11926  0156D2  6FEC               	movwf	(printf@f+1)& (0+255),b
 11927  0156D4  EC7B  F0E0         	call	_printf	;wreg free
 11928                           
 11929                           ;ring_buffer_LUT.c: 356: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11930  0156D8  0E00               	movlw	0
 11931  0156DA  0102               	movlb	2	; () banked
 11932  0156DC  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11933  0156DE  0E00               	movlw	0
 11934  0156E0  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11935  0156E2  0E06               	movlw	6
 11936  0156E4  EC8D  F0B3         	call	_terminalTextAttributes
 11937                           
 11938                           ;ring_buffer_LUT.c: 357: printf("        +12V rail measured as %+.3f Volts\n\r", adc_res
      +                          ults.pos12_adc_result);
 11939  0156E8  0E8C               	movlw	low STR_265
 11940  0156EA  0103               	movlb	3	; () banked
 11941  0156EC  6FEB               	movwf	printf@f& (0+255),b
 11942  0156EE  0EF3               	movlw	high STR_265
 11943  0156F0  6FEC               	movwf	(printf@f+1)& (0+255),b
 11944  0156F2  C0E9  F3ED         	movff	_adc_results+12,?_printf+2
 11945  0156F6  C0EA  F3EE         	movff	_adc_results+13,?_printf+3
 11946  0156FA  C0EB  F3EF         	movff	_adc_results+14,?_printf+4
 11947  0156FE  C0EC  F3F0         	movff	_adc_results+15,?_printf+5
 11948  015702  EC7B  F0E0         	call	_printf	;wreg free
 11949                           
 11950                           ;ring_buffer_LUT.c: 358: printf("        +5V rail measured as %+.3f Volts\n\r", adc_resu
      +                          lts.pos5_adc_result);
 11951  015706  0EE4               	movlw	low STR_266
 11952  015708  0103               	movlb	3	; () banked
 11953  01570A  6FEB               	movwf	printf@f& (0+255),b
 11954  01570C  0EF3               	movlw	high STR_266
 11955  01570E  6FEC               	movwf	(printf@f+1)& (0+255),b
 11956  015710  C0E5  F3ED         	movff	_adc_results+8,?_printf+2
 11957  015714  C0E6  F3EE         	movff	_adc_results+9,?_printf+3
 11958  015718  C0E7  F3EF         	movff	_adc_results+10,?_printf+4
 11959  01571C  C0E8  F3F0         	movff	_adc_results+11,?_printf+5
 11960  015720  EC7B  F0E0         	call	_printf	;wreg free
 11961                           
 11962                           ;ring_buffer_LUT.c: 360: printf("\n\r");
 11963  015724  0EEB               	movlw	low (STR_11+20)
 11964  015726  0103               	movlb	3	; () banked
 11965  015728  6FEB               	movwf	printf@f& (0+255),b
 11966  01572A  0EF9               	movlw	high (STR_11+20)
 11967  01572C  6FEC               	movwf	(printf@f+1)& (0+255),b
 11968  01572E  EC7B  F0E0         	call	_printf	;wreg free
 11969                           
 11970                           ;ring_buffer_LUT.c: 362: terminalTextAttributes(CYAN, BLACK, BOLD);
 11971  015732  0E00               	movlw	0
 11972  015734  0102               	movlb	2	; () banked
 11973  015736  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11974  015738  0E01               	movlw	1
 11975  01573A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11976  01573C  0E06               	movlw	6
 11977  01573E  EC8D  F0B3         	call	_terminalTextAttributes
 11978                           
 11979                           ;ring_buffer_LUT.c: 363: printf("    System Currents:\n\r");
 11980  015742  0E92               	movlw	low STR_268
 11981  015744  0103               	movlb	3	; () banked
 11982  015746  6FEB               	movwf	printf@f& (0+255),b
 11983  015748  0EF9               	movlw	high STR_268
 11984  01574A  6FEC               	movwf	(printf@f+1)& (0+255),b
 11985  01574C  EC7B  F0E0         	call	_printf	;wreg free
 11986                           
 11987                           ;ring_buffer_LUT.c: 364: terminalTextAttributes(CYAN, BLACK, NORMAL);
 11988  015750  0E00               	movlw	0
 11989  015752  0102               	movlb	2	; () banked
 11990  015754  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 11991  015756  0E00               	movlw	0
 11992  015758  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 11993  01575A  0E06               	movlw	6
 11994  01575C  EC8D  F0B3         	call	_terminalTextAttributes
 11995                           
 11996                           ;ring_buffer_LUT.c: 365: printf("        +12V input current measured as %+.3f Amps\n\r",
      +                           adc_results.pos12_isns_adc_result);
 11997  015760  0E18               	movlw	low STR_269
 11998  015762  0103               	movlb	3	; () banked
 11999  015764  6FEB               	movwf	printf@f& (0+255),b
 12000  015766  0EF1               	movlw	high STR_269
 12001  015768  6FEC               	movwf	(printf@f+1)& (0+255),b
 12002  01576A  C0ED  F3ED         	movff	_adc_results+16,?_printf+2
 12003  01576E  C0EE  F3EE         	movff	_adc_results+17,?_printf+3
 12004  015772  C0EF  F3EF         	movff	_adc_results+18,?_printf+4
 12005  015776  C0F0  F3F0         	movff	_adc_results+19,?_printf+5
 12006  01577A  EC7B  F0E0         	call	_printf	;wreg free
 12007                           
 12008                           ;ring_buffer_LUT.c: 366: printf("        QI converter current measured as %+.3f Amps\n\r
      +                          ", adc_results.qi_isns_adc_result);
 12009  01577E  0EAE               	movlw	low STR_270
 12010  015780  0103               	movlb	3	; () banked
 12011  015782  6FEB               	movwf	printf@f& (0+255),b
 12012  015784  0EF0               	movlw	high STR_270
 12013  015786  6FEC               	movwf	(printf@f+1)& (0+255),b
 12014  015788  C0F1  F3ED         	movff	_adc_results+20,?_printf+2
 12015  01578C  C0F2  F3EE         	movff	_adc_results+21,?_printf+3
 12016  015790  C0F3  F3EF         	movff	_adc_results+22,?_printf+4
 12017  015794  C0F4  F3F0         	movff	_adc_results+23,?_printf+5
 12018  015798  EC7B  F0E0         	call	_printf	;wreg free
 12019                           
 12020                           ;ring_buffer_LUT.c: 368: printf("\n\r");
 12021  01579C  0EEB               	movlw	low (STR_11+20)
 12022  01579E  0103               	movlb	3	; () banked
 12023  0157A0  6FEB               	movwf	printf@f& (0+255),b
 12024  0157A2  0EF9               	movlw	high (STR_11+20)
 12025  0157A4  6FEC               	movwf	(printf@f+1)& (0+255),b
 12026  0157A6  EC7B  F0E0         	call	_printf	;wreg free
 12027                           
 12028                           ;ring_buffer_LUT.c: 370: terminalTextAttributes(CYAN, BLACK, BOLD);
 12029  0157AA  0E00               	movlw	0
 12030  0157AC  0102               	movlb	2	; () banked
 12031  0157AE  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12032  0157B0  0E01               	movlw	1
 12033  0157B2  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12034  0157B4  0E06               	movlw	6
 12035  0157B6  EC8D  F0B3         	call	_terminalTextAttributes
 12036                           
 12037                           ;ring_buffer_LUT.c: 371: printf("    System Power:\n\r");
 12038  0157BA  0EC1               	movlw	low STR_272
 12039  0157BC  0103               	movlb	3	; () banked
 12040  0157BE  6FEB               	movwf	printf@f& (0+255),b
 12041  0157C0  0EFA               	movlw	high STR_272
 12042  0157C2  6FEC               	movwf	(printf@f+1)& (0+255),b
 12043  0157C4  EC7B  F0E0         	call	_printf	;wreg free
 12044                           
 12045                           ;ring_buffer_LUT.c: 372: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12046  0157C8  0E00               	movlw	0
 12047  0157CA  0102               	movlb	2	; () banked
 12048  0157CC  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12049  0157CE  0E00               	movlw	0
 12050  0157D0  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12051  0157D2  0E06               	movlw	6
 12052  0157D4  EC8D  F0B3         	call	_terminalTextAttributes
 12053                           
 12054                           ;ring_buffer_LUT.c: 373: printf("        Electrical Input Power calculated as %+.3f Watt
      +                          s\n\r", adc_calculations.input_power);
 12055  0157D8  0E79               	movlw	low STR_273
 12056  0157DA  0103               	movlb	3	; () banked
 12057  0157DC  6FEB               	movwf	printf@f& (0+255),b
 12058  0157DE  0EEE               	movlw	high STR_273
 12059  0157E0  6FEC               	movwf	(printf@f+1)& (0+255),b
 12060  0157E2  C2BE  F3ED         	movff	_adc_calculations,?_printf+2
 12061  0157E6  C2BF  F3EE         	movff	_adc_calculations+1,?_printf+3
 12062  0157EA  C2C0  F3EF         	movff	_adc_calculations+2,?_printf+4
 12063  0157EE  C2C1  F3F0         	movff	_adc_calculations+3,?_printf+5
 12064  0157F2  EC7B  F0E0         	call	_printf	;wreg free
 12065                           
 12066                           ;ring_buffer_LUT.c: 374: printf("        Wireless Output Power calculated as %+.3f Watts
      +                          \n\r", adc_calculations.output_power);
 12067  0157F6  0EEE               	movlw	low STR_274
 12068  0157F8  0103               	movlb	3	; () banked
 12069  0157FA  6FEB               	movwf	printf@f& (0+255),b
 12070  0157FC  0EEE               	movlw	high STR_274
 12071  0157FE  6FEC               	movwf	(printf@f+1)& (0+255),b
 12072  015800  C2C2  F3ED         	movff	_adc_calculations+4,?_printf+2
 12073  015804  C2C3  F3EE         	movff	_adc_calculations+5,?_printf+3
 12074  015808  C2C4  F3EF         	movff	_adc_calculations+6,?_printf+4
 12075  01580C  C2C5  F3F0         	movff	_adc_calculations+7,?_printf+5
 12076  015810  EC7B  F0E0         	call	_printf	;wreg free
 12077                           
 12078                           ;ring_buffer_LUT.c: 376: printf("\n\r");
 12079  015814  0EEB               	movlw	low (STR_11+20)
 12080  015816  0103               	movlb	3	; () banked
 12081  015818  6FEB               	movwf	printf@f& (0+255),b
 12082  01581A  0EF9               	movlw	high (STR_11+20)
 12083  01581C  6FEC               	movwf	(printf@f+1)& (0+255),b
 12084  01581E  EC7B  F0E0         	call	_printf	;wreg free
 12085                           
 12086                           ;ring_buffer_LUT.c: 378: terminalTextAttributes(CYAN, BLACK, BOLD);
 12087  015822  0E00               	movlw	0
 12088  015824  0102               	movlb	2	; () banked
 12089  015826  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12090  015828  0E01               	movlw	1
 12091  01582A  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12092  01582C  0E06               	movlw	6
 12093  01582E  EC8D  F0B3         	call	_terminalTextAttributes
 12094                           
 12095                           ;ring_buffer_LUT.c: 379: printf("    System Efficiency calculated as %.3f%%\n\r", adc_ca
      +                          lculations.efficiency);
 12096  015832  0E32               	movlw	low STR_276
 12097  015834  0103               	movlb	3	; () banked
 12098  015836  6FEB               	movwf	printf@f& (0+255),b
 12099  015838  0EF3               	movlw	high STR_276
 12100  01583A  6FEC               	movwf	(printf@f+1)& (0+255),b
 12101  01583C  C2C6  F3ED         	movff	_adc_calculations+8,?_printf+2
 12102  015840  C2C7  F3EE         	movff	_adc_calculations+9,?_printf+3
 12103  015844  C2C8  F3EF         	movff	_adc_calculations+10,?_printf+4
 12104  015848  C2C9  F3F0         	movff	_adc_calculations+11,?_printf+5
 12105  01584C  EC7B  F0E0         	call	_printf	;wreg free
 12106                           
 12107                           ;ring_buffer_LUT.c: 381: printf("\n\r");
 12108  015850  0EEB               	movlw	low (STR_11+20)
 12109  015852  0103               	movlb	3	; () banked
 12110  015854  6FEB               	movwf	printf@f& (0+255),b
 12111  015856  0EF9               	movlw	high (STR_11+20)
 12112  015858  6FEC               	movwf	(printf@f+1)& (0+255),b
 12113  01585A  EC7B  F0E0         	call	_printf	;wreg free
 12114                           
 12115                           ;ring_buffer_LUT.c: 383: if (adc_calculations.output_energy > 0.0) {
 12116  01585E  0E00               	movlw	0
 12117  015860  0102               	movlb	2	; () banked
 12118  015862  6F4C               	movwf	___flge@ff1& (0+255),b
 12119  015864  0E00               	movlw	0
 12120  015866  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 12121  015868  0E00               	movlw	0
 12122  01586A  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 12123  01586C  0E00               	movlw	0
 12124  01586E  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 12125  015870  C2CE  F250         	movff	_adc_calculations+16,___flge@ff2
 12126  015874  C2CF  F251         	movff	_adc_calculations+17,___flge@ff2+1
 12127  015878  C2D0  F252         	movff	_adc_calculations+18,___flge@ff2+2
 12128  01587C  C2D1  F253         	movff	_adc_calculations+19,___flge@ff2+3
 12129  015880  EC4D  F0D4         	call	___flge	;wreg free
 12130  015884  0102               	movlb	2	; () banked
 12131  015886  B0D8               	btfsc	status,0,c
 12132  015888  D023               	goto	l20050
 12133                           
 12134                           ; BSR set to: 2
 12135                           ;ring_buffer_LUT.c: 385: terminalTextAttributes(CYAN, BLACK, BOLD);
 12136  01588A  0E00               	movlw	0
 12137  01588C  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12138  01588E  0E01               	movlw	1
 12139  015890  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12140  015892  0E06               	movlw	6
 12141  015894  EC8D  F0B3         	call	_terminalTextAttributes
 12142                           
 12143                           ;ring_buffer_LUT.c: 386: printf("    Energy consumed by the load while charging: %sJoule
      +                          s\n\r", floatToEngineeringFormat(adc_calculations.output_energy));
 12144  015898  0E3E               	movlw	low STR_278
 12145  01589A  0103               	movlb	3	; () banked
 12146  01589C  6FEB               	movwf	printf@f& (0+255),b
 12147  01589E  0EEE               	movlw	high STR_278
 12148  0158A0  6FEC               	movwf	(printf@f+1)& (0+255),b
 12149  0158A2  C2CE  F2A3         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 12150  0158A6  C2CF  F2A4         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 12151  0158AA  C2D0  F2A5         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 12152  0158AE  C2D1  F2A6         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 12153  0158B2  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 12154  0158B6  C2A3  F3ED         	movff	?_floatToEngineeringFormat,?_printf+2
 12155  0158BA  C2A4  F3EE         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12156  0158BE  EC7B  F0E0         	call	_printf	;wreg free
 12157                           
 12158                           ;ring_buffer_LUT.c: 388: printf("\n\r");
 12159  0158C2  0EEB               	movlw	low (STR_11+20)
 12160  0158C4  0103               	movlb	3	; () banked
 12161  0158C6  6FEB               	movwf	printf@f& (0+255),b
 12162  0158C8  0EF9               	movlw	high (STR_11+20)
 12163  0158CA  6FEC               	movwf	(printf@f+1)& (0+255),b
 12164  0158CC  EC7B  F0E0         	call	_printf	;wreg free
 12165  0158D0                     l20050:
 12166                           
 12167                           ;ring_buffer_LUT.c: 390: };ring_buffer_LUT.c: 392: if (adc_calculations.output_charge > 
      +                          0.0) {
 12168  0158D0  0E00               	movlw	0
 12169  0158D2  0102               	movlb	2	; () banked
 12170  0158D4  6F4C               	movwf	___flge@ff1& (0+255),b
 12171  0158D6  0E00               	movlw	0
 12172  0158D8  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 12173  0158DA  0E00               	movlw	0
 12174  0158DC  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 12175  0158DE  0E00               	movlw	0
 12176  0158E0  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 12177  0158E2  C2CA  F250         	movff	_adc_calculations+12,___flge@ff2
 12178  0158E6  C2CB  F251         	movff	_adc_calculations+13,___flge@ff2+1
 12179  0158EA  C2CC  F252         	movff	_adc_calculations+14,___flge@ff2+2
 12180  0158EE  C2CD  F253         	movff	_adc_calculations+15,___flge@ff2+3
 12181  0158F2  EC4D  F0D4         	call	___flge	;wreg free
 12182  0158F6  0102               	movlb	2	; () banked
 12183  0158F8  B0D8               	btfsc	status,0,c
 12184  0158FA  D023               	goto	l2231
 12185                           
 12186                           ; BSR set to: 2
 12187                           ;ring_buffer_LUT.c: 394: terminalTextAttributes(CYAN, BLACK, BOLD);
 12188  0158FC  0E00               	movlw	0
 12189  0158FE  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12190  015900  0E01               	movlw	1
 12191  015902  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12192  015904  0E06               	movlw	6
 12193  015906  EC8D  F0B3         	call	_terminalTextAttributes
 12194                           
 12195                           ;ring_buffer_LUT.c: 395: printf("    Charge consumed by the load while charging: %sCoulo
      +                          mbs\n\r", floatToEngineeringFormat(adc_calculations.output_charge));
 12196  01590A  0E89               	movlw	low STR_280
 12197  01590C  0103               	movlb	3	; () banked
 12198  01590E  6FEB               	movwf	printf@f& (0+255),b
 12199  015910  0EED               	movlw	high STR_280
 12200  015912  6FEC               	movwf	(printf@f+1)& (0+255),b
 12201  015914  C2CA  F2A3         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 12202  015918  C2CB  F2A4         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 12203  01591C  C2CC  F2A5         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 12204  015920  C2CD  F2A6         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 12205  015924  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 12206  015928  C2A3  F3ED         	movff	?_floatToEngineeringFormat,?_printf+2
 12207  01592C  C2A4  F3EE         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12208  015930  EC7B  F0E0         	call	_printf	;wreg free
 12209                           
 12210                           ;ring_buffer_LUT.c: 397: printf("\n\r");
 12211  015934  0EEB               	movlw	low (STR_11+20)
 12212  015936  0103               	movlb	3	; () banked
 12213  015938  6FEB               	movwf	printf@f& (0+255),b
 12214  01593A  0EF9               	movlw	high (STR_11+20)
 12215  01593C  6FEC               	movwf	(printf@f+1)& (0+255),b
 12216  01593E  EC7B  F0E0         	call	_printf	;wreg free
 12217  015942                     l2231:
 12218                           
 12219                           ;ring_buffer_LUT.c: 399: };ring_buffer_LUT.c: 401: printf("    System Switching Frequenc
      +                          ies:\n\r");
 12220  015942  0EBA               	movlw	low STR_282
 12221  015944  0103               	movlb	3	; () banked
 12222  015946  6FEB               	movwf	printf@f& (0+255),b
 12223  015948  0EF5               	movlw	high STR_282
 12224  01594A  6FEC               	movwf	(printf@f+1)& (0+255),b
 12225  01594C  EC7B  F0E0         	call	_printf	;wreg free
 12226                           
 12227                           ;ring_buffer_LUT.c: 402: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12228  015950  0E00               	movlw	0
 12229  015952  0102               	movlb	2	; () banked
 12230  015954  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12231  015956  0E00               	movlw	0
 12232  015958  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12233  01595A  0E06               	movlw	6
 12234  01595C  EC8D  F0B3         	call	_terminalTextAttributes
 12235                           
 12236                           ;ring_buffer_LUT.c: 403: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        POS5 Converter is in Burst Mode\n\r");
 12237  015960  0101               	movlb	1	; () banked
 12238  015962  518F               	movf	_nxq_charge_state& (0+255),w,b
 12239  015964  B4D8               	btfsc	status,2,c
 12240  015966  D004               	goto	u25480
 12241                           
 12242                           ; BSR set to: 1
 12243  015968  0E03               	movlw	3
 12244  01596A  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 12245  01596C  A4D8               	btfss	status,2,c
 12246  01596E  D008               	goto	l20060
 12247  015970                     u25480:
 12248                           
 12249                           ; BSR set to: 1
 12250  015970  0E0F               	movlw	low STR_283
 12251  015972  0103               	movlb	3	; () banked
 12252  015974  6FEB               	movwf	printf@f& (0+255),b
 12253  015976  0EF4               	movlw	high STR_283
 12254  015978  6FEC               	movwf	(printf@f+1)& (0+255),b
 12255  01597A  EC7B  F0E0         	call	_printf	;wreg free
 12256  01597E  D00F               	goto	l20062
 12257  015980                     l20060:
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;ring_buffer_LUT.c: 404: else printf("        Current +5V Switching Frequency measured a
      +                          s %.1f MHz\n\r", 2.5);
 12261  015980  0E53               	movlw	low STR_284
 12262  015982  0103               	movlb	3	; () banked
 12263  015984  6FEB               	movwf	printf@f& (0+255),b
 12264  015986  0EEC               	movlw	high STR_284
 12265  015988  6FEC               	movwf	(printf@f+1)& (0+255),b
 12266  01598A  0E00               	movlw	0
 12267  01598C  6FED               	movwf	(?_printf+2)& (0+255),b
 12268  01598E  0E00               	movlw	0
 12269  015990  6FEE               	movwf	(?_printf+3)& (0+255),b
 12270  015992  0E20               	movlw	32
 12271  015994  6FEF               	movwf	(?_printf+4)& (0+255),b
 12272  015996  0E40               	movlw	64
 12273  015998  6FF0               	movwf	(?_printf+5)& (0+255),b
 12274  01599A  EC7B  F0E0         	call	_printf	;wreg free
 12275  01599E                     l20062:
 12276                           
 12277                           ;ring_buffer_LUT.c: 405: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error
      +                          ) printf("        QI Converter is in Burst Mode\n\r");
 12278  01599E  0101               	movlb	1	; () banked
 12279  0159A0  518F               	movf	_nxq_charge_state& (0+255),w,b
 12280  0159A2  B4D8               	btfsc	status,2,c
 12281  0159A4  D004               	goto	u25500
 12282                           
 12283                           ; BSR set to: 1
 12284  0159A6  0E03               	movlw	3
 12285  0159A8  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 12286  0159AA  A4D8               	btfss	status,2,c
 12287  0159AC  D008               	goto	l20068
 12288  0159AE                     u25500:
 12289                           
 12290                           ; BSR set to: 1
 12291  0159AE  0E62               	movlw	low STR_285
 12292  0159B0  0103               	movlb	3	; () banked
 12293  0159B2  6FEB               	movwf	printf@f& (0+255),b
 12294  0159B4  0EF4               	movlw	high STR_285
 12295  0159B6  6FEC               	movwf	(printf@f+1)& (0+255),b
 12296  0159B8  EC7B  F0E0         	call	_printf	;wreg free
 12297  0159BC  D015               	goto	l2239
 12298  0159BE                     l20068:
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;ring_buffer_LUT.c: 406: else printf("        Current QI Switching Frequency measured as
      +                           %sHz\n\r", floatToEngineeringFormat(freq_meas_results.QI_Freq_Meas));
 12302  0159BE  0E28               	movlw	low STR_286
 12303  0159C0  0103               	movlb	3	; () banked
 12304  0159C2  6FEB               	movwf	printf@f& (0+255),b
 12305  0159C4  0EEF               	movlw	high STR_286
 12306  0159C6  6FEC               	movwf	(printf@f+1)& (0+255),b
 12307  0159C8  C168  F2A3         	movff	_freq_meas_results,floatToEngineeringFormat@input_value
 12308  0159CC  C169  F2A4         	movff	_freq_meas_results+1,floatToEngineeringFormat@input_value+1
 12309  0159D0  C16A  F2A5         	movff	_freq_meas_results+2,floatToEngineeringFormat@input_value+2
 12310  0159D4  C16B  F2A6         	movff	_freq_meas_results+3,floatToEngineeringFormat@input_value+3
 12311  0159D8  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 12312  0159DC  C2A3  F3ED         	movff	?_floatToEngineeringFormat,?_printf+2
 12313  0159E0  C2A4  F3EE         	movff	?_floatToEngineeringFormat+1,?_printf+3
 12314  0159E4  EC7B  F0E0         	call	_printf	;wreg free
 12315  0159E8                     l2239:
 12316                           
 12317                           ;ring_buffer_LUT.c: 408: printf("\n\r");
 12318  0159E8  0EEB               	movlw	low (STR_11+20)
 12319  0159EA  0103               	movlb	3	; () banked
 12320  0159EC  6FEB               	movwf	printf@f& (0+255),b
 12321  0159EE  0EF9               	movlw	high (STR_11+20)
 12322  0159F0  6FEC               	movwf	(printf@f+1)& (0+255),b
 12323  0159F2  EC7B  F0E0         	call	_printf	;wreg free
 12324                           
 12325                           ;ring_buffer_LUT.c: 410: terminalTextAttributes(CYAN, BLACK, BOLD);
 12326  0159F6  0E00               	movlw	0
 12327  0159F8  0102               	movlb	2	; () banked
 12328  0159FA  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12329  0159FC  0E01               	movlw	1
 12330  0159FE  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12331  015A00  0E06               	movlw	6
 12332  015A02  EC8D  F0B3         	call	_terminalTextAttributes
 12333                           
 12334                           ;ring_buffer_LUT.c: 411: printf("    System Temperatures:\n\r");
 12335  015A06  0E9B               	movlw	low STR_288
 12336  015A08  0103               	movlb	3	; () banked
 12337  015A0A  6FEB               	movwf	printf@f& (0+255),b
 12338  015A0C  0EF8               	movlw	high STR_288
 12339  015A0E  6FEC               	movwf	(printf@f+1)& (0+255),b
 12340  015A10  EC7B  F0E0         	call	_printf	;wreg free
 12341                           
 12342                           ;ring_buffer_LUT.c: 412: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12343  015A14  0E00               	movlw	0
 12344  015A16  0102               	movlb	2	; () banked
 12345  015A18  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12346  015A1A  0E00               	movlw	0
 12347  015A1C  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12348  015A1E  0E06               	movlw	6
 12349  015A20  EC8D  F0B3         	call	_terminalTextAttributes
 12350                           
 12351                           ;ring_buffer_LUT.c: 413: printf("        QI Converter Temperature measured as %+.3f C\n\
      +                          r", LM73_temp_results.QI_temp_result);
 12352  015A24  0E0B               	movlw	low STR_289
 12353  015A26  0103               	movlb	3	; () banked
 12354  015A28  6FEB               	movwf	printf@f& (0+255),b
 12355  015A2A  0EF0               	movlw	high STR_289
 12356  015A2C  6FEC               	movwf	(printf@f+1)& (0+255),b
 12357  015A2E  C2DB  F3ED         	movff	_LM73_temp_results,?_printf+2
 12358  015A32  C2DC  F3EE         	movff	_LM73_temp_results+1,?_printf+3
 12359  015A36  C2DD  F3EF         	movff	_LM73_temp_results+2,?_printf+4
 12360  015A3A  C2DE  F3F0         	movff	_LM73_temp_results+3,?_printf+5
 12361  015A3E  EC7B  F0E0         	call	_printf	;wreg free
 12362                           
 12363                           ;ring_buffer_LUT.c: 414: printf("        +5V Converter Temperature measured as %+.3f C\n
      +                          \r", LM73_temp_results.POS5_temp_result);
 12364  015A42  0E9B               	movlw	low STR_290
 12365  015A44  0103               	movlb	3	; () banked
 12366  015A46  6FEB               	movwf	printf@f& (0+255),b
 12367  015A48  0EEF               	movlw	high STR_290
 12368  015A4A  6FEC               	movwf	(printf@f+1)& (0+255),b
 12369  015A4C  C2DF  F3ED         	movff	_LM73_temp_results+4,?_printf+2
 12370  015A50  C2E0  F3EE         	movff	_LM73_temp_results+5,?_printf+3
 12371  015A54  C2E1  F3EF         	movff	_LM73_temp_results+6,?_printf+4
 12372  015A58  C2E2  F3F0         	movff	_LM73_temp_results+7,?_printf+5
 12373  015A5C  EC7B  F0E0         	call	_printf	;wreg free
 12374                           
 12375                           ;ring_buffer_LUT.c: 415: printf("        Ambient Temperature measured as %+.3f C\n\r", L
      +                          M73_temp_results.Ambient_temp_result);
 12376  015A60  0EE4               	movlw	low STR_291
 12377  015A62  0103               	movlb	3	; () banked
 12378  015A64  6FEB               	movwf	printf@f& (0+255),b
 12379  015A66  0EF1               	movlw	high STR_291
 12380  015A68  6FEC               	movwf	(printf@f+1)& (0+255),b
 12381  015A6A  C2E3  F3ED         	movff	_LM73_temp_results+8,?_printf+2
 12382  015A6E  C2E4  F3EE         	movff	_LM73_temp_results+9,?_printf+3
 12383  015A72  C2E5  F3EF         	movff	_LM73_temp_results+10,?_printf+4
 12384  015A76  C2E6  F3F0         	movff	_LM73_temp_results+11,?_printf+5
 12385  015A7A  EC7B  F0E0         	call	_printf	;wreg free
 12386                           
 12387                           ;ring_buffer_LUT.c: 417: printf("\n\r");
 12388  015A7E  0EEB               	movlw	low (STR_11+20)
 12389  015A80  0103               	movlb	3	; () banked
 12390  015A82  6FEB               	movwf	printf@f& (0+255),b
 12391  015A84  0EF9               	movlw	high (STR_11+20)
 12392  015A86  6FEC               	movwf	(printf@f+1)& (0+255),b
 12393  015A88  EC7B  F0E0         	call	_printf	;wreg free
 12394                           
 12395                           ;ring_buffer_LUT.c: 419: terminalTextAttributes(CYAN, BLACK, BOLD);
 12396  015A8C  0E00               	movlw	0
 12397  015A8E  0102               	movlb	2	; () banked
 12398  015A90  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12399  015A92  0E01               	movlw	1
 12400  015A94  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12401  015A96  0E06               	movlw	6
 12402  015A98  EC8D  F0B3         	call	_terminalTextAttributes
 12403                           
 12404                           ;ring_buffer_LUT.c: 420: printf("    Microcontroller Parameters:\n\r");
 12405  015A9C  0EF5               	movlw	low STR_293
 12406  015A9E  0103               	movlb	3	; () banked
 12407  015AA0  6FEB               	movwf	printf@f& (0+255),b
 12408  015AA2  0EF6               	movlw	high STR_293
 12409  015AA4  6FEC               	movwf	(printf@f+1)& (0+255),b
 12410  015AA6  EC7B  F0E0         	call	_printf	;wreg free
 12411                           
 12412                           ;ring_buffer_LUT.c: 421: terminalTextAttributes(CYAN, BLACK, NORMAL);
 12413  015AAA  0E00               	movlw	0
 12414  015AAC  0102               	movlb	2	; () banked
 12415  015AAE  6FB9               	movwf	terminalTextAttributes@background_color& (0+255),b
 12416  015AB0  0E00               	movlw	0
 12417  015AB2  6FBA               	movwf	terminalTextAttributes@input_attribute& (0+255),b
 12418  015AB4  0E06               	movlw	6
 12419  015AB6  EC8D  F0B3         	call	_terminalTextAttributes
 12420                           
 12421                           ;ring_buffer_LUT.c: 422: printf("        Microcontroller Die Temperature measured as %+.
      +                          3f C\n\r", adc_results.die_temp_adc_result);
 12422  015ABA  0E92               	movlw	low STR_294
 12423  015ABC  0103               	movlb	3	; () banked
 12424  015ABE  6FEB               	movwf	printf@f& (0+255),b
 12425  015AC0  0EEC               	movlw	high STR_294
 12426  015AC2  6FEC               	movwf	(printf@f+1)& (0+255),b
 12427  015AC4  C0F5  F3ED         	movff	_adc_results+24,?_printf+2
 12428  015AC8  C0F6  F3EE         	movff	_adc_results+25,?_printf+3
 12429  015ACC  C0F7  F3EF         	movff	_adc_results+26,?_printf+4
 12430  015AD0  C0F8  F3F0         	movff	_adc_results+27,?_printf+5
 12431  015AD4  EC7B  F0E0         	call	_printf	;wreg free
 12432                           
 12433                           ;ring_buffer_LUT.c: 423: printf("        Fixed Voltage Reference Buffer 1 measured as %+
      +                          .3f Volts, calibrated for +4.096 Volts\n\r", adc_results.fvr_adc_result);
 12434  015AD8  0E1C               	movlw	low STR_295
 12435  015ADA  0103               	movlb	3	; () banked
 12436  015ADC  6FEB               	movwf	printf@f& (0+255),b
 12437  015ADE  0EEB               	movlw	high STR_295
 12438  015AE0  6FEC               	movwf	(printf@f+1)& (0+255),b
 12439  015AE2  C0E1  F3ED         	movff	_adc_results+4,?_printf+2
 12440  015AE6  C0E2  F3EE         	movff	_adc_results+5,?_printf+3
 12441  015AEA  C0E3  F3EF         	movff	_adc_results+6,?_printf+4
 12442  015AEE  C0E4  F3F0         	movff	_adc_results+7,?_printf+5
 12443  015AF2  EC7B  F0E0         	call	_printf	;wreg free
 12444                           
 12445                           ;ring_buffer_LUT.c: 424: printf("        AVSS measured as %+.3f Volts\n\r", adc_results.
      +                          avss_adc_result);
 12446  015AF6  0EB2               	movlw	low STR_296
 12447  015AF8  0103               	movlb	3	; () banked
 12448  015AFA  6FEB               	movwf	printf@f& (0+255),b
 12449  015AFC  0EF4               	movlw	high STR_296
 12450  015AFE  6FEC               	movwf	(printf@f+1)& (0+255),b
 12451  015B00  C0DD  F3ED         	movff	_adc_results,?_printf+2
 12452  015B04  C0DE  F3EE         	movff	_adc_results+1,?_printf+3
 12453  015B08  C0DF  F3EF         	movff	_adc_results+2,?_printf+4
 12454  015B0C  C0E0  F3F0         	movff	_adc_results+3,?_printf+5
 12455  015B10  EC7B  F0E0         	call	_printf	;wreg free
 12456                           
 12457                           ;ring_buffer_LUT.c: 426: printf("\n\r");
 12458  015B14  0EEB               	movlw	low (STR_11+20)
 12459  015B16  0103               	movlb	3	; () banked
 12460  015B18  6FEB               	movwf	printf@f& (0+255),b
 12461  015B1A  0EF9               	movlw	high (STR_11+20)
 12462  015B1C  6FEC               	movwf	(printf@f+1)& (0+255),b
 12463  015B1E  EC7B  F0E0         	call	_printf	;wreg free
 12464                           
 12465                           ;ring_buffer_LUT.c: 428: terminalTextAttributesReset();
 12466  015B22  EC2E  F0E5         	call	_terminalTextAttributesReset	;wreg free
 12467  015B26  0012               	return		;funcret
 12468  015B28                     __end_of_printCurrentMeasurements:
 12469                           	opt callstack 0
 12470                           
 12471 ;; *************** function _terminalTextAttributesReset *****************
 12472 ;; Defined at:
 12473 ;;		line 164 in file "terminal_control.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;		None
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12491 ;;Total ram usage:        0 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:   15
 12494 ;; This function calls:
 12495 ;;		_printf
 12496 ;; This function is called by:
 12497 ;;		_main
 12498 ;;		_ringBufferLUT
 12499 ;;		_printErrorHandlerStatus
 12500 ;;		_printCurrentMeasurements
 12501 ;;		_terminalPrintTestMessage
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           	psect	text6
 12506  01CA5C                     __ptext6:
 12507                           	opt callstack 0
 12508  01CA5C                     _terminalTextAttributesReset:
 12509                           	opt callstack 13
 12510                           
 12511                           ;terminal_control.c: 167: printf("\033[0;37;40m");
 12512                           
 12513                           ;incstack = 0
 12514  01CA5C  0EDB               	movlw	low STR_339
 12515  01CA5E  0103               	movlb	3	; () banked
 12516  01CA60  6FEB               	movwf	printf@f& (0+255),b
 12517  01CA62  0EFD               	movlw	high STR_339
 12518  01CA64  6FEC               	movwf	(printf@f+1)& (0+255),b
 12519  01CA66  EC7B  F0E0         	call	_printf	;wreg free
 12520  01CA6A  0012               	return		;funcret
 12521  01CA6C                     __end_of_terminalTextAttributesReset:
 12522                           	opt callstack 0
 12523                           
 12524 ;; *************** function _terminalTextAttributes *****************
 12525 ;; Defined at:
 12526 ;;		line 47 in file "terminal_control.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  foreground_c    1    wreg     enum E9584
 12529 ;;  background_c    1  185[BANK2 ] enum E9584
 12530 ;;  input_attrib    1  186[BANK2 ] enum E9576
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;  foreground_c    1    0[BANK5 ] enum E9584
 12533 ;;  print_string   16    1[BANK5 ] unsigned char [16]
 12534 ;;  i               1   17[BANK5 ] unsigned char 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12544 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12545 ;;      Locals:         0       0       0       0       0       0      18       0       0       0       0       0       
      +0       0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12547 ;;      Totals:         0       0       0       2       0       0      18       0       0       0       0       0       
      +0       0       0       0
 12548 ;;Total ram usage:       20 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:   15
 12551 ;; This function calls:
 12552 ;;		_printf
 12553 ;;		_strcat
 12554 ;;		_strncpy
 12555 ;; This function is called by:
 12556 ;;		_main
 12557 ;;		_ringBufferLUT
 12558 ;;		_printErrorHandlerStatus
 12559 ;;		_printCurrentMeasurements
 12560 ;;		_terminalPrintTestMessage
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text7
 12565  01671A                     __ptext7:
 12566                           	opt callstack 0
 12567  01671A                     _terminalTextAttributes:
 12568                           	opt callstack 13
 12569                           
 12570                           ;incstack = 0
 12571                           ;terminalTextAttributes@foreground_color stored from wreg
 12572  01671A  0105               	movlb	5	; () banked
 12573  01671C  6F00               	movwf	terminalTextAttributes@foreground_color& (0+255),b
 12574                           
 12575                           ;terminal_control.c: 51: char print_string[16];;terminal_control.c: 54: uint8_t i;;termi
      +                          nal_control.c: 55: for (i = 0; i < sizeof(print_string); i++) {
 12576  01671E  0E00               	movlw	0
 12577  016720  0105               	movlb	5	; () banked
 12578  016722  6F11               	movwf	terminalTextAttributes@i& (0+255),b
 12579  016724                     l19314:
 12580                           
 12581                           ; BSR set to: 5
 12582                           ;terminal_control.c: 57: print_string[i] = '\0';
 12583  016724  0E01               	movlw	low terminalTextAttributes@print_string
 12584  016726  2511               	addwf	terminalTextAttributes@i& (0+255),w,b
 12585  016728  6ED9               	movwf	fsr2l,c
 12586  01672A  6ADA               	clrf	fsr2h,c
 12587  01672C  0E05               	movlw	high terminalTextAttributes@print_string
 12588  01672E  22DA               	addwfc	fsr2h,f,c
 12589  016730  0E00               	movlw	0
 12590  016732  6EDF               	movwf	indf2,c
 12591                           
 12592                           ; BSR set to: 5
 12593  016734  2B11               	incf	terminalTextAttributes@i& (0+255),f,b
 12594                           
 12595                           ; BSR set to: 5
 12596  016736  0E0F               	movlw	15
 12597  016738  6511               	cpfsgt	terminalTextAttributes@i& (0+255),b
 12598  01673A  D7F4               	goto	l19314
 12599                           
 12600                           ; BSR set to: 5
 12601                           ;terminal_control.c: 59: };terminal_control.c: 61: strncpy(print_string, "\033[", sizeof
      +                          (print_string));
 12602  01673C  0E01               	movlw	low terminalTextAttributes@print_string
 12603  01673E  0102               	movlb	2	; () banked
 12604  016740  6F00               	movwf	strncpy@to& (0+255),b
 12605  016742  0E05               	movlw	high terminalTextAttributes@print_string
 12606  016744  6F01               	movwf	(strncpy@to+1)& (0+255),b
 12607  016746  0EF8               	movlw	low STR_310
 12608  016748  6F02               	movwf	strncpy@from& (0+255),b
 12609  01674A  0EFF               	movlw	high STR_310
 12610  01674C  6F03               	movwf	(strncpy@from+1)& (0+255),b
 12611  01674E  0E00               	movlw	0
 12612  016750  6F05               	movwf	(strncpy@size+1)& (0+255),b
 12613  016752  0E10               	movlw	16
 12614  016754  6F04               	movwf	strncpy@size& (0+255),b
 12615  016756  EC57  F0DB         	call	_strncpy	;wreg free
 12616                           
 12617                           ;terminal_control.c: 63: switch (input_attribute) {
 12618  01675A  D04D               	goto	l19338
 12619  01675C                     l19322:
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;terminal_control.c: 66: strcat(print_string,"0");
 12623  01675C  0E01               	movlw	low terminalTextAttributes@print_string
 12624  01675E  6F00               	movwf	strcat@to& (0+255),b
 12625  016760  0E05               	movlw	high terminalTextAttributes@print_string
 12626  016762  6F01               	movwf	(strcat@to+1)& (0+255),b
 12627  016764  0ECC               	movlw	low (STR_319+1)
 12628  016766  6F02               	movwf	strcat@from& (0+255),b
 12629  016768  0EFF               	movlw	high (STR_319+1)
 12630  01676A  6F03               	movwf	(strcat@from+1)& (0+255),b
 12631  01676C  EC53  F0DC         	call	_strcat	;wreg free
 12632                           
 12633                           ;terminal_control.c: 67: break;
 12634  016770  D057               	goto	l19340
 12635  016772                     l19324:
 12636                           
 12637                           ; BSR set to: 2
 12638                           ;terminal_control.c: 69: strcat(print_string,"1");
 12639  016772  0E01               	movlw	low terminalTextAttributes@print_string
 12640  016774  6F00               	movwf	strcat@to& (0+255),b
 12641  016776  0E05               	movlw	high terminalTextAttributes@print_string
 12642  016778  6F01               	movwf	(strcat@to+1)& (0+255),b
 12643  01677A  0ECF               	movlw	low (STR_320+1)
 12644  01677C  6F02               	movwf	strcat@from& (0+255),b
 12645  01677E  0EFF               	movlw	high (STR_320+1)
 12646  016780  6F03               	movwf	(strcat@from+1)& (0+255),b
 12647  016782  EC53  F0DC         	call	_strcat	;wreg free
 12648                           
 12649                           ;terminal_control.c: 70: break;
 12650  016786  D04C               	goto	l19340
 12651  016788                     l19326:
 12652                           
 12653                           ; BSR set to: 2
 12654                           ;terminal_control.c: 72: strcat(print_string,"4");
 12655  016788  0E01               	movlw	low terminalTextAttributes@print_string
 12656  01678A  6F00               	movwf	strcat@to& (0+255),b
 12657  01678C  0E05               	movlw	high terminalTextAttributes@print_string
 12658  01678E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12659  016790  0EE1               	movlw	low (STR_323+1)
 12660  016792  6F02               	movwf	strcat@from& (0+255),b
 12661  016794  0EFF               	movlw	high (STR_323+1)
 12662  016796  6F03               	movwf	(strcat@from+1)& (0+255),b
 12663  016798  EC53  F0DC         	call	_strcat	;wreg free
 12664                           
 12665                           ;terminal_control.c: 73: break;
 12666  01679C  D041               	goto	l19340
 12667  01679E                     l19328:
 12668                           
 12669                           ; BSR set to: 2
 12670                           ;terminal_control.c: 75: strcat(print_string,"5");
 12671  01679E  0E01               	movlw	low terminalTextAttributes@print_string
 12672  0167A0  6F00               	movwf	strcat@to& (0+255),b
 12673  0167A2  0E05               	movlw	high terminalTextAttributes@print_string
 12674  0167A4  6F01               	movwf	(strcat@to+1)& (0+255),b
 12675  0167A6  0EE7               	movlw	low (STR_324+1)
 12676  0167A8  6F02               	movwf	strcat@from& (0+255),b
 12677  0167AA  0EFF               	movlw	high (STR_324+1)
 12678  0167AC  6F03               	movwf	(strcat@from+1)& (0+255),b
 12679  0167AE  EC53  F0DC         	call	_strcat	;wreg free
 12680                           
 12681                           ;terminal_control.c: 76: break;
 12682  0167B2  D036               	goto	l19340
 12683  0167B4                     l19330:
 12684                           
 12685                           ; BSR set to: 2
 12686                           ;terminal_control.c: 78: strcat(print_string,"7");
 12687  0167B4  0E01               	movlw	low terminalTextAttributes@print_string
 12688  0167B6  6F00               	movwf	strcat@to& (0+255),b
 12689  0167B8  0E05               	movlw	high terminalTextAttributes@print_string
 12690  0167BA  6F01               	movwf	(strcat@to+1)& (0+255),b
 12691  0167BC  0EF3               	movlw	low (STR_326+1)
 12692  0167BE  6F02               	movwf	strcat@from& (0+255),b
 12693  0167C0  0EFF               	movlw	high (STR_326+1)
 12694  0167C2  6F03               	movwf	(strcat@from+1)& (0+255),b
 12695  0167C4  EC53  F0DC         	call	_strcat	;wreg free
 12696                           
 12697                           ;terminal_control.c: 79: break;
 12698  0167C8  D02B               	goto	l19340
 12699  0167CA                     l19332:
 12700                           
 12701                           ; BSR set to: 2
 12702                           ;terminal_control.c: 81: strcat(print_string,"8");
 12703  0167CA  0E01               	movlw	low terminalTextAttributes@print_string
 12704  0167CC  6F00               	movwf	strcat@to& (0+255),b
 12705  0167CE  0E05               	movlw	high terminalTextAttributes@print_string
 12706  0167D0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12707  0167D2  0EFB               	movlw	low STR_316
 12708  0167D4  6F02               	movwf	strcat@from& (0+255),b
 12709  0167D6  0EFF               	movlw	high STR_316
 12710  0167D8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12711  0167DA  EC53  F0DC         	call	_strcat	;wreg free
 12712                           
 12713                           ;terminal_control.c: 82: break;
 12714  0167DE  D020               	goto	l19340
 12715  0167E0                     l19334:
 12716                           
 12717                           ; BSR set to: 2
 12718                           ;terminal_control.c: 85: strcat(print_string,"0");
 12719  0167E0  0E01               	movlw	low terminalTextAttributes@print_string
 12720  0167E2  6F00               	movwf	strcat@to& (0+255),b
 12721  0167E4  0E05               	movlw	high terminalTextAttributes@print_string
 12722  0167E6  6F01               	movwf	(strcat@to+1)& (0+255),b
 12723  0167E8  0ECC               	movlw	low (STR_319+1)
 12724  0167EA  6F02               	movwf	strcat@from& (0+255),b
 12725  0167EC  0EFF               	movlw	high (STR_319+1)
 12726  0167EE  6F03               	movwf	(strcat@from+1)& (0+255),b
 12727  0167F0  EC53  F0DC         	call	_strcat	;wreg free
 12728                           
 12729                           ;terminal_control.c: 86: break;
 12730  0167F4  D015               	goto	l19340
 12731  0167F6                     l19338:
 12732  0167F6  0102               	movlb	2	; () banked
 12733  0167F8  51BA               	movf	terminalTextAttributes@input_attribute& (0+255),w,b
 12734                           
 12735                           ; Switch size 1, requested type "simple"
 12736                           ; Number of cases is 6, Range of values is 0 to 5
 12737                           ; switch strategies available:
 12738                           ; Name         Instructions Cycles
 12739                           ; simple_byte           19    10 (average)
 12740                           ;	Chosen strategy is simple_byte
 12741  0167FA  0A00               	xorlw	0	; case 0
 12742  0167FC  B4D8               	btfsc	status,2,c
 12743  0167FE  D7AE               	goto	l19322
 12744  016800  0A01               	xorlw	1	; case 1
 12745  016802  B4D8               	btfsc	status,2,c
 12746  016804  D7B6               	goto	l19324
 12747  016806  0A03               	xorlw	3	; case 2
 12748  016808  B4D8               	btfsc	status,2,c
 12749  01680A  D7BE               	goto	l19326
 12750  01680C  0A01               	xorlw	1	; case 3
 12751  01680E  B4D8               	btfsc	status,2,c
 12752  016810  D7C6               	goto	l19328
 12753  016812  0A07               	xorlw	7	; case 4
 12754  016814  B4D8               	btfsc	status,2,c
 12755  016816  D7CE               	goto	l19330
 12756  016818  0A01               	xorlw	1	; case 5
 12757  01681A  B4D8               	btfsc	status,2,c
 12758  01681C  D7D6               	goto	l19332
 12759  01681E  D7E0               	goto	l19334
 12760  016820                     l19340:
 12761                           
 12762                           ;terminal_control.c: 89: strcat(print_string,";");
 12763  016820  0E01               	movlw	low terminalTextAttributes@print_string
 12764  016822  0102               	movlb	2	; () banked
 12765  016824  6F00               	movwf	strcat@to& (0+255),b
 12766  016826  0E05               	movlw	high terminalTextAttributes@print_string
 12767  016828  6F01               	movwf	(strcat@to+1)& (0+255),b
 12768  01682A  0EFD               	movlw	low STR_318
 12769  01682C  6F02               	movwf	strcat@from& (0+255),b
 12770  01682E  0EFF               	movlw	high STR_318
 12771  016830  6F03               	movwf	(strcat@from+1)& (0+255),b
 12772  016832  EC53  F0DC         	call	_strcat	;wreg free
 12773                           
 12774                           ;terminal_control.c: 91: switch (foreground_color) {
 12775  016836  D06C               	goto	l19362
 12776  016838                     l19342:
 12777                           
 12778                           ; BSR set to: 5
 12779                           ;terminal_control.c: 94: strcat(print_string,"30");
 12780  016838  0E01               	movlw	low terminalTextAttributes@print_string
 12781  01683A  0102               	movlb	2	; () banked
 12782  01683C  6F00               	movwf	strcat@to& (0+255),b
 12783  01683E  0E05               	movlw	high terminalTextAttributes@print_string
 12784  016840  6F01               	movwf	(strcat@to+1)& (0+255),b
 12785  016842  0ECB               	movlw	low STR_319
 12786  016844  6F02               	movwf	strcat@from& (0+255),b
 12787  016846  0EFF               	movlw	high STR_319
 12788  016848  6F03               	movwf	(strcat@from+1)& (0+255),b
 12789  01684A  EC53  F0DC         	call	_strcat	;wreg free
 12790                           
 12791                           ;terminal_control.c: 95: break;
 12792  01684E  D07B               	goto	l19364
 12793  016850                     l19344:
 12794                           
 12795                           ; BSR set to: 5
 12796                           ;terminal_control.c: 97: strcat(print_string,"31");
 12797  016850  0E01               	movlw	low terminalTextAttributes@print_string
 12798  016852  0102               	movlb	2	; () banked
 12799  016854  6F00               	movwf	strcat@to& (0+255),b
 12800  016856  0E05               	movlw	high terminalTextAttributes@print_string
 12801  016858  6F01               	movwf	(strcat@to+1)& (0+255),b
 12802  01685A  0ECE               	movlw	low STR_320
 12803  01685C  6F02               	movwf	strcat@from& (0+255),b
 12804  01685E  0EFF               	movlw	high STR_320
 12805  016860  6F03               	movwf	(strcat@from+1)& (0+255),b
 12806  016862  EC53  F0DC         	call	_strcat	;wreg free
 12807                           
 12808                           ;terminal_control.c: 98: break;
 12809  016866  D06F               	goto	l19364
 12810  016868                     l19346:
 12811                           
 12812                           ; BSR set to: 5
 12813                           ;terminal_control.c: 100: strcat(print_string,"32");
 12814  016868  0E01               	movlw	low terminalTextAttributes@print_string
 12815  01686A  0102               	movlb	2	; () banked
 12816  01686C  6F00               	movwf	strcat@to& (0+255),b
 12817  01686E  0E05               	movlw	high terminalTextAttributes@print_string
 12818  016870  6F01               	movwf	(strcat@to+1)& (0+255),b
 12819  016872  0ED4               	movlw	low STR_321
 12820  016874  6F02               	movwf	strcat@from& (0+255),b
 12821  016876  0EFF               	movlw	high STR_321
 12822  016878  6F03               	movwf	(strcat@from+1)& (0+255),b
 12823  01687A  EC53  F0DC         	call	_strcat	;wreg free
 12824                           
 12825                           ;terminal_control.c: 101: break;
 12826  01687E  D063               	goto	l19364
 12827  016880                     l19348:
 12828                           
 12829                           ; BSR set to: 5
 12830                           ;terminal_control.c: 103: strcat(print_string,"33");
 12831  016880  0E01               	movlw	low terminalTextAttributes@print_string
 12832  016882  0102               	movlb	2	; () banked
 12833  016884  6F00               	movwf	strcat@to& (0+255),b
 12834  016886  0E05               	movlw	high terminalTextAttributes@print_string
 12835  016888  6F01               	movwf	(strcat@to+1)& (0+255),b
 12836  01688A  0EDA               	movlw	low STR_322
 12837  01688C  6F02               	movwf	strcat@from& (0+255),b
 12838  01688E  0EFF               	movlw	high STR_322
 12839  016890  6F03               	movwf	(strcat@from+1)& (0+255),b
 12840  016892  EC53  F0DC         	call	_strcat	;wreg free
 12841                           
 12842                           ;terminal_control.c: 104: break;
 12843  016896  D057               	goto	l19364
 12844  016898                     l19350:
 12845                           
 12846                           ; BSR set to: 5
 12847                           ;terminal_control.c: 106: strcat(print_string,"34");
 12848  016898  0E01               	movlw	low terminalTextAttributes@print_string
 12849  01689A  0102               	movlb	2	; () banked
 12850  01689C  6F00               	movwf	strcat@to& (0+255),b
 12851  01689E  0E05               	movlw	high terminalTextAttributes@print_string
 12852  0168A0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12853  0168A2  0EE0               	movlw	low STR_323
 12854  0168A4  6F02               	movwf	strcat@from& (0+255),b
 12855  0168A6  0EFF               	movlw	high STR_323
 12856  0168A8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12857  0168AA  EC53  F0DC         	call	_strcat	;wreg free
 12858                           
 12859                           ;terminal_control.c: 107: break;
 12860  0168AE  D04B               	goto	l19364
 12861  0168B0                     l19352:
 12862                           
 12863                           ; BSR set to: 5
 12864                           ;terminal_control.c: 109: strcat(print_string,"35");
 12865  0168B0  0E01               	movlw	low terminalTextAttributes@print_string
 12866  0168B2  0102               	movlb	2	; () banked
 12867  0168B4  6F00               	movwf	strcat@to& (0+255),b
 12868  0168B6  0E05               	movlw	high terminalTextAttributes@print_string
 12869  0168B8  6F01               	movwf	(strcat@to+1)& (0+255),b
 12870  0168BA  0EE6               	movlw	low STR_324
 12871  0168BC  6F02               	movwf	strcat@from& (0+255),b
 12872  0168BE  0EFF               	movlw	high STR_324
 12873  0168C0  6F03               	movwf	(strcat@from+1)& (0+255),b
 12874  0168C2  EC53  F0DC         	call	_strcat	;wreg free
 12875                           
 12876                           ;terminal_control.c: 110: break;
 12877  0168C6  D03F               	goto	l19364
 12878  0168C8                     l19354:
 12879                           
 12880                           ; BSR set to: 5
 12881                           ;terminal_control.c: 112: strcat(print_string,"36");
 12882  0168C8  0E01               	movlw	low terminalTextAttributes@print_string
 12883  0168CA  0102               	movlb	2	; () banked
 12884  0168CC  6F00               	movwf	strcat@to& (0+255),b
 12885  0168CE  0E05               	movlw	high terminalTextAttributes@print_string
 12886  0168D0  6F01               	movwf	(strcat@to+1)& (0+255),b
 12887  0168D2  0EEC               	movlw	low STR_325
 12888  0168D4  6F02               	movwf	strcat@from& (0+255),b
 12889  0168D6  0EFF               	movlw	high STR_325
 12890  0168D8  6F03               	movwf	(strcat@from+1)& (0+255),b
 12891  0168DA  EC53  F0DC         	call	_strcat	;wreg free
 12892                           
 12893                           ;terminal_control.c: 113: break;
 12894  0168DE  D033               	goto	l19364
 12895  0168E0                     l19356:
 12896                           
 12897                           ; BSR set to: 5
 12898                           ;terminal_control.c: 115: strcat(print_string,"37");
 12899  0168E0  0E01               	movlw	low terminalTextAttributes@print_string
 12900  0168E2  0102               	movlb	2	; () banked
 12901  0168E4  6F00               	movwf	strcat@to& (0+255),b
 12902  0168E6  0E05               	movlw	high terminalTextAttributes@print_string
 12903  0168E8  6F01               	movwf	(strcat@to+1)& (0+255),b
 12904  0168EA  0EF2               	movlw	low STR_326
 12905  0168EC  6F02               	movwf	strcat@from& (0+255),b
 12906  0168EE  0EFF               	movlw	high STR_326
 12907  0168F0  6F03               	movwf	(strcat@from+1)& (0+255),b
 12908  0168F2  EC53  F0DC         	call	_strcat	;wreg free
 12909                           
 12910                           ;terminal_control.c: 116: break;
 12911  0168F6  D027               	goto	l19364
 12912  0168F8                     l19358:
 12913                           
 12914                           ; BSR set to: 5
 12915                           ;terminal_control.c: 119: strcat(print_string,"37");
 12916  0168F8  0E01               	movlw	low terminalTextAttributes@print_string
 12917  0168FA  0102               	movlb	2	; () banked
 12918  0168FC  6F00               	movwf	strcat@to& (0+255),b
 12919  0168FE  0E05               	movlw	high terminalTextAttributes@print_string
 12920  016900  6F01               	movwf	(strcat@to+1)& (0+255),b
 12921  016902  0EF2               	movlw	low STR_326
 12922  016904  6F02               	movwf	strcat@from& (0+255),b
 12923  016906  0EFF               	movlw	high STR_326
 12924  016908  6F03               	movwf	(strcat@from+1)& (0+255),b
 12925  01690A  EC53  F0DC         	call	_strcat	;wreg free
 12926                           
 12927                           ;terminal_control.c: 120: break;
 12928  01690E  D01B               	goto	l19364
 12929  016910                     l19362:
 12930  016910  0105               	movlb	5	; () banked
 12931  016912  5100               	movf	terminalTextAttributes@foreground_color& (0+255),w,b
 12932                           
 12933                           ; Switch size 1, requested type "simple"
 12934                           ; Number of cases is 8, Range of values is 0 to 7
 12935                           ; switch strategies available:
 12936                           ; Name         Instructions Cycles
 12937                           ; simple_byte           25    13 (average)
 12938                           ;	Chosen strategy is simple_byte
 12939  016914  0A00               	xorlw	0	; case 0
 12940  016916  B4D8               	btfsc	status,2,c
 12941  016918  D78F               	goto	l19342
 12942  01691A  0A01               	xorlw	1	; case 1
 12943  01691C  B4D8               	btfsc	status,2,c
 12944  01691E  D798               	goto	l19344
 12945  016920  0A03               	xorlw	3	; case 2
 12946  016922  B4D8               	btfsc	status,2,c
 12947  016924  D7A1               	goto	l19346
 12948  016926  0A01               	xorlw	1	; case 3
 12949  016928  B4D8               	btfsc	status,2,c
 12950  01692A  D7AA               	goto	l19348
 12951  01692C  0A07               	xorlw	7	; case 4
 12952  01692E  B4D8               	btfsc	status,2,c
 12953  016930  D7B3               	goto	l19350
 12954  016932  0A01               	xorlw	1	; case 5
 12955  016934  B4D8               	btfsc	status,2,c
 12956  016936  D7BC               	goto	l19352
 12957  016938  0A03               	xorlw	3	; case 6
 12958  01693A  B4D8               	btfsc	status,2,c
 12959  01693C  D7C5               	goto	l19354
 12960  01693E  0A01               	xorlw	1	; case 7
 12961  016940  B4D8               	btfsc	status,2,c
 12962  016942  D7CE               	goto	l19356
 12963  016944  D7D9               	goto	l19358
 12964  016946                     l19364:
 12965                           
 12966                           ;terminal_control.c: 123: strcat(print_string,";");
 12967  016946  0E01               	movlw	low terminalTextAttributes@print_string
 12968  016948  0102               	movlb	2	; () banked
 12969  01694A  6F00               	movwf	strcat@to& (0+255),b
 12970  01694C  0E05               	movlw	high terminalTextAttributes@print_string
 12971  01694E  6F01               	movwf	(strcat@to+1)& (0+255),b
 12972  016950  0EFD               	movlw	low STR_318
 12973  016952  6F02               	movwf	strcat@from& (0+255),b
 12974  016954  0EFF               	movlw	high STR_318
 12975  016956  6F03               	movwf	(strcat@from+1)& (0+255),b
 12976  016958  EC53  F0DC         	call	_strcat	;wreg free
 12977                           
 12978                           ;terminal_control.c: 125: switch (background_color) {
 12979  01695C  D063               	goto	l19386
 12980  01695E                     l19366:
 12981                           
 12982                           ; BSR set to: 2
 12983                           ;terminal_control.c: 128: strcat(print_string,"40");
 12984  01695E  0E01               	movlw	low terminalTextAttributes@print_string
 12985  016960  6F00               	movwf	strcat@to& (0+255),b
 12986  016962  0E05               	movlw	high terminalTextAttributes@print_string
 12987  016964  6F01               	movwf	(strcat@to+1)& (0+255),b
 12988  016966  0EB5               	movlw	low (STR_45+9)
 12989  016968  6F02               	movwf	strcat@from& (0+255),b
 12990  01696A  0EFD               	movlw	high (STR_45+9)
 12991  01696C  6F03               	movwf	(strcat@from+1)& (0+255),b
 12992  01696E  EC53  F0DC         	call	_strcat	;wreg free
 12993                           
 12994                           ;terminal_control.c: 129: break;
 12995  016972  D073               	goto	l19388
 12996  016974                     l19368:
 12997                           
 12998                           ; BSR set to: 2
 12999                           ;terminal_control.c: 131: strcat(print_string,"41");
 13000  016974  0E01               	movlw	low terminalTextAttributes@print_string
 13001  016976  6F00               	movwf	strcat@to& (0+255),b
 13002  016978  0E05               	movlw	high terminalTextAttributes@print_string
 13003  01697A  6F01               	movwf	(strcat@to+1)& (0+255),b
 13004  01697C  0ED1               	movlw	low STR_330
 13005  01697E  6F02               	movwf	strcat@from& (0+255),b
 13006  016980  0EFF               	movlw	high STR_330
 13007  016982  6F03               	movwf	(strcat@from+1)& (0+255),b
 13008  016984  EC53  F0DC         	call	_strcat	;wreg free
 13009                           
 13010                           ;terminal_control.c: 132: break;
 13011  016988  D068               	goto	l19388
 13012  01698A                     l19370:
 13013                           
 13014                           ; BSR set to: 2
 13015                           ;terminal_control.c: 134: strcat(print_string,"42");
 13016  01698A  0E01               	movlw	low terminalTextAttributes@print_string
 13017  01698C  6F00               	movwf	strcat@to& (0+255),b
 13018  01698E  0E05               	movlw	high terminalTextAttributes@print_string
 13019  016990  6F01               	movwf	(strcat@to+1)& (0+255),b
 13020  016992  0ED7               	movlw	low STR_331
 13021  016994  6F02               	movwf	strcat@from& (0+255),b
 13022  016996  0EFF               	movlw	high STR_331
 13023  016998  6F03               	movwf	(strcat@from+1)& (0+255),b
 13024  01699A  EC53  F0DC         	call	_strcat	;wreg free
 13025                           
 13026                           ;terminal_control.c: 135: break;
 13027  01699E  D05D               	goto	l19388
 13028  0169A0                     l19372:
 13029                           
 13030                           ; BSR set to: 2
 13031                           ;terminal_control.c: 137: strcat(print_string,"43");
 13032  0169A0  0E01               	movlw	low terminalTextAttributes@print_string
 13033  0169A2  6F00               	movwf	strcat@to& (0+255),b
 13034  0169A4  0E05               	movlw	high terminalTextAttributes@print_string
 13035  0169A6  6F01               	movwf	(strcat@to+1)& (0+255),b
 13036  0169A8  0EDD               	movlw	low STR_332
 13037  0169AA  6F02               	movwf	strcat@from& (0+255),b
 13038  0169AC  0EFF               	movlw	high STR_332
 13039  0169AE  6F03               	movwf	(strcat@from+1)& (0+255),b
 13040  0169B0  EC53  F0DC         	call	_strcat	;wreg free
 13041                           
 13042                           ;terminal_control.c: 138: break;
 13043  0169B4  D052               	goto	l19388
 13044  0169B6                     l19374:
 13045                           
 13046                           ; BSR set to: 2
 13047                           ;terminal_control.c: 140: strcat(print_string,"44");
 13048  0169B6  0E01               	movlw	low terminalTextAttributes@print_string
 13049  0169B8  6F00               	movwf	strcat@to& (0+255),b
 13050  0169BA  0E05               	movlw	high terminalTextAttributes@print_string
 13051  0169BC  6F01               	movwf	(strcat@to+1)& (0+255),b
 13052  0169BE  0EE3               	movlw	low STR_333
 13053  0169C0  6F02               	movwf	strcat@from& (0+255),b
 13054  0169C2  0EFF               	movlw	high STR_333
 13055  0169C4  6F03               	movwf	(strcat@from+1)& (0+255),b
 13056  0169C6  EC53  F0DC         	call	_strcat	;wreg free
 13057                           
 13058                           ;terminal_control.c: 141: break;
 13059  0169CA  D047               	goto	l19388
 13060  0169CC                     l19376:
 13061                           
 13062                           ; BSR set to: 2
 13063                           ;terminal_control.c: 143: strcat(print_string,"45");
 13064  0169CC  0E01               	movlw	low terminalTextAttributes@print_string
 13065  0169CE  6F00               	movwf	strcat@to& (0+255),b
 13066  0169D0  0E05               	movlw	high terminalTextAttributes@print_string
 13067  0169D2  6F01               	movwf	(strcat@to+1)& (0+255),b
 13068  0169D4  0EE9               	movlw	low STR_334
 13069  0169D6  6F02               	movwf	strcat@from& (0+255),b
 13070  0169D8  0EFF               	movlw	high STR_334
 13071  0169DA  6F03               	movwf	(strcat@from+1)& (0+255),b
 13072  0169DC  EC53  F0DC         	call	_strcat	;wreg free
 13073                           
 13074                           ;terminal_control.c: 144: break;
 13075  0169E0  D03C               	goto	l19388
 13076  0169E2                     l19378:
 13077                           
 13078                           ; BSR set to: 2
 13079                           ;terminal_control.c: 146: strcat(print_string,"46");
 13080  0169E2  0E01               	movlw	low terminalTextAttributes@print_string
 13081  0169E4  6F00               	movwf	strcat@to& (0+255),b
 13082  0169E6  0E05               	movlw	high terminalTextAttributes@print_string
 13083  0169E8  6F01               	movwf	(strcat@to+1)& (0+255),b
 13084  0169EA  0EEF               	movlw	low STR_335
 13085  0169EC  6F02               	movwf	strcat@from& (0+255),b
 13086  0169EE  0EFF               	movlw	high STR_335
 13087  0169F0  6F03               	movwf	(strcat@from+1)& (0+255),b
 13088  0169F2  EC53  F0DC         	call	_strcat	;wreg free
 13089                           
 13090                           ;terminal_control.c: 147: break;
 13091  0169F6  D031               	goto	l19388
 13092  0169F8                     l19380:
 13093                           
 13094                           ; BSR set to: 2
 13095                           ;terminal_control.c: 149: strcat(print_string,"47");
 13096  0169F8  0E01               	movlw	low terminalTextAttributes@print_string
 13097  0169FA  6F00               	movwf	strcat@to& (0+255),b
 13098  0169FC  0E05               	movlw	high terminalTextAttributes@print_string
 13099  0169FE  6F01               	movwf	(strcat@to+1)& (0+255),b
 13100  016A00  0EF5               	movlw	low STR_336
 13101  016A02  6F02               	movwf	strcat@from& (0+255),b
 13102  016A04  0EFF               	movlw	high STR_336
 13103  016A06  6F03               	movwf	(strcat@from+1)& (0+255),b
 13104  016A08  EC53  F0DC         	call	_strcat	;wreg free
 13105                           
 13106                           ;terminal_control.c: 150: break;
 13107  016A0C  D026               	goto	l19388
 13108  016A0E                     l19382:
 13109                           
 13110                           ; BSR set to: 2
 13111                           ;terminal_control.c: 153: strcat(print_string,"40");
 13112  016A0E  0E01               	movlw	low terminalTextAttributes@print_string
 13113  016A10  6F00               	movwf	strcat@to& (0+255),b
 13114  016A12  0E05               	movlw	high terminalTextAttributes@print_string
 13115  016A14  6F01               	movwf	(strcat@to+1)& (0+255),b
 13116  016A16  0EB5               	movlw	low (STR_45+9)
 13117  016A18  6F02               	movwf	strcat@from& (0+255),b
 13118  016A1A  0EFD               	movlw	high (STR_45+9)
 13119  016A1C  6F03               	movwf	(strcat@from+1)& (0+255),b
 13120  016A1E  EC53  F0DC         	call	_strcat	;wreg free
 13121                           
 13122                           ;terminal_control.c: 154: break;
 13123  016A22  D01B               	goto	l19388
 13124  016A24                     l19386:
 13125  016A24  0102               	movlb	2	; () banked
 13126  016A26  51B9               	movf	terminalTextAttributes@background_color& (0+255),w,b
 13127                           
 13128                           ; Switch size 1, requested type "simple"
 13129                           ; Number of cases is 8, Range of values is 0 to 7
 13130                           ; switch strategies available:
 13131                           ; Name         Instructions Cycles
 13132                           ; simple_byte           25    13 (average)
 13133                           ;	Chosen strategy is simple_byte
 13134  016A28  0A00               	xorlw	0	; case 0
 13135  016A2A  B4D8               	btfsc	status,2,c
 13136  016A2C  D798               	goto	l19366
 13137  016A2E  0A01               	xorlw	1	; case 1
 13138  016A30  B4D8               	btfsc	status,2,c
 13139  016A32  D7A0               	goto	l19368
 13140  016A34  0A03               	xorlw	3	; case 2
 13141  016A36  B4D8               	btfsc	status,2,c
 13142  016A38  D7A8               	goto	l19370
 13143  016A3A  0A01               	xorlw	1	; case 3
 13144  016A3C  B4D8               	btfsc	status,2,c
 13145  016A3E  D7B0               	goto	l19372
 13146  016A40  0A07               	xorlw	7	; case 4
 13147  016A42  B4D8               	btfsc	status,2,c
 13148  016A44  D7B8               	goto	l19374
 13149  016A46  0A01               	xorlw	1	; case 5
 13150  016A48  B4D8               	btfsc	status,2,c
 13151  016A4A  D7C0               	goto	l19376
 13152  016A4C  0A03               	xorlw	3	; case 6
 13153  016A4E  B4D8               	btfsc	status,2,c
 13154  016A50  D7C8               	goto	l19378
 13155  016A52  0A01               	xorlw	1	; case 7
 13156  016A54  B4D8               	btfsc	status,2,c
 13157  016A56  D7D0               	goto	l19380
 13158  016A58  D7DA               	goto	l19382
 13159  016A5A                     l19388:
 13160                           
 13161                           ;terminal_control.c: 157: strcat(print_string,"m");
 13162  016A5A  0E01               	movlw	low terminalTextAttributes@print_string
 13163  016A5C  0102               	movlb	2	; () banked
 13164  016A5E  6F00               	movwf	strcat@to& (0+255),b
 13165  016A60  0E05               	movlw	high terminalTextAttributes@print_string
 13166  016A62  6F01               	movwf	(strcat@to+1)& (0+255),b
 13167  016A64  0EE7               	movlw	low (STR_301+7)
 13168  016A66  6F02               	movwf	strcat@from& (0+255),b
 13169  016A68  0EFE               	movlw	high (STR_301+7)
 13170  016A6A  6F03               	movwf	(strcat@from+1)& (0+255),b
 13171  016A6C  EC53  F0DC         	call	_strcat	;wreg free
 13172                           
 13173                           ;terminal_control.c: 159: printf(print_string);
 13174  016A70  0E01               	movlw	low terminalTextAttributes@print_string
 13175  016A72  0103               	movlb	3	; () banked
 13176  016A74  6FEB               	movwf	printf@f& (0+255),b
 13177  016A76  0E05               	movlw	high terminalTextAttributes@print_string
 13178  016A78  6FEC               	movwf	(printf@f+1)& (0+255),b
 13179  016A7A  EC7B  F0E0         	call	_printf	;wreg free
 13180  016A7E  0012               	return		;funcret
 13181  016A80                     __end_of_terminalTextAttributes:
 13182                           	opt callstack 0
 13183                           
 13184 ;; *************** function _strncpy *****************
 13185 ;; Defined at:
 13186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncpy.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13189 ;;		 -> terminalTextAttributes@print_string(16), 
 13190 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13191 ;;		 -> STR_310(3), 
 13192 ;;  size            2    4[BANK2 ] unsigned int 
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;  cp              2    6[BANK2 ] PTR unsigned char 
 13195 ;;		 -> terminalTextAttributes@print_string(16), 
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  2    0[BANK2 ] PTR unsigned char 
 13198 ;; Registers used:
 13199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/0
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13205 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13206 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13208 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13209 ;;Total ram usage:        8 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; Hardware stack levels required when called:   11
 13212 ;; This function calls:
 13213 ;;		Nothing
 13214 ;; This function is called by:
 13215 ;;		_terminalTextAttributes
 13216 ;; This function uses a non-reentrant model
 13217 ;;
 13218                           
 13219                           	psect	text8
 13220  01B6AE                     __ptext8:
 13221                           	opt callstack 0
 13222  01B6AE                     _strncpy:
 13223                           	opt callstack 16
 13224                           
 13225                           ;incstack = 0
 13226  01B6AE  C200  F206         	movff	strncpy@to,strncpy@cp
 13227  01B6B2  C201  F207         	movff	strncpy@to+1,strncpy@cp+1
 13228  01B6B6  D017               	goto	l18690
 13229  01B6B8                     l18684:
 13230                           
 13231                           ; BSR set to: 2
 13232  01B6B8  0704               	decf	strncpy@size& (0+255),f,b
 13233  01B6BA  A0D8               	btfss	status,0,c
 13234  01B6BC  0705               	decf	(strncpy@size+1)& (0+255),f,b
 13235                           
 13236                           ; BSR set to: 2
 13237  01B6BE  C202  FFF6         	movff	strncpy@from,tblptrl
 13238  01B6C2  C203  FFF7         	movff	strncpy@from+1,tblptrh
 13239  01B6C6  4B02               	infsnz	strncpy@from& (0+255),f,b
 13240  01B6C8  2B03               	incf	(strncpy@from+1)& (0+255),f,b
 13241  01B6CA                     	if	0	;tblptru may be non-zero
 13242  01B6CA                     	endif
 13243  01B6CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13244  01B6CA  0E00               	movlw	low (__mediumconst shr (0+16))
 13245  01B6CC  6EF8               	movwf	tblptru,c
 13246  01B6CE                     	endif
 13247  01B6CE  C206  FFD9         	movff	strncpy@cp,fsr2l
 13248  01B6D2  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 13249  01B6D6  4B06               	infsnz	strncpy@cp& (0+255),f,b
 13250  01B6D8  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 13251  01B6DA  0008               	tblrd		*
 13252  01B6DC  CFF5 FFDF          	movff	tablat,indf2
 13253  01B6E0  50DF               	movf	indf2,w,c
 13254  01B6E2  B4D8               	btfsc	status,2,c
 13255  01B6E4  D00E               	goto	l18696
 13256  01B6E6                     l18690:
 13257  01B6E6  0102               	movlb	2	; () banked
 13258  01B6E8  5104               	movf	strncpy@size& (0+255),w,b
 13259  01B6EA  1105               	iorwf	(strncpy@size+1)& (0+255),w,b
 13260  01B6EC  B4D8               	btfsc	status,2,c
 13261  01B6EE  D009               	goto	l18696
 13262  01B6F0  D7E3               	goto	l18684
 13263  01B6F2                     l18692:
 13264                           
 13265                           ; BSR set to: 2
 13266  01B6F2  C206  FFD9         	movff	strncpy@cp,fsr2l
 13267  01B6F6  C207  FFDA         	movff	strncpy@cp+1,fsr2h
 13268  01B6FA  0E00               	movlw	0
 13269  01B6FC  6EDF               	movwf	indf2,c
 13270                           
 13271                           ; BSR set to: 2
 13272  01B6FE  4B06               	infsnz	strncpy@cp& (0+255),f,b
 13273  01B700  2B07               	incf	(strncpy@cp+1)& (0+255),f,b
 13274  01B702                     l18696:
 13275                           
 13276                           ; BSR set to: 2
 13277  01B702  0704               	decf	strncpy@size& (0+255),f,b
 13278  01B704  A0D8               	btfss	status,0,c
 13279  01B706  0705               	decf	(strncpy@size+1)& (0+255),f,b
 13280  01B708  2904               	incf	strncpy@size& (0+255),w,b
 13281  01B70A  E1F3               	bnz	l18692
 13282  01B70C  2905               	incf	(strncpy@size+1)& (0+255),w,b
 13283  01B70E  B4D8               	btfsc	status,2,c
 13284  01B710  0012               	return	
 13285  01B712  D7EF               	goto	l18692
 13286  01B714                     __end_of_strncpy:
 13287                           	opt callstack 0
 13288                           
 13289 ;; *************** function _getStringSecondsAsTime *****************
 13290 ;; Defined at:
 13291 ;;		line 61 in file "heartbeat_timer.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;  input_second    4  163[BANK2 ] unsigned long 
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;  buff           20    0[BANK3 ] unsigned char [20]
 13296 ;;  minutes         1   25[BANK3 ] unsigned char 
 13297 ;;  hours           1   24[BANK3 ] unsigned char 
 13298 ;;  days            1   23[BANK3 ] unsigned char 
 13299 ;;  years           1   22[BANK3 ] unsigned char 
 13300 ;;  seconds         1   21[BANK3 ] unsigned char 
 13301 ;;  i               1   20[BANK3 ] unsigned char 
 13302 ;;  remainder       1    0        unsigned char 
 13303 ;; Return value:  Size  Location     Type
 13304 ;;                  2  163[BANK2 ] PTR unsigned char 
 13305 ;; Registers used:
 13306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13307 ;; Tracked objects:
 13308 ;;		On entry : 0/0
 13309 ;;		On exit  : 0/0
 13310 ;;		Unchanged: 0/0
 13311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13312 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13313 ;;      Locals:         0       0       0       0      26       0       0       0       0       0       0       0       
      +0       0       0       0
 13314 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13315 ;;      Totals:         0       0       0       8      26       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;Total ram usage:       34 bytes
 13317 ;; Hardware stack levels used:    1
 13318 ;; Hardware stack levels required when called:   15
 13319 ;; This function calls:
 13320 ;;		___lldiv
 13321 ;;		___wmul
 13322 ;;		_sprintf
 13323 ;;		_strcat
 13324 ;;		_strlen
 13325 ;; This function is called by:
 13326 ;;		_ringBufferLUT
 13327 ;;		_printCurrentMeasurements
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text9
 13332  016374                     __ptext9:
 13333                           	opt callstack 0
 13334  016374                     _getStringSecondsAsTime:
 13335                           	opt callstack 12
 13336                           
 13337                           ;heartbeat_timer.c: 63: uint8_t years, days, hours, minutes, seconds, remainder;;heartbe
      +                          at_timer.c: 64: static char return_string[40];;heartbeat_timer.c: 67: uint8_t i;;heartbe
      +                          at_timer.c: 68: for (i = 0; i < strlen(return_string); i++) {
 13338                           
 13339                           ; BSR set to: 2
 13340                           ;incstack = 0
 13341  016374  0E00               	movlw	0
 13342  016376  0103               	movlb	3	; () banked
 13343  016378  6FE5               	movwf	getStringSecondsAsTime@i& (0+255),b
 13344  01637A  D00A               	goto	l19438
 13345  01637C                     l19434:
 13346                           
 13347                           ; BSR set to: 2
 13348                           ;heartbeat_timer.c: 70: return_string[i] = '\0';
 13349  01637C  0E84               	movlw	low getStringSecondsAsTime@return_string
 13350  01637E  0103               	movlb	3	; () banked
 13351  016380  25E5               	addwf	getStringSecondsAsTime@i& (0+255),w,b
 13352  016382  6ED9               	movwf	fsr2l,c
 13353  016384  6ADA               	clrf	fsr2h,c
 13354  016386  0E03               	movlw	high getStringSecondsAsTime@return_string
 13355  016388  22DA               	addwfc	fsr2h,f,c
 13356  01638A  0E00               	movlw	0
 13357  01638C  6EDF               	movwf	indf2,c
 13358                           
 13359                           ; BSR set to: 3
 13360  01638E  2BE5               	incf	getStringSecondsAsTime@i& (0+255),f,b
 13361  016390                     l19438:
 13362                           
 13363                           ; BSR set to: 3
 13364  016390  0E84               	movlw	low getStringSecondsAsTime@return_string
 13365  016392  0102               	movlb	2	; () banked
 13366  016394  6F00               	movwf	strlen@s& (0+255),b
 13367  016396  0E03               	movlw	high getStringSecondsAsTime@return_string
 13368  016398  6F01               	movwf	(strlen@s+1)& (0+255),b
 13369  01639A  EC67  F0E2         	call	_strlen	;wreg free
 13370  01639E  0103               	movlb	3	; () banked
 13371  0163A0  51E5               	movf	getStringSecondsAsTime@i& (0+255),w,b
 13372  0163A2  0102               	movlb	2	; () banked
 13373  0163A4  6FA7               	movwf	??_getStringSecondsAsTime& (0+255),b
 13374  0163A6  6BA8               	clrf	(??_getStringSecondsAsTime+1)& (0+255),b
 13375  0163A8  5100               	movf	?_strlen& (0+255),w,b
 13376  0163AA  5DA7               	subwf	??_getStringSecondsAsTime& (0+255),w,b
 13377  0163AC  5101               	movf	(?_strlen+1)& (0+255),w,b
 13378  0163AE  59A8               	subwfb	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13379  0163B0  A0D8               	btfss	status,0,c
 13380  0163B2  D7E4               	goto	l19434
 13381                           
 13382                           ; BSR set to: 2
 13383                           ;heartbeat_timer.c: 72: };heartbeat_timer.c: 74: char buff[20];;heartbeat_timer.c: 76: y
      +                          ears = input_seconds / (60 * 60 * 24 * 365);
 13384  0163B4  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13385  0163B8  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13386  0163BC  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13387  0163C0  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13388  0163C4  0E80               	movlw	128
 13389  0163C6  6F04               	movwf	___lldiv@divisor& (0+255),b
 13390  0163C8  0E33               	movlw	51
 13391  0163CA  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13392  0163CC  0E00               	movlw	0
 13393  0163CE  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13394  0163D0  0E00               	movlw	0
 13395  0163D2  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13396  0163D4  ECED  F0D9         	call	___lldiv	;wreg free
 13397  0163D8  0102               	movlb	2	; () banked
 13398  0163DA  5100               	movf	?___lldiv& (0+255),w,b
 13399  0163DC  0103               	movlb	3	; () banked
 13400  0163DE  6FE7               	movwf	getStringSecondsAsTime@years& (0+255),b
 13401                           
 13402                           ; BSR set to: 3
 13403                           ;heartbeat_timer.c: 77: input_seconds -= years * (60 * 60 * 24 * 365);
 13404  0163E0  C3E7  F200         	movff	getStringSecondsAsTime@years,___wmul@multiplier
 13405  0163E4  0102               	movlb	2	; () banked
 13406  0163E6  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13407  0163E8  0E33               	movlw	51
 13408  0163EA  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13409  0163EC  0E80               	movlw	128
 13410  0163EE  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13411  0163F0  ECFD  F0E2         	call	___wmul	;wreg free
 13412  0163F4  0102               	movlb	2	; () banked
 13413  0163F6  C200  F2A7         	movff	?___wmul,??_getStringSecondsAsTime
 13414  0163FA  C201  F2A8         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13415  0163FE  0E00               	movlw	0
 13416  016400  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13417  016402  0EFF               	movlw	255
 13418  016404  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13419  016406  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13420  016408  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13421  01640A  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13422  01640C  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13423  01640E  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13424  016410  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13425  016412  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13426  016414  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13427  016416  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13428                           
 13429                           ; BSR set to: 2
 13430                           ;heartbeat_timer.c: 78: days = input_seconds / (60 * 60 * 24);
 13431  016418  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13432  01641C  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13433  016420  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13434  016424  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13435  016428  0E80               	movlw	128
 13436  01642A  6F04               	movwf	___lldiv@divisor& (0+255),b
 13437  01642C  0E51               	movlw	81
 13438  01642E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13439  016430  0E00               	movlw	0
 13440  016432  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13441  016434  0E00               	movlw	0
 13442  016436  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13443  016438  ECED  F0D9         	call	___lldiv	;wreg free
 13444  01643C  0102               	movlb	2	; () banked
 13445  01643E  5100               	movf	?___lldiv& (0+255),w,b
 13446  016440  0103               	movlb	3	; () banked
 13447  016442  6FE8               	movwf	getStringSecondsAsTime@days& (0+255),b
 13448                           
 13449                           ;heartbeat_timer.c: 79: input_seconds -= days * (60 * 60 * 24);
 13450  016444  C3E8  F200         	movff	getStringSecondsAsTime@days,___wmul@multiplier
 13451  016448  0102               	movlb	2	; () banked
 13452  01644A  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13453  01644C  0E51               	movlw	81
 13454  01644E  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13455  016450  0E80               	movlw	128
 13456  016452  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13457  016454  ECFD  F0E2         	call	___wmul	;wreg free
 13458  016458  0102               	movlb	2	; () banked
 13459  01645A  C200  F2A7         	movff	?___wmul,??_getStringSecondsAsTime
 13460  01645E  C201  F2A8         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13461  016462  0E00               	movlw	0
 13462  016464  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13463  016466  0EFF               	movlw	255
 13464  016468  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13465  01646A  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13466  01646C  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13467  01646E  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13468  016470  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13469  016472  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13470  016474  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13471  016476  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13472  016478  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13473  01647A  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13474                           
 13475                           ; BSR set to: 2
 13476                           ;heartbeat_timer.c: 80: hours = input_seconds / (60 * 60);
 13477  01647C  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13478  016480  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13479  016484  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13480  016488  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13481  01648C  0E10               	movlw	16
 13482  01648E  6F04               	movwf	___lldiv@divisor& (0+255),b
 13483  016490  0E0E               	movlw	14
 13484  016492  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13485  016494  0E00               	movlw	0
 13486  016496  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13487  016498  0E00               	movlw	0
 13488  01649A  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13489  01649C  ECED  F0D9         	call	___lldiv	;wreg free
 13490  0164A0  0102               	movlb	2	; () banked
 13491  0164A2  5100               	movf	?___lldiv& (0+255),w,b
 13492  0164A4  0103               	movlb	3	; () banked
 13493  0164A6  6FE9               	movwf	getStringSecondsAsTime@hours& (0+255),b
 13494                           
 13495                           ; BSR set to: 3
 13496                           ;heartbeat_timer.c: 81: input_seconds -= hours * (60 * 60);
 13497  0164A8  C3E9  F200         	movff	getStringSecondsAsTime@hours,___wmul@multiplier
 13498  0164AC  0102               	movlb	2	; () banked
 13499  0164AE  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 13500  0164B0  0E0E               	movlw	14
 13501  0164B2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13502  0164B4  0E10               	movlw	16
 13503  0164B6  6F02               	movwf	___wmul@multiplicand& (0+255),b
 13504  0164B8  ECFD  F0E2         	call	___wmul	;wreg free
 13505  0164BC  0102               	movlb	2	; () banked
 13506  0164BE  C200  F2A7         	movff	?___wmul,??_getStringSecondsAsTime
 13507  0164C2  C201  F2A8         	movff	?___wmul+1,??_getStringSecondsAsTime+1
 13508  0164C6  0E00               	movlw	0
 13509  0164C8  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13510  0164CA  0EFF               	movlw	255
 13511  0164CC  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13512  0164CE  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13513  0164D0  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13514  0164D2  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13515  0164D4  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13516  0164D6  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13517  0164D8  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13518  0164DA  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13519  0164DC  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13520  0164DE  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13521                           
 13522                           ;heartbeat_timer.c: 82: minutes = input_seconds / 60;
 13523  0164E0  C2A3  F200         	movff	getStringSecondsAsTime@input_seconds,___lldiv@dividend
 13524  0164E4  C2A4  F201         	movff	getStringSecondsAsTime@input_seconds+1,___lldiv@dividend+1
 13525  0164E8  C2A5  F202         	movff	getStringSecondsAsTime@input_seconds+2,___lldiv@dividend+2
 13526  0164EC  C2A6  F203         	movff	getStringSecondsAsTime@input_seconds+3,___lldiv@dividend+3
 13527  0164F0  0E3C               	movlw	60
 13528  0164F2  6F04               	movwf	___lldiv@divisor& (0+255),b
 13529  0164F4  0E00               	movlw	0
 13530  0164F6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 13531  0164F8  0E00               	movlw	0
 13532  0164FA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 13533  0164FC  0E00               	movlw	0
 13534  0164FE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 13535  016500  ECED  F0D9         	call	___lldiv	;wreg free
 13536  016504  0102               	movlb	2	; () banked
 13537  016506  5100               	movf	?___lldiv& (0+255),w,b
 13538  016508  0103               	movlb	3	; () banked
 13539  01650A  6FEA               	movwf	getStringSecondsAsTime@minutes& (0+255),b
 13540                           
 13541                           ; BSR set to: 3
 13542                           ;heartbeat_timer.c: 83: input_seconds -= minutes * 60;
 13543  01650C  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13544  01650E  0D3C               	mullw	60
 13545  016510  CFF3 F2A7          	movff	prodl,??_getStringSecondsAsTime
 13546  016514  CFF4 F2A8          	movff	prodh,??_getStringSecondsAsTime+1
 13547  016518  0E00               	movlw	0
 13548  01651A  0102               	movlb	2	; () banked
 13549  01651C  BFA8               	btfsc	(??_getStringSecondsAsTime+1)& (0+255),7,b
 13550  01651E  0EFF               	movlw	255
 13551  016520  6FA9               	movwf	(??_getStringSecondsAsTime+2)& (0+255),b
 13552  016522  6FAA               	movwf	(??_getStringSecondsAsTime+3)& (0+255),b
 13553  016524  51A7               	movf	??_getStringSecondsAsTime& (0+255),w,b
 13554  016526  5FA3               	subwf	getStringSecondsAsTime@input_seconds& (0+255),f,b
 13555  016528  51A8               	movf	(??_getStringSecondsAsTime+1)& (0+255),w,b
 13556  01652A  5BA4               	subwfb	(getStringSecondsAsTime@input_seconds+1)& (0+255),f,b
 13557  01652C  51A9               	movf	(??_getStringSecondsAsTime+2)& (0+255),w,b
 13558  01652E  5BA5               	subwfb	(getStringSecondsAsTime@input_seconds+2)& (0+255),f,b
 13559  016530  51AA               	movf	(??_getStringSecondsAsTime+3)& (0+255),w,b
 13560  016532  5BA6               	subwfb	(getStringSecondsAsTime@input_seconds+3)& (0+255),f,b
 13561                           
 13562                           ; BSR set to: 2
 13563                           ;heartbeat_timer.c: 84: seconds = input_seconds;
 13564  016534  C2A3  F3E6         	movff	getStringSecondsAsTime@input_seconds,getStringSecondsAsTime@seconds
 13565                           
 13566                           ; BSR set to: 2
 13567                           ;heartbeat_timer.c: 86: if (years > 0) {
 13568  016538  0103               	movlb	3	; () banked
 13569  01653A  51E7               	movf	getStringSecondsAsTime@years& (0+255),w,b
 13570  01653C  B4D8               	btfsc	status,2,c
 13571  01653E  D02B               	goto	l19464
 13572                           
 13573                           ; BSR set to: 3
 13574                           ;heartbeat_timer.c: 88: if (years == 1) {
 13575  016540  05E7               	decf	getStringSecondsAsTime@years& (0+255),w,b
 13576  016542  A4D8               	btfss	status,2,c
 13577  016544  D00F               	goto	l19460
 13578                           
 13579                           ; BSR set to: 3
 13580                           ;heartbeat_timer.c: 90: sprintf(buff, "%d year, ", years);
 13581  016546  0ED1               	movlw	low getStringSecondsAsTime@buff
 13582  016548  0102               	movlb	2	; () banked
 13583  01654A  6F90               	movwf	sprintf@wh& (0+255),b
 13584  01654C  0E03               	movlw	high getStringSecondsAsTime@buff
 13585  01654E  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13586  016550  0E7E               	movlw	low STR_50
 13587  016552  6F92               	movwf	sprintf@f& (0+255),b
 13588  016554  0EFE               	movlw	high STR_50
 13589  016556  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13590  016558  C3E7  F294         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13591  01655C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13592  01655E  EC9F  F0DE         	call	_sprintf	;wreg free
 13593                           
 13594                           ;heartbeat_timer.c: 92: }
 13595  016562  D00E               	goto	l19462
 13596  016564                     l19460:
 13597                           
 13598                           ; BSR set to: 3
 13599                           ;heartbeat_timer.c: 94: else {;heartbeat_timer.c: 96: sprintf(buff, "%d years, ", years)
      +                          ;
 13600  016564  0ED1               	movlw	low getStringSecondsAsTime@buff
 13601  016566  0102               	movlb	2	; () banked
 13602  016568  6F90               	movwf	sprintf@wh& (0+255),b
 13603  01656A  0E03               	movlw	high getStringSecondsAsTime@buff
 13604  01656C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13605  01656E  0E1D               	movlw	low STR_51
 13606  016570  6F92               	movwf	sprintf@f& (0+255),b
 13607  016572  0EFE               	movlw	high STR_51
 13608  016574  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13609  016576  C3E7  F294         	movff	getStringSecondsAsTime@years,?_sprintf+4
 13610  01657A  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13611  01657C  EC9F  F0DE         	call	_sprintf	;wreg free
 13612  016580                     l19462:
 13613                           
 13614                           ;heartbeat_timer.c: 98: };heartbeat_timer.c: 100: strcat(return_string, buff);
 13615  016580  0E84               	movlw	low getStringSecondsAsTime@return_string
 13616  016582  0102               	movlb	2	; () banked
 13617  016584  6F00               	movwf	strcat@to& (0+255),b
 13618  016586  0E03               	movlw	high getStringSecondsAsTime@return_string
 13619  016588  6F01               	movwf	(strcat@to+1)& (0+255),b
 13620  01658A  0ED1               	movlw	low getStringSecondsAsTime@buff
 13621  01658C  6F02               	movwf	strcat@from& (0+255),b
 13622  01658E  0E03               	movlw	high getStringSecondsAsTime@buff
 13623  016590  6F03               	movwf	(strcat@from+1)& (0+255),b
 13624  016592  EC53  F0DC         	call	_strcat	;wreg free
 13625  016596                     l19464:
 13626                           
 13627                           ;heartbeat_timer.c: 102: };heartbeat_timer.c: 104: if (days > 0) {
 13628  016596  0103               	movlb	3	; () banked
 13629  016598  51E8               	movf	getStringSecondsAsTime@days& (0+255),w,b
 13630  01659A  B4D8               	btfsc	status,2,c
 13631  01659C  D02B               	goto	l19474
 13632                           
 13633                           ; BSR set to: 3
 13634                           ;heartbeat_timer.c: 106: if (days == 1) {
 13635  01659E  05E8               	decf	getStringSecondsAsTime@days& (0+255),w,b
 13636  0165A0  A4D8               	btfss	status,2,c
 13637  0165A2  D00F               	goto	l19470
 13638                           
 13639                           ; BSR set to: 3
 13640                           ;heartbeat_timer.c: 108: sprintf(buff, "%d day, ", days);
 13641  0165A4  0ED1               	movlw	low getStringSecondsAsTime@buff
 13642  0165A6  0102               	movlb	2	; () banked
 13643  0165A8  6F90               	movwf	sprintf@wh& (0+255),b
 13644  0165AA  0E03               	movlw	high getStringSecondsAsTime@buff
 13645  0165AC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13646  0165AE  0E28               	movlw	low STR_52
 13647  0165B0  6F92               	movwf	sprintf@f& (0+255),b
 13648  0165B2  0EFF               	movlw	high STR_52
 13649  0165B4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13650  0165B6  C3E8  F294         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13651  0165BA  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13652  0165BC  EC9F  F0DE         	call	_sprintf	;wreg free
 13653                           
 13654                           ;heartbeat_timer.c: 110: }
 13655  0165C0  D00E               	goto	l19472
 13656  0165C2                     l19470:
 13657                           
 13658                           ; BSR set to: 3
 13659                           ;heartbeat_timer.c: 112: else {;heartbeat_timer.c: 114: sprintf(buff, "%d days, ", days)
      +                          ;
 13660  0165C2  0ED1               	movlw	low getStringSecondsAsTime@buff
 13661  0165C4  0102               	movlb	2	; () banked
 13662  0165C6  6F90               	movwf	sprintf@wh& (0+255),b
 13663  0165C8  0E03               	movlw	high getStringSecondsAsTime@buff
 13664  0165CA  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13665  0165CC  0E92               	movlw	low STR_53
 13666  0165CE  6F92               	movwf	sprintf@f& (0+255),b
 13667  0165D0  0EFE               	movlw	high STR_53
 13668  0165D2  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13669  0165D4  C3E8  F294         	movff	getStringSecondsAsTime@days,?_sprintf+4
 13670  0165D8  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13671  0165DA  EC9F  F0DE         	call	_sprintf	;wreg free
 13672  0165DE                     l19472:
 13673                           
 13674                           ;heartbeat_timer.c: 116: };heartbeat_timer.c: 118: strcat(return_string, buff);
 13675  0165DE  0E84               	movlw	low getStringSecondsAsTime@return_string
 13676  0165E0  0102               	movlb	2	; () banked
 13677  0165E2  6F00               	movwf	strcat@to& (0+255),b
 13678  0165E4  0E03               	movlw	high getStringSecondsAsTime@return_string
 13679  0165E6  6F01               	movwf	(strcat@to+1)& (0+255),b
 13680  0165E8  0ED1               	movlw	low getStringSecondsAsTime@buff
 13681  0165EA  6F02               	movwf	strcat@from& (0+255),b
 13682  0165EC  0E03               	movlw	high getStringSecondsAsTime@buff
 13683  0165EE  6F03               	movwf	(strcat@from+1)& (0+255),b
 13684  0165F0  EC53  F0DC         	call	_strcat	;wreg free
 13685  0165F4                     l19474:
 13686                           
 13687                           ;heartbeat_timer.c: 119: };heartbeat_timer.c: 121: if (hours > 0) {
 13688  0165F4  0103               	movlb	3	; () banked
 13689  0165F6  51E9               	movf	getStringSecondsAsTime@hours& (0+255),w,b
 13690  0165F8  B4D8               	btfsc	status,2,c
 13691  0165FA  D02B               	goto	l19484
 13692                           
 13693                           ; BSR set to: 3
 13694                           ;heartbeat_timer.c: 123: if (hours == 1) {
 13695  0165FC  05E9               	decf	getStringSecondsAsTime@hours& (0+255),w,b
 13696  0165FE  A4D8               	btfss	status,2,c
 13697  016600  D00F               	goto	l19480
 13698                           
 13699                           ; BSR set to: 3
 13700                           ;heartbeat_timer.c: 125: sprintf(buff, "%d hour, ", hours);
 13701  016602  0ED1               	movlw	low getStringSecondsAsTime@buff
 13702  016604  0102               	movlb	2	; () banked
 13703  016606  6F90               	movwf	sprintf@wh& (0+255),b
 13704  016608  0E03               	movlw	high getStringSecondsAsTime@buff
 13705  01660A  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13706  01660C  0E88               	movlw	low STR_54
 13707  01660E  6F92               	movwf	sprintf@f& (0+255),b
 13708  016610  0EFE               	movlw	high STR_54
 13709  016612  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13710  016614  C3E9  F294         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13711  016618  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13712  01661A  EC9F  F0DE         	call	_sprintf	;wreg free
 13713                           
 13714                           ;heartbeat_timer.c: 127: }
 13715  01661E  D00E               	goto	l19482
 13716  016620                     l19480:
 13717                           
 13718                           ; BSR set to: 3
 13719                           ;heartbeat_timer.c: 129: else {;heartbeat_timer.c: 131: sprintf(buff, "%d hours, ", hour
      +                          s);
 13720  016620  0ED1               	movlw	low getStringSecondsAsTime@buff
 13721  016622  0102               	movlb	2	; () banked
 13722  016624  6F90               	movwf	sprintf@wh& (0+255),b
 13723  016626  0E03               	movlw	high getStringSecondsAsTime@buff
 13724  016628  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13725  01662A  0E28               	movlw	low STR_55
 13726  01662C  6F92               	movwf	sprintf@f& (0+255),b
 13727  01662E  0EFE               	movlw	high STR_55
 13728  016630  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13729  016632  C3E9  F294         	movff	getStringSecondsAsTime@hours,?_sprintf+4
 13730  016636  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13731  016638  EC9F  F0DE         	call	_sprintf	;wreg free
 13732  01663C                     l19482:
 13733                           
 13734                           ;heartbeat_timer.c: 133: };heartbeat_timer.c: 135: strcat(return_string, buff);
 13735  01663C  0E84               	movlw	low getStringSecondsAsTime@return_string
 13736  01663E  0102               	movlb	2	; () banked
 13737  016640  6F00               	movwf	strcat@to& (0+255),b
 13738  016642  0E03               	movlw	high getStringSecondsAsTime@return_string
 13739  016644  6F01               	movwf	(strcat@to+1)& (0+255),b
 13740  016646  0ED1               	movlw	low getStringSecondsAsTime@buff
 13741  016648  6F02               	movwf	strcat@from& (0+255),b
 13742  01664A  0E03               	movlw	high getStringSecondsAsTime@buff
 13743  01664C  6F03               	movwf	(strcat@from+1)& (0+255),b
 13744  01664E  EC53  F0DC         	call	_strcat	;wreg free
 13745  016652                     l19484:
 13746                           
 13747                           ;heartbeat_timer.c: 137: };heartbeat_timer.c: 139: if (minutes > 0) {
 13748  016652  0103               	movlb	3	; () banked
 13749  016654  51EA               	movf	getStringSecondsAsTime@minutes& (0+255),w,b
 13750  016656  B4D8               	btfsc	status,2,c
 13751  016658  D02B               	goto	l19494
 13752                           
 13753                           ; BSR set to: 3
 13754                           ;heartbeat_timer.c: 141: if (minutes == 1) {
 13755  01665A  05EA               	decf	getStringSecondsAsTime@minutes& (0+255),w,b
 13756  01665C  A4D8               	btfss	status,2,c
 13757  01665E  D00F               	goto	l19490
 13758                           
 13759                           ; BSR set to: 3
 13760                           ;heartbeat_timer.c: 143: sprintf(buff, "%d minute, ", minutes);
 13761  016660  0ED1               	movlw	low getStringSecondsAsTime@buff
 13762  016662  0102               	movlb	2	; () banked
 13763  016664  6F90               	movwf	sprintf@wh& (0+255),b
 13764  016666  0E03               	movlw	high getStringSecondsAsTime@buff
 13765  016668  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13766  01666A  0EA0               	movlw	low STR_56
 13767  01666C  6F92               	movwf	sprintf@f& (0+255),b
 13768  01666E  0EFD               	movlw	high STR_56
 13769  016670  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13770  016672  C3EA  F294         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13771  016676  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13772  016678  EC9F  F0DE         	call	_sprintf	;wreg free
 13773                           
 13774                           ;heartbeat_timer.c: 145: }
 13775  01667C  D00E               	goto	l19492
 13776  01667E                     l19490:
 13777                           
 13778                           ; BSR set to: 3
 13779                           ;heartbeat_timer.c: 147: else {;heartbeat_timer.c: 149: sprintf(buff, "%d minutes, ", mi
      +                          nutes);
 13780  01667E  0ED1               	movlw	low getStringSecondsAsTime@buff
 13781  016680  0102               	movlb	2	; () banked
 13782  016682  6F90               	movwf	sprintf@wh& (0+255),b
 13783  016684  0E03               	movlw	high getStringSecondsAsTime@buff
 13784  016686  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13785  016688  0E3C               	movlw	low STR_57
 13786  01668A  6F92               	movwf	sprintf@f& (0+255),b
 13787  01668C  0EFD               	movlw	high STR_57
 13788  01668E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13789  016690  C3EA  F294         	movff	getStringSecondsAsTime@minutes,?_sprintf+4
 13790  016694  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13791  016696  EC9F  F0DE         	call	_sprintf	;wreg free
 13792  01669A                     l19492:
 13793                           
 13794                           ;heartbeat_timer.c: 151: };heartbeat_timer.c: 153: strcat(return_string, buff);
 13795  01669A  0E84               	movlw	low getStringSecondsAsTime@return_string
 13796  01669C  0102               	movlb	2	; () banked
 13797  01669E  6F00               	movwf	strcat@to& (0+255),b
 13798  0166A0  0E03               	movlw	high getStringSecondsAsTime@return_string
 13799  0166A2  6F01               	movwf	(strcat@to+1)& (0+255),b
 13800  0166A4  0ED1               	movlw	low getStringSecondsAsTime@buff
 13801  0166A6  6F02               	movwf	strcat@from& (0+255),b
 13802  0166A8  0E03               	movlw	high getStringSecondsAsTime@buff
 13803  0166AA  6F03               	movwf	(strcat@from+1)& (0+255),b
 13804  0166AC  EC53  F0DC         	call	_strcat	;wreg free
 13805  0166B0                     l19494:
 13806                           
 13807                           ;heartbeat_timer.c: 155: };heartbeat_timer.c: 157: if (seconds > 0) {
 13808  0166B0  0103               	movlb	3	; () banked
 13809  0166B2  51E6               	movf	getStringSecondsAsTime@seconds& (0+255),w,b
 13810  0166B4  B4D8               	btfsc	status,2,c
 13811  0166B6  D02B               	goto	l19504
 13812                           
 13813                           ; BSR set to: 3
 13814                           ;heartbeat_timer.c: 159: if (seconds == 1) {
 13815  0166B8  05E6               	decf	getStringSecondsAsTime@seconds& (0+255),w,b
 13816  0166BA  A4D8               	btfss	status,2,c
 13817  0166BC  D00F               	goto	l19500
 13818                           
 13819                           ; BSR set to: 3
 13820                           ;heartbeat_timer.c: 161: sprintf(buff, "%d second", seconds);
 13821  0166BE  0ED1               	movlw	low getStringSecondsAsTime@buff
 13822  0166C0  0102               	movlb	2	; () banked
 13823  0166C2  6F90               	movwf	sprintf@wh& (0+255),b
 13824  0166C4  0E03               	movlw	high getStringSecondsAsTime@buff
 13825  0166C6  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13826  0166C8  0E9C               	movlw	low STR_58
 13827  0166CA  6F92               	movwf	sprintf@f& (0+255),b
 13828  0166CC  0EFE               	movlw	high STR_58
 13829  0166CE  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13830  0166D0  C3E6  F294         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13831  0166D4  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13832  0166D6  EC9F  F0DE         	call	_sprintf	;wreg free
 13833                           
 13834                           ;heartbeat_timer.c: 163: }
 13835  0166DA  D00E               	goto	l19502
 13836  0166DC                     l19500:
 13837                           
 13838                           ; BSR set to: 3
 13839                           ;heartbeat_timer.c: 165: else {;heartbeat_timer.c: 167: sprintf(buff, "%d seconds", seco
      +                          nds);
 13840  0166DC  0ED1               	movlw	low getStringSecondsAsTime@buff
 13841  0166DE  0102               	movlb	2	; () banked
 13842  0166E0  6F90               	movwf	sprintf@wh& (0+255),b
 13843  0166E2  0E03               	movlw	high getStringSecondsAsTime@buff
 13844  0166E4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 13845  0166E6  0E33               	movlw	low STR_59
 13846  0166E8  6F92               	movwf	sprintf@f& (0+255),b
 13847  0166EA  0EFE               	movlw	high STR_59
 13848  0166EC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 13849  0166EE  C3E6  F294         	movff	getStringSecondsAsTime@seconds,?_sprintf+4
 13850  0166F2  6B95               	clrf	(?_sprintf+5)& (0+255),b
 13851  0166F4  EC9F  F0DE         	call	_sprintf	;wreg free
 13852  0166F8                     l19502:
 13853                           
 13854                           ;heartbeat_timer.c: 169: };heartbeat_timer.c: 171: strcat(return_string, buff);
 13855  0166F8  0E84               	movlw	low getStringSecondsAsTime@return_string
 13856  0166FA  0102               	movlb	2	; () banked
 13857  0166FC  6F00               	movwf	strcat@to& (0+255),b
 13858  0166FE  0E03               	movlw	high getStringSecondsAsTime@return_string
 13859  016700  6F01               	movwf	(strcat@to+1)& (0+255),b
 13860  016702  0ED1               	movlw	low getStringSecondsAsTime@buff
 13861  016704  6F02               	movwf	strcat@from& (0+255),b
 13862  016706  0E03               	movlw	high getStringSecondsAsTime@buff
 13863  016708  6F03               	movwf	(strcat@from+1)& (0+255),b
 13864  01670A  EC53  F0DC         	call	_strcat	;wreg free
 13865  01670E                     l19504:
 13866                           
 13867                           ;heartbeat_timer.c: 173: };heartbeat_timer.c: 175: return return_string;
 13868  01670E  0E84               	movlw	low getStringSecondsAsTime@return_string
 13869  016710  0102               	movlb	2	; () banked
 13870  016712  6FA3               	movwf	?_getStringSecondsAsTime& (0+255),b
 13871  016714  0E03               	movlw	high getStringSecondsAsTime@return_string
 13872  016716  6FA4               	movwf	(?_getStringSecondsAsTime+1)& (0+255),b
 13873                           
 13874                           ; BSR set to: 2
 13875  016718  0012               	return		;funcret
 13876  01671A                     __end_of_getStringSecondsAsTime:
 13877                           	opt callstack 0
 13878                           
 13879 ;; *************** function _strcat *****************
 13880 ;; Defined at:
 13881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcat.c"
 13882 ;; Parameters:    Size  Location     Type
 13883 ;;  to              2    0[BANK2 ] PTR unsigned char 
 13884 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13885 ;;  from            2    2[BANK2 ] PTR const unsigned char 
 13886 ;;		 -> STR_338(2), STR_337(3), STR_336(3), STR_335(3), 
 13887 ;;		 -> STR_334(3), STR_333(3), STR_332(3), STR_331(3), 
 13888 ;;		 -> STR_330(3), STR_329(3), STR_328(2), STR_327(3), 
 13889 ;;		 -> STR_326(3), STR_325(3), STR_324(3), STR_323(3), 
 13890 ;;		 -> STR_322(3), STR_321(3), STR_320(3), STR_319(3), 
 13891 ;;		 -> STR_318(2), STR_317(2), STR_316(2), STR_315(2), 
 13892 ;;		 -> STR_314(2), STR_313(2), STR_312(2), STR_311(2), 
 13893 ;;		 -> getStringSecondsAsTime@buff(20), 
 13894 ;; Auto vars:     Size  Location     Type
 13895 ;;  cp              2    4[BANK2 ] PTR unsigned char 
 13896 ;;		 -> terminalTextAttributes@print_string(16), getStringSecondsAsTime@return_string(40), 
 13897 ;; Return value:  Size  Location     Type
 13898 ;;                  2    0[BANK2 ] PTR unsigned char 
 13899 ;; Registers used:
 13900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13901 ;; Tracked objects:
 13902 ;;		On entry : 0/0
 13903 ;;		On exit  : 0/0
 13904 ;;		Unchanged: 0/0
 13905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13906 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13907 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13909 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13910 ;;Total ram usage:        6 bytes
 13911 ;; Hardware stack levels used:    1
 13912 ;; Hardware stack levels required when called:   11
 13913 ;; This function calls:
 13914 ;;		Nothing
 13915 ;; This function is called by:
 13916 ;;		_getStringSecondsAsTime
 13917 ;;		_terminalTextAttributes
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           	psect	text10
 13922  01B8A6                     __ptext10:
 13923                           	opt callstack 0
 13924  01B8A6                     _strcat:
 13925                           	opt callstack 16
 13926                           
 13927                           ; BSR set to: 2
 13928                           ;incstack = 0
 13929  01B8A6  C200  F204         	movff	strcat@to,strcat@cp
 13930  01B8AA  C201  F205         	movff	strcat@to+1,strcat@cp+1
 13931  01B8AE  D003               	goto	l18652
 13932  01B8B0                     l18650:
 13933  01B8B0  0102               	movlb	2	; () banked
 13934  01B8B2  4B04               	infsnz	strcat@cp& (0+255),f,b
 13935  01B8B4  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13936  01B8B6                     l18652:
 13937  01B8B6  C204  FFD9         	movff	strcat@cp,fsr2l
 13938  01B8BA  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13939  01B8BE  50DF               	movf	indf2,w,c
 13940  01B8C0  B4D8               	btfsc	status,2,c
 13941  01B8C2  D006               	goto	l18656
 13942  01B8C4  D7F5               	goto	l18650
 13943  01B8C6                     l18654:
 13944  01B8C6  0102               	movlb	2	; () banked
 13945  01B8C8  4B04               	infsnz	strcat@cp& (0+255),f,b
 13946  01B8CA  2B05               	incf	(strcat@cp+1)& (0+255),f,b
 13947  01B8CC  4B02               	infsnz	strcat@from& (0+255),f,b
 13948  01B8CE  2B03               	incf	(strcat@from+1)& (0+255),f,b
 13949  01B8D0                     l18656:
 13950  01B8D0  C202  FFF6         	movff	strcat@from,tblptrl
 13951  01B8D4  C203  FFF7         	movff	strcat@from+1,tblptrh
 13952  01B8D8  0E00               	movlw	low (__mediumconst shr (0+16))
 13953  01B8DA  6EF8               	movwf	tblptru,c
 13954  01B8DC  C204  FFD9         	movff	strcat@cp,fsr2l
 13955  01B8E0  C205  FFDA         	movff	strcat@cp+1,fsr2h
 13956  01B8E4  0E0E               	movlw	(high __ramtop+-1)
 13957  01B8E6  64F7               	cpfsgt	tblptrh,c
 13958  01B8E8  D003               	bra	u23367
 13959  01B8EA  0008               	tblrd		*
 13960  01B8EC  50F5               	movf	tablat,w,c
 13961  01B8EE  D005               	bra	u23360
 13962  01B8F0                     u23367:
 13963  01B8F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13964  01B8F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13965  01B8F8  50EF               	movf	indf0,w,c
 13966  01B8FA                     u23360:
 13967  01B8FA  6EDF               	movwf	indf2,c
 13968  01B8FC  50DF               	movf	indf2,w,c
 13969  01B8FE  B4D8               	btfsc	status,2,c
 13970  01B900  0012               	return	
 13971  01B902  D7E1               	goto	l18654
 13972  01B904                     __end_of_strcat:
 13973                           	opt callstack 0
 13974                           
 13975 ;; *************** function _getNXQChargeStateString *****************
 13976 ;; Defined at:
 13977 ;;		line 9 in file "NXQ_charge_state.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;		None
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;		None
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  2    0[BANK2 ] PTR unsigned char 
 13984 ;; Registers used:
 13985 ;;		wreg, status,2, status,0
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13991 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13994 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13995 ;;Total ram usage:        2 bytes
 13996 ;; Hardware stack levels used:    1
 13997 ;; Hardware stack levels required when called:   11
 13998 ;; This function calls:
 13999 ;;		Nothing
 14000 ;; This function is called by:
 14001 ;;		_printCurrentMeasurements
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005                           	psect	text11
 14006  01B904                     __ptext11:
 14007                           	opt callstack 0
 14008  01B904                     _getNXQChargeStateString:
 14009                           	opt callstack 16
 14010                           
 14011                           ;NXQ_charge_state.c: 11: switch (nxq_charge_state) {
 14012                           
 14013                           ;incstack = 0
 14014  01B904  D01E               	goto	l19430
 14015  01B906                     l19398:
 14016                           
 14017                           ; BSR set to: 1
 14018                           ;NXQ_charge_state.c: 14: return "idle";
 14019  01B906  0EAE               	movlw	low STR_13
 14020  01B908  0102               	movlb	2	; () banked
 14021  01B90A  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14022  01B90C  0EFF               	movlw	high STR_13
 14023  01B90E  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14024  01B910  0012               	return	
 14025  01B912                     l19404:
 14026                           
 14027                           ; BSR set to: 1
 14028                           ;NXQ_charge_state.c: 18: return "charging";
 14029  01B912  0E31               	movlw	low STR_14
 14030  01B914  0102               	movlb	2	; () banked
 14031  01B916  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14032  01B918  0EFF               	movlw	high STR_14
 14033  01B91A  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14034  01B91C  0012               	return	
 14035  01B91E                     l19410:
 14036                           
 14037                           ; BSR set to: 1
 14038                           ;NXQ_charge_state.c: 22: return "fully charged";
 14039  01B91E  0ED3               	movlw	low STR_15
 14040  01B920  0102               	movlb	2	; () banked
 14041  01B922  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14042  01B924  0EFC               	movlw	high STR_15
 14043  01B926  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14044  01B928  0012               	return	
 14045  01B92A                     l19416:
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;NXQ_charge_state.c: 26: return "error";
 14049  01B92A  0E8A               	movlw	low STR_16
 14050  01B92C  0102               	movlb	2	; () banked
 14051  01B92E  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14052  01B930  0EFF               	movlw	high STR_16
 14053  01B932  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14054  01B934  0012               	return	
 14055  01B936                     l19422:
 14056                           
 14057                           ; BSR set to: 1
 14058                           ;NXQ_charge_state.c: 30: return "undefined";
 14059  01B936  0EC4               	movlw	low STR_17
 14060  01B938  0102               	movlb	2	; () banked
 14061  01B93A  6F00               	movwf	?_getNXQChargeStateString& (0+255),b
 14062  01B93C  0EFE               	movlw	high STR_17
 14063  01B93E  6F01               	movwf	(?_getNXQChargeStateString+1)& (0+255),b
 14064  01B940  0012               	return	
 14065  01B942                     l19430:
 14066  01B942  0101               	movlb	1	; () banked
 14067  01B944  518F               	movf	_nxq_charge_state& (0+255),w,b
 14068                           
 14069                           ; Switch size 1, requested type "simple"
 14070                           ; Number of cases is 4, Range of values is 0 to 3
 14071                           ; switch strategies available:
 14072                           ; Name         Instructions Cycles
 14073                           ; simple_byte           13     7 (average)
 14074                           ;	Chosen strategy is simple_byte
 14075  01B946  0A00               	xorlw	0	; case 0
 14076  01B948  B4D8               	btfsc	status,2,c
 14077  01B94A  D7DD               	goto	l19398
 14078  01B94C  0A01               	xorlw	1	; case 1
 14079  01B94E  B4D8               	btfsc	status,2,c
 14080  01B950  D7E0               	goto	l19404
 14081  01B952  0A03               	xorlw	3	; case 2
 14082  01B954  B4D8               	btfsc	status,2,c
 14083  01B956  D7E3               	goto	l19410
 14084  01B958  0A01               	xorlw	1	; case 3
 14085  01B95A  B4D8               	btfsc	status,2,c
 14086  01B95C  D7E6               	goto	l19416
 14087  01B95E  D7EB               	goto	l19422
 14088  01B960                     __end_of_getNXQChargeStateString:
 14089                           	opt callstack 0
 14090                           
 14091 ;; *************** function _getUserID *****************
 14092 ;; Defined at:
 14093 ;;		line 72 in file "device_IDs.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  inputUserID     1    wreg     unsigned char 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;  inputUserID     1   17[BANK2 ] unsigned char 
 14098 ;;  initialOffse    4    0        unsigned long 
 14099 ;;  IDOffset        1   18[BANK2 ] unsigned char 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  2   11[BANK2 ] unsigned int 
 14102 ;; Registers used:
 14103 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14109 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;Total ram usage:        8 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:   13
 14116 ;; This function calls:
 14117 ;;		_FLASH_ReadWord
 14118 ;; This function is called by:
 14119 ;;		_ringBufferLUT
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text12
 14124  01C30E                     __ptext12:
 14125                           	opt callstack 0
 14126  01C30E                     _getUserID:
 14127                           	opt callstack 15
 14128                           
 14129                           ; BSR set to: 2
 14130                           ;incstack = 0
 14131                           ;getUserID@inputUserID stored from wreg
 14132  01C30E  0102               	movlb	2	; () banked
 14133  01C310  6F11               	movwf	getUserID@inputUserID& (0+255),b
 14134                           
 14135                           ;device_IDs.c: 78: uint8_t IDOffset = inputUserID * 2;
 14136  01C312  0102               	movlb	2	; () banked
 14137  01C314  5111               	movf	getUserID@inputUserID& (0+255),w,b
 14138  01C316  0D02               	mullw	2
 14139  01C318  CFF3 F212          	movff	prodl,getUserID@IDOffset
 14140                           
 14141                           ; BSR set to: 2
 14142                           ;device_IDs.c: 80: return FLASH_ReadWord(initialOffset + IDOffset);
 14143  01C31C  0E00               	movlw	0
 14144  01C31E  2512               	addwf	getUserID@IDOffset& (0+255),w,b
 14145  01C320  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14146  01C322  6B05               	clrf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14147  01C324  0E00               	movlw	0
 14148  01C326  2305               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),f,b
 14149  01C328  6B06               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14150  01C32A  0E20               	movlw	32
 14151  01C32C  2306               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),f,b
 14152  01C32E  6B07               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14153  01C330  0E00               	movlw	0
 14154  01C332  2307               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),f,b
 14155  01C334  ECD9  F0DF         	call	_FLASH_ReadWord	;wreg free
 14156  01C338  C204  F20B         	movff	?_FLASH_ReadWord,?_getUserID
 14157  01C33C  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 14158  01C340  0012               	return		;funcret
 14159  01C342                     __end_of_getUserID:
 14160                           	opt callstack 0
 14161                           
 14162 ;; *************** function _getDeviceIDString *****************
 14163 ;; Defined at:
 14164 ;;		line 34 in file "device_IDs.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  inputDevID      2   13[BANK2 ] unsigned int 
 14167 ;; Auto vars:     Size  Location     Type
 14168 ;;		None
 14169 ;; Return value:  Size  Location     Type
 14170 ;;                  2   13[BANK2 ] PTR inline unsigned char
 14171 ;; Registers used:
 14172 ;;		wreg, status,2, status,0
 14173 ;; Tracked objects:
 14174 ;;		On entry : 0/0
 14175 ;;		On exit  : 0/0
 14176 ;;		Unchanged: 0/0
 14177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14178 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14180 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14181 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14182 ;;Total ram usage:        4 bytes
 14183 ;; Hardware stack levels used:    1
 14184 ;; Hardware stack levels required when called:   11
 14185 ;; This function calls:
 14186 ;;		Nothing
 14187 ;; This function is called by:
 14188 ;;		_ringBufferLUT
 14189 ;; This function uses a non-reentrant model
 14190 ;;
 14191                           
 14192                           	psect	text13
 14193  01B07E                     __ptext13:
 14194                           	opt callstack 0
 14195  01B07E                     _getDeviceIDString:
 14196                           	opt callstack 17
 14197                           
 14198                           ;device_IDs.c: 38: switch (inputDevID) {
 14199                           
 14200                           ;incstack = 0
 14201  01B07E  D023               	goto	l20138
 14202  01B080                     l20094:
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;device_IDs.c: 41: return "PIC18F67K40";
 14206  01B080  0EC4               	movlw	low STR_43
 14207  01B082  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14208  01B084  0EFD               	movlw	high STR_43
 14209  01B086  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14210  01B088  0012               	return	
 14211  01B08A                     l20100:
 14212                           
 14213                           ; BSR set to: 2
 14214                           ;device_IDs.c: 45: return "PIC18LF67K40";
 14215  01B08A  0E63               	movlw	low STR_44
 14216  01B08C  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14217  01B08E  0EFD               	movlw	high STR_44
 14218  01B090  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14219  01B092  0012               	return	
 14220  01B094                     l20106:
 14221                           
 14222                           ; BSR set to: 2
 14223                           ;device_IDs.c: 49: return "PIC18F27K40";
 14224  01B094  0EAC               	movlw	low STR_45
 14225  01B096  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14226  01B098  0EFD               	movlw	high STR_45
 14227  01B09A  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14228  01B09C  0012               	return	
 14229  01B09E                     l20112:
 14230                           
 14231                           ; BSR set to: 2
 14232                           ;device_IDs.c: 53: return "PIC18F47K40";
 14233  01B09E  0EB8               	movlw	low STR_46
 14234  01B0A0  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14235  01B0A2  0EFD               	movlw	high STR_46
 14236  01B0A4  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14237  01B0A6  0012               	return	
 14238  01B0A8                     l20118:
 14239                           
 14240                           ; BSR set to: 2
 14241                           ;device_IDs.c: 57: return "PIC18LF27K40";
 14242  01B0A8  0E49               	movlw	low STR_47
 14243  01B0AA  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14244  01B0AC  0EFD               	movlw	high STR_47
 14245  01B0AE  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14246  01B0B0  0012               	return	
 14247  01B0B2                     l20124:
 14248                           
 14249                           ; BSR set to: 2
 14250                           ;device_IDs.c: 61: return "PIC18LF47K40";
 14251  01B0B2  0E56               	movlw	low STR_48
 14252  01B0B4  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14253  01B0B6  0EFD               	movlw	high STR_48
 14254  01B0B8  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14255  01B0BA  0012               	return	
 14256  01B0BC                     l20130:
 14257                           
 14258                           ; BSR set to: 2
 14259                           ;device_IDs.c: 65: return "Undefined";
 14260  01B0BC  0EBA               	movlw	low STR_22
 14261  01B0BE  6F0D               	movwf	?_getDeviceIDString& (0+255),b
 14262  01B0C0  0EFE               	movlw	high STR_22
 14263  01B0C2  6F0E               	movwf	(?_getDeviceIDString+1)& (0+255),b
 14264  01B0C4  0012               	return	
 14265  01B0C6                     l20138:
 14266  01B0C6  C20D  F20F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 14267  01B0CA  C20E  F210         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 14268                           
 14269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
 14270                           ; Switch size 1, requested type "simple"
 14271                           ; Number of cases is 3, Range of values is 105 to 107
 14272                           ; switch strategies available:
 14273                           ; Name         Instructions Cycles
 14274                           ; simple_byte           10     6 (average)
 14275                           ;	Chosen strategy is simple_byte
 14276  01B0CE  0102               	movlb	2	; () banked
 14277  01B0D0  5110               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 14278  01B0D2  0A69               	xorlw	105	; case 105
 14279  01B0D4  B4D8               	btfsc	status,2,c
 14280  01B0D6  D007               	goto	l22852
 14281  01B0D8  0A03               	xorlw	3	; case 106
 14282  01B0DA  B4D8               	btfsc	status,2,c
 14283  01B0DC  D00F               	goto	l22854
 14284  01B0DE  0A01               	xorlw	1	; case 107
 14285  01B0E0  B4D8               	btfsc	status,2,c
 14286  01B0E2  D014               	goto	l22856
 14287  01B0E4  D7EB               	goto	l20130
 14288  01B0E6                     l22852:
 14289                           
 14290                           ; BSR set to: 2
 14291                           ; Switch size 1, requested type "simple"
 14292                           ; Number of cases is 3, Range of values is 0 to 224
 14293                           ; switch strategies available:
 14294                           ; Name         Instructions Cycles
 14295                           ; simple_byte           10     6 (average)
 14296                           ;	Chosen strategy is simple_byte
 14297  01B0E6  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14298  01B0E8  0A00               	xorlw	0	; case 0
 14299  01B0EA  B4D8               	btfsc	status,2,c
 14300  01B0EC  D7D8               	goto	l20112
 14301  01B0EE  0A60               	xorlw	96	; case 96
 14302  01B0F0  B4D8               	btfsc	status,2,c
 14303  01B0F2  D7D0               	goto	l20106
 14304  01B0F4  0A80               	xorlw	128	; case 224
 14305  01B0F6  B4D8               	btfsc	status,2,c
 14306  01B0F8  D7DC               	goto	l20124
 14307  01B0FA  D7E0               	goto	l20130
 14308  01B0FC                     l22854:
 14309                           
 14310                           ; BSR set to: 2
 14311                           ; Switch size 1, requested type "simple"
 14312                           ; Number of cases is 2, Range of values is 64 to 192
 14313                           ; switch strategies available:
 14314                           ; Name         Instructions Cycles
 14315                           ; simple_byte            7     4 (average)
 14316                           ;	Chosen strategy is simple_byte
 14317  01B0FC  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14318  01B0FE  0A40               	xorlw	64	; case 64
 14319  01B100  B4D8               	btfsc	status,2,c
 14320  01B102  D7D2               	goto	l20118
 14321  01B104  0A80               	xorlw	128	; case 192
 14322  01B106  B4D8               	btfsc	status,2,c
 14323  01B108  D7BB               	goto	l20094
 14324  01B10A  D7D8               	goto	l20130
 14325  01B10C                     l22856:
 14326                           
 14327                           ; BSR set to: 2
 14328                           ; Switch size 1, requested type "simple"
 14329                           ; Number of cases is 1, Range of values is 32 to 32
 14330                           ; switch strategies available:
 14331                           ; Name         Instructions Cycles
 14332                           ; simple_byte            4     3 (average)
 14333                           ;	Chosen strategy is simple_byte
 14334  01B10C  510F               	movf	??_getDeviceIDString& (0+255),w,b
 14335  01B10E  0A20               	xorlw	32	; case 32
 14336  01B110  B4D8               	btfsc	status,2,c
 14337  01B112  D7BB               	goto	l20100
 14338  01B114  D7D3               	goto	l20130
 14339  01B116                     __end_of_getDeviceIDString:
 14340                           	opt callstack 0
 14341                           
 14342 ;; *************** function _getCauseOfResetString *****************
 14343 ;; Defined at:
 14344 ;;		line 87 in file "cause_of_reset.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;  r               1    wreg     enum E9577
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  r               1    2[BANK2 ] enum E9577
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  2    0[BANK2 ] PTR inline unsigned char
 14351 ;; Registers used:
 14352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14358 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14359 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14361 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14362 ;;Total ram usage:        3 bytes
 14363 ;; Hardware stack levels used:    1
 14364 ;; Hardware stack levels required when called:   11
 14365 ;; This function calls:
 14366 ;;		Nothing
 14367 ;; This function is called by:
 14368 ;;		_main
 14369 ;;		_ringBufferLUT
 14370 ;; This function uses a non-reentrant model
 14371 ;;
 14372                           
 14373                           	psect	text14
 14374  01C40E                     __ptext14:
 14375                           	opt callstack 0
 14376  01C40E                     _getCauseOfResetString:
 14377                           	opt callstack 17
 14378                           
 14379                           ; BSR set to: 2
 14380                           ;incstack = 0
 14381                           ;getCauseOfResetString@r stored from wreg
 14382  01C40E  0102               	movlb	2	; () banked
 14383  01C410  6F02               	movwf	getCauseOfResetString@r& (0+255),b
 14384                           
 14385                           ;cause_of_reset.c: 90: static char *strings[] = {;cause_of_reset.c: 91: "Undefined Reset
      +                          ",;cause_of_reset.c: 92: "Power On Reset",;cause_of_reset.c: 93: "Brown Out Reset",;caus
      +                          e_of_reset.c: 94: "Master Clear Reset",;cause_of_reset.c: 95: "Watch Dog Timer Violation
      +                           Reset",;cause_of_reset.c: 96: "Windowed Watch Dog Timer Violation Reset",;cause_of_rese
      +                          t.c: 97: "RESET Instruction Executed",;cause_of_reset.c: 98: "Stack Overflow Reset",;cau
      +                          se_of_reset.c: 99: "Stack Underflow Reset",;cause_of_reset.c: 100: };;cause_of_reset.c: 
      +                          103: if (r <= 8) {
 14386  01C412  0E09               	movlw	9
 14387  01C414  0102               	movlb	2	; () banked
 14388  01C416  6102               	cpfslt	getCauseOfResetString@r& (0+255),b
 14389  01C418  D00D               	goto	l20028
 14390                           
 14391                           ; BSR set to: 2
 14392                           ;cause_of_reset.c: 105: return strings[r];
 14393  01C41A  5102               	movf	getCauseOfResetString@r& (0+255),w,b
 14394  01C41C  0D02               	mullw	2
 14395  01C41E  0EA6               	movlw	low getCauseOfResetString@strings
 14396  01C420  24F3               	addwf	prodl,w,c
 14397  01C422  6ED9               	movwf	fsr2l,c
 14398  01C424  0E01               	movlw	high getCauseOfResetString@strings
 14399  01C426  20F4               	addwfc	prodh,w,c
 14400  01C428  6EDA               	movwf	fsr2h,c
 14401  01C42A  CFDE F200          	movff	postinc2,?_getCauseOfResetString
 14402  01C42E  CFDD F201          	movff	postdec2,?_getCauseOfResetString+1
 14403  01C432  0012               	return	
 14404  01C434                     l20028:
 14405                           
 14406                           ; BSR set to: 2
 14407                           ;cause_of_reset.c: 109: else {;cause_of_reset.c: 111: return "Undefined Reset";
 14408  01C434  0EA2               	movlw	low STR_23
 14409  01C436  6F00               	movwf	?_getCauseOfResetString& (0+255),b
 14410  01C438  0EFB               	movlw	high STR_23
 14411  01C43A  6F01               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 14412                           
 14413                           ; BSR set to: 2
 14414  01C43C  0012               	return		;funcret
 14415  01C43E                     __end_of_getCauseOfResetString:
 14416                           	opt callstack 0
 14417                           
 14418 ;; *************** function _clearUARTErrors *****************
 14419 ;; Defined at:
 14420 ;;		line 85 in file "error_handling.c"
 14421 ;; Parameters:    Size  Location     Type
 14422 ;;		None
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;		None
 14425 ;; Return value:  Size  Location     Type
 14426 ;;                  1    wreg      void 
 14427 ;; Registers used:
 14428 ;;		wreg, status,2, status,0, cstack
 14429 ;; Tracked objects:
 14430 ;;		On entry : 0/0
 14431 ;;		On exit  : 0/0
 14432 ;;		Unchanged: 0/0
 14433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14438 ;;Total ram usage:        0 bytes
 14439 ;; Hardware stack levels used:    1
 14440 ;; Hardware stack levels required when called:   13
 14441 ;; This function calls:
 14442 ;;		_updateErrorLEDs
 14443 ;; This function is called by:
 14444 ;;		_ringBufferLUT
 14445 ;; This function uses a non-reentrant model
 14446 ;;
 14447                           
 14448                           	psect	text15
 14449  01CB8A                     __ptext15:
 14450                           	opt callstack 0
 14451  01CB8A                     _clearUARTErrors:
 14452                           	opt callstack 15
 14453                           
 14454                           ;error_handling.c: 88: error_handler.USB_UART_COMM_error_flag = 0;
 14455                           
 14456                           ; BSR set to: 2
 14457                           ;incstack = 0
 14458  01CB8A  0E00               	movlw	0
 14459  01CB8C  0100               	movlb	0	; () banked
 14460  01CB8E  6FC0               	movwf	(_error_handler+7)& (0+255),b
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;error_handling.c: 90: updateErrorLEDs();
 14464  01CB90  EC0B  F0DF         	call	_updateErrorLEDs	;wreg free
 14465  01CB94  0012               	return		;funcret
 14466  01CB96                     __end_of_clearUARTErrors:
 14467                           	opt callstack 0
 14468                           
 14469 ;; *************** function _clearI2CErrors *****************
 14470 ;; Defined at:
 14471 ;;		line 95 in file "error_handling.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;		None
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;		None
 14476 ;; Return value:  Size  Location     Type
 14477 ;;                  1    wreg      void 
 14478 ;; Registers used:
 14479 ;;		wreg, status,2, status,0, cstack
 14480 ;; Tracked objects:
 14481 ;;		On entry : 0/0
 14482 ;;		On exit  : 0/0
 14483 ;;		Unchanged: 0/0
 14484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14489 ;;Total ram usage:        0 bytes
 14490 ;; Hardware stack levels used:    1
 14491 ;; Hardware stack levels required when called:   13
 14492 ;; This function calls:
 14493 ;;		_updateErrorLEDs
 14494 ;; This function is called by:
 14495 ;;		_ringBufferLUT
 14496 ;; This function uses a non-reentrant model
 14497 ;;
 14498                           
 14499                           	psect	text16
 14500  01C870                     __ptext16:
 14501                           	opt callstack 0
 14502  01C870                     _clearI2CErrors:
 14503                           	opt callstack 15
 14504                           
 14505                           ;error_handling.c: 97: error_handler.I2C_Ambient_Temp_Sense_error_flag = 0;
 14506                           
 14507                           ;incstack = 0
 14508  01C870  0E00               	movlw	0
 14509  01C872  0100               	movlb	0	; () banked
 14510  01C874  6FBF               	movwf	(_error_handler+6)& (0+255),b
 14511                           
 14512                           ;error_handling.c: 98: error_handler.I2C_General_error_flag = 0;
 14513  01C876  0E00               	movlw	0
 14514  01C878  6FBB               	movwf	(_error_handler+2)& (0+255),b
 14515                           
 14516                           ;error_handling.c: 99: error_handler.I2C_OLED_error_flag = 0;
 14517  01C87A  0E00               	movlw	0
 14518  01C87C  6FBC               	movwf	(_error_handler+3)& (0+255),b
 14519                           
 14520                           ;error_handling.c: 100: error_handler.I2C_POS5_Temp_Sense_error_flag = 0;
 14521  01C87E  0E00               	movlw	0
 14522  01C880  6FBE               	movwf	(_error_handler+5)& (0+255),b
 14523                           
 14524                           ;error_handling.c: 101: error_handler.I2C_QI_Temp_Sense_error_flag = 0;
 14525  01C882  0E00               	movlw	0
 14526  01C884  6FBD               	movwf	(_error_handler+4)& (0+255),b
 14527                           
 14528                           ; BSR set to: 0
 14529                           ;error_handling.c: 103: updateErrorLEDs();
 14530  01C886  EC0B  F0DF         	call	_updateErrorLEDs	;wreg free
 14531  01C88A  0012               	return		;funcret
 14532  01C88C                     __end_of_clearI2CErrors:
 14533                           	opt callstack 0
 14534                           
 14535 ;; *************** function _clearADCErrors *****************
 14536 ;; Defined at:
 14537 ;;		line 74 in file "error_handling.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;		None
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;		None
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      void 
 14544 ;; Registers used:
 14545 ;;		wreg, status,2, status,0, cstack
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14555 ;;Total ram usage:        0 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; Hardware stack levels required when called:   13
 14558 ;; This function calls:
 14559 ;;		_updateErrorLEDs
 14560 ;; This function is called by:
 14561 ;;		_ringBufferLUT
 14562 ;; This function uses a non-reentrant model
 14563 ;;
 14564                           
 14565                           	psect	text17
 14566  01CA6C                     __ptext17:
 14567                           	opt callstack 0
 14568  01CA6C                     _clearADCErrors:
 14569                           	opt callstack 15
 14570                           
 14571                           ;error_handling.c: 77: error_handler.FVR_ADC_error_flag = 0;
 14572                           
 14573                           ;incstack = 0
 14574  01CA6C  0E00               	movlw	0
 14575  01CA6E  0100               	movlb	0	; () banked
 14576  01CA70  6FB9               	movwf	_error_handler& (0+255),b
 14577                           
 14578                           ;error_handling.c: 78: error_handler.ADC_general_error_flag = 0;
 14579  01CA72  0E00               	movlw	0
 14580  01CA74  6FBA               	movwf	(_error_handler+1)& (0+255),b
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;error_handling.c: 80: updateErrorLEDs();
 14584  01CA76  EC0B  F0DF         	call	_updateErrorLEDs	;wreg free
 14585  01CA7A  0012               	return		;funcret
 14586  01CA7C                     __end_of_clearADCErrors:
 14587                           	opt callstack 0
 14588                           
 14589 ;; *************** function _updateErrorLEDs *****************
 14590 ;; Defined at:
 14591 ;;		line 60 in file "error_handling.c"
 14592 ;; Parameters:    Size  Location     Type
 14593 ;;		None
 14594 ;; Auto vars:     Size  Location     Type
 14595 ;;		None
 14596 ;; Return value:  Size  Location     Type
 14597 ;;                  1    wreg      void 
 14598 ;; Registers used:
 14599 ;;		wreg, status,2, status,0, cstack
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/0
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14607 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14609 ;;Total ram usage:        1 bytes
 14610 ;; Hardware stack levels used:    1
 14611 ;; Hardware stack levels required when called:   12
 14612 ;; This function calls:
 14613 ;;		_getADCError
 14614 ;;		_getI2CError
 14615 ;;		_getUARTError
 14616 ;; This function is called by:
 14617 ;;		_main
 14618 ;;		_clearADCErrors
 14619 ;;		_clearUARTErrors
 14620 ;;		_clearI2CErrors
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text18
 14625  01BE16                     __ptext18:
 14626                           	opt callstack 0
 14627  01BE16                     _updateErrorLEDs:
 14628                           	opt callstack 18
 14629                           
 14630                           ;error_handling.c: 63: LATBbits.LATB7 = getADCError();
 14631                           
 14632                           ;incstack = 0
 14633  01BE16  ECBE  F0E4         	call	_getADCError	;wreg free
 14634  01BE1A  0102               	movlb	2	; () banked
 14635  01BE1C  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14636  01BE1E  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14637  01BE20  3300               	rrcf	??_updateErrorLEDs& (0+255),f,b
 14638  01BE22  5084               	movf	3972,w,c	;volatile
 14639  01BE24  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14640  01BE26  0B7F               	andlw	-129
 14641  01BE28  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14642  01BE2A  6E84               	movwf	3972,c	;volatile
 14643                           
 14644                           ;error_handling.c: 66: LATCbits.LATC5 = getI2CError();
 14645  01BE2C  ECE9  F0E2         	call	_getI2CError	;wreg free
 14646  01BE30  0102               	movlb	2	; () banked
 14647  01BE32  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14648  01BE34  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14649  01BE36  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14650  01BE38  5085               	movf	3973,w,c	;volatile
 14651  01BE3A  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14652  01BE3C  0BDF               	andlw	-33
 14653  01BE3E  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14654  01BE40  6E85               	movwf	3973,c	;volatile
 14655                           
 14656                           ;error_handling.c: 69: LATCbits.LATC6 = getUARTError();
 14657  01BE42  ECFA  F0E5         	call	_getUARTError	;wreg free
 14658  01BE46  0102               	movlb	2	; () banked
 14659  01BE48  6F00               	movwf	??_updateErrorLEDs& (0+255),b
 14660  01BE4A  3B00               	swapf	??_updateErrorLEDs& (0+255),f,b
 14661  01BE4C  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14662  01BE4E  4700               	rlncf	??_updateErrorLEDs& (0+255),f,b
 14663  01BE50  5085               	movf	3973,w,c	;volatile
 14664  01BE52  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14665  01BE54  0BBF               	andlw	-65
 14666  01BE56  1900               	xorwf	??_updateErrorLEDs& (0+255),w,b
 14667  01BE58  6E85               	movwf	3973,c	;volatile
 14668                           
 14669                           ; BSR set to: 2
 14670  01BE5A  0012               	return		;funcret
 14671  01BE5C                     __end_of_updateErrorLEDs:
 14672                           	opt callstack 0
 14673                           
 14674 ;; *************** function _getUARTError *****************
 14675 ;; Defined at:
 14676 ;;		line 31 in file "error_handling.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;		None
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;		None
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  1    wreg      unsigned char 
 14683 ;; Registers used:
 14684 ;;		wreg, status,2
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/0
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14694 ;;Total ram usage:        0 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:   11
 14697 ;; This function calls:
 14698 ;;		Nothing
 14699 ;; This function is called by:
 14700 ;;		_updateErrorLEDs
 14701 ;;		_printErrorHandlerStatus
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           	psect	text19
 14706  01CBF4                     __ptext19:
 14707                           	opt callstack 0
 14708  01CBF4                     _getUARTError:
 14709                           	opt callstack 18
 14710                           
 14711                           ;error_handling.c: 33: return error_handler.USB_UART_COMM_error_flag;
 14712                           
 14713                           ; BSR set to: 2
 14714                           ;incstack = 0
 14715  01CBF4  0100               	movlb	0	; () banked
 14716  01CBF6  51C0               	movf	(_error_handler+7)& (0+255),w,b
 14717                           
 14718                           ; BSR set to: 0
 14719  01CBF8  0012               	return		;funcret
 14720  01CBFA                     __end_of_getUARTError:
 14721                           	opt callstack 0
 14722                           
 14723 ;; *************** function _getI2CError *****************
 14724 ;; Defined at:
 14725 ;;		line 38 in file "error_handling.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;		None
 14728 ;; Auto vars:     Size  Location     Type
 14729 ;;		None
 14730 ;; Return value:  Size  Location     Type
 14731 ;;                  1    wreg      unsigned char 
 14732 ;; Registers used:
 14733 ;;		wreg, status,2
 14734 ;; Tracked objects:
 14735 ;;		On entry : 0/0
 14736 ;;		On exit  : 0/0
 14737 ;;		Unchanged: 0/0
 14738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;Total ram usage:        0 bytes
 14744 ;; Hardware stack levels used:    1
 14745 ;; Hardware stack levels required when called:   11
 14746 ;; This function calls:
 14747 ;;		Nothing
 14748 ;; This function is called by:
 14749 ;;		_updateErrorLEDs
 14750 ;;		_printErrorHandlerStatus
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754                           	psect	text20
 14755  01C5D2                     __ptext20:
 14756                           	opt callstack 0
 14757  01C5D2                     _getI2CError:
 14758                           	opt callstack 18
 14759                           
 14760                           ;error_handling.c: 41: if ( error_handler.I2C_General_error_flag ||;error_handling.c: 42
      +                          : error_handler.I2C_Ambient_Temp_Sense_error_flag ||;error_handling.c: 43: error_handler
      +                          .I2C_OLED_error_flag ||;error_handling.c: 44: error_handler.I2C_POS5_Temp_Sense_error_fl
      +                          ag ||;error_handling.c: 45: error_handler.I2C_QI_Temp_Sense_error_flag ) {
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;incstack = 0
 14764  01C5D2  0100               	movlb	0	; () banked
 14765  01C5D4  51BB               	movf	(_error_handler+2)& (0+255),w,b
 14766  01C5D6  A4D8               	btfss	status,2,c
 14767  01C5D8  D00C               	goto	u23330
 14768                           
 14769                           ; BSR set to: 0
 14770  01C5DA  51BF               	movf	(_error_handler+6)& (0+255),w,b
 14771  01C5DC  A4D8               	btfss	status,2,c
 14772  01C5DE  D009               	goto	u23330
 14773                           
 14774                           ; BSR set to: 0
 14775  01C5E0  51BC               	movf	(_error_handler+3)& (0+255),w,b
 14776  01C5E2  A4D8               	btfss	status,2,c
 14777  01C5E4  D006               	goto	u23330
 14778                           
 14779                           ; BSR set to: 0
 14780  01C5E6  51BE               	movf	(_error_handler+5)& (0+255),w,b
 14781  01C5E8  A4D8               	btfss	status,2,c
 14782  01C5EA  D003               	goto	u23330
 14783                           
 14784                           ; BSR set to: 0
 14785  01C5EC  51BD               	movf	(_error_handler+4)& (0+255),w,b
 14786  01C5EE  B4D8               	btfsc	status,2,c
 14787  01C5F0  D002               	goto	l18626
 14788  01C5F2                     u23330:
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;error_handling.c: 47: return 1;
 14792  01C5F2  0E01               	movlw	1
 14793  01C5F4  0012               	return	
 14794  01C5F6                     l18626:
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;error_handling.c: 51: else {;error_handling.c: 53: return 0;
 14798  01C5F6  0E00               	movlw	0
 14799                           
 14800                           ; BSR set to: 0
 14801  01C5F8  0012               	return		;funcret
 14802  01C5FA                     __end_of_getI2CError:
 14803                           	opt callstack 0
 14804                           
 14805 ;; *************** function _getADCError *****************
 14806 ;; Defined at:
 14807 ;;		line 12 in file "error_handling.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;		None
 14810 ;; Auto vars:     Size  Location     Type
 14811 ;;		None
 14812 ;; Return value:  Size  Location     Type
 14813 ;;                  1    wreg      unsigned char 
 14814 ;; Registers used:
 14815 ;;		wreg, status,2
 14816 ;; Tracked objects:
 14817 ;;		On entry : 0/0
 14818 ;;		On exit  : 0/0
 14819 ;;		Unchanged: 0/0
 14820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;Total ram usage:        0 bytes
 14826 ;; Hardware stack levels used:    1
 14827 ;; Hardware stack levels required when called:   11
 14828 ;; This function calls:
 14829 ;;		Nothing
 14830 ;; This function is called by:
 14831 ;;		_updateErrorLEDs
 14832 ;;		_printErrorHandlerStatus
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text21
 14837  01C97C                     __ptext21:
 14838                           	opt callstack 0
 14839  01C97C                     _getADCError:
 14840                           	opt callstack 18
 14841                           
 14842                           ;error_handling.c: 15: if ( error_handler.ADC_general_error_flag ||;error_handling.c: 16
      +                          : error_handler.FVR_ADC_error_flag ) {
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;incstack = 0
 14846  01C97C  0100               	movlb	0	; () banked
 14847  01C97E  51BA               	movf	(_error_handler+1)& (0+255),w,b
 14848  01C980  A4D8               	btfss	status,2,c
 14849  01C982  D003               	goto	u23280
 14850                           
 14851                           ; BSR set to: 0
 14852  01C984  51B9               	movf	_error_handler& (0+255),w,b
 14853  01C986  B4D8               	btfsc	status,2,c
 14854  01C988  D002               	goto	l18602
 14855  01C98A                     u23280:
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;error_handling.c: 18: return 1;
 14859  01C98A  0E01               	movlw	1
 14860  01C98C  0012               	return	
 14861  01C98E                     l18602:
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;error_handling.c: 22: else {;error_handling.c: 24: return 0;
 14865  01C98E  0E00               	movlw	0
 14866                           
 14867                           ; BSR set to: 0
 14868  01C990  0012               	return		;funcret
 14869  01C992                     __end_of_getADCError:
 14870                           	opt callstack 0
 14871                           
 14872 ;; *************** function _EUSART2_Read *****************
 14873 ;; Defined at:
 14874 ;;		line 132 in file "mcc_generated_files/eusart2.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;		None
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;  readValue       1    0[BANK2 ] unsigned char 
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      unsigned char 
 14881 ;; Registers used:
 14882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14883 ;; Tracked objects:
 14884 ;;		On entry : 0/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14889 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14891 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14892 ;;Total ram usage:        1 bytes
 14893 ;; Hardware stack levels used:    1
 14894 ;; Hardware stack levels required when called:   11
 14895 ;; This function calls:
 14896 ;;		Nothing
 14897 ;; This function is called by:
 14898 ;;		_terminal_ringBufferPull
 14899 ;;		_getch
 14900 ;; This function uses a non-reentrant model
 14901 ;;
 14902                           
 14903                           	psect	text22
 14904  01C0B8                     __ptext22:
 14905                           	opt callstack 0
 14906  01C0B8                     _EUSART2_Read:
 14907                           	opt callstack 18
 14908                           
 14909                           ;eusart2.c: 136: while(0 == eusart2RxCount)
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;incstack = 0
 14913  01C0B8  D001               	goto	l20842
 14914  01C0BA                     l115:
 14915                           
 14916                           ; BSR set to: 1
 14917  01C0BA  0004               	clrwdt		;# 
 14918  01C0BC                     l20842:
 14919  01C0BC  0101               	movlb	1	; () banked
 14920  01C0BE  5191               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14921  01C0C0  B4D8               	btfsc	status,2,c
 14922  01C0C2  D7FB               	goto	l115
 14923                           
 14924                           ; BSR set to: 1
 14925                           ;eusart2.c: 139: };eusart2.c: 141: readValue = eusart2RxBuffer[eusart2RxTail++];
 14926  01C0C4  0E80               	movlw	low _eusart2RxBuffer
 14927  01C0C6  2592               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 14928  01C0C8  6ED9               	movwf	fsr2l,c
 14929  01C0CA  6ADA               	clrf	fsr2h,c
 14930  01C0CC  0E04               	movlw	high _eusart2RxBuffer
 14931  01C0CE  22DA               	addwfc	fsr2h,f,c
 14932  01C0D0  50DF               	movf	indf2,w,c
 14933  01C0D2  0102               	movlb	2	; () banked
 14934  01C0D4  6F00               	movwf	EUSART2_Read@readValue& (0+255),b
 14935                           
 14936                           ; BSR set to: 2
 14937  01C0D6  0101               	movlb	1	; () banked
 14938  01C0D8  2B92               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 14939                           
 14940                           ; BSR set to: 1
 14941                           ;eusart2.c: 142: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 14942  01C0DA  0E3F               	movlw	63
 14943  01C0DC  6592               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 14944  01C0DE  D002               	goto	l20852
 14945                           
 14946                           ; BSR set to: 1
 14947                           ;eusart2.c: 143: {;eusart2.c: 144: eusart2RxTail = 0;
 14948  01C0E0  0E00               	movlw	0
 14949  01C0E2  6F92               	movwf	_eusart2RxTail& (0+255),b	;volatile
 14950  01C0E4                     l20852:
 14951                           
 14952                           ; BSR set to: 1
 14953                           ;eusart2.c: 145: };eusart2.c: 146: PIE3bits.RC2IE = 0;
 14954  01C0E4  010E               	movlb	14	; () banked
 14955  01C0E6  9FC5               	bcf	197,7,b	;volatile
 14956                           
 14957                           ; BSR set to: 14
 14958                           ;eusart2.c: 147: eusart2RxCount--;
 14959  01C0E8  0101               	movlb	1	; () banked
 14960  01C0EA  0791               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 14961                           
 14962                           ; BSR set to: 1
 14963                           ;eusart2.c: 148: PIE3bits.RC2IE = 1;
 14964  01C0EC  010E               	movlb	14	; () banked
 14965  01C0EE  8FC5               	bsf	197,7,b	;volatile
 14966                           
 14967                           ; BSR set to: 14
 14968                           ;eusart2.c: 150: return readValue;
 14969  01C0F0  0102               	movlb	2	; () banked
 14970  01C0F2  5100               	movf	EUSART2_Read@readValue& (0+255),w,b
 14971                           
 14972                           ; BSR set to: 2
 14973  01C0F4  0012               	return		;funcret
 14974  01C0F6                     __end_of_EUSART2_Read:
 14975                           	opt callstack 0
 14976                           
 14977 ;; *************** function _terminalSetCursorHome *****************
 14978 ;; Defined at:
 14979 ;;		line 17 in file "terminal_control.c"
 14980 ;; Parameters:    Size  Location     Type
 14981 ;;		None
 14982 ;; Auto vars:     Size  Location     Type
 14983 ;;		None
 14984 ;; Return value:  Size  Location     Type
 14985 ;;                  1    wreg      void 
 14986 ;; Registers used:
 14987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14988 ;; Tracked objects:
 14989 ;;		On entry : 0/0
 14990 ;;		On exit  : 0/0
 14991 ;;		Unchanged: 0/0
 14992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14997 ;;Total ram usage:        0 bytes
 14998 ;; Hardware stack levels used:    1
 14999 ;; Hardware stack levels required when called:   15
 15000 ;; This function calls:
 15001 ;;		_printf
 15002 ;; This function is called by:
 15003 ;;		_main
 15004 ;;		_terminalPrintTestMessage
 15005 ;; This function uses a non-reentrant model
 15006 ;;
 15007                           
 15008                           	psect	text23
 15009  01CA7C                     __ptext23:
 15010                           	opt callstack 0
 15011  01CA7C                     _terminalSetCursorHome:
 15012                           	opt callstack 15
 15013                           
 15014                           ;terminal_control.c: 18: printf("\033[H");
 15015                           
 15016                           ; BSR set to: 2
 15017                           ;incstack = 0
 15018  01CA7C  0EBB               	movlw	low STR_193
 15019  01CA7E  0103               	movlb	3	; () banked
 15020  01CA80  6FEB               	movwf	printf@f& (0+255),b
 15021  01CA82  0EFF               	movlw	high STR_193
 15022  01CA84  6FEC               	movwf	(printf@f+1)& (0+255),b
 15023  01CA86  EC7B  F0E0         	call	_printf	;wreg free
 15024  01CA8A  0012               	return		;funcret
 15025  01CA8C                     __end_of_terminalSetCursorHome:
 15026                           	opt callstack 0
 15027                           
 15028 ;; *************** function _terminalClearScreen *****************
 15029 ;; Defined at:
 15030 ;;		line 12 in file "terminal_control.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;		None
 15033 ;; Auto vars:     Size  Location     Type
 15034 ;;		None
 15035 ;; Return value:  Size  Location     Type
 15036 ;;                  1    wreg      void 
 15037 ;; Registers used:
 15038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15039 ;; Tracked objects:
 15040 ;;		On entry : 0/0
 15041 ;;		On exit  : 0/0
 15042 ;;		Unchanged: 0/0
 15043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15048 ;;Total ram usage:        0 bytes
 15049 ;; Hardware stack levels used:    1
 15050 ;; Hardware stack levels required when called:   15
 15051 ;; This function calls:
 15052 ;;		_printf
 15053 ;; This function is called by:
 15054 ;;		_main
 15055 ;;		_terminalPrintTestMessage
 15056 ;; This function uses a non-reentrant model
 15057 ;;
 15058                           
 15059                           	psect	text24
 15060  01CA8C                     __ptext24:
 15061                           	opt callstack 0
 15062  01CA8C                     _terminalClearScreen:
 15063                           	opt callstack 15
 15064                           
 15065                           ;terminal_control.c: 13: printf("\033[2J");
 15066                           
 15067                           ;incstack = 0
 15068  01CA8C  0E95               	movlw	low STR_192
 15069  01CA8E  0103               	movlb	3	; () banked
 15070  01CA90  6FEB               	movwf	printf@f& (0+255),b
 15071  01CA92  0EFF               	movlw	high STR_192
 15072  01CA94  6FEC               	movwf	(printf@f+1)& (0+255),b
 15073  01CA96  EC7B  F0E0         	call	_printf	;wreg free
 15074  01CA9A  0012               	return		;funcret
 15075  01CA9C                     __end_of_terminalClearScreen:
 15076                           	opt callstack 0
 15077                           
 15078 ;; *************** function _printf *****************
 15079 ;; Defined at:
 15080 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 15081 ;; Parameters:    Size  Location     Type
 15082 ;;  f               2   26[BANK3 ] PTR const unsigned char 
 15083 ;;		 -> STR_362(60), STR_361(24), STR_360(24), STR_359(24), 
 15084 ;;		 -> STR_358(27), STR_357(20), STR_356(35), STR_355(34), 
 15085 ;;		 -> STR_354(37), STR_353(34), STR_352(36), STR_351(35), 
 15086 ;;		 -> STR_350(33), STR_349(35), STR_348(20), STR_347(23), 
 15087 ;;		 -> STR_346(20), STR_345(22), STR_344(21), STR_343(19), 
 15088 ;;		 -> STR_342(21), STR_341(27), STR_340(18), STR_339(11), 
 15089 ;;		 -> terminalTextAttributes@print_string(16), STR_309(4), STR_308(4), STR_307(4), 
 15090 ;;		 -> STR_306(4), STR_305(5), STR_297(3), STR_296(39), 
 15091 ;;		 -> STR_295(96), STR_294(62), STR_293(34), STR_292(3), 
 15092 ;;		 -> STR_291(50), STR_290(56), STR_289(55), STR_288(27), 
 15093 ;;		 -> STR_287(3), STR_286(58), STR_285(40), STR_284(63), 
 15094 ;;		 -> STR_283(42), STR_282(36), STR_281(3), STR_280(61), 
 15095 ;;		 -> STR_279(3), STR_278(59), STR_277(3), STR_276(45), 
 15096 ;;		 -> STR_275(3), STR_274(58), STR_273(59), STR_272(20), 
 15097 ;;		 -> STR_271(3), STR_270(54), STR_269(52), STR_268(23), 
 15098 ;;		 -> STR_267(3), STR_266(43), STR_265(44), STR_264(23), 
 15099 ;;		 -> STR_263(48), STR_262(3), STR_261(50), STR_260(58), 
 15100 ;;		 -> STR_259(35), STR_258(32), STR_257(64), STR_256(30), 
 15101 ;;		 -> STR_255(31), STR_254(63), STR_253(33), STR_252(35), 
 15102 ;;		 -> STR_251(37), STR_250(40), STR_249(28), STR_248(46), 
 15103 ;;		 -> STR_247(31), STR_246(52), STR_245(14), STR_244(28), 
 15104 ;;		 -> STR_243(50), STR_242(29), STR_241(36), STR_240(45), 
 15105 ;;		 -> STR_239(88), STR_238(37), STR_237(3), STR_236(30), 
 15106 ;;		 -> STR_235(46), STR_234(39), STR_233(62), STR_232(57), 
 15107 ;;		 -> STR_231(653), STR_230(22), STR_229(3), STR_227(29), 
 15108 ;;		 -> STR_225(3), STR_224(47), STR_223(3), STR_220(24), 
 15109 ;;		 -> STR_218(23), STR_216(23), STR_214(3), STR_213(3), 
 15110 ;;		 -> STR_212(54), STR_211(3), STR_210(56), STR_209(3), 
 15111 ;;		 -> STR_208(60), STR_207(61), STR_206(3), STR_205(62), 
 15112 ;;		 -> STR_204(3), STR_203(50), STR_202(3), STR_201(45), 
 15113 ;;		 -> STR_200(3), STR_198(54), STR_196(4), STR_195(5), 
 15114 ;;		 -> STR_193(4), STR_192(5), STR_12(26), STR_11(23), 
 15115 ;;		 -> STR_10(47), STR_9(30), STR_8(46), STR_7(39), 
 15116 ;;		 -> STR_6(62), STR_5(57), STR_4(39), STR_3(44), 
 15117 ;;		 -> STR_2(52), STR_1(4), 
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  pb              5   36[BANK3 ] struct __prbuf
 15120 ;;  ap              2   34[BANK3 ] PTR void [1]
 15121 ;;		 -> ?_sprintf(2), ?_printf(2), 
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  2   26[BANK3 ] int 
 15124 ;; Registers used:
 15125 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15131 ;;      Params:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;      Totals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;Total ram usage:       15 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:   14
 15138 ;; This function calls:
 15139 ;;		__doprnt
 15140 ;; This function is called by:
 15141 ;;		_main
 15142 ;;		_ringBufferLUT
 15143 ;;		_printErrorHandlerStatus
 15144 ;;		_printCurrentMeasurements
 15145 ;;		_terminalClearScreen
 15146 ;;		_terminalSetCursorHome
 15147 ;;		_terminalTextAttributes
 15148 ;;		_terminalTextAttributesReset
 15149 ;;		_terminalClearLine
 15150 ;;		_terminalSaveCursor
 15151 ;;		_terminalReturnCursor
 15152 ;;		_terminalPrintTestMessage
 15153 ;; This function uses a non-reentrant model
 15154 ;;
 15155                           
 15156                           	psect	text25
 15157  01C0F6                     __ptext25:
 15158                           	opt callstack 0
 15159  01C0F6                     _printf:
 15160                           	opt callstack 13
 15161                           
 15162                           ;incstack = 0
 15163  01C0F6  0E00               	movlw	0
 15164  01C0F8  0103               	movlb	3	; () banked
 15165  01C0FA  6FF5               	movwf	printf@pb& (0+255),b
 15166  01C0FC  0E00               	movlw	0
 15167  01C0FE  6FF6               	movwf	(printf@pb+1)& (0+255),b
 15168  01C100  0ED4               	movlw	low _putch
 15169  01C102  6FF7               	movwf	(printf@pb+2)& (0+255),b
 15170  01C104  0EC9               	movlw	high _putch
 15171  01C106  6FF8               	movwf	(printf@pb+3)& (0+255),b
 15172  01C108  0E01               	movlw	low (_putch shr (0+16))
 15173  01C10A  6FF9               	movwf	(printf@pb+4)& (0+255),b
 15174  01C10C  0EED               	movlw	low (?_printf+2)
 15175  01C10E  6FF3               	movwf	printf@ap& (0+255),b
 15176  01C110  0E03               	movlw	high (?_printf+2)
 15177  01C112  6FF4               	movwf	(printf@ap+1)& (0+255),b
 15178                           
 15179                           ; BSR set to: 3
 15180                           ;	Return value of _printf is never used
 15181  01C114  0EF5               	movlw	low printf@pb
 15182  01C116  0102               	movlb	2	; () banked
 15183  01C118  6F58               	movwf	__doprnt@pb& (0+255),b
 15184  01C11A  0E03               	movlw	high printf@pb
 15185  01C11C  6F59               	movwf	(__doprnt@pb+1)& (0+255),b
 15186  01C11E  C3EB  F25A         	movff	printf@f,__doprnt@f
 15187  01C122  C3EC  F25B         	movff	printf@f+1,__doprnt@f+1
 15188  01C126  0EF3               	movlw	low printf@ap
 15189  01C128  6F5C               	movwf	__doprnt@ap& (0+255),b
 15190  01C12A  0E03               	movlw	high printf@ap
 15191  01C12C  6F5D               	movwf	(__doprnt@ap+1)& (0+255),b
 15192  01C12E  EC00  F080         	call	__doprnt	;wreg free
 15193  01C132  0012               	return		;funcret
 15194  01C134                     __end_of_printf:
 15195                           	opt callstack 0
 15196                           
 15197 ;; *************** function _getCauseOfReset *****************
 15198 ;; Defined at:
 15199 ;;		line 11 in file "cause_of_reset.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;		None
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;  return_reset    1    0[BANK2 ] enum E9577
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      enum E10205
 15206 ;; Registers used:
 15207 ;;		wreg, status,2
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15214 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15216 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15217 ;;Total ram usage:        1 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; Hardware stack levels required when called:   11
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_main
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           	psect	text26
 15228  01B9BC                     __ptext26:
 15229                           	opt callstack 0
 15230  01B9BC                     _getCauseOfReset:
 15231                           	opt callstack 19
 15232                           
 15233                           ;cause_of_reset.c: 13: reset_t return_reset_cause;;cause_of_reset.c: 18: if (PCON0bits.S
      +                          TKOVF == 1) {
 15234                           
 15235                           ;incstack = 0
 15236  01B9BC  AED7               	btfss	4055,7,c	;volatile
 15237  01B9BE  D002               	goto	l1633
 15238                           
 15239                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 15240  01B9C0  0E07               	movlw	7
 15241  01B9C2  D01D               	goto	L2
 15242  01B9C4                     l1633:
 15243                           
 15244                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 15245  01B9C4  ACD7               	btfss	4055,6,c	;volatile
 15246  01B9C6  D002               	goto	l1635
 15247                           
 15248                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 15249  01B9C8  0E08               	movlw	8
 15250  01B9CA  D019               	goto	L2
 15251  01B9CC                     l1635:
 15252                           
 15253                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 15254  01B9CC  BAD7               	btfsc	4055,5,c	;volatile
 15255  01B9CE  D002               	goto	l1637
 15256                           
 15257                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 15258  01B9D0  0E05               	movlw	5
 15259  01B9D2  D015               	goto	L2
 15260  01B9D4                     l1637:
 15261                           
 15262                           ;cause_of_reset.c: 36: else if (PCON0bits.nRWDT == 0) {
 15263  01B9D4  B8D7               	btfsc	4055,4,c	;volatile
 15264  01B9D6  D002               	goto	l1639
 15265                           
 15266                           ;cause_of_reset.c: 38: return_reset_cause = Watch_Dog_Timer_Reset;
 15267  01B9D8  0E04               	movlw	4
 15268  01B9DA  D011               	goto	L2
 15269  01B9DC                     l1639:
 15270                           
 15271                           ;cause_of_reset.c: 42: else if (PCON0bits.nRMCLR == 0) {
 15272  01B9DC  B6D7               	btfsc	4055,3,c	;volatile
 15273  01B9DE  D002               	goto	l1641
 15274                           
 15275                           ;cause_of_reset.c: 44: return_reset_cause = Master_Clear_Reset;
 15276  01B9E0  0E03               	movlw	3
 15277  01B9E2  D00D               	goto	L2
 15278  01B9E4                     l1641:
 15279                           
 15280                           ;cause_of_reset.c: 48: else if (PCON0bits.nRI == 0) {
 15281  01B9E4  B4D7               	btfsc	4055,2,c	;volatile
 15282  01B9E6  D002               	goto	l1643
 15283                           
 15284                           ;cause_of_reset.c: 50: return_reset_cause = RESET_Instruction_Executed;
 15285  01B9E8  0E06               	movlw	6
 15286  01B9EA  D009               	goto	L2
 15287  01B9EC                     l1643:
 15288                           
 15289                           ;cause_of_reset.c: 54: else if (PCON0bits.nPOR == 0) {
 15290  01B9EC  B2D7               	btfsc	4055,1,c	;volatile
 15291  01B9EE  D002               	goto	l1645
 15292                           
 15293                           ;cause_of_reset.c: 56: return_reset_cause = Power_On_Reset;
 15294  01B9F0  0E01               	movlw	1
 15295  01B9F2  D005               	goto	L2
 15296  01B9F4                     l1645:
 15297                           
 15298                           ;cause_of_reset.c: 60: else if (PCON0bits.nBOR == 0) {
 15299  01B9F4  B0D7               	btfsc	4055,0,c	;volatile
 15300  01B9F6  D002               	goto	l21754
 15301                           
 15302                           ;cause_of_reset.c: 62: return_reset_cause = Brown_Out_Reset;
 15303  01B9F8  0E02               	movlw	2
 15304  01B9FA  D001               	goto	L2
 15305  01B9FC                     l21754:
 15306                           
 15307                           ;cause_of_reset.c: 66: else {;cause_of_reset.c: 68: return_reset_cause = Undefined_Reset
      +                          ;
 15308  01B9FC  0E00               	movlw	0
 15309  01B9FE                     L2:
 15310  01B9FE  0102               	movlb	2	; () banked
 15311  01BA00  6F00               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 15312                           
 15313                           ; BSR set to: 2
 15314                           ;cause_of_reset.c: 70: };cause_of_reset.c: 73: PCON0bits.STKOVF = 0;
 15315  01BA02  9ED7               	bcf	4055,7,c	;volatile
 15316                           
 15317                           ; BSR set to: 2
 15318                           ;cause_of_reset.c: 74: PCON0bits.STKUNF = 0;
 15319  01BA04  9CD7               	bcf	4055,6,c	;volatile
 15320                           
 15321                           ; BSR set to: 2
 15322                           ;cause_of_reset.c: 75: PCON0bits.nWDTWV = 1;
 15323  01BA06  8AD7               	bsf	4055,5,c	;volatile
 15324                           
 15325                           ; BSR set to: 2
 15326                           ;cause_of_reset.c: 76: PCON0bits.nRWDT = 1;
 15327  01BA08  88D7               	bsf	4055,4,c	;volatile
 15328                           
 15329                           ; BSR set to: 2
 15330                           ;cause_of_reset.c: 77: PCON0bits.nRMCLR = 1;
 15331  01BA0A  86D7               	bsf	4055,3,c	;volatile
 15332                           
 15333                           ; BSR set to: 2
 15334                           ;cause_of_reset.c: 78: PCON0bits.nRI = 1;
 15335  01BA0C  84D7               	bsf	4055,2,c	;volatile
 15336                           
 15337                           ; BSR set to: 2
 15338                           ;cause_of_reset.c: 79: PCON0bits.nPOR = 1;
 15339  01BA0E  82D7               	bsf	4055,1,c	;volatile
 15340                           
 15341                           ; BSR set to: 2
 15342                           ;cause_of_reset.c: 80: PCON0bits.nBOR = 1;
 15343  01BA10  80D7               	bsf	4055,0,c	;volatile
 15344                           
 15345                           ;cause_of_reset.c: 82: return return_reset_cause;
 15346  01BA12  5100               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 15347                           
 15348                           ; BSR set to: 2
 15349  01BA14  0012               	return		;funcret
 15350  01BA16                     __end_of_getCauseOfReset:
 15351                           	opt callstack 0
 15352                           
 15353 ;; *************** function _freqMeasStartCaptures *****************
 15354 ;; Defined at:
 15355 ;;		line 5 in file "freq_meas.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;		None
 15358 ;; Auto vars:     Size  Location     Type
 15359 ;;		None
 15360 ;; Return value:  Size  Location     Type
 15361 ;;                  1    wreg      void 
 15362 ;; Registers used:
 15363 ;;		wreg, status,2
 15364 ;; Tracked objects:
 15365 ;;		On entry : 0/0
 15366 ;;		On exit  : 0/0
 15367 ;;		Unchanged: 0/0
 15368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15373 ;;Total ram usage:        0 bytes
 15374 ;; Hardware stack levels used:    1
 15375 ;; Hardware stack levels required when called:   11
 15376 ;; This function calls:
 15377 ;;		Nothing
 15378 ;; This function is called by:
 15379 ;;		_main
 15380 ;; This function uses a non-reentrant model
 15381 ;;
 15382                           
 15383                           	psect	text27
 15384  01CBBA                     __ptext27:
 15385                           	opt callstack 0
 15386  01CBBA                     _freqMeasStartCaptures:
 15387                           	opt callstack 19
 15388                           
 15389                           ;freq_meas.c: 8: CCP2CONbits.EN = 1;
 15390                           
 15391                           ; BSR set to: 2
 15392                           ;incstack = 0
 15393  01CBBA  8EA8               	bsf	4008,7,c	;volatile
 15394                           
 15395                           ;freq_meas.c: 11: freq_meas_start_flag = 0;
 15396  01CBBC  0E00               	movlw	0
 15397  01CBBE  0102               	movlb	2	; () banked
 15398  01CBC0  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 15399                           
 15400                           ; BSR set to: 2
 15401  01CBC2  0012               	return		;funcret
 15402  01CBC4                     __end_of_freqMeasStartCaptures:
 15403                           	opt callstack 0
 15404                           
 15405 ;; *************** function _TMR5_WriteTimer *****************
 15406 ;; Defined at:
 15407 ;;		line 120 in file "mcc_generated_files/tmr5.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15410 ;; Auto vars:     Size  Location     Type
 15411 ;;		None
 15412 ;; Return value:  Size  Location     Type
 15413 ;;                  1    wreg      void 
 15414 ;; Registers used:
 15415 ;;		wreg, status,2
 15416 ;; Tracked objects:
 15417 ;;		On entry : 0/0
 15418 ;;		On exit  : 0/0
 15419 ;;		Unchanged: 0/0
 15420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15421 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15424 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15425 ;;Total ram usage:        2 bytes
 15426 ;; Hardware stack levels used:    1
 15427 ;; Hardware stack levels required when called:   11
 15428 ;; This function calls:
 15429 ;;		Nothing
 15430 ;; This function is called by:
 15431 ;;		_main
 15432 ;;		_TMR5_Reload
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436                           	psect	text28
 15437  01C772                     __ptext28:
 15438                           	opt callstack 0
 15439  01C772                     _TMR5_WriteTimer:
 15440                           	opt callstack 19
 15441                           
 15442                           ;tmr5.c: 122: if (T5CONbits.nT5SYNC == 1)
 15443                           
 15444                           ; BSR set to: 2
 15445                           ;incstack = 0
 15446  01C772  A4C3               	btfss	4035,2,c	;volatile
 15447  01C774  D008               	goto	l21728
 15448                           
 15449                           ;tmr5.c: 123: {;tmr5.c: 125: T5CONbits.TMR5ON = 0;
 15450  01C776  90C3               	bcf	4035,0,c	;volatile
 15451                           
 15452                           ;tmr5.c: 128: TMR5H = (timerVal >> 8);
 15453  01C778  0102               	movlb	2	; () banked
 15454  01C77A  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15455  01C77C  6EC2               	movwf	4034,c	;volatile
 15456                           
 15457                           ; BSR set to: 2
 15458                           ;tmr5.c: 129: TMR5L = timerVal;
 15459  01C77E  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15460                           
 15461                           ; BSR set to: 2
 15462                           ;tmr5.c: 132: T5CONbits.TMR5ON =1;
 15463  01C782  80C3               	bsf	4035,0,c	;volatile
 15464                           
 15465                           ;tmr5.c: 133: }
 15466  01C784  0012               	return	
 15467  01C786                     l21728:
 15468                           
 15469                           ;tmr5.c: 134: else;tmr5.c: 135: {;tmr5.c: 137: TMR5H = (timerVal >> 8);
 15470  01C786  0102               	movlb	2	; () banked
 15471  01C788  5101               	movf	(TMR5_WriteTimer@timerVal+1)& (0+255),w,b
 15472  01C78A  6EC2               	movwf	4034,c	;volatile
 15473                           
 15474                           ; BSR set to: 2
 15475                           ;tmr5.c: 138: TMR5L = timerVal;
 15476  01C78C  C200  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 15477                           
 15478                           ; BSR set to: 2
 15479  01C790  0012               	return		;funcret
 15480  01C792                     __end_of_TMR5_WriteTimer:
 15481                           	opt callstack 0
 15482                           
 15483 ;; *************** function _TMR5_StopTimer *****************
 15484 ;; Defined at:
 15485 ;;		line 98 in file "mcc_generated_files/tmr5.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;		None
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;		None
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  1    wreg      void 
 15492 ;; Registers used:
 15493 ;;		None
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15503 ;;Total ram usage:        0 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:   11
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_main
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text29
 15514  01CC0C                     __ptext29:
 15515                           	opt callstack 0
 15516  01CC0C                     _TMR5_StopTimer:
 15517                           	opt callstack 19
 15518                           
 15519                           ;tmr5.c: 101: T5CONbits.TMR5ON = 0;
 15520                           
 15521                           ; BSR set to: 2
 15522                           ;incstack = 0
 15523  01CC0C  90C3               	bcf	4035,0,c	;volatile
 15524  01CC0E  0012               	return		;funcret
 15525  01CC10                     __end_of_TMR5_StopTimer:
 15526                           	opt callstack 0
 15527                           
 15528 ;; *************** function _TMR3_StopTimer *****************
 15529 ;; Defined at:
 15530 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 15531 ;; Parameters:    Size  Location     Type
 15532 ;;		None
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		None
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15548 ;;Total ram usage:        0 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:   11
 15551 ;; This function calls:
 15552 ;;		Nothing
 15553 ;; This function is called by:
 15554 ;;		_main
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           	psect	text30
 15559  01CC10                     __ptext30:
 15560                           	opt callstack 0
 15561  01CC10                     _TMR3_StopTimer:
 15562                           	opt callstack 19
 15563                           
 15564                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 15565                           
 15566                           ;incstack = 0
 15567  01CC10  90C9               	bcf	4041,0,c	;volatile
 15568  01CC12  0012               	return		;funcret
 15569  01CC14                     __end_of_TMR3_StopTimer:
 15570                           	opt callstack 0
 15571                           
 15572 ;; *************** function _TMR3_Reload *****************
 15573 ;; Defined at:
 15574 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 15575 ;; Parameters:    Size  Location     Type
 15576 ;;		None
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;		None
 15579 ;; Return value:  Size  Location     Type
 15580 ;;                  1    wreg      void 
 15581 ;; Registers used:
 15582 ;;		wreg, status,2, cstack
 15583 ;; Tracked objects:
 15584 ;;		On entry : 0/0
 15585 ;;		On exit  : 0/0
 15586 ;;		Unchanged: 0/0
 15587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15592 ;;Total ram usage:        0 bytes
 15593 ;; Hardware stack levels used:    1
 15594 ;; Hardware stack levels required when called:   12
 15595 ;; This function calls:
 15596 ;;		_TMR3_WriteTimer
 15597 ;; This function is called by:
 15598 ;;		_main
 15599 ;; This function uses a non-reentrant model
 15600 ;;
 15601                           
 15602                           	psect	text31
 15603  01CA9C                     __ptext31:
 15604                           	opt callstack 0
 15605  01CA9C                     _TMR3_Reload:
 15606                           	opt callstack 18
 15607                           
 15608                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 15609                           
 15610                           ;incstack = 0
 15611  01CA9C  C18D  F200         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 15612  01CAA0  C18E  F201         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 15613  01CAA4  ECC9  F0E3         	call	_TMR3_WriteTimer	;wreg free
 15614  01CAA8  0012               	return		;funcret
 15615  01CAAA                     __end_of_TMR3_Reload:
 15616                           	opt callstack 0
 15617                           
 15618 ;; *************** function _TMR3_WriteTimer *****************
 15619 ;; Defined at:
 15620 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15621 ;; Parameters:    Size  Location     Type
 15622 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15623 ;; Auto vars:     Size  Location     Type
 15624 ;;		None
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  1    wreg      void 
 15627 ;; Registers used:
 15628 ;;		wreg, status,2
 15629 ;; Tracked objects:
 15630 ;;		On entry : 0/0
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15634 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15637 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15638 ;;Total ram usage:        2 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; Hardware stack levels required when called:   11
 15641 ;; This function calls:
 15642 ;;		Nothing
 15643 ;; This function is called by:
 15644 ;;		_TMR3_Reload
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           	psect	text32
 15649  01C792                     __ptext32:
 15650                           	opt callstack 0
 15651  01C792                     _TMR3_WriteTimer:
 15652                           	opt callstack 18
 15653                           
 15654                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15655                           
 15656                           ;incstack = 0
 15657  01C792  A4C9               	btfss	4041,2,c	;volatile
 15658  01C794  D008               	goto	l21006
 15659                           
 15660                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15661  01C796  90C9               	bcf	4041,0,c	;volatile
 15662                           
 15663                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15664  01C798  0102               	movlb	2	; () banked
 15665  01C79A  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15666  01C79C  6EC8               	movwf	4040,c	;volatile
 15667                           
 15668                           ; BSR set to: 2
 15669                           ;tmr3.c: 136: TMR3L = timerVal;
 15670  01C79E  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15671                           
 15672                           ; BSR set to: 2
 15673                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15674  01C7A2  80C9               	bsf	4041,0,c	;volatile
 15675                           
 15676                           ;tmr3.c: 140: }
 15677  01C7A4  0012               	return	
 15678  01C7A6                     l21006:
 15679                           
 15680                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15681  01C7A6  0102               	movlb	2	; () banked
 15682  01C7A8  5101               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 15683  01C7AA  6EC8               	movwf	4040,c	;volatile
 15684                           
 15685                           ; BSR set to: 2
 15686                           ;tmr3.c: 145: TMR3L = timerVal;
 15687  01C7AC  C200  FFC7         	movff	TMR3_WriteTimer@timerVal,4039	;volatile
 15688                           
 15689                           ; BSR set to: 2
 15690  01C7B0  0012               	return		;funcret
 15691  01C7B2                     __end_of_TMR3_WriteTimer:
 15692                           	opt callstack 0
 15693                           
 15694 ;; *************** function _TMR1_StopTimer *****************
 15695 ;; Defined at:
 15696 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;		None
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;		None
 15701 ;; Return value:  Size  Location     Type
 15702 ;;                  1    wreg      void 
 15703 ;; Registers used:
 15704 ;;		None
 15705 ;; Tracked objects:
 15706 ;;		On entry : 0/0
 15707 ;;		On exit  : 0/0
 15708 ;;		Unchanged: 0/0
 15709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15714 ;;Total ram usage:        0 bytes
 15715 ;; Hardware stack levels used:    1
 15716 ;; Hardware stack levels required when called:   11
 15717 ;; This function calls:
 15718 ;;		Nothing
 15719 ;; This function is called by:
 15720 ;;		_main
 15721 ;; This function uses a non-reentrant model
 15722 ;;
 15723                           
 15724                           	psect	text33
 15725  01CC14                     __ptext33:
 15726                           	opt callstack 0
 15727  01CC14                     _TMR1_StopTimer:
 15728                           	opt callstack 19
 15729                           
 15730                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 15731                           
 15732                           ; BSR set to: 2
 15733                           ;incstack = 0
 15734  01CC14  90CF               	bcf	4047,0,c	;volatile
 15735  01CC16  0012               	return		;funcret
 15736  01CC18                     __end_of_TMR1_StopTimer:
 15737                           	opt callstack 0
 15738                           
 15739 ;; *************** function _TMR1_Reload *****************
 15740 ;; Defined at:
 15741 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		wreg, status,2, cstack
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; Hardware stack levels required when called:   12
 15762 ;; This function calls:
 15763 ;;		_TMR1_WriteTimer
 15764 ;; This function is called by:
 15765 ;;		_main
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769                           	psect	text34
 15770  01CAAA                     __ptext34:
 15771                           	opt callstack 0
 15772  01CAAA                     _TMR1_Reload:
 15773                           	opt callstack 18
 15774                           
 15775                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 15776                           
 15777                           ;incstack = 0
 15778  01CAAA  C189  F200         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15779  01CAAE  C18A  F201         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15780  01CAB2  ECD9  F0E3         	call	_TMR1_WriteTimer	;wreg free
 15781  01CAB6  0012               	return		;funcret
 15782  01CAB8                     __end_of_TMR1_Reload:
 15783                           	opt callstack 0
 15784                           
 15785 ;; *************** function _TMR1_WriteTimer *****************
 15786 ;; Defined at:
 15787 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;  timerVal        2    0[BANK2 ] unsigned int 
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;                  1    wreg      void 
 15794 ;; Registers used:
 15795 ;;		wreg, status,2
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15801 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;Total ram usage:        2 bytes
 15806 ;; Hardware stack levels used:    1
 15807 ;; Hardware stack levels required when called:   11
 15808 ;; This function calls:
 15809 ;;		Nothing
 15810 ;; This function is called by:
 15811 ;;		_TMR1_Reload
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           	psect	text35
 15816  01C7B2                     __ptext35:
 15817                           	opt callstack 0
 15818  01C7B2                     _TMR1_WriteTimer:
 15819                           	opt callstack 18
 15820                           
 15821                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15822                           
 15823                           ;incstack = 0
 15824  01C7B2  A4CF               	btfss	4047,2,c	;volatile
 15825  01C7B4  D008               	goto	l21042
 15826                           
 15827                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15828  01C7B6  90CF               	bcf	4047,0,c	;volatile
 15829                           
 15830                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15831  01C7B8  0102               	movlb	2	; () banked
 15832  01C7BA  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15833  01C7BC  6ECE               	movwf	4046,c	;volatile
 15834                           
 15835                           ; BSR set to: 2
 15836                           ;tmr1.c: 136: TMR1L = timerVal;
 15837  01C7BE  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15838                           
 15839                           ; BSR set to: 2
 15840                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15841  01C7C2  80CF               	bsf	4047,0,c	;volatile
 15842                           
 15843                           ;tmr1.c: 140: }
 15844  01C7C4  0012               	return	
 15845  01C7C6                     l21042:
 15846                           
 15847                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15848  01C7C6  0102               	movlb	2	; () banked
 15849  01C7C8  5101               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15850  01C7CA  6ECE               	movwf	4046,c	;volatile
 15851                           
 15852                           ; BSR set to: 2
 15853                           ;tmr1.c: 145: TMR1L = timerVal;
 15854  01C7CC  C200  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15855                           
 15856                           ; BSR set to: 2
 15857  01C7D0  0012               	return		;funcret
 15858  01C7D2                     __end_of_TMR1_WriteTimer:
 15859                           	opt callstack 0
 15860                           
 15861 ;; *************** function _SYSTEM_Initialize *****************
 15862 ;; Defined at:
 15863 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;		None
 15866 ;; Auto vars:     Size  Location     Type
 15867 ;;		None
 15868 ;; Return value:  Size  Location     Type
 15869 ;;                  1    wreg      void 
 15870 ;; Registers used:
 15871 ;;		wreg, status,2, status,0, cstack
 15872 ;; Tracked objects:
 15873 ;;		On entry : 0/0
 15874 ;;		On exit  : 0/0
 15875 ;;		Unchanged: 0/0
 15876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15881 ;;Total ram usage:        0 bytes
 15882 ;; Hardware stack levels used:    1
 15883 ;; Hardware stack levels required when called:   13
 15884 ;; This function calls:
 15885 ;;		_ADCC_Initialize
 15886 ;;		_CCP2_Initialize
 15887 ;;		_EUSART2_Initialize
 15888 ;;		_EXT_INT_Initialize
 15889 ;;		_FVR_Initialize
 15890 ;;		_I2C2_Initialize
 15891 ;;		_INTERRUPT_Initialize
 15892 ;;		_OSCILLATOR_Initialize
 15893 ;;		_PIN_MANAGER_Initialize
 15894 ;;		_PMD_Initialize
 15895 ;;		_TMR0_Initialize
 15896 ;;		_TMR1_Initialize
 15897 ;;		_TMR2_Initialize
 15898 ;;		_TMR3_Initialize
 15899 ;;		_TMR5_Initialize
 15900 ;; This function is called by:
 15901 ;;		_main
 15902 ;; This function uses a non-reentrant model
 15903 ;;
 15904                           
 15905                           	psect	text36
 15906  01C134                     __ptext36:
 15907                           	opt callstack 0
 15908  01C134                     _SYSTEM_Initialize:
 15909                           	opt callstack 17
 15910                           
 15911                           ;mcc.c: 52: INTERRUPT_Initialize();
 15912                           
 15913                           ; BSR set to: 2
 15914                           ;incstack = 0
 15915  01C134  ECE9  F0E3         	call	_INTERRUPT_Initialize	;wreg free
 15916                           
 15917                           ;mcc.c: 53: PMD_Initialize();
 15918  01C138  EC46  F0E4         	call	_PMD_Initialize	;wreg free
 15919                           
 15920                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15921  01C13C  ECEF  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 15922                           
 15923                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15924  01C140  ECB2  F0E4         	call	_OSCILLATOR_Initialize	;wreg free
 15925                           
 15926                           ;mcc.c: 56: I2C2_Initialize();
 15927  01C144  EC6C  F0E1         	call	_I2C2_Initialize	;wreg free
 15928                           
 15929                           ;mcc.c: 57: FVR_Initialize();
 15930  01C148  ECCB  F0E5         	call	_FVR_Initialize	;wreg free
 15931                           
 15932                           ;mcc.c: 58: ADCC_Initialize();
 15933  01C14C  EC23  F0DC         	call	_ADCC_Initialize	;wreg free
 15934                           
 15935                           ;mcc.c: 59: TMR2_Initialize();
 15936  01C150  ECD5  F0E1         	call	_TMR2_Initialize	;wreg free
 15937                           
 15938                           ;mcc.c: 60: EXT_INT_Initialize();
 15939  01C154  EC50  F0E1         	call	_EXT_INT_Initialize	;wreg free
 15940                           
 15941                           ;mcc.c: 61: TMR0_Initialize();
 15942  01C158  EC95  F0E2         	call	_TMR0_Initialize	;wreg free
 15943                           
 15944                           ;mcc.c: 62: CCP2_Initialize();
 15945  01C15C  EC97  F0E3         	call	_CCP2_Initialize	;wreg free
 15946                           
 15947                           ;mcc.c: 63: TMR3_Initialize();
 15948  01C160  ECDB  F0DD         	call	_TMR3_Initialize	;wreg free
 15949                           
 15950                           ;mcc.c: 64: TMR5_Initialize();
 15951  01C164  ECD8  F0E0         	call	_TMR5_Initialize	;wreg free
 15952                           
 15953                           ;mcc.c: 65: TMR1_Initialize();
 15954  01C168  EC03  F0DE         	call	_TMR1_Initialize	;wreg free
 15955                           
 15956                           ;mcc.c: 66: EUSART2_Initialize();
 15957  01C16C  EC8A  F0DB         	call	_EUSART2_Initialize	;wreg free
 15958  01C170  0012               	return		;funcret
 15959  01C172                     __end_of_SYSTEM_Initialize:
 15960                           	opt callstack 0
 15961                           
 15962 ;; *************** function _TMR5_Initialize *****************
 15963 ;; Defined at:
 15964 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 15965 ;; Parameters:    Size  Location     Type
 15966 ;;		None
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;		None
 15969 ;; Return value:  Size  Location     Type
 15970 ;;                  1    wreg      void 
 15971 ;; Registers used:
 15972 ;;		wreg, status,2, status,0
 15973 ;; Tracked objects:
 15974 ;;		On entry : 0/0
 15975 ;;		On exit  : 0/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15982 ;;Total ram usage:        2 bytes
 15983 ;; Hardware stack levels used:    1
 15984 ;; Hardware stack levels required when called:   11
 15985 ;; This function calls:
 15986 ;;		Nothing
 15987 ;; This function is called by:
 15988 ;;		_SYSTEM_Initialize
 15989 ;; This function uses a non-reentrant model
 15990 ;;
 15991                           
 15992                           	psect	text37
 15993  01C1B0                     __ptext37:
 15994                           	opt callstack 0
 15995  01C1B0                     _TMR5_Initialize:
 15996                           	opt callstack 18
 15997                           
 15998                           ;tmr5.c: 68: T5GCON = 0x00;
 15999                           
 16000                           ;incstack = 0
 16001  01C1B0  0E00               	movlw	0
 16002  01C1B2  6EC4               	movwf	4036,c	;volatile
 16003                           
 16004                           ;tmr5.c: 71: T5GATE = 0x00;
 16005  01C1B4  0E00               	movlw	0
 16006  01C1B6  6EC5               	movwf	4037,c	;volatile
 16007                           
 16008                           ;tmr5.c: 74: T5CLK = 0x01;
 16009  01C1B8  0E01               	movlw	1
 16010  01C1BA  6EC6               	movwf	4038,c	;volatile
 16011                           
 16012                           ;tmr5.c: 77: TMR5H = 0x00;
 16013  01C1BC  0E00               	movlw	0
 16014  01C1BE  6EC2               	movwf	4034,c	;volatile
 16015                           
 16016                           ;tmr5.c: 80: TMR5L = 0x00;
 16017  01C1C0  0E00               	movlw	0
 16018  01C1C2  6EC1               	movwf	4033,c	;volatile
 16019                           
 16020                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 16021  01C1C4  50C1               	movf	4033,w,c	;volatile
 16022  01C1C6  CFC2 F200          	movff	4034,??_TMR5_Initialize	;volatile
 16023  01C1CA  0102               	movlb	2	; () banked
 16024  01C1CC  6B01               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 16025  01C1CE  C200  F201         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 16026  01C1D2  6B00               	clrf	??_TMR5_Initialize& (0+255),b
 16027  01C1D4  1100               	iorwf	??_TMR5_Initialize& (0+255),w,b
 16028  01C1D6  0101               	movlb	1	; () banked
 16029  01C1D8  6F8B               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 16030  01C1DA  0102               	movlb	2	; () banked
 16031  01C1DC  5101               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 16032  01C1DE  0101               	movlb	1	; () banked
 16033  01C1E0  6F8C               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 16034                           
 16035                           ; BSR set to: 1
 16036                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
 16037  01C1E2  010E               	movlb	14	; () banked
 16038  01C1E4  99CE               	bcf	206,4,b	;volatile
 16039                           
 16040                           ; BSR set to: 14
 16041                           ;tmr5.c: 89: T5CON = 0x03;
 16042  01C1E6  0E03               	movlw	3
 16043  01C1E8  6EC3               	movwf	4035,c	;volatile
 16044                           
 16045                           ; BSR set to: 14
 16046  01C1EA  0012               	return		;funcret
 16047  01C1EC                     __end_of_TMR5_Initialize:
 16048                           	opt callstack 0
 16049                           
 16050 ;; *************** function _TMR3_Initialize *****************
 16051 ;; Defined at:
 16052 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;		None
 16055 ;; Auto vars:     Size  Location     Type
 16056 ;;		None
 16057 ;; Return value:  Size  Location     Type
 16058 ;;                  1    wreg      void 
 16059 ;; Registers used:
 16060 ;;		wreg, status,2, status,0, cstack
 16061 ;; Tracked objects:
 16062 ;;		On entry : 0/0
 16063 ;;		On exit  : 0/0
 16064 ;;		Unchanged: 0/0
 16065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16070 ;;Total ram usage:        2 bytes
 16071 ;; Hardware stack levels used:    1
 16072 ;; Hardware stack levels required when called:   12
 16073 ;; This function calls:
 16074 ;;		_TMR3_SetInterruptHandler
 16075 ;; This function is called by:
 16076 ;;		_SYSTEM_Initialize
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           
 16080                           	psect	text38
 16081  01BBB6                     __ptext38:
 16082                           	opt callstack 0
 16083  01BBB6                     _TMR3_Initialize:
 16084                           	opt callstack 17
 16085                           
 16086                           ;tmr3.c: 69: T3GCON = 0x00;
 16087                           
 16088                           ; BSR set to: 14
 16089                           ;incstack = 0
 16090  01BBB6  0E00               	movlw	0
 16091  01BBB8  6ECA               	movwf	4042,c	;volatile
 16092                           
 16093                           ;tmr3.c: 72: T3GATE = 0x00;
 16094  01BBBA  0E00               	movlw	0
 16095  01BBBC  6ECB               	movwf	4043,c	;volatile
 16096                           
 16097                           ;tmr3.c: 75: T3CLK = 0x04;
 16098  01BBBE  0E04               	movlw	4
 16099  01BBC0  6ECC               	movwf	4044,c	;volatile
 16100                           
 16101                           ;tmr3.c: 78: TMR3H = 0xCF;
 16102  01BBC2  0ECF               	movlw	207
 16103  01BBC4  6EC8               	movwf	4040,c	;volatile
 16104                           
 16105                           ;tmr3.c: 81: TMR3L = 0x90;
 16106  01BBC6  0E90               	movlw	144
 16107  01BBC8  6EC7               	movwf	4039,c	;volatile
 16108                           
 16109                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 16110  01BBCA  50C7               	movf	4039,w,c	;volatile
 16111  01BBCC  CFC8 F203          	movff	4040,??_TMR3_Initialize	;volatile
 16112  01BBD0  0102               	movlb	2	; () banked
 16113  01BBD2  6B04               	clrf	(??_TMR3_Initialize+1)& (0+255),b
 16114  01BBD4  C203  F204         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 16115  01BBD8  6B03               	clrf	??_TMR3_Initialize& (0+255),b
 16116  01BBDA  1103               	iorwf	??_TMR3_Initialize& (0+255),w,b
 16117  01BBDC  0101               	movlb	1	; () banked
 16118  01BBDE  6F8D               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 16119  01BBE0  0102               	movlb	2	; () banked
 16120  01BBE2  5104               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
 16121  01BBE4  0101               	movlb	1	; () banked
 16122  01BBE6  6F8E               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 16123                           
 16124                           ; BSR set to: 1
 16125                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 16126  01BBE8  010E               	movlb	14	; () banked
 16127  01BBEA  95CE               	bcf	206,2,b	;volatile
 16128                           
 16129                           ; BSR set to: 14
 16130                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 16131  01BBEC  85C6               	bsf	198,2,b	;volatile
 16132                           
 16133                           ; BSR set to: 14
 16134                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 16135  01BBEE  0E3A               	movlw	low _TMR3_DefaultInterruptHandler
 16136  01BBF0  0102               	movlb	2	; () banked
 16137  01BBF2  6F00               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 16138  01BBF4  0ECC               	movlw	high _TMR3_DefaultInterruptHandler
 16139  01BBF6  6F01               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16140  01BBF8  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 16141  01BBFA  6F02               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16142  01BBFC  EC5C  F0E5         	call	_TMR3_SetInterruptHandler	;wreg free
 16143                           
 16144                           ;tmr3.c: 96: T3CON = 0x11;
 16145  01BC00  0E11               	movlw	17
 16146  01BC02  6EC9               	movwf	4041,c	;volatile
 16147  01BC04  0012               	return		;funcret
 16148  01BC06                     __end_of_TMR3_Initialize:
 16149                           	opt callstack 0
 16150                           
 16151 ;; *************** function _TMR3_SetInterruptHandler *****************
 16152 ;; Defined at:
 16153 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 16154 ;; Parameters:    Size  Location     Type
 16155 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16156 ;;		 -> QIIdleChargedTimerHandler(1), TMR3_DefaultInterruptHandler(1), 
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;		None
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      void 
 16161 ;; Registers used:
 16162 ;;		wreg, status,2, status,0
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/0
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16168 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16171 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16172 ;;Total ram usage:        3 bytes
 16173 ;; Hardware stack levels used:    1
 16174 ;; Hardware stack levels required when called:   11
 16175 ;; This function calls:
 16176 ;;		Nothing
 16177 ;; This function is called by:
 16178 ;;		_TMR3_Initialize
 16179 ;;		_main
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183                           	psect	text39
 16184  01CAB8                     __ptext39:
 16185                           	opt callstack 0
 16186  01CAB8                     _TMR3_SetInterruptHandler:
 16187                           	opt callstack 19
 16188                           
 16189                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 16190                           
 16191                           ;incstack = 0
 16192  01CAB8  C200  F171         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 16193  01CABC  C201  F172         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 16194  01CAC0  C202  F173         	movff	TMR3_SetInterruptHandler@InterruptHandler+2,_TMR3_InterruptHandler+2
 16195  01CAC4  0012               	return		;funcret
 16196  01CAC6                     __end_of_TMR3_SetInterruptHandler:
 16197                           	opt callstack 0
 16198                           
 16199 ;; *************** function _TMR2_Initialize *****************
 16200 ;; Defined at:
 16201 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;		None
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;		None
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  1    wreg      void 
 16208 ;; Registers used:
 16209 ;;		wreg, status,2, status,0, cstack
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16219 ;;Total ram usage:        0 bytes
 16220 ;; Hardware stack levels used:    1
 16221 ;; Hardware stack levels required when called:   12
 16222 ;; This function calls:
 16223 ;;		_TMR2_SetInterruptHandler
 16224 ;; This function is called by:
 16225 ;;		_SYSTEM_Initialize
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text40
 16230  01C3AA                     __ptext40:
 16231                           	opt callstack 0
 16232  01C3AA                     _TMR2_Initialize:
 16233                           	opt callstack 17
 16234                           
 16235                           ;tmr2.c: 69: T2CLKCON = 0x04;
 16236                           
 16237                           ;incstack = 0
 16238  01C3AA  0E04               	movlw	4
 16239  01C3AC  6EBF               	movwf	4031,c	;volatile
 16240                           
 16241                           ;tmr2.c: 72: T2HLT = 0xA0;
 16242  01C3AE  0EA0               	movlw	160
 16243  01C3B0  6EBE               	movwf	4030,c	;volatile
 16244                           
 16245                           ;tmr2.c: 75: T2RST = 0x00;
 16246  01C3B2  0E00               	movlw	0
 16247  01C3B4  6EC0               	movwf	4032,c	;volatile
 16248                           
 16249                           ;tmr2.c: 78: T2PR = 0x00;
 16250  01C3B6  0E00               	movlw	0
 16251  01C3B8  6EBC               	movwf	4028,c	;volatile
 16252                           
 16253                           ;tmr2.c: 81: T2TMR = 0x00;
 16254  01C3BA  0E00               	movlw	0
 16255  01C3BC  6EBB               	movwf	4027,c	;volatile
 16256                           
 16257                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 16258  01C3BE  010E               	movlb	14	; () banked
 16259  01C3C0  93CE               	bcf	206,1,b	;volatile
 16260                           
 16261                           ; BSR set to: 14
 16262                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 16263  01C3C2  83C6               	bsf	198,1,b	;volatile
 16264                           
 16265                           ; BSR set to: 14
 16266                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 16267  01C3C4  0E3C               	movlw	low _TMR2_DefaultInterruptHandler
 16268  01C3C6  0102               	movlb	2	; () banked
 16269  01C3C8  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 16270  01C3CA  0ECC               	movlw	high _TMR2_DefaultInterruptHandler
 16271  01C3CC  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16272  01C3CE  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
 16273  01C3D0  6F02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16274  01C3D2  EC63  F0E5         	call	_TMR2_SetInterruptHandler	;wreg free
 16275                           
 16276                           ;tmr2.c: 93: T2CON = 0xDF;
 16277  01C3D6  0EDF               	movlw	223
 16278  01C3D8  6EBD               	movwf	4029,c	;volatile
 16279  01C3DA  0012               	return		;funcret
 16280  01C3DC                     __end_of_TMR2_Initialize:
 16281                           	opt callstack 0
 16282                           
 16283 ;; *************** function _TMR2_SetInterruptHandler *****************
 16284 ;; Defined at:
 16285 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16288 ;;		 -> ADC_acquisitionTimerHandler(1), TMR2_DefaultInterruptHandler(1), 
 16289 ;; Auto vars:     Size  Location     Type
 16290 ;;		None
 16291 ;; Return value:  Size  Location     Type
 16292 ;;                  1    wreg      void 
 16293 ;; Registers used:
 16294 ;;		wreg, status,2, status,0
 16295 ;; Tracked objects:
 16296 ;;		On entry : 0/0
 16297 ;;		On exit  : 0/0
 16298 ;;		Unchanged: 0/0
 16299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16300 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16303 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16304 ;;Total ram usage:        3 bytes
 16305 ;; Hardware stack levels used:    1
 16306 ;; Hardware stack levels required when called:   11
 16307 ;; This function calls:
 16308 ;;		Nothing
 16309 ;; This function is called by:
 16310 ;;		_TMR2_Initialize
 16311 ;;		_main
 16312 ;; This function uses a non-reentrant model
 16313 ;;
 16314                           
 16315                           	psect	text41
 16316  01CAC6                     __ptext41:
 16317                           	opt callstack 0
 16318  01CAC6                     _TMR2_SetInterruptHandler:
 16319                           	opt callstack 19
 16320                           
 16321                           ;tmr2.c: 179: TMR2_InterruptHandler = InterruptHandler;
 16322                           
 16323                           ;incstack = 0
 16324  01CAC6  C200  F174         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 16325  01CACA  C201  F175         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 16326  01CACE  C202  F176         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
 16327  01CAD2  0012               	return		;funcret
 16328  01CAD4                     __end_of_TMR2_SetInterruptHandler:
 16329                           	opt callstack 0
 16330                           
 16331 ;; *************** function _TMR1_Initialize *****************
 16332 ;; Defined at:
 16333 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 16334 ;; Parameters:    Size  Location     Type
 16335 ;;		None
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;		None
 16338 ;; Return value:  Size  Location     Type
 16339 ;;                  1    wreg      void 
 16340 ;; Registers used:
 16341 ;;		wreg, status,2, status,0, cstack
 16342 ;; Tracked objects:
 16343 ;;		On entry : 0/0
 16344 ;;		On exit  : 0/0
 16345 ;;		Unchanged: 0/0
 16346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16349 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16350 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16351 ;;Total ram usage:        2 bytes
 16352 ;; Hardware stack levels used:    1
 16353 ;; Hardware stack levels required when called:   12
 16354 ;; This function calls:
 16355 ;;		_TMR1_SetInterruptHandler
 16356 ;; This function is called by:
 16357 ;;		_SYSTEM_Initialize
 16358 ;; This function uses a non-reentrant model
 16359 ;;
 16360                           
 16361                           	psect	text42
 16362  01BC06                     __ptext42:
 16363                           	opt callstack 0
 16364  01BC06                     _TMR1_Initialize:
 16365                           	opt callstack 17
 16366                           
 16367                           ;tmr1.c: 69: T1GCON = 0x00;
 16368                           
 16369                           ;incstack = 0
 16370  01BC06  0E00               	movlw	0
 16371  01BC08  6ED0               	movwf	4048,c	;volatile
 16372                           
 16373                           ;tmr1.c: 72: T1GATE = 0x00;
 16374  01BC0A  0E00               	movlw	0
 16375  01BC0C  6ED1               	movwf	4049,c	;volatile
 16376                           
 16377                           ;tmr1.c: 75: T1CLK = 0x04;
 16378  01BC0E  0E04               	movlw	4
 16379  01BC10  6ED2               	movwf	4050,c	;volatile
 16380                           
 16381                           ;tmr1.c: 78: TMR1H = 0xED;
 16382  01BC12  0EED               	movlw	237
 16383  01BC14  6ECE               	movwf	4046,c	;volatile
 16384                           
 16385                           ;tmr1.c: 81: TMR1L = 0xD6;
 16386  01BC16  0ED6               	movlw	214
 16387  01BC18  6ECD               	movwf	4045,c	;volatile
 16388                           
 16389                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16390  01BC1A  50CD               	movf	4045,w,c	;volatile
 16391  01BC1C  CFCE F203          	movff	4046,??_TMR1_Initialize	;volatile
 16392  01BC20  0102               	movlb	2	; () banked
 16393  01BC22  6B04               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 16394  01BC24  C203  F204         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16395  01BC28  6B03               	clrf	??_TMR1_Initialize& (0+255),b
 16396  01BC2A  1103               	iorwf	??_TMR1_Initialize& (0+255),w,b
 16397  01BC2C  0101               	movlb	1	; () banked
 16398  01BC2E  6F89               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16399  01BC30  0102               	movlb	2	; () banked
 16400  01BC32  5104               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 16401  01BC34  0101               	movlb	1	; () banked
 16402  01BC36  6F8A               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16403                           
 16404                           ; BSR set to: 1
 16405                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 16406  01BC38  010E               	movlb	14	; () banked
 16407  01BC3A  91CE               	bcf	206,0,b	;volatile
 16408                           
 16409                           ; BSR set to: 14
 16410                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 16411  01BC3C  81C6               	bsf	198,0,b	;volatile
 16412                           
 16413                           ; BSR set to: 14
 16414                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 16415  01BC3E  0E3E               	movlw	low _TMR1_DefaultInterruptHandler
 16416  01BC40  0102               	movlb	2	; () banked
 16417  01BC42  6F00               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 16418  01BC44  0ECC               	movlw	high _TMR1_DefaultInterruptHandler
 16419  01BC46  6F01               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16420  01BC48  0E01               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
 16421  01BC4A  6F02               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16422  01BC4C  EC6A  F0E5         	call	_TMR1_SetInterruptHandler	;wreg free
 16423                           
 16424                           ;tmr1.c: 96: T1CON = 0x11;
 16425  01BC50  0E11               	movlw	17
 16426  01BC52  6ECF               	movwf	4047,c	;volatile
 16427  01BC54  0012               	return		;funcret
 16428  01BC56                     __end_of_TMR1_Initialize:
 16429                           	opt callstack 0
 16430                           
 16431 ;; *************** function _TMR1_SetInterruptHandler *****************
 16432 ;; Defined at:
 16433 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16434 ;; Parameters:    Size  Location     Type
 16435 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16436 ;;		 -> QIErrorTimerHandler(1), TMR1_DefaultInterruptHandler(1), 
 16437 ;; Auto vars:     Size  Location     Type
 16438 ;;		None
 16439 ;; Return value:  Size  Location     Type
 16440 ;;                  1    wreg      void 
 16441 ;; Registers used:
 16442 ;;		wreg, status,2, status,0
 16443 ;; Tracked objects:
 16444 ;;		On entry : 0/0
 16445 ;;		On exit  : 0/0
 16446 ;;		Unchanged: 0/0
 16447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16448 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16451 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16452 ;;Total ram usage:        3 bytes
 16453 ;; Hardware stack levels used:    1
 16454 ;; Hardware stack levels required when called:   11
 16455 ;; This function calls:
 16456 ;;		Nothing
 16457 ;; This function is called by:
 16458 ;;		_TMR1_Initialize
 16459 ;;		_main
 16460 ;; This function uses a non-reentrant model
 16461 ;;
 16462                           
 16463                           	psect	text43
 16464  01CAD4                     __ptext43:
 16465                           	opt callstack 0
 16466  01CAD4                     _TMR1_SetInterruptHandler:
 16467                           	opt callstack 19
 16468                           
 16469                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 16470                           
 16471                           ;incstack = 0
 16472  01CAD4  C200  F16E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 16473  01CAD8  C201  F16F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 16474  01CADC  C202  F170         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
 16475  01CAE0  0012               	return		;funcret
 16476  01CAE2                     __end_of_TMR1_SetInterruptHandler:
 16477                           	opt callstack 0
 16478                           
 16479 ;; *************** function _TMR0_Initialize *****************
 16480 ;; Defined at:
 16481 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;		None
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;		None
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  1    wreg      void 
 16488 ;; Registers used:
 16489 ;;		wreg, status,2, status,0, cstack
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16499 ;;Total ram usage:        0 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:   12
 16502 ;; This function calls:
 16503 ;;		_TMR0_SetInterruptHandler
 16504 ;; This function is called by:
 16505 ;;		_SYSTEM_Initialize
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           	psect	text44
 16510  01C52A                     __ptext44:
 16511                           	opt callstack 0
 16512  01C52A                     _TMR0_Initialize:
 16513                           	opt callstack 17
 16514                           
 16515                           ;tmr0.c: 66: T0CON1 = 0x6F;
 16516                           
 16517                           ;incstack = 0
 16518  01C52A  0E6F               	movlw	111
 16519  01C52C  6ED6               	movwf	4054,c	;volatile
 16520                           
 16521                           ;tmr0.c: 69: TMR0H = 0x79;
 16522  01C52E  0E79               	movlw	121
 16523  01C530  6ED4               	movwf	4052,c	;volatile
 16524                           
 16525                           ;tmr0.c: 72: TMR0L = 0x00;
 16526  01C532  0E00               	movlw	0
 16527  01C534  6ED3               	movwf	4051,c	;volatile
 16528                           
 16529                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 16530  01C536  010E               	movlb	14	; () banked
 16531  01C538  9BCA               	bcf	202,5,b	;volatile
 16532                           
 16533                           ; BSR set to: 14
 16534                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 16535  01C53A  8BC2               	bsf	194,5,b	;volatile
 16536                           
 16537                           ; BSR set to: 14
 16538                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 16539  01C53C  0E40               	movlw	low _TMR0_DefaultInterruptHandler
 16540  01C53E  0102               	movlb	2	; () banked
 16541  01C540  6F00               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 16542  01C542  0ECC               	movlw	high _TMR0_DefaultInterruptHandler
 16543  01C544  6F01               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16544  01C546  0E01               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
 16545  01C548  6F02               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16546  01C54A  EC71  F0E5         	call	_TMR0_SetInterruptHandler	;wreg free
 16547                           
 16548                           ;tmr0.c: 84: T0CON0 = 0x8F;
 16549  01C54E  0E8F               	movlw	143
 16550  01C550  6ED5               	movwf	4053,c	;volatile
 16551  01C552  0012               	return		;funcret
 16552  01C554                     __end_of_TMR0_Initialize:
 16553                           	opt callstack 0
 16554                           
 16555 ;; *************** function _TMR0_SetInterruptHandler *****************
 16556 ;; Defined at:
 16557 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16558 ;; Parameters:    Size  Location     Type
 16559 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16560 ;;		 -> heartbeatTimerHandler(1), TMR0_DefaultInterruptHandler(1), 
 16561 ;; Auto vars:     Size  Location     Type
 16562 ;;		None
 16563 ;; Return value:  Size  Location     Type
 16564 ;;                  1    wreg      void 
 16565 ;; Registers used:
 16566 ;;		wreg, status,2, status,0
 16567 ;; Tracked objects:
 16568 ;;		On entry : 0/0
 16569 ;;		On exit  : 0/0
 16570 ;;		Unchanged: 0/0
 16571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16572 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16575 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16576 ;;Total ram usage:        3 bytes
 16577 ;; Hardware stack levels used:    1
 16578 ;; Hardware stack levels required when called:   11
 16579 ;; This function calls:
 16580 ;;		Nothing
 16581 ;; This function is called by:
 16582 ;;		_TMR0_Initialize
 16583 ;;		_main
 16584 ;; This function uses a non-reentrant model
 16585 ;;
 16586                           
 16587                           	psect	text45
 16588  01CAE2                     __ptext45:
 16589                           	opt callstack 0
 16590  01CAE2                     _TMR0_SetInterruptHandler:
 16591                           	opt callstack 19
 16592                           
 16593                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
 16594                           
 16595                           ;incstack = 0
 16596  01CAE2  C200  F0C9         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 16597  01CAE6  C201  F0CA         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 16598  01CAEA  C202  F0CB         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
 16599  01CAEE  0012               	return		;funcret
 16600  01CAF0                     __end_of_TMR0_SetInterruptHandler:
 16601                           	opt callstack 0
 16602                           
 16603 ;; *************** function _PMD_Initialize *****************
 16604 ;; Defined at:
 16605 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16606 ;; Parameters:    Size  Location     Type
 16607 ;;		None
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;		None
 16610 ;; Return value:  Size  Location     Type
 16611 ;;                  1    wreg      void 
 16612 ;; Registers used:
 16613 ;;		wreg, status,2
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/0
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16623 ;;Total ram usage:        0 bytes
 16624 ;; Hardware stack levels used:    1
 16625 ;; Hardware stack levels required when called:   11
 16626 ;; This function calls:
 16627 ;;		Nothing
 16628 ;; This function is called by:
 16629 ;;		_SYSTEM_Initialize
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text46
 16634  01C88C                     __ptext46:
 16635                           	opt callstack 0
 16636  01C88C                     _PMD_Initialize:
 16637                           	opt callstack 18
 16638                           
 16639                           ;mcc.c: 86: PMD0 = 0x00;
 16640                           
 16641                           ;incstack = 0
 16642  01C88C  0E00               	movlw	0
 16643  01C88E  010E               	movlb	14	; () banked
 16644  01C890  6FE1               	movwf	225,b	;volatile
 16645                           
 16646                           ;mcc.c: 88: PMD1 = 0x00;
 16647  01C892  0E00               	movlw	0
 16648  01C894  6FE2               	movwf	226,b	;volatile
 16649                           
 16650                           ;mcc.c: 90: PMD2 = 0x00;
 16651  01C896  0E00               	movlw	0
 16652  01C898  6FE3               	movwf	227,b	;volatile
 16653                           
 16654                           ;mcc.c: 92: PMD3 = 0x00;
 16655  01C89A  0E00               	movlw	0
 16656  01C89C  6FE4               	movwf	228,b	;volatile
 16657                           
 16658                           ;mcc.c: 94: PMD4 = 0x00;
 16659  01C89E  0E00               	movlw	0
 16660  01C8A0  6FE5               	movwf	229,b	;volatile
 16661                           
 16662                           ;mcc.c: 96: PMD5 = 0x00;
 16663  01C8A2  0E00               	movlw	0
 16664  01C8A4  6FE6               	movwf	230,b	;volatile
 16665                           
 16666                           ; BSR set to: 14
 16667  01C8A6  0012               	return		;funcret
 16668  01C8A8                     __end_of_PMD_Initialize:
 16669                           	opt callstack 0
 16670                           
 16671 ;; *************** function _PIN_MANAGER_Initialize *****************
 16672 ;; Defined at:
 16673 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
 16674 ;; Parameters:    Size  Location     Type
 16675 ;;		None
 16676 ;; Auto vars:     Size  Location     Type
 16677 ;;		None
 16678 ;; Return value:  Size  Location     Type
 16679 ;;                  1    wreg      void 
 16680 ;; Registers used:
 16681 ;;		wreg, status,2, status,0, cstack
 16682 ;; Tracked objects:
 16683 ;;		On entry : 0/0
 16684 ;;		On exit  : 0/0
 16685 ;;		Unchanged: 0/0
 16686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16691 ;;Total ram usage:        0 bytes
 16692 ;; Hardware stack levels used:    1
 16693 ;; Hardware stack levels required when called:   12
 16694 ;; This function calls:
 16695 ;;		_IOCBF2_SetInterruptHandler
 16696 ;;		_IOCBF3_SetInterruptHandler
 16697 ;; This function is called by:
 16698 ;;		_SYSTEM_Initialize
 16699 ;; This function uses a non-reentrant model
 16700 ;;
 16701                           
 16702                           	psect	text47
 16703  01AFDE                     __ptext47:
 16704                           	opt callstack 0
 16705  01AFDE                     _PIN_MANAGER_Initialize:
 16706                           	opt callstack 17
 16707                           
 16708                           ;pin_manager.c: 65: LATA = 0x00;
 16709                           
 16710                           ; BSR set to: 14
 16711                           ;incstack = 0
 16712  01AFDE  0E00               	movlw	0
 16713  01AFE0  6E83               	movwf	3971,c	;volatile
 16714                           
 16715                           ;pin_manager.c: 66: LATB = 0x00;
 16716  01AFE2  0E00               	movlw	0
 16717  01AFE4  6E84               	movwf	3972,c	;volatile
 16718                           
 16719                           ;pin_manager.c: 67: LATC = 0x00;
 16720  01AFE6  0E00               	movlw	0
 16721  01AFE8  6E85               	movwf	3973,c	;volatile
 16722                           
 16723                           ;pin_manager.c: 72: TRISA = 0xFF;
 16724  01AFEA  6888               	setf	3976,c	;volatile
 16725                           
 16726                           ;pin_manager.c: 73: TRISB = 0x3F;
 16727  01AFEC  0E3F               	movlw	63
 16728  01AFEE  6E89               	movwf	3977,c	;volatile
 16729                           
 16730                           ;pin_manager.c: 74: TRISC = 0x08;
 16731  01AFF0  0E08               	movlw	8
 16732  01AFF2  6E8A               	movwf	3978,c	;volatile
 16733                           
 16734                           ;pin_manager.c: 79: ANSELC = 0x00;
 16735  01AFF4  0E00               	movlw	0
 16736  01AFF6  010F               	movlb	15	; () banked
 16737  01AFF8  6F21               	movwf	33,b	;volatile
 16738                           
 16739                           ;pin_manager.c: 80: ANSELB = 0x00;
 16740  01AFFA  0E00               	movlw	0
 16741  01AFFC  6F19               	movwf	25,b	;volatile
 16742                           
 16743                           ;pin_manager.c: 81: ANSELA = 0x3F;
 16744  01AFFE  0E3F               	movlw	63
 16745  01B000  6F11               	movwf	17,b	;volatile
 16746                           
 16747                           ;pin_manager.c: 86: WPUE = 0x00;
 16748  01B002  0E00               	movlw	0
 16749  01B004  6F2D               	movwf	45,b	;volatile
 16750                           
 16751                           ;pin_manager.c: 87: WPUB = 0x00;
 16752  01B006  0E00               	movlw	0
 16753  01B008  6F18               	movwf	24,b	;volatile
 16754                           
 16755                           ;pin_manager.c: 88: WPUA = 0x00;
 16756  01B00A  0E00               	movlw	0
 16757  01B00C  6F10               	movwf	16,b	;volatile
 16758                           
 16759                           ;pin_manager.c: 89: WPUC = 0x00;
 16760  01B00E  0E00               	movlw	0
 16761  01B010  6F20               	movwf	32,b	;volatile
 16762                           
 16763                           ;pin_manager.c: 94: ODCONA = 0x00;
 16764  01B012  0E00               	movlw	0
 16765  01B014  6F0F               	movwf	15,b	;volatile
 16766                           
 16767                           ;pin_manager.c: 95: ODCONB = 0x00;
 16768  01B016  0E00               	movlw	0
 16769  01B018  6F17               	movwf	23,b	;volatile
 16770                           
 16771                           ;pin_manager.c: 96: ODCONC = 0x00;
 16772  01B01A  0E00               	movlw	0
 16773  01B01C  6F1F               	movwf	31,b	;volatile
 16774                           
 16775                           ; BSR set to: 15
 16776                           ;pin_manager.c: 101: SLRCONA = 0xFF;
 16777  01B01E  690E               	setf	14,b	;volatile
 16778                           
 16779                           ; BSR set to: 15
 16780                           ;pin_manager.c: 102: SLRCONB = 0xFF;
 16781  01B020  6916               	setf	22,b	;volatile
 16782                           
 16783                           ; BSR set to: 15
 16784                           ;pin_manager.c: 103: SLRCONC = 0xFF;
 16785  01B022  691E               	setf	30,b	;volatile
 16786                           
 16787                           ; BSR set to: 15
 16788                           ;pin_manager.c: 110: IOCBFbits.IOCBF2 = 0;
 16789  01B024  9512               	bcf	18,2,b	;volatile
 16790                           
 16791                           ; BSR set to: 15
 16792                           ;pin_manager.c: 112: IOCBFbits.IOCBF3 = 0;
 16793  01B026  9712               	bcf	18,3,b	;volatile
 16794                           
 16795                           ; BSR set to: 15
 16796                           ;pin_manager.c: 114: IOCBNbits.IOCBN2 = 1;
 16797  01B028  8513               	bsf	19,2,b	;volatile
 16798                           
 16799                           ; BSR set to: 15
 16800                           ;pin_manager.c: 116: IOCBNbits.IOCBN3 = 1;
 16801  01B02A  8713               	bsf	19,3,b	;volatile
 16802                           
 16803                           ; BSR set to: 15
 16804                           ;pin_manager.c: 118: IOCBPbits.IOCBP2 = 1;
 16805  01B02C  8514               	bsf	20,2,b	;volatile
 16806                           
 16807                           ; BSR set to: 15
 16808                           ;pin_manager.c: 120: IOCBPbits.IOCBP3 = 1;
 16809  01B02E  8714               	bsf	20,3,b	;volatile
 16810                           
 16811                           ; BSR set to: 15
 16812                           ;pin_manager.c: 125: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
 16813  01B030  0E44               	movlw	low _IOCBF2_DefaultInterruptHandler
 16814  01B032  0102               	movlb	2	; () banked
 16815  01B034  6F00               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler& (0+255),b
 16816  01B036  0ECC               	movlw	high _IOCBF2_DefaultInterruptHandler
 16817  01B038  6F01               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16818  01B03A  0E01               	movlw	low (_IOCBF2_DefaultInterruptHandler shr (0+16))
 16819  01B03C  6F02               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16820  01B03E  EC7F  F0E5         	call	_IOCBF2_SetInterruptHandler	;wreg free
 16821                           
 16822                           ;pin_manager.c: 126: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
 16823  01B042  0E42               	movlw	low _IOCBF3_DefaultInterruptHandler
 16824  01B044  0102               	movlb	2	; () banked
 16825  01B046  6F00               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler& (0+255),b
 16826  01B048  0ECC               	movlw	high _IOCBF3_DefaultInterruptHandler
 16827  01B04A  6F01               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16828  01B04C  0E01               	movlw	low (_IOCBF3_DefaultInterruptHandler shr (0+16))
 16829  01B04E  6F02               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16830  01B050  EC78  F0E5         	call	_IOCBF3_SetInterruptHandler	;wreg free
 16831                           
 16832                           ;pin_manager.c: 129: PIE0bits.IOCIE = 1;
 16833  01B054  010E               	movlb	14	; () banked
 16834  01B056  89C2               	bsf	194,4,b	;volatile
 16835                           
 16836                           ;pin_manager.c: 132: CCP2PPS = 0x09;
 16837  01B058  0E09               	movlw	9
 16838  01B05A  6FB0               	movwf	176,b	;volatile
 16839                           
 16840                           ;pin_manager.c: 133: SSP2DATPPS = 0x0C;
 16841  01B05C  0E0C               	movlw	12
 16842  01B05E  6F90               	movwf	144,b	;volatile
 16843                           
 16844                           ;pin_manager.c: 134: RB5PPS = 0x11;
 16845  01B060  0E11               	movlw	17
 16846  01B062  6FF4               	movwf	244,b	;volatile
 16847                           
 16848                           ;pin_manager.c: 135: RC4PPS = 0x0B;
 16849  01B064  0E0B               	movlw	11
 16850  01B066  6FFB               	movwf	251,b	;volatile
 16851                           
 16852                           ;pin_manager.c: 136: RB4PPS = 0x12;
 16853  01B068  0E12               	movlw	18
 16854  01B06A  6FF3               	movwf	243,b	;volatile
 16855                           
 16856                           ;pin_manager.c: 137: INT2PPS = 0x06;
 16857  01B06C  0E06               	movlw	6
 16858  01B06E  6FA3               	movwf	163,b	;volatile
 16859                           
 16860                           ;pin_manager.c: 138: INT1PPS = 0x07;
 16861  01B070  0E07               	movlw	7
 16862  01B072  6FA2               	movwf	162,b	;volatile
 16863                           
 16864                           ;pin_manager.c: 139: RX2PPS = 0x13;
 16865  01B074  0E13               	movlw	19
 16866  01B076  6F8D               	movwf	141,b	;volatile
 16867                           
 16868                           ;pin_manager.c: 140: SSP2CLKPPS = 0x0D;
 16869  01B078  0E0D               	movlw	13
 16870  01B07A  6F8F               	movwf	143,b	;volatile
 16871                           
 16872                           ; BSR set to: 14
 16873  01B07C  0012               	return		;funcret
 16874  01B07E                     __end_of_PIN_MANAGER_Initialize:
 16875                           	opt callstack 0
 16876                           
 16877 ;; *************** function _IOCBF3_SetInterruptHandler *****************
 16878 ;; Defined at:
 16879 ;;		line 205 in file "mcc_generated_files/pin_manager.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16882 ;;		 -> QIChargeIOCHandler(1), IOCBF3_DefaultInterruptHandler(1), 
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;		None
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      void 
 16887 ;; Registers used:
 16888 ;;		wreg, status,2, status,0
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16894 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;Total ram usage:        3 bytes
 16899 ;; Hardware stack levels used:    1
 16900 ;; Hardware stack levels required when called:   11
 16901 ;; This function calls:
 16902 ;;		Nothing
 16903 ;; This function is called by:
 16904 ;;		_PIN_MANAGER_Initialize
 16905 ;;		_main
 16906 ;; This function uses a non-reentrant model
 16907 ;;
 16908                           
 16909                           	psect	text48
 16910  01CAF0                     __ptext48:
 16911                           	opt callstack 0
 16912  01CAF0                     _IOCBF3_SetInterruptHandler:
 16913                           	opt callstack 17
 16914                           
 16915                           ;pin_manager.c: 206: IOCBF3_InterruptHandler = InterruptHandler;
 16916                           
 16917                           ; BSR set to: 14
 16918                           ;incstack = 0
 16919  01CAF0  C200  F177         	movff	IOCBF3_SetInterruptHandler@InterruptHandler,_IOCBF3_InterruptHandler
 16920  01CAF4  C201  F178         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+1,_IOCBF3_InterruptHandler+1
 16921  01CAF8  C202  F179         	movff	IOCBF3_SetInterruptHandler@InterruptHandler+2,_IOCBF3_InterruptHandler+2
 16922  01CAFC  0012               	return		;funcret
 16923  01CAFE                     __end_of_IOCBF3_SetInterruptHandler:
 16924                           	opt callstack 0
 16925                           
 16926 ;; *************** function _IOCBF2_SetInterruptHandler *****************
 16927 ;; Defined at:
 16928 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
 16929 ;; Parameters:    Size  Location     Type
 16930 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 16931 ;;		 -> QIIdleIOCHandler(1), IOCBF2_DefaultInterruptHandler(1), 
 16932 ;; Auto vars:     Size  Location     Type
 16933 ;;		None
 16934 ;; Return value:  Size  Location     Type
 16935 ;;                  1    wreg      void 
 16936 ;; Registers used:
 16937 ;;		wreg, status,2, status,0
 16938 ;; Tracked objects:
 16939 ;;		On entry : 0/0
 16940 ;;		On exit  : 0/0
 16941 ;;		Unchanged: 0/0
 16942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16943 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16946 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16947 ;;Total ram usage:        3 bytes
 16948 ;; Hardware stack levels used:    1
 16949 ;; Hardware stack levels required when called:   11
 16950 ;; This function calls:
 16951 ;;		Nothing
 16952 ;; This function is called by:
 16953 ;;		_PIN_MANAGER_Initialize
 16954 ;;		_main
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           	psect	text49
 16959  01CAFE                     __ptext49:
 16960                           	opt callstack 0
 16961  01CAFE                     _IOCBF2_SetInterruptHandler:
 16962                           	opt callstack 17
 16963                           
 16964                           ;pin_manager.c: 176: IOCBF2_InterruptHandler = InterruptHandler;
 16965                           
 16966                           ;incstack = 0
 16967  01CAFE  C200  F17A         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
 16968  01CB02  C201  F17B         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
 16969  01CB06  C202  F17C         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+2,_IOCBF2_InterruptHandler+2
 16970  01CB0A  0012               	return		;funcret
 16971  01CB0C                     __end_of_IOCBF2_SetInterruptHandler:
 16972                           	opt callstack 0
 16973                           
 16974 ;; *************** function _OSCILLATOR_Initialize *****************
 16975 ;; Defined at:
 16976 ;;		line 69 in file "mcc_generated_files/mcc.c"
 16977 ;; Parameters:    Size  Location     Type
 16978 ;;		None
 16979 ;; Auto vars:     Size  Location     Type
 16980 ;;		None
 16981 ;; Return value:  Size  Location     Type
 16982 ;;                  1    wreg      void 
 16983 ;; Registers used:
 16984 ;;		wreg, status,2
 16985 ;; Tracked objects:
 16986 ;;		On entry : 0/0
 16987 ;;		On exit  : 0/0
 16988 ;;		Unchanged: 0/0
 16989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16994 ;;Total ram usage:        0 bytes
 16995 ;; Hardware stack levels used:    1
 16996 ;; Hardware stack levels required when called:   11
 16997 ;; This function calls:
 16998 ;;		Nothing
 16999 ;; This function is called by:
 17000 ;;		_SYSTEM_Initialize
 17001 ;; This function uses a non-reentrant model
 17002 ;;
 17003                           
 17004                           	psect	text50
 17005  01C964                     __ptext50:
 17006                           	opt callstack 0
 17007  01C964                     _OSCILLATOR_Initialize:
 17008                           	opt callstack 18
 17009                           
 17010                           ;mcc.c: 72: OSCCON1 = 0x60;
 17011                           
 17012                           ;incstack = 0
 17013  01C964  0E60               	movlw	96
 17014  01C966  010E               	movlb	14	; () banked
 17015  01C968  6FD8               	movwf	216,b	;volatile
 17016                           
 17017                           ;mcc.c: 74: OSCCON3 = 0x00;
 17018  01C96A  0E00               	movlw	0
 17019  01C96C  6FDA               	movwf	218,b	;volatile
 17020                           
 17021                           ;mcc.c: 76: OSCEN = 0x00;
 17022  01C96E  0E00               	movlw	0
 17023  01C970  6FDC               	movwf	220,b	;volatile
 17024                           
 17025                           ;mcc.c: 78: OSCFRQ = 0x08;
 17026  01C972  0E08               	movlw	8
 17027  01C974  6FDE               	movwf	222,b	;volatile
 17028                           
 17029                           ;mcc.c: 80: OSCTUNE = 0x00;
 17030  01C976  0E00               	movlw	0
 17031  01C978  6FDD               	movwf	221,b	;volatile
 17032                           
 17033                           ; BSR set to: 14
 17034  01C97A  0012               	return		;funcret
 17035  01C97C                     __end_of_OSCILLATOR_Initialize:
 17036                           	opt callstack 0
 17037                           
 17038 ;; *************** function _INTERRUPT_Initialize *****************
 17039 ;; Defined at:
 17040 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;		None
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;		None
 17045 ;; Return value:  Size  Location     Type
 17046 ;;                  1    wreg      void 
 17047 ;; Registers used:
 17048 ;;		None
 17049 ;; Tracked objects:
 17050 ;;		On entry : 0/0
 17051 ;;		On exit  : 0/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17058 ;;Total ram usage:        0 bytes
 17059 ;; Hardware stack levels used:    1
 17060 ;; Hardware stack levels required when called:   11
 17061 ;; This function calls:
 17062 ;;		Nothing
 17063 ;; This function is called by:
 17064 ;;		_SYSTEM_Initialize
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068                           	psect	text51
 17069  01C7D2                     __ptext51:
 17070                           	opt callstack 0
 17071  01C7D2                     _INTERRUPT_Initialize:
 17072                           	opt callstack 18
 17073                           
 17074                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 17075                           
 17076                           ; BSR set to: 14
 17077                           ;incstack = 0
 17078  01C7D2  8AF2               	bsf	4082,5,c	;volatile
 17079                           
 17080                           ;interrupt_manager.c: 60: IPR4bits.TMR1IP = 1;
 17081  01C7D4  010E               	movlb	14	; () banked
 17082  01C7D6  81BE               	bsf	190,0,b	;volatile
 17083                           
 17084                           ;interrupt_manager.c: 63: IPR0bits.INT2IP = 1;
 17085  01C7D8  85BA               	bsf	186,2,b	;volatile
 17086                           
 17087                           ;interrupt_manager.c: 66: IPR0bits.TMR0IP = 1;
 17088  01C7DA  8BBA               	bsf	186,5,b	;volatile
 17089                           
 17090                           ;interrupt_manager.c: 69: IPR3bits.RC2IP = 1;
 17091  01C7DC  8FBD               	bsf	189,7,b	;volatile
 17092                           
 17093                           ;interrupt_manager.c: 72: IPR1bits.ADTIP = 1;
 17094  01C7DE  83BB               	bsf	187,1,b	;volatile
 17095                           
 17096                           ;interrupt_manager.c: 75: IPR0bits.IOCIP = 1;
 17097  01C7E0  89BA               	bsf	186,4,b	;volatile
 17098                           
 17099                           ;interrupt_manager.c: 78: IPR3bits.TX2IP = 1;
 17100  01C7E2  8DBD               	bsf	189,6,b	;volatile
 17101                           
 17102                           ;interrupt_manager.c: 81: IPR0bits.INT1IP = 1;
 17103  01C7E4  83BA               	bsf	186,1,b	;volatile
 17104                           
 17105                           ;interrupt_manager.c: 85: IPR4bits.TMR2IP = 0;
 17106  01C7E6  93BE               	bcf	190,1,b	;volatile
 17107                           
 17108                           ;interrupt_manager.c: 88: IPR3bits.BCL2IP = 0;
 17109  01C7E8  97BD               	bcf	189,3,b	;volatile
 17110                           
 17111                           ;interrupt_manager.c: 91: IPR3bits.SSP2IP = 0;
 17112  01C7EA  95BD               	bcf	189,2,b	;volatile
 17113                           
 17114                           ;interrupt_manager.c: 94: IPR4bits.TMR3IP = 0;
 17115  01C7EC  95BE               	bcf	190,2,b	;volatile
 17116                           
 17117                           ;interrupt_manager.c: 97: IPR6bits.CCP2IP = 0;
 17118  01C7EE  93C0               	bcf	192,1,b	;volatile
 17119                           
 17120                           ; BSR set to: 14
 17121  01C7F0  0012               	return		;funcret
 17122  01C7F2                     __end_of_INTERRUPT_Initialize:
 17123                           	opt callstack 0
 17124                           
 17125 ;; *************** function _I2C2_Initialize *****************
 17126 ;; Defined at:
 17127 ;;		line 199 in file "mcc_generated_files/i2c2.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;		None
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;		None
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      void 
 17134 ;; Registers used:
 17135 ;;		wreg, status,2, status,0
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;Total ram usage:        0 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:   11
 17148 ;; This function calls:
 17149 ;;		Nothing
 17150 ;; This function is called by:
 17151 ;;		_SYSTEM_Initialize
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text52
 17156  01C2D8                     __ptext52:
 17157                           	opt callstack 0
 17158  01C2D8                     _I2C2_Initialize:
 17159                           	opt callstack 18
 17160                           
 17161                           ;i2c2.c: 201: i2c2_object.pTrHead = i2c2_tr_queue;
 17162                           
 17163                           ; BSR set to: 14
 17164                           ;incstack = 0
 17165  01C2D8  0EA0               	movlw	low _i2c2_tr_queue
 17166  01C2DA  0101               	movlb	1	; () banked
 17167  01C2DC  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 17168  01C2DE  0E01               	movlw	high _i2c2_tr_queue
 17169  01C2E0  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 17170                           
 17171                           ;i2c2.c: 202: i2c2_object.pTrTail = i2c2_tr_queue;
 17172  01C2E2  0EA0               	movlw	low _i2c2_tr_queue
 17173  01C2E4  6F61               	movwf	_i2c2_object& (0+255),b
 17174  01C2E6  0E01               	movlw	high _i2c2_tr_queue
 17175  01C2E8  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 17176                           
 17177                           ; BSR set to: 1
 17178                           ;i2c2.c: 203: i2c2_object.trStatus.s.empty = 1;
 17179  01C2EA  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 17180                           
 17181                           ; BSR set to: 1
 17182                           ;i2c2.c: 204: i2c2_object.trStatus.s.full = 0;
 17183  01C2EC  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 17184                           
 17185                           ; BSR set to: 1
 17186                           ;i2c2.c: 206: i2c2_object.i2cErrors = 0;
 17187  01C2EE  0E00               	movlw	0
 17188  01C2F0  6F67               	movwf	(_i2c2_object+6)& (0+255),b
 17189                           
 17190                           ; BSR set to: 1
 17191                           ;i2c2.c: 209: SSP2STAT = 0x00;
 17192  01C2F2  0E00               	movlw	0
 17193  01C2F4  010E               	movlb	14	; () banked
 17194  01C2F6  6F95               	movwf	149,b	;volatile
 17195                           
 17196                           ; BSR set to: 14
 17197                           ;i2c2.c: 211: SSP2CON1 = 0x28;
 17198  01C2F8  0E28               	movlw	40
 17199  01C2FA  6F96               	movwf	150,b	;volatile
 17200                           
 17201                           ; BSR set to: 14
 17202                           ;i2c2.c: 213: SSP2CON3 = 0x00;
 17203  01C2FC  0E00               	movlw	0
 17204  01C2FE  6F98               	movwf	152,b	;volatile
 17205                           
 17206                           ; BSR set to: 14
 17207                           ;i2c2.c: 215: SSP2ADD = 0x27;
 17208  01C300  0E27               	movlw	39
 17209  01C302  6F93               	movwf	147,b	;volatile
 17210                           
 17211                           ; BSR set to: 14
 17212                           ;i2c2.c: 218: PIR3bits.SSP2IF = 0;
 17213  01C304  95CD               	bcf	205,2,b	;volatile
 17214                           
 17215                           ; BSR set to: 14
 17216                           ;i2c2.c: 219: PIR3bits.BCL2IF = 0;
 17217  01C306  97CD               	bcf	205,3,b	;volatile
 17218                           
 17219                           ; BSR set to: 14
 17220                           ;i2c2.c: 222: PIE3bits.SSP2IE = 1;
 17221  01C308  85C5               	bsf	197,2,b	;volatile
 17222                           
 17223                           ; BSR set to: 14
 17224                           ;i2c2.c: 223: PIE3bits.BCL2IE = 1;
 17225  01C30A  87C5               	bsf	197,3,b	;volatile
 17226                           
 17227                           ; BSR set to: 14
 17228  01C30C  0012               	return		;funcret
 17229  01C30E                     __end_of_I2C2_Initialize:
 17230                           	opt callstack 0
 17231                           
 17232 ;; *************** function _FVR_Initialize *****************
 17233 ;; Defined at:
 17234 ;;		line 58 in file "mcc_generated_files/fvr.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;		None
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;		None
 17239 ;; Return value:  Size  Location     Type
 17240 ;;                  1    wreg      void 
 17241 ;; Registers used:
 17242 ;;		wreg, status,2
 17243 ;; Tracked objects:
 17244 ;;		On entry : 0/0
 17245 ;;		On exit  : 0/0
 17246 ;;		Unchanged: 0/0
 17247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17252 ;;Total ram usage:        0 bytes
 17253 ;; Hardware stack levels used:    1
 17254 ;; Hardware stack levels required when called:   11
 17255 ;; This function calls:
 17256 ;;		Nothing
 17257 ;; This function is called by:
 17258 ;;		_SYSTEM_Initialize
 17259 ;; This function uses a non-reentrant model
 17260 ;;
 17261                           
 17262                           	psect	text53
 17263  01CB96                     __ptext53:
 17264                           	opt callstack 0
 17265  01CB96                     _FVR_Initialize:
 17266                           	opt callstack 18
 17267                           
 17268                           ;fvr.c: 61: FVRCON = 0xB3;
 17269                           
 17270                           ; BSR set to: 14
 17271                           ;incstack = 0
 17272  01CB96  0EB3               	movlw	179
 17273  01CB98  010F               	movlb	15	; () banked
 17274  01CB9A  6F31               	movwf	49,b	;volatile
 17275                           
 17276                           ; BSR set to: 15
 17277                           ;fvr.c: 62: FVRCONbits.TSRNG = 1;
 17278  01CB9C  8931               	bsf	49,4,b	;volatile
 17279                           
 17280                           ; BSR set to: 15
 17281                           ;fvr.c: 63: FVRCONbits.TSEN = 1;
 17282  01CB9E  8B31               	bsf	49,5,b	;volatile
 17283                           
 17284                           ; BSR set to: 15
 17285  01CBA0  0012               	return		;funcret
 17286  01CBA2                     __end_of_FVR_Initialize:
 17287                           	opt callstack 0
 17288                           
 17289 ;; *************** function _EXT_INT_Initialize *****************
 17290 ;; Defined at:
 17291 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 17292 ;; Parameters:    Size  Location     Type
 17293 ;;		None
 17294 ;; Auto vars:     Size  Location     Type
 17295 ;;		None
 17296 ;; Return value:  Size  Location     Type
 17297 ;;                  1    wreg      void 
 17298 ;; Registers used:
 17299 ;;		wreg, status,2, status,0, cstack
 17300 ;; Tracked objects:
 17301 ;;		On entry : 0/0
 17302 ;;		On exit  : 0/0
 17303 ;;		Unchanged: 0/0
 17304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17309 ;;Total ram usage:        0 bytes
 17310 ;; Hardware stack levels used:    1
 17311 ;; Hardware stack levels required when called:   12
 17312 ;; This function calls:
 17313 ;;		_INT1_SetInterruptHandler
 17314 ;;		_INT2_SetInterruptHandler
 17315 ;; This function is called by:
 17316 ;;		_SYSTEM_Initialize
 17317 ;; This function uses a non-reentrant model
 17318 ;;
 17319                           
 17320                           	psect	text54
 17321  01C2A0                     __ptext54:
 17322                           	opt callstack 0
 17323  01C2A0                     _EXT_INT_Initialize:
 17324                           	opt callstack 17
 17325                           
 17326                           ;ext_int.c: 91: (PIR0bits.INT1IF = 0);
 17327                           
 17328                           ; BSR set to: 15
 17329                           ;incstack = 0
 17330  01C2A0  010E               	movlb	14	; () banked
 17331  01C2A2  93CA               	bcf	202,1,b	;volatile
 17332                           
 17333                           ;ext_int.c: 92: (INTCONbits.INT1EDG = 1);
 17334  01C2A4  82F2               	bsf	4082,1,c	;volatile
 17335                           
 17336                           ; BSR set to: 14
 17337                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 17338  01C2A6  0E48               	movlw	low _INT1_DefaultInterruptHandler
 17339  01C2A8  0102               	movlb	2	; () banked
 17340  01C2AA  6F00               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 17341  01C2AC  0ECC               	movlw	high _INT1_DefaultInterruptHandler
 17342  01C2AE  6F01               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17343  01C2B0  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 17344  01C2B2  6F02               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17345  01C2B4  EC8D  F0E5         	call	_INT1_SetInterruptHandler	;wreg free
 17346                           
 17347                           ;ext_int.c: 95: (PIE0bits.INT1IE = 1);
 17348  01C2B8  010E               	movlb	14	; () banked
 17349  01C2BA  83C2               	bsf	194,1,b	;volatile
 17350                           
 17351                           ; BSR set to: 14
 17352                           ;ext_int.c: 100: (PIR0bits.INT2IF = 0);
 17353  01C2BC  95CA               	bcf	202,2,b	;volatile
 17354                           
 17355                           ; BSR set to: 14
 17356                           ;ext_int.c: 101: (INTCONbits.INT2EDG = 1);
 17357  01C2BE  84F2               	bsf	4082,2,c	;volatile
 17358                           
 17359                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 17360  01C2C0  0E46               	movlw	low _INT2_DefaultInterruptHandler
 17361  01C2C2  0102               	movlb	2	; () banked
 17362  01C2C4  6F00               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 17363  01C2C6  0ECC               	movlw	high _INT2_DefaultInterruptHandler
 17364  01C2C8  6F01               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17365  01C2CA  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 17366  01C2CC  6F02               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17367  01C2CE  EC86  F0E5         	call	_INT2_SetInterruptHandler	;wreg free
 17368                           
 17369                           ;ext_int.c: 104: (PIE0bits.INT2IE = 1);
 17370  01C2D2  010E               	movlb	14	; () banked
 17371  01C2D4  85C2               	bsf	194,2,b	;volatile
 17372                           
 17373                           ; BSR set to: 14
 17374  01C2D6  0012               	return		;funcret
 17375  01C2D8                     __end_of_EXT_INT_Initialize:
 17376                           	opt callstack 0
 17377                           
 17378 ;; *************** function _INT2_SetInterruptHandler *****************
 17379 ;; Defined at:
 17380 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 17381 ;; Parameters:    Size  Location     Type
 17382 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17383 ;;		 -> rightCapTouchHandler(1), INT2_DefaultInterruptHandler(1), 
 17384 ;; Auto vars:     Size  Location     Type
 17385 ;;		None
 17386 ;; Return value:  Size  Location     Type
 17387 ;;                  1    wreg      void 
 17388 ;; Registers used:
 17389 ;;		wreg, status,2, status,0
 17390 ;; Tracked objects:
 17391 ;;		On entry : 0/0
 17392 ;;		On exit  : 0/0
 17393 ;;		Unchanged: 0/0
 17394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17395 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17398 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17399 ;;Total ram usage:        3 bytes
 17400 ;; Hardware stack levels used:    1
 17401 ;; Hardware stack levels required when called:   11
 17402 ;; This function calls:
 17403 ;;		Nothing
 17404 ;; This function is called by:
 17405 ;;		_EXT_INT_Initialize
 17406 ;;		_main
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410                           	psect	text55
 17411  01CB0C                     __ptext55:
 17412                           	opt callstack 0
 17413  01CB0C                     _INT2_SetInterruptHandler:
 17414                           	opt callstack 17
 17415                           
 17416                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 17417                           
 17418                           ; BSR set to: 14
 17419                           ;incstack = 0
 17420  01CB0C  C200  F183         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 17421  01CB10  C201  F184         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 17422  01CB14  C202  F185         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 17423  01CB18  0012               	return		;funcret
 17424  01CB1A                     __end_of_INT2_SetInterruptHandler:
 17425                           	opt callstack 0
 17426                           
 17427 ;; *************** function _INT1_SetInterruptHandler *****************
 17428 ;; Defined at:
 17429 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 17430 ;; Parameters:    Size  Location     Type
 17431 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17432 ;;		 -> leftCapTouchHandler(1), INT1_DefaultInterruptHandler(1), 
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  1    wreg      void 
 17437 ;; Registers used:
 17438 ;;		wreg, status,2, status,0
 17439 ;; Tracked objects:
 17440 ;;		On entry : 0/0
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17444 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17447 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17448 ;;Total ram usage:        3 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; Hardware stack levels required when called:   11
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		_EXT_INT_Initialize
 17455 ;;		_main
 17456 ;; This function uses a non-reentrant model
 17457 ;;
 17458                           
 17459                           	psect	text56
 17460  01CB1A                     __ptext56:
 17461                           	opt callstack 0
 17462  01CB1A                     _INT1_SetInterruptHandler:
 17463                           	opt callstack 17
 17464                           
 17465                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 17466                           
 17467                           ;incstack = 0
 17468  01CB1A  C200  F186         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 17469  01CB1E  C201  F187         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 17470  01CB22  C202  F188         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 17471  01CB26  0012               	return		;funcret
 17472  01CB28                     __end_of_INT1_SetInterruptHandler:
 17473                           	opt callstack 0
 17474                           
 17475 ;; *************** function _EUSART2_Initialize *****************
 17476 ;; Defined at:
 17477 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;		None
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;		None
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      void 
 17484 ;; Registers used:
 17485 ;;		wreg, status,2, status,0, cstack
 17486 ;; Tracked objects:
 17487 ;;		On entry : 0/0
 17488 ;;		On exit  : 0/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17495 ;;Total ram usage:        0 bytes
 17496 ;; Hardware stack levels used:    1
 17497 ;; Hardware stack levels required when called:   12
 17498 ;; This function calls:
 17499 ;;		_EUSART2_SetRxInterruptHandler
 17500 ;;		_EUSART2_SetTxInterruptHandler
 17501 ;; This function is called by:
 17502 ;;		_SYSTEM_Initialize
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           	psect	text57
 17507  01B714                     __ptext57:
 17508                           	opt callstack 0
 17509  01B714                     _EUSART2_Initialize:
 17510                           	opt callstack 17
 17511                           
 17512                           ;eusart2.c: 82: PIE3bits.RC2IE = 0;
 17513                           
 17514                           ;incstack = 0
 17515  01B714  010E               	movlb	14	; () banked
 17516  01B716  9FC5               	bcf	197,7,b	;volatile
 17517                           
 17518                           ; BSR set to: 14
 17519                           ;eusart2.c: 83: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 17520  01B718  0E98               	movlw	low _EUSART2_Receive_ISR
 17521  01B71A  0102               	movlb	2	; () banked
 17522  01B71C  6F00               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 17523  01B71E  0EAE               	movlw	high _EUSART2_Receive_ISR
 17524  01B720  6F01               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 17525  01B722  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 17526  01B724  6F02               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 17527  01B726  EC9B  F0E5         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 17528                           
 17529                           ;eusart2.c: 84: PIE3bits.TX2IE = 0;
 17530  01B72A  010E               	movlb	14	; () banked
 17531  01B72C  9DC5               	bcf	197,6,b	;volatile
 17532                           
 17533                           ;eusart2.c: 85: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 17534  01B72E  0EDC               	movlw	low _EUSART2_Transmit_ISR
 17535  01B730  0102               	movlb	2	; () banked
 17536  01B732  6F00               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 17537  01B734  0EC3               	movlw	high _EUSART2_Transmit_ISR
 17538  01B736  6F01               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 17539  01B738  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 17540  01B73A  6F02               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 17541  01B73C  EC94  F0E5         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 17542                           
 17543                           ;eusart2.c: 89: BAUD2CON = 0x08;
 17544  01B740  0E08               	movlw	8
 17545  01B742  010E               	movlb	14	; () banked
 17546  01B744  6F9F               	movwf	159,b	;volatile
 17547                           
 17548                           ; BSR set to: 14
 17549                           ;eusart2.c: 92: RC2STA = 0x90;
 17550  01B746  0E90               	movlw	144
 17551  01B748  6F9D               	movwf	157,b	;volatile
 17552                           
 17553                           ; BSR set to: 14
 17554                           ;eusart2.c: 95: TX2STA = 0x24;
 17555  01B74A  0E24               	movlw	36
 17556  01B74C  6F9E               	movwf	158,b	;volatile
 17557                           
 17558                           ; BSR set to: 14
 17559                           ;eusart2.c: 98: SP2BRGL = 0x8A;
 17560  01B74E  0E8A               	movlw	138
 17561  01B750  6F9B               	movwf	155,b	;volatile
 17562                           
 17563                           ; BSR set to: 14
 17564                           ;eusart2.c: 101: SP2BRGH = 0x00;
 17565  01B752  0E00               	movlw	0
 17566  01B754  6F9C               	movwf	156,b	;volatile
 17567                           
 17568                           ; BSR set to: 14
 17569                           ;eusart2.c: 105: eusart2TxHead = 0;
 17570  01B756  0E00               	movlw	0
 17571  01B758  0101               	movlb	1	; () banked
 17572  01B75A  6F95               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17573                           
 17574                           ; BSR set to: 1
 17575                           ;eusart2.c: 106: eusart2TxTail = 0;
 17576  01B75C  0E00               	movlw	0
 17577  01B75E  6F94               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17578                           
 17579                           ; BSR set to: 1
 17580                           ;eusart2.c: 107: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 17581  01B760  0E40               	movlw	64
 17582  01B762  6F93               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17583                           
 17584                           ; BSR set to: 1
 17585                           ;eusart2.c: 109: eusart2RxHead = 0;
 17586  01B764  0E00               	movlw	0
 17587  01B766  0100               	movlb	0	; () banked
 17588  01B768  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;eusart2.c: 110: eusart2RxTail = 0;
 17592  01B76A  0E00               	movlw	0
 17593  01B76C  0101               	movlb	1	; () banked
 17594  01B76E  6F92               	movwf	_eusart2RxTail& (0+255),b	;volatile
 17595                           
 17596                           ; BSR set to: 1
 17597                           ;eusart2.c: 111: eusart2RxCount = 0;
 17598  01B770  0E00               	movlw	0
 17599  01B772  6F91               	movwf	_eusart2RxCount& (0+255),b	;volatile
 17600                           
 17601                           ; BSR set to: 1
 17602                           ;eusart2.c: 114: PIE3bits.RC2IE = 1;
 17603  01B774  010E               	movlb	14	; () banked
 17604  01B776  8FC5               	bsf	197,7,b	;volatile
 17605                           
 17606                           ; BSR set to: 14
 17607  01B778  0012               	return		;funcret
 17608  01B77A                     __end_of_EUSART2_Initialize:
 17609                           	opt callstack 0
 17610                           
 17611 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17612 ;; Defined at:
 17613 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17614 ;; Parameters:    Size  Location     Type
 17615 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17616 ;;		 -> EUSART2_Transmit_ISR(1), 
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;		None
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      void 
 17621 ;; Registers used:
 17622 ;;		wreg, status,2, status,0
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17628 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17631 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17632 ;;Total ram usage:        3 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:   11
 17635 ;; This function calls:
 17636 ;;		Nothing
 17637 ;; This function is called by:
 17638 ;;		_EUSART2_Initialize
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text58
 17643  01CB28                     __ptext58:
 17644                           	opt callstack 0
 17645  01CB28                     _EUSART2_SetTxInterruptHandler:
 17646                           	opt callstack 17
 17647                           
 17648                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 17649                           
 17650                           ; BSR set to: 14
 17651                           ;incstack = 0
 17652  01CB28  C200  F180         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 17653  01CB2C  C201  F181         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 17654  01CB30  C202  F182         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 17655  01CB34  0012               	return		;funcret
 17656  01CB36                     __end_of_EUSART2_SetTxInterruptHandler:
 17657                           	opt callstack 0
 17658                           
 17659 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17660 ;; Defined at:
 17661 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17662 ;; Parameters:    Size  Location     Type
 17663 ;;  interruptHan    3    0[BANK2 ] PTR FTN()void 
 17664 ;;		 -> EUSART2_Receive_ISR(1), 
 17665 ;; Auto vars:     Size  Location     Type
 17666 ;;		None
 17667 ;; Return value:  Size  Location     Type
 17668 ;;                  1    wreg      void 
 17669 ;; Registers used:
 17670 ;;		wreg, status,2, status,0
 17671 ;; Tracked objects:
 17672 ;;		On entry : 0/0
 17673 ;;		On exit  : 0/0
 17674 ;;		Unchanged: 0/0
 17675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17676 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17679 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17680 ;;Total ram usage:        3 bytes
 17681 ;; Hardware stack levels used:    1
 17682 ;; Hardware stack levels required when called:   11
 17683 ;; This function calls:
 17684 ;;		Nothing
 17685 ;; This function is called by:
 17686 ;;		_EUSART2_Initialize
 17687 ;; This function uses a non-reentrant model
 17688 ;;
 17689                           
 17690                           	psect	text59
 17691  01CB36                     __ptext59:
 17692                           	opt callstack 0
 17693  01CB36                     _EUSART2_SetRxInterruptHandler:
 17694                           	opt callstack 17
 17695                           
 17696                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 17697                           
 17698                           ;incstack = 0
 17699  01CB36  C200  F17D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 17700  01CB3A  C201  F17E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 17701  01CB3E  C202  F17F         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 17702  01CB42  0012               	return		;funcret
 17703  01CB44                     __end_of_EUSART2_SetRxInterruptHandler:
 17704                           	opt callstack 0
 17705                           
 17706 ;; *************** function _CCP2_Initialize *****************
 17707 ;; Defined at:
 17708 ;;		line 61 in file "mcc_generated_files/ccp2.c"
 17709 ;; Parameters:    Size  Location     Type
 17710 ;;		None
 17711 ;; Auto vars:     Size  Location     Type
 17712 ;;		None
 17713 ;; Return value:  Size  Location     Type
 17714 ;;                  1    wreg      void 
 17715 ;; Registers used:
 17716 ;;		wreg, status,2
 17717 ;; Tracked objects:
 17718 ;;		On entry : 0/0
 17719 ;;		On exit  : 0/0
 17720 ;;		Unchanged: 0/0
 17721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17726 ;;Total ram usage:        0 bytes
 17727 ;; Hardware stack levels used:    1
 17728 ;; Hardware stack levels required when called:   11
 17729 ;; This function calls:
 17730 ;;		Nothing
 17731 ;; This function is called by:
 17732 ;;		_SYSTEM_Initialize
 17733 ;; This function uses a non-reentrant model
 17734 ;;
 17735                           
 17736                           	psect	text60
 17737  01C72E                     __ptext60:
 17738                           	opt callstack 0
 17739  01C72E                     _CCP2_Initialize:
 17740                           	opt callstack 18
 17741                           
 17742                           ;ccp2.c: 66: CCP2CON = 0x87;
 17743                           
 17744                           ;incstack = 0
 17745  01C72E  0E87               	movlw	135
 17746  01C730  6EA8               	movwf	4008,c	;volatile
 17747                           
 17748                           ;ccp2.c: 69: CCP2CAP = 0x00;
 17749  01C732  0E00               	movlw	0
 17750  01C734  6EA9               	movwf	4009,c	;volatile
 17751                           
 17752                           ;ccp2.c: 72: CCPR2H = 0x00;
 17753  01C736  0E00               	movlw	0
 17754  01C738  6EA7               	movwf	4007,c	;volatile
 17755                           
 17756                           ;ccp2.c: 75: CCPR2L = 0x00;
 17757  01C73A  0E00               	movlw	0
 17758  01C73C  6EA6               	movwf	4006,c	;volatile
 17759                           
 17760                           ;ccp2.c: 78: CCPTMRSbits.C2TSEL = 0x3;
 17761  01C73E  0E0C               	movlw	12
 17762  01C740  12AE               	iorwf	4014,f,c	;volatile
 17763                           
 17764                           ;ccp2.c: 81: PIR6bits.CCP2IF = 0;
 17765  01C742  010E               	movlb	14	; () banked
 17766  01C744  93D0               	bcf	208,1,b	;volatile
 17767                           
 17768                           ; BSR set to: 14
 17769                           ;ccp2.c: 84: PIE6bits.CCP2IE = 1;
 17770  01C746  83C8               	bsf	200,1,b	;volatile
 17771                           
 17772                           ;ccp2.c: 86: QI_current_edge = qi_period_rising_1;
 17773  01C748  0E00               	movlw	0
 17774  01C74A  0101               	movlb	1	; () banked
 17775  01C74C  6F90               	movwf	_QI_current_edge& (0+255),b
 17776                           
 17777                           ; BSR set to: 1
 17778  01C74E  0012               	return		;funcret
 17779  01C750                     __end_of_CCP2_Initialize:
 17780                           	opt callstack 0
 17781                           
 17782 ;; *************** function _ADCC_Initialize *****************
 17783 ;; Defined at:
 17784 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;		None
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;		None
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  1    wreg      void 
 17791 ;; Registers used:
 17792 ;;		wreg, status,2, status,0, cstack
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17802 ;;Total ram usage:        0 bytes
 17803 ;; Hardware stack levels used:    1
 17804 ;; Hardware stack levels required when called:   12
 17805 ;; This function calls:
 17806 ;;		_ADCC_SetADTIInterruptHandler
 17807 ;; This function is called by:
 17808 ;;		_SYSTEM_Initialize
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           	psect	text61
 17813  01B846                     __ptext61:
 17814                           	opt callstack 0
 17815  01B846                     _ADCC_Initialize:
 17816                           	opt callstack 17
 17817                           
 17818                           ;adcc.c: 67: ADLTHL = 0x00;
 17819                           
 17820                           ; BSR set to: 1
 17821                           ;incstack = 0
 17822  01B846  0E00               	movlw	0
 17823  01B848  6E6A               	movwf	3946,c	;volatile
 17824                           
 17825                           ;adcc.c: 69: ADLTHH = 0x00;
 17826  01B84A  0E00               	movlw	0
 17827  01B84C  6E6B               	movwf	3947,c	;volatile
 17828                           
 17829                           ;adcc.c: 71: ADUTHL = 0x00;
 17830  01B84E  0E00               	movlw	0
 17831  01B850  6E6C               	movwf	3948,c	;volatile
 17832                           
 17833                           ;adcc.c: 73: ADUTHH = 0x00;
 17834  01B852  0E00               	movlw	0
 17835  01B854  6E6D               	movwf	3949,c	;volatile
 17836                           
 17837                           ;adcc.c: 75: ADSTPTL = 0x00;
 17838  01B856  0E00               	movlw	0
 17839  01B858  6E68               	movwf	3944,c	;volatile
 17840                           
 17841                           ;adcc.c: 77: ADSTPTH = 0x00;
 17842  01B85A  0E00               	movlw	0
 17843  01B85C  6E69               	movwf	3945,c	;volatile
 17844                           
 17845                           ;adcc.c: 79: ADRPT = 0xFF;
 17846  01B85E  6866               	setf	3942,c	;volatile
 17847                           
 17848                           ;adcc.c: 81: ADPCH = 0x00;
 17849  01B860  0E00               	movlw	0
 17850  01B862  010F               	movlb	15	; () banked
 17851  01B864  6F5F               	movwf	95,b	;volatile
 17852                           
 17853                           ;adcc.c: 83: ADCAP = 0x00;
 17854  01B866  0E00               	movlw	0
 17855  01B868  6F5D               	movwf	93,b	;volatile
 17856                           
 17857                           ;adcc.c: 85: ADCON1 = 0x00;
 17858  01B86A  0E00               	movlw	0
 17859  01B86C  6F59               	movwf	89,b	;volatile
 17860                           
 17861                           ;adcc.c: 87: ADCON2 = 0x04;
 17862  01B86E  0E04               	movlw	4
 17863  01B870  6F5A               	movwf	90,b	;volatile
 17864                           
 17865                           ;adcc.c: 89: ADCON3 = 0x5F;
 17866  01B872  0E5F               	movlw	95
 17867  01B874  6F5B               	movwf	91,b	;volatile
 17868                           
 17869                           ;adcc.c: 91: ADSTAT = 0x00;
 17870  01B876  0E00               	movlw	0
 17871  01B878  6E65               	movwf	3941,c	;volatile
 17872                           
 17873                           ;adcc.c: 93: ADREF = 0x12;
 17874  01B87A  0E12               	movlw	18
 17875  01B87C  6F58               	movwf	88,b	;volatile
 17876                           
 17877                           ;adcc.c: 95: ADACT = 0x00;
 17878  01B87E  0E00               	movlw	0
 17879  01B880  6F56               	movwf	86,b	;volatile
 17880                           
 17881                           ;adcc.c: 97: ADCLK = 0x1F;
 17882  01B882  0E1F               	movlw	31
 17883  01B884  6F57               	movwf	87,b	;volatile
 17884                           
 17885                           ;adcc.c: 99: ADCON0 = 0xC4;
 17886  01B886  0EC4               	movlw	196
 17887  01B888  6E60               	movwf	3936,c	;volatile
 17888                           
 17889                           ; BSR set to: 15
 17890                           ;adcc.c: 101: ADACQ = 0xFF;
 17891  01B88A  695C               	setf	92,b	;volatile
 17892                           
 17893                           ; BSR set to: 15
 17894                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 17895  01B88C  010E               	movlb	14	; () banked
 17896  01B88E  93CB               	bcf	203,1,b	;volatile
 17897                           
 17898                           ; BSR set to: 14
 17899                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 17900  01B890  83C3               	bsf	195,1,b	;volatile
 17901                           
 17902                           ; BSR set to: 14
 17903                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 17904  01B892  0E4A               	movlw	low _ADCC_DefaultInterruptHandler
 17905  01B894  0102               	movlb	2	; () banked
 17906  01B896  6F00               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 17907  01B898  0ECC               	movlw	high _ADCC_DefaultInterruptHandler
 17908  01B89A  6F01               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 17909  01B89C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17910  01B89E  6F02               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 17911  01B8A0  ECA2  F0E5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 17912  01B8A4  0012               	return		;funcret
 17913  01B8A6                     __end_of_ADCC_Initialize:
 17914                           	opt callstack 0
 17915                           
 17916 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17917 ;; Defined at:
 17918 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17919 ;; Parameters:    Size  Location     Type
 17920 ;;  InterruptHan    3    0[BANK2 ] PTR FTN()void 
 17921 ;;		 -> ADC_PostProcessingHandler(1), ADCC_DefaultInterruptHandler(1), 
 17922 ;; Auto vars:     Size  Location     Type
 17923 ;;		None
 17924 ;; Return value:  Size  Location     Type
 17925 ;;                  1    wreg      void 
 17926 ;; Registers used:
 17927 ;;		wreg, status,2, status,0
 17928 ;; Tracked objects:
 17929 ;;		On entry : 0/0
 17930 ;;		On exit  : 0/0
 17931 ;;		Unchanged: 0/0
 17932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17933 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17936 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17937 ;;Total ram usage:        3 bytes
 17938 ;; Hardware stack levels used:    1
 17939 ;; Hardware stack levels required when called:   11
 17940 ;; This function calls:
 17941 ;;		Nothing
 17942 ;; This function is called by:
 17943 ;;		_ADCC_Initialize
 17944 ;;		_main
 17945 ;; This function uses a non-reentrant model
 17946 ;;
 17947                           
 17948                           	psect	text62
 17949  01CB44                     __ptext62:
 17950                           	opt callstack 0
 17951  01CB44                     _ADCC_SetADTIInterruptHandler:
 17952                           	opt callstack 17
 17953                           
 17954                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 17955                           
 17956                           ;incstack = 0
 17957  01CB44  C200  F0CC         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 17958  01CB48  C201  F0CD         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 17959  01CB4C  C202  F0CE         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 17960  01CB50  0012               	return		;funcret
 17961  01CB52                     __end_of_ADCC_SetADTIInterruptHandler:
 17962                           	opt callstack 0
 17963                           
 17964 ;; *************** function _OLED_updateHandler *****************
 17965 ;; Defined at:
 17966 ;;		line 324 in file "oled.c"
 17967 ;; Parameters:    Size  Location     Type
 17968 ;;		None
 17969 ;; Auto vars:     Size  Location     Type
 17970 ;;  rev_id_str     17   17[BANK3 ] unsigned char [17]
 17971 ;;  dev_id_str     17    0[BANK3 ] unsigned char [17]
 17972 ;; Return value:  Size  Location     Type
 17973 ;;                  1    wreg      void 
 17974 ;; Registers used:
 17975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17976 ;; Tracked objects:
 17977 ;;		On entry : 0/0
 17978 ;;		On exit  : 0/0
 17979 ;;		Unchanged: 0/0
 17980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17982 ;;      Locals:         0       0       0       0      36       0       0       0       0       0       0       0       
      +0       0       0       0
 17983 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17984 ;;      Totals:         0       0       0       2      36       0       0       0       0       0       0       0       
      +0       0       0       0
 17985 ;;Total ram usage:       38 bytes
 17986 ;; Hardware stack levels used:    1
 17987 ;; Hardware stack levels required when called:   17
 17988 ;; This function calls:
 17989 ;;		_OLED_UpdateFromRAMBuffer
 17990 ;;		_floatToEngineeringFormat
 17991 ;;		_getCauseOfResetStringSmall
 17992 ;;		_getDaysFromOnTime
 17993 ;;		_getDeviceID
 17994 ;;		_getHoursFromOnTime
 17995 ;;		_getMajorRevisionID
 17996 ;;		_getMinorRevisionID
 17997 ;;		_getMinutesFromOnTime
 17998 ;;		_getNXQChargeStateStringCaps
 17999 ;;		_getSecondsFromOnTime
 18000 ;;		_getYearsFromOnTime
 18001 ;;		_sprintf
 18002 ;;		_strcpy
 18003 ;; This function is called by:
 18004 ;;		_main
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text63
 18009  012E3C                     __ptext63:
 18010                           	opt callstack 0
 18011  012E3C                     _OLED_updateHandler:
 18012                           	opt callstack 13
 18013                           
 18014                           ;oled.c: 326: switch (OLED_Frame) {
 18015                           
 18016                           ;incstack = 0
 18017  012E3C  EFDA  F09F         	goto	l22294
 18018  012E40                     l21804:
 18019                           
 18020                           ; BSR set to: 2
 18021                           ;oled.c: 330: OLED_update_flag = 0;
 18022  012E40  0E00               	movlw	0
 18023  012E42  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18024                           
 18025                           ; BSR set to: 2
 18026                           ;oled.c: 333: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 18027  012E44  0E00               	movlw	low _OLED_RAM_Buffer
 18028  012E46  6F03               	movwf	strcpy@to& (0+255),b
 18029  012E48  0E03               	movlw	high _OLED_RAM_Buffer
 18030  012E4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18031  012E4C  0E47               	movlw	low STR_62
 18032  012E4E  6F05               	movwf	strcpy@from& (0+255),b
 18033  012E50  0EFC               	movlw	high STR_62
 18034  012E52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18035  012E54  EC7B  F0DE         	call	_strcpy	;wreg free
 18036                           
 18037                           ;oled.c: 334: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 18038  012E58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18039  012E5A  0102               	movlb	2	; () banked
 18040  012E5C  6F03               	movwf	strcpy@to& (0+255),b
 18041  012E5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18042  012E60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18043  012E62  0E82               	movlw	low STR_63
 18044  012E64  6F05               	movwf	strcpy@from& (0+255),b
 18045  012E66  0EFB               	movlw	high STR_63
 18046  012E68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18047  012E6A  EC7B  F0DE         	call	_strcpy	;wreg free
 18048                           
 18049                           ;oled.c: 335: strcpy(OLED_RAM_Buffer.line2, "Cause of Reset:");
 18050  012E6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18051  012E70  0102               	movlb	2	; () banked
 18052  012E72  6F03               	movwf	strcpy@to& (0+255),b
 18053  012E74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18054  012E76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18055  012E78  0E72               	movlw	low STR_64
 18056  012E7A  6F05               	movwf	strcpy@from& (0+255),b
 18057  012E7C  0EFB               	movlw	high STR_64
 18058  012E7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18059  012E80  EC7B  F0DE         	call	_strcpy	;wreg free
 18060                           
 18061                           ;oled.c: 336: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 18062  012E84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18063  012E86  0102               	movlb	2	; () banked
 18064  012E88  6F03               	movwf	strcpy@to& (0+255),b
 18065  012E8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18066  012E8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18067  012E8E  51FF               	movf	_reset_cause& (0+255),w,b
 18068  012E90  EC37  F0E2         	call	_getCauseOfResetStringSmall
 18069  012E94  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 18070  012E98  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 18071  012E9C  EC7B  F0DE         	call	_strcpy	;wreg free
 18072                           
 18073                           ;oled.c: 337: OLED_UpdateFromRAMBuffer();
 18074  012EA0  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18075                           
 18076                           ;oled.c: 338: OLED_Frame = OLED_Boot_Frame_2;
 18077  012EA4  0E01               	movlw	1
 18078  012EA6                     L3:
 18079  012EA6  0102               	movlb	2	; () banked
 18080  012EA8  6FD7               	movwf	_OLED_Frame& (0+255),b
 18081                           
 18082                           ; BSR set to: 2
 18083                           ;oled.c: 339: OLED_update_time = 3;
 18084  012EAA  0E03               	movlw	3
 18085  012EAC  0100               	movlb	0	; () banked
 18086  012EAE  6FFB               	movwf	_OLED_update_time& (0+255),b
 18087                           
 18088                           ;oled.c: 341: break;
 18089  012EB0  0012               	return	
 18090  012EB2                     l21820:
 18091                           
 18092                           ; BSR set to: 2
 18093                           ;oled.c: 345: OLED_update_flag = 0;
 18094  012EB2  0E00               	movlw	0
 18095  012EB4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18096                           
 18097                           ; BSR set to: 2
 18098                           ;oled.c: 349: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 18099  012EB6  0E00               	movlw	low _OLED_RAM_Buffer
 18100  012EB8  6F03               	movwf	strcpy@to& (0+255),b
 18101  012EBA  0E03               	movlw	high _OLED_RAM_Buffer
 18102  012EBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18103  012EBE  0EE6               	movlw	low STR_65
 18104  012EC0  6F05               	movwf	strcpy@from& (0+255),b
 18105  012EC2  0EFD               	movlw	high STR_65
 18106  012EC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18107  012EC6  EC7B  F0DE         	call	_strcpy	;wreg free
 18108                           
 18109                           ;oled.c: 350: char dev_id_str[17];;oled.c: 351: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 18110  012ECA  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 18111  012ECC  0102               	movlb	2	; () banked
 18112  012ECE  6F90               	movwf	sprintf@wh& (0+255),b
 18113  012ED0  0E03               	movlw	high OLED_updateHandler@dev_id_str
 18114  012ED2  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18115  012ED4  0E9F               	movlw	low STR_66
 18116  012ED6  6F92               	movwf	sprintf@f& (0+255),b
 18117  012ED8  0EFF               	movlw	high STR_66
 18118  012EDA  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18119  012EDC  ECF9  F0E3         	call	_getDeviceID	;wreg free
 18120  012EE0  C20B  F294         	movff	?_getDeviceID,?_sprintf+4
 18121  012EE4  C20C  F295         	movff	?_getDeviceID+1,?_sprintf+5
 18122  012EE8  EC9F  F0DE         	call	_sprintf	;wreg free
 18123                           
 18124                           ;oled.c: 352: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 18125  012EEC  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18126  012EEE  0102               	movlb	2	; () banked
 18127  012EF0  6F03               	movwf	strcpy@to& (0+255),b
 18128  012EF2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18129  012EF4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18130  012EF6  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 18131  012EF8  6F05               	movwf	strcpy@from& (0+255),b
 18132  012EFA  0E03               	movlw	high OLED_updateHandler@dev_id_str
 18133  012EFC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18134  012EFE  EC7B  F0DE         	call	_strcpy	;wreg free
 18135                           
 18136                           ;oled.c: 355: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 18137  012F02  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18138  012F04  0102               	movlb	2	; () banked
 18139  012F06  6F03               	movwf	strcpy@to& (0+255),b
 18140  012F08  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18141  012F0A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18142  012F0C  0EE1               	movlw	low STR_67
 18143  012F0E  6F05               	movwf	strcpy@from& (0+255),b
 18144  012F10  0EFC               	movlw	high STR_67
 18145  012F12  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18146  012F14  EC7B  F0DE         	call	_strcpy	;wreg free
 18147                           
 18148                           ;oled.c: 356: char rev_id_str[17];;oled.c: 357: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 18149  012F18  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 18150  012F1A  0102               	movlb	2	; () banked
 18151  012F1C  6F90               	movwf	sprintf@wh& (0+255),b
 18152  012F1E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 18153  012F20  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18154  012F22  0E71               	movlw	low STR_68
 18155  012F24  6F92               	movwf	sprintf@f& (0+255),b
 18156  012F26  0EFF               	movlw	high STR_68
 18157  012F28  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18158  012F2A  ECF6  F0E0         	call	_getMajorRevisionID	;wreg free
 18159  012F2E  0102               	movlb	2	; () banked
 18160  012F30  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 18161  012F32  0E41               	movlw	65
 18162  012F34  25B9               	addwf	??_OLED_updateHandler& (0+255),w,b
 18163  012F36  6F94               	movwf	(?_sprintf+4)& (0+255),b
 18164  012F38  6B95               	clrf	(?_sprintf+5)& (0+255),b
 18165  012F3A  0E00               	movlw	0
 18166  012F3C  2395               	addwfc	(?_sprintf+5)& (0+255),f,b
 18167  012F3E  EC4D  F0E3         	call	_getMinorRevisionID	;wreg free
 18168  012F42  0102               	movlb	2	; () banked
 18169  012F44  6FBA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 18170  012F46  51BA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 18171  012F48  6F96               	movwf	(?_sprintf+6)& (0+255),b
 18172  012F4A  6B97               	clrf	(?_sprintf+7)& (0+255),b
 18173  012F4C  EC9F  F0DE         	call	_sprintf	;wreg free
 18174                           
 18175                           ;oled.c: 358: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 18176  012F50  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18177  012F52  0102               	movlb	2	; () banked
 18178  012F54  6F03               	movwf	strcpy@to& (0+255),b
 18179  012F56  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18180  012F58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18181  012F5A  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 18182  012F5C  6F05               	movwf	strcpy@from& (0+255),b
 18183  012F5E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 18184  012F60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18185  012F62  EC7B  F0DE         	call	_strcpy	;wreg free
 18186                           
 18187                           ;oled.c: 360: OLED_UpdateFromRAMBuffer();
 18188  012F66  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18189                           
 18190                           ;oled.c: 361: OLED_Frame = OLED_Boot_Frame_3;
 18191  012F6A  0E02               	movlw	2
 18192  012F6C  D79C               	goto	L3
 18193  012F6E                     l21840:
 18194                           
 18195                           ; BSR set to: 2
 18196                           ;oled.c: 368: OLED_update_flag = 0;
 18197  012F6E  0E00               	movlw	0
 18198  012F70  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18199                           
 18200                           ; BSR set to: 2
 18201                           ;oled.c: 370: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 18202  012F72  0E00               	movlw	low _OLED_RAM_Buffer
 18203  012F74  6F03               	movwf	strcpy@to& (0+255),b
 18204  012F76  0E03               	movlw	high _OLED_RAM_Buffer
 18205  012F78  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18206  012F7A  0E62               	movlw	low STR_69
 18207  012F7C  6F05               	movwf	strcpy@from& (0+255),b
 18208  012F7E  0EFB               	movlw	high STR_69
 18209  012F80  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18210  012F82  EC7B  F0DE         	call	_strcpy	;wreg free
 18211                           
 18212                           ;oled.c: 371: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 18213  012F86  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18214  012F88  0102               	movlb	2	; () banked
 18215  012F8A  6F03               	movwf	strcpy@to& (0+255),b
 18216  012F8C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18217  012F8E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18218  012F90  0E74               	movlw	low STR_70
 18219  012F92  6F05               	movwf	strcpy@from& (0+255),b
 18220  012F94  0EFE               	movlw	high STR_70
 18221  012F96  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18222  012F98  EC7B  F0DE         	call	_strcpy	;wreg free
 18223                           
 18224                           ;oled.c: 372: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 18225  012F9C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18226  012F9E  0102               	movlb	2	; () banked
 18227  012FA0  6F03               	movwf	strcpy@to& (0+255),b
 18228  012FA2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18229  012FA4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18230  012FA6  0E92               	movlw	low STR_71
 18231  012FA8  6F05               	movwf	strcpy@from& (0+255),b
 18232  012FAA  0EFB               	movlw	high STR_71
 18233  012FAC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18234  012FAE  EC7B  F0DE         	call	_strcpy	;wreg free
 18235                           
 18236                           ;oled.c: 373: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 18237  012FB2  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18238  012FB4  0102               	movlb	2	; () banked
 18239  012FB6  6F03               	movwf	strcpy@to& (0+255),b
 18240  012FB8  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18241  012FBA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18242  012FBC  0EFE               	movlw	low STR_72
 18243  012FBE  6F05               	movwf	strcpy@from& (0+255),b
 18244  012FC0  0EFB               	movlw	high STR_72
 18245  012FC2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18246  012FC4  EC7B  F0DE         	call	_strcpy	;wreg free
 18247                           
 18248                           ;oled.c: 375: OLED_UpdateFromRAMBuffer();
 18249  012FC8  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18250                           
 18251                           ;oled.c: 376: OLED_Frame = OLED_Boot_Frame_4;
 18252  012FCC  0E03               	movlw	3
 18253  012FCE  D76B               	goto	L3
 18254  012FD0                     l21856:
 18255                           
 18256                           ; BSR set to: 2
 18257                           ;oled.c: 383: OLED_update_flag = 0;
 18258  012FD0  0E00               	movlw	0
 18259  012FD2  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18260                           
 18261                           ; BSR set to: 2
 18262                           ;oled.c: 385: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 18263  012FD4  0E00               	movlw	low _OLED_RAM_Buffer
 18264  012FD6  6F03               	movwf	strcpy@to& (0+255),b
 18265  012FD8  0E03               	movlw	high _OLED_RAM_Buffer
 18266  012FDA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18267  012FDC  0EA9               	movlw	low STR_73
 18268  012FDE  6F05               	movwf	strcpy@from& (0+255),b
 18269  012FE0  0EFC               	movlw	high STR_73
 18270  012FE2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18271  012FE4  EC7B  F0DE         	call	_strcpy	;wreg free
 18272                           
 18273                           ;oled.c: 386: strcpy(OLED_RAM_Buffer.line1, "QI Enabled");
 18274  012FE8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18275  012FEA  0102               	movlb	2	; () banked
 18276  012FEC  6F03               	movwf	strcpy@to& (0+255),b
 18277  012FEE  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18278  012FF0  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18279  012FF2  0EF1               	movlw	low STR_74
 18280  012FF4  6F05               	movwf	strcpy@from& (0+255),b
 18281  012FF6  0EFD               	movlw	high STR_74
 18282  012FF8  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18283  012FFA  EC7B  F0DE         	call	_strcpy	;wreg free
 18284                           
 18285                           ;oled.c: 387: strcpy(OLED_RAM_Buffer.line2, "More Settings");
 18286  012FFE  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18287  013000  0102               	movlb	2	; () banked
 18288  013002  6F03               	movwf	strcpy@to& (0+255),b
 18289  013004  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18290  013006  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18291  013008  0EB7               	movlw	low STR_75
 18292  01300A  6F05               	movwf	strcpy@from& (0+255),b
 18293  01300C  0EFC               	movlw	high STR_75
 18294  01300E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18295  013010  EC7B  F0DE         	call	_strcpy	;wreg free
 18296                           
 18297                           ;oled.c: 388: strcpy(OLED_RAM_Buffer.line3, "via USB, 'Help'");
 18298  013014  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18299  013016  0102               	movlb	2	; () banked
 18300  013018  6F03               	movwf	strcpy@to& (0+255),b
 18301  01301A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18302  01301C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18303  01301E  0E52               	movlw	low STR_76
 18304  013020  6F05               	movwf	strcpy@from& (0+255),b
 18305  013022  0EFB               	movlw	high STR_76
 18306  013024  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18307  013026  EC7B  F0DE         	call	_strcpy	;wreg free
 18308                           
 18309                           ;oled.c: 390: OLED_UpdateFromRAMBuffer();
 18310  01302A  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18311                           
 18312                           ;oled.c: 391: OLED_Frame = OLED_Charge_Status;
 18313  01302E  0E04               	movlw	4
 18314  013030  D73A               	goto	L3
 18315  013032                     l21872:
 18316                           
 18317                           ; BSR set to: 2
 18318                           ;oled.c: 398: OLED_update_flag = 0;
 18319  013032  0E00               	movlw	0
 18320  013034  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18321                           
 18322                           ; BSR set to: 2
 18323                           ;oled.c: 400: strcpy(OLED_RAM_Buffer.line0, "Charge Status:");
 18324  013036  0E00               	movlw	low _OLED_RAM_Buffer
 18325  013038  6F03               	movwf	strcpy@to& (0+255),b
 18326  01303A  0E03               	movlw	high _OLED_RAM_Buffer
 18327  01303C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18328  01303E  0EE0               	movlw	low STR_77
 18329  013040  6F05               	movwf	strcpy@from& (0+255),b
 18330  013042  0EFB               	movlw	high STR_77
 18331  013044  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18332  013046  EC7B  F0DE         	call	_strcpy	;wreg free
 18333                           
 18334                           ;oled.c: 401: strcpy(OLED_RAM_Buffer.line1, " ");
 18335  01304A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18336  01304C  0102               	movlb	2	; () banked
 18337  01304E  6F03               	movwf	strcpy@to& (0+255),b
 18338  013050  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18339  013052  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18340  013054  0EAA               	movlw	low (STR_56+10)
 18341  013056  6F05               	movwf	strcpy@from& (0+255),b
 18342  013058  0EFD               	movlw	high (STR_56+10)
 18343  01305A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18344  01305C  EC7B  F0DE         	call	_strcpy	;wreg free
 18345                           
 18346                           ;oled.c: 402: strcpy(OLED_RAM_Buffer.line2, getNXQChargeStateStringCaps());
 18347  013060  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18348  013062  0102               	movlb	2	; () banked
 18349  013064  6F03               	movwf	strcpy@to& (0+255),b
 18350  013066  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18351  013068  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18352  01306A  ECB0  F0DC         	call	_getNXQChargeStateStringCaps	;wreg free
 18353  01306E  C200  F205         	movff	?_getNXQChargeStateStringCaps,strcpy@from
 18354  013072  C201  F206         	movff	?_getNXQChargeStateStringCaps+1,strcpy@from+1
 18355  013076  EC7B  F0DE         	call	_strcpy	;wreg free
 18356                           
 18357                           ;oled.c: 403: strcpy(OLED_RAM_Buffer.line3, " ");
 18358  01307A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18359  01307C  0102               	movlb	2	; () banked
 18360  01307E  6F03               	movwf	strcpy@to& (0+255),b
 18361  013080  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18362  013082  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18363  013084  0EAA               	movlw	low (STR_56+10)
 18364  013086  6F05               	movwf	strcpy@from& (0+255),b
 18365  013088  0EFD               	movlw	high (STR_56+10)
 18366  01308A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18367  01308C  EC7B  F0DE         	call	_strcpy	;wreg free
 18368                           
 18369                           ;oled.c: 405: OLED_UpdateFromRAMBuffer();
 18370  013090  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18371                           
 18372                           ;oled.c: 406: OLED_Frame = OLED_Charge_Status;
 18373  013094  0E04               	movlw	4
 18374  013096                     L4:
 18375  013096  0102               	movlb	2	; () banked
 18376  013098  6FD7               	movwf	_OLED_Frame& (0+255),b
 18377                           
 18378                           ; BSR set to: 2
 18379                           ;oled.c: 407: OLED_update_time = 1;
 18380  01309A  0E01               	movlw	1
 18381  01309C  0100               	movlb	0	; () banked
 18382  01309E  6FFB               	movwf	_OLED_update_time& (0+255),b
 18383                           
 18384                           ;oled.c: 409: break;
 18385  0130A0  0012               	return	
 18386  0130A2                     l21888:
 18387                           
 18388                           ; BSR set to: 2
 18389                           ;oled.c: 413: OLED_update_flag = 0;
 18390  0130A2  0E00               	movlw	0
 18391  0130A4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18392                           
 18393                           ; BSR set to: 2
 18394                           ;oled.c: 415: strcpy(OLED_RAM_Buffer.line0, "+12V Voltage:");
 18395  0130A6  0E00               	movlw	low _OLED_RAM_Buffer
 18396  0130A8  6F03               	movwf	strcpy@to& (0+255),b
 18397  0130AA  0E03               	movlw	high _OLED_RAM_Buffer
 18398  0130AC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18399  0130AE  0E55               	movlw	low STR_80
 18400  0130B0  6F05               	movwf	strcpy@from& (0+255),b
 18401  0130B2  0EFC               	movlw	high STR_80
 18402  0130B4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18403  0130B6  EC7B  F0DE         	call	_strcpy	;wreg free
 18404                           
 18405                           ;oled.c: 416: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos12_adc_result);
 18406  0130BA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18407  0130BC  0102               	movlb	2	; () banked
 18408  0130BE  6F90               	movwf	sprintf@wh& (0+255),b
 18409  0130C0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18410  0130C2  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18411  0130C4  0E52               	movlw	low STR_81
 18412  0130C6  6F92               	movwf	sprintf@f& (0+255),b
 18413  0130C8  0EFF               	movlw	high STR_81
 18414  0130CA  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18415  0130CC  C0E9  F294         	movff	_adc_results+12,?_sprintf+4
 18416  0130D0  C0EA  F295         	movff	_adc_results+13,?_sprintf+5
 18417  0130D4  C0EB  F296         	movff	_adc_results+14,?_sprintf+6
 18418  0130D8  C0EC  F297         	movff	_adc_results+15,?_sprintf+7
 18419  0130DC  EC9F  F0DE         	call	_sprintf	;wreg free
 18420                           
 18421                           ;oled.c: 417: strcpy(OLED_RAM_Buffer.line2, " ");
 18422  0130E0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18423  0130E2  0102               	movlb	2	; () banked
 18424  0130E4  6F03               	movwf	strcpy@to& (0+255),b
 18425  0130E6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18426  0130E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18427  0130EA  0EAA               	movlw	low (STR_56+10)
 18428  0130EC  6F05               	movwf	strcpy@from& (0+255),b
 18429  0130EE  0EFD               	movlw	high (STR_56+10)
 18430  0130F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18431  0130F2  EC7B  F0DE         	call	_strcpy	;wreg free
 18432                           
 18433                           ;oled.c: 418: strcpy(OLED_RAM_Buffer.line3, " ");
 18434  0130F6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18435  0130F8  0102               	movlb	2	; () banked
 18436  0130FA  6F03               	movwf	strcpy@to& (0+255),b
 18437  0130FC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18438  0130FE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18439  013100  0EAA               	movlw	low (STR_56+10)
 18440  013102  6F05               	movwf	strcpy@from& (0+255),b
 18441  013104  0EFD               	movlw	high (STR_56+10)
 18442  013106  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18443  013108  EC7B  F0DE         	call	_strcpy	;wreg free
 18444                           
 18445                           ;oled.c: 420: OLED_UpdateFromRAMBuffer();
 18446  01310C  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18447                           
 18448                           ;oled.c: 421: OLED_Frame = OLED_POS12_Voltage;
 18449  013110  0E05               	movlw	5
 18450  013112  D7C1               	goto	L4
 18451  013114                     l21904:
 18452                           
 18453                           ; BSR set to: 2
 18454                           ;oled.c: 428: OLED_update_flag = 0;
 18455  013114  0E00               	movlw	0
 18456  013116  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18457                           
 18458                           ; BSR set to: 2
 18459                           ;oled.c: 430: strcpy(OLED_RAM_Buffer.line0, "+5V Voltage:");
 18460  013118  0E00               	movlw	low _OLED_RAM_Buffer
 18461  01311A  6F03               	movwf	strcpy@to& (0+255),b
 18462  01311C  0E03               	movlw	high _OLED_RAM_Buffer
 18463  01311E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18464  013120  0EEE               	movlw	low STR_84
 18465  013122  6F05               	movwf	strcpy@from& (0+255),b
 18466  013124  0EFC               	movlw	high STR_84
 18467  013126  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18468  013128  EC7B  F0DE         	call	_strcpy	;wreg free
 18469                           
 18470                           ;oled.c: 431: sprintf(OLED_RAM_Buffer.line1, "%+.3f V", adc_results.pos5_adc_result);
 18471  01312C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18472  01312E  0102               	movlb	2	; () banked
 18473  013130  6F90               	movwf	sprintf@wh& (0+255),b
 18474  013132  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18475  013134  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18476  013136  0E52               	movlw	low STR_81
 18477  013138  6F92               	movwf	sprintf@f& (0+255),b
 18478  01313A  0EFF               	movlw	high STR_81
 18479  01313C  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18480  01313E  C0E5  F294         	movff	_adc_results+8,?_sprintf+4
 18481  013142  C0E6  F295         	movff	_adc_results+9,?_sprintf+5
 18482  013146  C0E7  F296         	movff	_adc_results+10,?_sprintf+6
 18483  01314A  C0E8  F297         	movff	_adc_results+11,?_sprintf+7
 18484  01314E  EC9F  F0DE         	call	_sprintf	;wreg free
 18485                           
 18486                           ;oled.c: 432: strcpy(OLED_RAM_Buffer.line2, " ");
 18487  013152  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18488  013154  0102               	movlb	2	; () banked
 18489  013156  6F03               	movwf	strcpy@to& (0+255),b
 18490  013158  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18491  01315A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18492  01315C  0EAA               	movlw	low (STR_56+10)
 18493  01315E  6F05               	movwf	strcpy@from& (0+255),b
 18494  013160  0EFD               	movlw	high (STR_56+10)
 18495  013162  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18496  013164  EC7B  F0DE         	call	_strcpy	;wreg free
 18497                           
 18498                           ;oled.c: 433: strcpy(OLED_RAM_Buffer.line3, " ");
 18499  013168  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18500  01316A  0102               	movlb	2	; () banked
 18501  01316C  6F03               	movwf	strcpy@to& (0+255),b
 18502  01316E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18503  013170  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18504  013172  0EAA               	movlw	low (STR_56+10)
 18505  013174  6F05               	movwf	strcpy@from& (0+255),b
 18506  013176  0EFD               	movlw	high (STR_56+10)
 18507  013178  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18508  01317A  EC7B  F0DE         	call	_strcpy	;wreg free
 18509                           
 18510                           ;oled.c: 435: OLED_UpdateFromRAMBuffer();
 18511  01317E  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18512                           
 18513                           ;oled.c: 436: OLED_Frame = OLED_POS5_Voltage;
 18514  013182  0E06               	movlw	6
 18515  013184  D788               	goto	L4
 18516  013186                     l21920:
 18517                           
 18518                           ; BSR set to: 2
 18519                           ;oled.c: 443: OLED_update_flag = 0;
 18520  013186  0E00               	movlw	0
 18521  013188  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18522                           
 18523                           ; BSR set to: 2
 18524                           ;oled.c: 445: strcpy(OLED_RAM_Buffer.line0, "+12V Current:");
 18525  01318A  0E00               	movlw	low _OLED_RAM_Buffer
 18526  01318C  6F03               	movwf	strcpy@to& (0+255),b
 18527  01318E  0E03               	movlw	high _OLED_RAM_Buffer
 18528  013190  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18529  013192  0E9B               	movlw	low STR_88
 18530  013194  6F05               	movwf	strcpy@from& (0+255),b
 18531  013196  0EFC               	movlw	high STR_88
 18532  013198  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18533  01319A  EC7B  F0DE         	call	_strcpy	;wreg free
 18534                           
 18535                           ;oled.c: 446: sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.pos12_isns_adc_resul
      +                          t);
 18536  01319E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18537  0131A0  0102               	movlb	2	; () banked
 18538  0131A2  6F90               	movwf	sprintf@wh& (0+255),b
 18539  0131A4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18540  0131A6  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18541  0131A8  0E42               	movlw	low STR_89
 18542  0131AA  6F92               	movwf	sprintf@f& (0+255),b
 18543  0131AC  0EFF               	movlw	high STR_89
 18544  0131AE  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18545  0131B0  C0ED  F294         	movff	_adc_results+16,?_sprintf+4
 18546  0131B4  C0EE  F295         	movff	_adc_results+17,?_sprintf+5
 18547  0131B8  C0EF  F296         	movff	_adc_results+18,?_sprintf+6
 18548  0131BC  C0F0  F297         	movff	_adc_results+19,?_sprintf+7
 18549  0131C0  EC9F  F0DE         	call	_sprintf	;wreg free
 18550                           
 18551                           ;oled.c: 447: strcpy(OLED_RAM_Buffer.line2, " ");
 18552  0131C4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18553  0131C6  0102               	movlb	2	; () banked
 18554  0131C8  6F03               	movwf	strcpy@to& (0+255),b
 18555  0131CA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18556  0131CC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18557  0131CE  0EAA               	movlw	low (STR_56+10)
 18558  0131D0  6F05               	movwf	strcpy@from& (0+255),b
 18559  0131D2  0EFD               	movlw	high (STR_56+10)
 18560  0131D4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18561  0131D6  EC7B  F0DE         	call	_strcpy	;wreg free
 18562                           
 18563                           ;oled.c: 448: strcpy(OLED_RAM_Buffer.line3, " ");
 18564  0131DA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18565  0131DC  0102               	movlb	2	; () banked
 18566  0131DE  6F03               	movwf	strcpy@to& (0+255),b
 18567  0131E0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18568  0131E2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18569  0131E4  0EAA               	movlw	low (STR_56+10)
 18570  0131E6  6F05               	movwf	strcpy@from& (0+255),b
 18571  0131E8  0EFD               	movlw	high (STR_56+10)
 18572  0131EA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18573  0131EC  EC7B  F0DE         	call	_strcpy	;wreg free
 18574                           
 18575                           ;oled.c: 450: OLED_UpdateFromRAMBuffer();
 18576  0131F0  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18577                           
 18578                           ;oled.c: 451: OLED_Frame = OLED_POS12_Current;
 18579  0131F4  0E07               	movlw	7
 18580  0131F6  D74F               	goto	L4
 18581  0131F8                     l21936:
 18582                           
 18583                           ; BSR set to: 2
 18584                           ;oled.c: 458: OLED_update_flag = 0;
 18585  0131F8  0E00               	movlw	0
 18586  0131FA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18587                           
 18588                           ; BSR set to: 2
 18589                           ;oled.c: 460: strcpy(OLED_RAM_Buffer.line0, "QI Current:");
 18590  0131FC  0E00               	movlw	low _OLED_RAM_Buffer
 18591  0131FE  6F03               	movwf	strcpy@to& (0+255),b
 18592  013200  0E03               	movlw	high _OLED_RAM_Buffer
 18593  013202  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18594  013204  0E88               	movlw	low STR_92
 18595  013206  6F05               	movwf	strcpy@from& (0+255),b
 18596  013208  0EFD               	movlw	high STR_92
 18597  01320A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18598  01320C  EC7B  F0DE         	call	_strcpy	;wreg free
 18599                           
 18600                           ;oled.c: 461: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18601  013210  0102               	movlb	2	; () banked
 18602  013212  51D2               	movf	_QI_charge_time& (0+255),w,b
 18603  013214  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18604  013216  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18605  013218  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18606  01321A  A4D8               	btfss	status,2,c
 18607  01321C  D00B               	goto	l21944
 18608                           
 18609                           ; BSR set to: 2
 18610  01321E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18611  013220  6F03               	movwf	strcpy@to& (0+255),b
 18612  013222  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18613  013224  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18614  013226  0E22               	movlw	low STR_93
 18615  013228  6F05               	movwf	strcpy@from& (0+255),b
 18616  01322A  0EFD               	movlw	high STR_93
 18617  01322C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18618  01322E  EC7B  F0DE         	call	_strcpy	;wreg free
 18619  013232  D012               	goto	l21946
 18620  013234                     l21944:
 18621                           
 18622                           ; BSR set to: 2
 18623                           ;oled.c: 462: else sprintf(OLED_RAM_Buffer.line1, "%+.3f A", adc_results.qi_isns_adc_res
      +                          ult);
 18624  013234  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18625  013236  6F90               	movwf	sprintf@wh& (0+255),b
 18626  013238  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18627  01323A  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18628  01323C  0E42               	movlw	low STR_89
 18629  01323E  6F92               	movwf	sprintf@f& (0+255),b
 18630  013240  0EFF               	movlw	high STR_89
 18631  013242  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18632  013244  C0F1  F294         	movff	_adc_results+20,?_sprintf+4
 18633  013248  C0F2  F295         	movff	_adc_results+21,?_sprintf+5
 18634  01324C  C0F3  F296         	movff	_adc_results+22,?_sprintf+6
 18635  013250  C0F4  F297         	movff	_adc_results+23,?_sprintf+7
 18636  013254  EC9F  F0DE         	call	_sprintf	;wreg free
 18637  013258                     l21946:
 18638                           
 18639                           ;oled.c: 463: strcpy(OLED_RAM_Buffer.line2, " ");
 18640  013258  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18641  01325A  0102               	movlb	2	; () banked
 18642  01325C  6F03               	movwf	strcpy@to& (0+255),b
 18643  01325E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18644  013260  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18645  013262  0EAA               	movlw	low (STR_56+10)
 18646  013264  6F05               	movwf	strcpy@from& (0+255),b
 18647  013266  0EFD               	movlw	high (STR_56+10)
 18648  013268  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18649  01326A  EC7B  F0DE         	call	_strcpy	;wreg free
 18650                           
 18651                           ;oled.c: 464: strcpy(OLED_RAM_Buffer.line3, " ");
 18652  01326E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18653  013270  0102               	movlb	2	; () banked
 18654  013272  6F03               	movwf	strcpy@to& (0+255),b
 18655  013274  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18656  013276  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18657  013278  0EAA               	movlw	low (STR_56+10)
 18658  01327A  6F05               	movwf	strcpy@from& (0+255),b
 18659  01327C  0EFD               	movlw	high (STR_56+10)
 18660  01327E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18661  013280  EC7B  F0DE         	call	_strcpy	;wreg free
 18662                           
 18663                           ;oled.c: 466: OLED_UpdateFromRAMBuffer();
 18664  013284  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18665                           
 18666                           ;oled.c: 467: OLED_Frame = OLED_QI_Current;
 18667  013288  0E08               	movlw	8
 18668  01328A  D705               	goto	L4
 18669  01328C                     l21956:
 18670                           
 18671                           ; BSR set to: 2
 18672                           ;oled.c: 474: OLED_update_flag = 0;
 18673  01328C  0E00               	movlw	0
 18674  01328E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18675                           
 18676                           ; BSR set to: 2
 18677                           ;oled.c: 476: strcpy(OLED_RAM_Buffer.line0, "Input Power:");
 18678  013290  0E00               	movlw	low _OLED_RAM_Buffer
 18679  013292  6F03               	movwf	strcpy@to& (0+255),b
 18680  013294  0E03               	movlw	high _OLED_RAM_Buffer
 18681  013296  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18682  013298  0E15               	movlw	low STR_97
 18683  01329A  6F05               	movwf	strcpy@from& (0+255),b
 18684  01329C  0EFD               	movlw	high STR_97
 18685  01329E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18686  0132A0  EC7B  F0DE         	call	_strcpy	;wreg free
 18687                           
 18688                           ;oled.c: 477: sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.input_power);
 18689  0132A4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18690  0132A6  0102               	movlb	2	; () banked
 18691  0132A8  6F90               	movwf	sprintf@wh& (0+255),b
 18692  0132AA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18693  0132AC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18694  0132AE  0E5A               	movlw	low STR_98
 18695  0132B0  6F92               	movwf	sprintf@f& (0+255),b
 18696  0132B2  0EFF               	movlw	high STR_98
 18697  0132B4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18698  0132B6  C2BE  F294         	movff	_adc_calculations,?_sprintf+4
 18699  0132BA  C2BF  F295         	movff	_adc_calculations+1,?_sprintf+5
 18700  0132BE  C2C0  F296         	movff	_adc_calculations+2,?_sprintf+6
 18701  0132C2  C2C1  F297         	movff	_adc_calculations+3,?_sprintf+7
 18702  0132C6  EC9F  F0DE         	call	_sprintf	;wreg free
 18703                           
 18704                           ;oled.c: 478: strcpy(OLED_RAM_Buffer.line2, " ");
 18705  0132CA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18706  0132CC  0102               	movlb	2	; () banked
 18707  0132CE  6F03               	movwf	strcpy@to& (0+255),b
 18708  0132D0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18709  0132D2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18710  0132D4  0EAA               	movlw	low (STR_56+10)
 18711  0132D6  6F05               	movwf	strcpy@from& (0+255),b
 18712  0132D8  0EFD               	movlw	high (STR_56+10)
 18713  0132DA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18714  0132DC  EC7B  F0DE         	call	_strcpy	;wreg free
 18715                           
 18716                           ;oled.c: 479: strcpy(OLED_RAM_Buffer.line3, " ");
 18717  0132E0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18718  0132E2  0102               	movlb	2	; () banked
 18719  0132E4  6F03               	movwf	strcpy@to& (0+255),b
 18720  0132E6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18721  0132E8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18722  0132EA  0EAA               	movlw	low (STR_56+10)
 18723  0132EC  6F05               	movwf	strcpy@from& (0+255),b
 18724  0132EE  0EFD               	movlw	high (STR_56+10)
 18725  0132F0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18726  0132F2  EC7B  F0DE         	call	_strcpy	;wreg free
 18727                           
 18728                           ;oled.c: 481: OLED_UpdateFromRAMBuffer();
 18729  0132F6  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18730                           
 18731                           ;oled.c: 482: OLED_Frame = OLED_Input_Power;
 18732  0132FA  0E09               	movlw	9
 18733  0132FC  D6CC               	goto	L4
 18734  0132FE                     l21972:
 18735                           
 18736                           ; BSR set to: 2
 18737                           ;oled.c: 489: OLED_update_flag = 0;
 18738  0132FE  0E00               	movlw	0
 18739  013300  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18740                           
 18741                           ; BSR set to: 2
 18742                           ;oled.c: 491: strcpy(OLED_RAM_Buffer.line0, "Output Power:");
 18743  013302  0E00               	movlw	low _OLED_RAM_Buffer
 18744  013304  6F03               	movwf	strcpy@to& (0+255),b
 18745  013306  0E03               	movlw	high _OLED_RAM_Buffer
 18746  013308  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18747  01330A  0E8D               	movlw	low STR_101
 18748  01330C  6F05               	movwf	strcpy@from& (0+255),b
 18749  01330E  0EFC               	movlw	high STR_101
 18750  013310  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18751  013312  EC7B  F0DE         	call	_strcpy	;wreg free
 18752                           
 18753                           ;oled.c: 492: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18754  013316  0102               	movlb	2	; () banked
 18755  013318  51D2               	movf	_QI_charge_time& (0+255),w,b
 18756  01331A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18757  01331C  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18758  01331E  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18759  013320  A4D8               	btfss	status,2,c
 18760  013322  D00B               	goto	l21980
 18761                           
 18762                           ; BSR set to: 2
 18763  013324  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18764  013326  6F03               	movwf	strcpy@to& (0+255),b
 18765  013328  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18766  01332A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18767  01332C  0E22               	movlw	low STR_93
 18768  01332E  6F05               	movwf	strcpy@from& (0+255),b
 18769  013330  0EFD               	movlw	high STR_93
 18770  013332  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18771  013334  EC7B  F0DE         	call	_strcpy	;wreg free
 18772  013338  D012               	goto	l21982
 18773  01333A                     l21980:
 18774                           
 18775                           ; BSR set to: 2
 18776                           ;oled.c: 493: else sprintf(OLED_RAM_Buffer.line1, "%+.3f W", adc_calculations.output_pow
      +                          er);
 18777  01333A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18778  01333C  6F90               	movwf	sprintf@wh& (0+255),b
 18779  01333E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18780  013340  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18781  013342  0E5A               	movlw	low STR_98
 18782  013344  6F92               	movwf	sprintf@f& (0+255),b
 18783  013346  0EFF               	movlw	high STR_98
 18784  013348  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18785  01334A  C2C2  F294         	movff	_adc_calculations+4,?_sprintf+4
 18786  01334E  C2C3  F295         	movff	_adc_calculations+5,?_sprintf+5
 18787  013352  C2C4  F296         	movff	_adc_calculations+6,?_sprintf+6
 18788  013356  C2C5  F297         	movff	_adc_calculations+7,?_sprintf+7
 18789  01335A  EC9F  F0DE         	call	_sprintf	;wreg free
 18790  01335E                     l21982:
 18791                           
 18792                           ;oled.c: 494: strcpy(OLED_RAM_Buffer.line2, " ");
 18793  01335E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18794  013360  0102               	movlb	2	; () banked
 18795  013362  6F03               	movwf	strcpy@to& (0+255),b
 18796  013364  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18797  013366  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18798  013368  0EAA               	movlw	low (STR_56+10)
 18799  01336A  6F05               	movwf	strcpy@from& (0+255),b
 18800  01336C  0EFD               	movlw	high (STR_56+10)
 18801  01336E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18802  013370  EC7B  F0DE         	call	_strcpy	;wreg free
 18803                           
 18804                           ;oled.c: 495: strcpy(OLED_RAM_Buffer.line3, " ");
 18805  013374  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18806  013376  0102               	movlb	2	; () banked
 18807  013378  6F03               	movwf	strcpy@to& (0+255),b
 18808  01337A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18809  01337C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18810  01337E  0EAA               	movlw	low (STR_56+10)
 18811  013380  6F05               	movwf	strcpy@from& (0+255),b
 18812  013382  0EFD               	movlw	high (STR_56+10)
 18813  013384  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18814  013386  EC7B  F0DE         	call	_strcpy	;wreg free
 18815                           
 18816                           ;oled.c: 497: OLED_UpdateFromRAMBuffer();
 18817  01338A  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18818                           
 18819                           ;oled.c: 498: OLED_Frame = OLED_Output_Power;
 18820  01338E  0E0A               	movlw	10
 18821  013390  D682               	goto	L4
 18822  013392                     l21992:
 18823                           
 18824                           ; BSR set to: 2
 18825                           ;oled.c: 505: OLED_update_flag = 0;
 18826  013392  0E00               	movlw	0
 18827  013394  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18828                           
 18829                           ; BSR set to: 2
 18830                           ;oled.c: 507: strcpy(OLED_RAM_Buffer.line0, "Efficiency:");
 18831  013396  0E00               	movlw	low _OLED_RAM_Buffer
 18832  013398  6F03               	movwf	strcpy@to& (0+255),b
 18833  01339A  0E03               	movlw	high _OLED_RAM_Buffer
 18834  01339C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18835  01339E  0E94               	movlw	low STR_106
 18836  0133A0  6F05               	movwf	strcpy@from& (0+255),b
 18837  0133A2  0EFD               	movlw	high STR_106
 18838  0133A4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18839  0133A6  EC7B  F0DE         	call	_strcpy	;wreg free
 18840                           
 18841                           ;oled.c: 508: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 18842  0133AA  0102               	movlb	2	; () banked
 18843  0133AC  51D2               	movf	_QI_charge_time& (0+255),w,b
 18844  0133AE  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 18845  0133B0  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 18846  0133B2  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 18847  0133B4  A4D8               	btfss	status,2,c
 18848  0133B6  D00B               	goto	l22000
 18849                           
 18850                           ; BSR set to: 2
 18851  0133B8  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18852  0133BA  6F03               	movwf	strcpy@to& (0+255),b
 18853  0133BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18854  0133BE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18855  0133C0  0E22               	movlw	low STR_93
 18856  0133C2  6F05               	movwf	strcpy@from& (0+255),b
 18857  0133C4  0EFD               	movlw	high STR_93
 18858  0133C6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18859  0133C8  EC7B  F0DE         	call	_strcpy	;wreg free
 18860  0133CC  D012               	goto	l22002
 18861  0133CE                     l22000:
 18862                           
 18863                           ; BSR set to: 2
 18864                           ;oled.c: 509: else sprintf(OLED_RAM_Buffer.line1, "%+.3f %%", adc_calculations.efficienc
      +                          y);
 18865  0133CE  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18866  0133D0  6F90               	movwf	sprintf@wh& (0+255),b
 18867  0133D2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18868  0133D4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18869  0133D6  0EFB               	movlw	low STR_108
 18870  0133D8  6F92               	movwf	sprintf@f& (0+255),b
 18871  0133DA  0EFE               	movlw	high STR_108
 18872  0133DC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18873  0133DE  C2C6  F294         	movff	_adc_calculations+8,?_sprintf+4
 18874  0133E2  C2C7  F295         	movff	_adc_calculations+9,?_sprintf+5
 18875  0133E6  C2C8  F296         	movff	_adc_calculations+10,?_sprintf+6
 18876  0133EA  C2C9  F297         	movff	_adc_calculations+11,?_sprintf+7
 18877  0133EE  EC9F  F0DE         	call	_sprintf	;wreg free
 18878  0133F2                     l22002:
 18879                           
 18880                           ;oled.c: 510: strcpy(OLED_RAM_Buffer.line2, " ");
 18881  0133F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18882  0133F4  0102               	movlb	2	; () banked
 18883  0133F6  6F03               	movwf	strcpy@to& (0+255),b
 18884  0133F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18885  0133FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18886  0133FC  0EAA               	movlw	low (STR_56+10)
 18887  0133FE  6F05               	movwf	strcpy@from& (0+255),b
 18888  013400  0EFD               	movlw	high (STR_56+10)
 18889  013402  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18890  013404  EC7B  F0DE         	call	_strcpy	;wreg free
 18891                           
 18892                           ;oled.c: 511: strcpy(OLED_RAM_Buffer.line3, " ");
 18893  013408  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18894  01340A  0102               	movlb	2	; () banked
 18895  01340C  6F03               	movwf	strcpy@to& (0+255),b
 18896  01340E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18897  013410  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18898  013412  0EAA               	movlw	low (STR_56+10)
 18899  013414  6F05               	movwf	strcpy@from& (0+255),b
 18900  013416  0EFD               	movlw	high (STR_56+10)
 18901  013418  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18902  01341A  EC7B  F0DE         	call	_strcpy	;wreg free
 18903                           
 18904                           ;oled.c: 513: OLED_UpdateFromRAMBuffer();
 18905  01341E  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18906                           
 18907                           ;oled.c: 514: OLED_Frame = OLED_Efficiency;
 18908  013422  0E0B               	movlw	11
 18909  013424  D638               	goto	L4
 18910  013426                     l22012:
 18911                           
 18912                           ; BSR set to: 2
 18913                           ;oled.c: 521: OLED_update_flag = 0;
 18914  013426  0E00               	movlw	0
 18915  013428  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18916                           
 18917                           ; BSR set to: 2
 18918                           ;oled.c: 523: strcpy(OLED_RAM_Buffer.line0, "QI Temp:");
 18919  01342A  0E00               	movlw	low _OLED_RAM_Buffer
 18920  01342C  6F03               	movwf	strcpy@to& (0+255),b
 18921  01342E  0E03               	movlw	high _OLED_RAM_Buffer
 18922  013430  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18923  013432  0E04               	movlw	low STR_111
 18924  013434  6F05               	movwf	strcpy@from& (0+255),b
 18925  013436  0EFF               	movlw	high STR_111
 18926  013438  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18927  01343A  EC7B  F0DE         	call	_strcpy	;wreg free
 18928                           
 18929                           ;oled.c: 524: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.QI_temp_result
      +                          );
 18930  01343E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18931  013440  0102               	movlb	2	; () banked
 18932  013442  6F90               	movwf	sprintf@wh& (0+255),b
 18933  013444  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18934  013446  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 18935  013448  0E4A               	movlw	low STR_112
 18936  01344A  6F92               	movwf	sprintf@f& (0+255),b
 18937  01344C  0EFF               	movlw	high STR_112
 18938  01344E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 18939  013450  C2DB  F294         	movff	_LM73_temp_results,?_sprintf+4
 18940  013454  C2DC  F295         	movff	_LM73_temp_results+1,?_sprintf+5
 18941  013458  C2DD  F296         	movff	_LM73_temp_results+2,?_sprintf+6
 18942  01345C  C2DE  F297         	movff	_LM73_temp_results+3,?_sprintf+7
 18943  013460  EC9F  F0DE         	call	_sprintf	;wreg free
 18944                           
 18945                           ;oled.c: 525: strcpy(OLED_RAM_Buffer.line2, " ");
 18946  013464  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 18947  013466  0102               	movlb	2	; () banked
 18948  013468  6F03               	movwf	strcpy@to& (0+255),b
 18949  01346A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 18950  01346C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18951  01346E  0EAA               	movlw	low (STR_56+10)
 18952  013470  6F05               	movwf	strcpy@from& (0+255),b
 18953  013472  0EFD               	movlw	high (STR_56+10)
 18954  013474  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18955  013476  EC7B  F0DE         	call	_strcpy	;wreg free
 18956                           
 18957                           ;oled.c: 526: strcpy(OLED_RAM_Buffer.line3, " ");
 18958  01347A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 18959  01347C  0102               	movlb	2	; () banked
 18960  01347E  6F03               	movwf	strcpy@to& (0+255),b
 18961  013480  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 18962  013482  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18963  013484  0EAA               	movlw	low (STR_56+10)
 18964  013486  6F05               	movwf	strcpy@from& (0+255),b
 18965  013488  0EFD               	movlw	high (STR_56+10)
 18966  01348A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18967  01348C  EC7B  F0DE         	call	_strcpy	;wreg free
 18968                           
 18969                           ;oled.c: 528: OLED_UpdateFromRAMBuffer();
 18970  013490  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 18971                           
 18972                           ;oled.c: 529: OLED_Frame = OLED_QI_Temp;
 18973  013494  0E0F               	movlw	15
 18974  013496  D5FF               	goto	L4
 18975  013498                     l22028:
 18976                           
 18977                           ; BSR set to: 2
 18978                           ;oled.c: 536: OLED_update_flag = 0;
 18979  013498  0E00               	movlw	0
 18980  01349A  6FD6               	movwf	_OLED_update_flag& (0+255),b
 18981                           
 18982                           ; BSR set to: 2
 18983                           ;oled.c: 538: strcpy(OLED_RAM_Buffer.line0, "+5V Temp:");
 18984  01349C  0E00               	movlw	low _OLED_RAM_Buffer
 18985  01349E  6F03               	movwf	strcpy@to& (0+255),b
 18986  0134A0  0E03               	movlw	high _OLED_RAM_Buffer
 18987  0134A2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 18988  0134A4  0E6A               	movlw	low STR_115
 18989  0134A6  6F05               	movwf	strcpy@from& (0+255),b
 18990  0134A8  0EFE               	movlw	high STR_115
 18991  0134AA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 18992  0134AC  EC7B  F0DE         	call	_strcpy	;wreg free
 18993                           
 18994                           ;oled.c: 539: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.POS5_temp_resu
      +                          lt);
 18995  0134B0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 18996  0134B2  0102               	movlb	2	; () banked
 18997  0134B4  6F90               	movwf	sprintf@wh& (0+255),b
 18998  0134B6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 18999  0134B8  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19000  0134BA  0E4A               	movlw	low STR_112
 19001  0134BC  6F92               	movwf	sprintf@f& (0+255),b
 19002  0134BE  0EFF               	movlw	high STR_112
 19003  0134C0  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19004  0134C2  C2DF  F294         	movff	_LM73_temp_results+4,?_sprintf+4
 19005  0134C6  C2E0  F295         	movff	_LM73_temp_results+5,?_sprintf+5
 19006  0134CA  C2E1  F296         	movff	_LM73_temp_results+6,?_sprintf+6
 19007  0134CE  C2E2  F297         	movff	_LM73_temp_results+7,?_sprintf+7
 19008  0134D2  EC9F  F0DE         	call	_sprintf	;wreg free
 19009                           
 19010                           ;oled.c: 540: strcpy(OLED_RAM_Buffer.line2, " ");
 19011  0134D6  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19012  0134D8  0102               	movlb	2	; () banked
 19013  0134DA  6F03               	movwf	strcpy@to& (0+255),b
 19014  0134DC  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19015  0134DE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19016  0134E0  0EAA               	movlw	low (STR_56+10)
 19017  0134E2  6F05               	movwf	strcpy@from& (0+255),b
 19018  0134E4  0EFD               	movlw	high (STR_56+10)
 19019  0134E6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19020  0134E8  EC7B  F0DE         	call	_strcpy	;wreg free
 19021                           
 19022                           ;oled.c: 541: strcpy(OLED_RAM_Buffer.line3, " ");
 19023  0134EC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19024  0134EE  0102               	movlb	2	; () banked
 19025  0134F0  6F03               	movwf	strcpy@to& (0+255),b
 19026  0134F2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19027  0134F4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19028  0134F6  0EAA               	movlw	low (STR_56+10)
 19029  0134F8  6F05               	movwf	strcpy@from& (0+255),b
 19030  0134FA  0EFD               	movlw	high (STR_56+10)
 19031  0134FC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19032  0134FE  EC7B  F0DE         	call	_strcpy	;wreg free
 19033                           
 19034                           ;oled.c: 543: OLED_UpdateFromRAMBuffer();
 19035  013502  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19036                           
 19037                           ;oled.c: 544: OLED_Frame = OLED_POS5_Temp;
 19038  013506  0E10               	movlw	16
 19039  013508  D5C6               	goto	L4
 19040  01350A                     l22044:
 19041                           
 19042                           ; BSR set to: 2
 19043                           ;oled.c: 551: OLED_update_flag = 0;
 19044  01350A  0E00               	movlw	0
 19045  01350C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19046                           
 19047                           ; BSR set to: 2
 19048                           ;oled.c: 553: strcpy(OLED_RAM_Buffer.line0, "Ambient Temp:");
 19049  01350E  0E00               	movlw	low _OLED_RAM_Buffer
 19050  013510  6F03               	movwf	strcpy@to& (0+255),b
 19051  013512  0E03               	movlw	high _OLED_RAM_Buffer
 19052  013514  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19053  013516  0E71               	movlw	low STR_119
 19054  013518  6F05               	movwf	strcpy@from& (0+255),b
 19055  01351A  0EFC               	movlw	high STR_119
 19056  01351C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19057  01351E  EC7B  F0DE         	call	_strcpy	;wreg free
 19058                           
 19059                           ;oled.c: 554: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", LM73_temp_results.Ambient_temp_r
      +                          esult);
 19060  013522  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19061  013524  0102               	movlb	2	; () banked
 19062  013526  6F90               	movwf	sprintf@wh& (0+255),b
 19063  013528  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19064  01352A  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19065  01352C  0E4A               	movlw	low STR_112
 19066  01352E  6F92               	movwf	sprintf@f& (0+255),b
 19067  013530  0EFF               	movlw	high STR_112
 19068  013532  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19069  013534  C2E3  F294         	movff	_LM73_temp_results+8,?_sprintf+4
 19070  013538  C2E4  F295         	movff	_LM73_temp_results+9,?_sprintf+5
 19071  01353C  C2E5  F296         	movff	_LM73_temp_results+10,?_sprintf+6
 19072  013540  C2E6  F297         	movff	_LM73_temp_results+11,?_sprintf+7
 19073  013544  EC9F  F0DE         	call	_sprintf	;wreg free
 19074                           
 19075                           ;oled.c: 555: strcpy(OLED_RAM_Buffer.line2, " ");
 19076  013548  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19077  01354A  0102               	movlb	2	; () banked
 19078  01354C  6F03               	movwf	strcpy@to& (0+255),b
 19079  01354E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19080  013550  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19081  013552  0EAA               	movlw	low (STR_56+10)
 19082  013554  6F05               	movwf	strcpy@from& (0+255),b
 19083  013556  0EFD               	movlw	high (STR_56+10)
 19084  013558  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19085  01355A  EC7B  F0DE         	call	_strcpy	;wreg free
 19086                           
 19087                           ;oled.c: 556: strcpy(OLED_RAM_Buffer.line3, " ");
 19088  01355E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19089  013560  0102               	movlb	2	; () banked
 19090  013562  6F03               	movwf	strcpy@to& (0+255),b
 19091  013564  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19092  013566  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19093  013568  0EAA               	movlw	low (STR_56+10)
 19094  01356A  6F05               	movwf	strcpy@from& (0+255),b
 19095  01356C  0EFD               	movlw	high (STR_56+10)
 19096  01356E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19097  013570  EC7B  F0DE         	call	_strcpy	;wreg free
 19098                           
 19099                           ;oled.c: 558: OLED_UpdateFromRAMBuffer();
 19100  013574  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19101                           
 19102                           ;oled.c: 559: OLED_Frame = OLED_Ambient_Temp;
 19103  013578  0E11               	movlw	17
 19104  01357A  D58D               	goto	L4
 19105  01357C                     l22060:
 19106                           
 19107                           ; BSR set to: 2
 19108                           ;oled.c: 566: OLED_update_flag = 0;
 19109  01357C  0E00               	movlw	0
 19110  01357E  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19111                           
 19112                           ; BSR set to: 2
 19113                           ;oled.c: 568: strcpy(OLED_RAM_Buffer.line0, "Micro Temp:");
 19114  013580  0E00               	movlw	low _OLED_RAM_Buffer
 19115  013582  6F03               	movwf	strcpy@to& (0+255),b
 19116  013584  0E03               	movlw	high _OLED_RAM_Buffer
 19117  013586  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19118  013588  0E7C               	movlw	low STR_123
 19119  01358A  6F05               	movwf	strcpy@from& (0+255),b
 19120  01358C  0EFD               	movlw	high STR_123
 19121  01358E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19122  013590  EC7B  F0DE         	call	_strcpy	;wreg free
 19123                           
 19124                           ;oled.c: 569: sprintf(OLED_RAM_Buffer.line1, "%+.3f C", adc_results.die_temp_adc_result)
      +                          ;
 19125  013594  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19126  013596  0102               	movlb	2	; () banked
 19127  013598  6F90               	movwf	sprintf@wh& (0+255),b
 19128  01359A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19129  01359C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19130  01359E  0E4A               	movlw	low STR_112
 19131  0135A0  6F92               	movwf	sprintf@f& (0+255),b
 19132  0135A2  0EFF               	movlw	high STR_112
 19133  0135A4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19134  0135A6  C0F5  F294         	movff	_adc_results+24,?_sprintf+4
 19135  0135AA  C0F6  F295         	movff	_adc_results+25,?_sprintf+5
 19136  0135AE  C0F7  F296         	movff	_adc_results+26,?_sprintf+6
 19137  0135B2  C0F8  F297         	movff	_adc_results+27,?_sprintf+7
 19138  0135B6  EC9F  F0DE         	call	_sprintf	;wreg free
 19139                           
 19140                           ;oled.c: 570: strcpy(OLED_RAM_Buffer.line2, " ");
 19141  0135BA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19142  0135BC  0102               	movlb	2	; () banked
 19143  0135BE  6F03               	movwf	strcpy@to& (0+255),b
 19144  0135C0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19145  0135C2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19146  0135C4  0EAA               	movlw	low (STR_56+10)
 19147  0135C6  6F05               	movwf	strcpy@from& (0+255),b
 19148  0135C8  0EFD               	movlw	high (STR_56+10)
 19149  0135CA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19150  0135CC  EC7B  F0DE         	call	_strcpy	;wreg free
 19151                           
 19152                           ;oled.c: 571: strcpy(OLED_RAM_Buffer.line3, " ");
 19153  0135D0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19154  0135D2  0102               	movlb	2	; () banked
 19155  0135D4  6F03               	movwf	strcpy@to& (0+255),b
 19156  0135D6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19157  0135D8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19158  0135DA  0EAA               	movlw	low (STR_56+10)
 19159  0135DC  6F05               	movwf	strcpy@from& (0+255),b
 19160  0135DE  0EFD               	movlw	high (STR_56+10)
 19161  0135E0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19162  0135E2  EC7B  F0DE         	call	_strcpy	;wreg free
 19163                           
 19164                           ;oled.c: 573: OLED_UpdateFromRAMBuffer();
 19165  0135E6  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19166                           
 19167                           ;oled.c: 574: OLED_Frame = OLED_Micro_Temp;
 19168  0135EA  0E12               	movlw	18
 19169  0135EC  D554               	goto	L4
 19170  0135EE                     l22076:
 19171                           
 19172                           ; BSR set to: 2
 19173                           ;oled.c: 581: OLED_update_flag = 0;
 19174  0135EE  0E00               	movlw	0
 19175  0135F0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19176                           
 19177                           ; BSR set to: 2
 19178                           ;oled.c: 583: strcpy(OLED_RAM_Buffer.line0, "+5V Sw. Freq:");
 19179  0135F2  0E00               	movlw	low _OLED_RAM_Buffer
 19180  0135F4  6F03               	movwf	strcpy@to& (0+255),b
 19181  0135F6  0E03               	movlw	high _OLED_RAM_Buffer
 19182  0135F8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19183  0135FA  0E7F               	movlw	low STR_127
 19184  0135FC  6F05               	movwf	strcpy@from& (0+255),b
 19185  0135FE  0EFC               	movlw	high STR_127
 19186  013600  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19187  013602  EC7B  F0DE         	call	_strcpy	;wreg free
 19188                           
 19189                           ;oled.c: 584: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 19190  013606  0101               	movlb	1	; () banked
 19191  013608  518F               	movf	_nxq_charge_state& (0+255),w,b
 19192  01360A  B4D8               	btfsc	status,2,c
 19193  01360C  D004               	goto	u27910
 19194                           
 19195                           ; BSR set to: 1
 19196  01360E  0E03               	movlw	3
 19197  013610  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 19198  013612  A4D8               	btfss	status,2,c
 19199  013614  D00C               	goto	l22086
 19200  013616                     u27910:
 19201                           
 19202                           ; BSR set to: 1
 19203  013616  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19204  013618  0102               	movlb	2	; () banked
 19205  01361A  6F03               	movwf	strcpy@to& (0+255),b
 19206  01361C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19207  01361E  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19208  013620  0EFC               	movlw	low STR_128
 19209  013622  6F05               	movwf	strcpy@from& (0+255),b
 19210  013624  0EFD               	movlw	high STR_128
 19211  013626  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19212  013628  EC7B  F0DE         	call	_strcpy	;wreg free
 19213  01362C  D00B               	goto	l2042
 19214  01362E                     l22086:
 19215                           
 19216                           ; BSR set to: 1
 19217                           ;oled.c: 585: else strcpy(OLED_RAM_Buffer.line1, "+2.5 MHz");
 19218  01362E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19219  013630  0102               	movlb	2	; () banked
 19220  013632  6F03               	movwf	strcpy@to& (0+255),b
 19221  013634  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19222  013636  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19223  013638  0E1F               	movlw	low STR_129
 19224  01363A  6F05               	movwf	strcpy@from& (0+255),b
 19225  01363C  0EFF               	movlw	high STR_129
 19226  01363E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19227  013640  EC7B  F0DE         	call	_strcpy	;wreg free
 19228  013644                     l2042:
 19229                           
 19230                           ;oled.c: 586: strcpy(OLED_RAM_Buffer.line2, " ");
 19231  013644  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19232  013646  0102               	movlb	2	; () banked
 19233  013648  6F03               	movwf	strcpy@to& (0+255),b
 19234  01364A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19235  01364C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19236  01364E  0EAA               	movlw	low (STR_56+10)
 19237  013650  6F05               	movwf	strcpy@from& (0+255),b
 19238  013652  0EFD               	movlw	high (STR_56+10)
 19239  013654  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19240  013656  EC7B  F0DE         	call	_strcpy	;wreg free
 19241                           
 19242                           ;oled.c: 587: strcpy(OLED_RAM_Buffer.line3, " ");
 19243  01365A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19244  01365C  0102               	movlb	2	; () banked
 19245  01365E  6F03               	movwf	strcpy@to& (0+255),b
 19246  013660  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19247  013662  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19248  013664  0EAA               	movlw	low (STR_56+10)
 19249  013666  6F05               	movwf	strcpy@from& (0+255),b
 19250  013668  0EFD               	movlw	high (STR_56+10)
 19251  01366A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19252  01366C  EC7B  F0DE         	call	_strcpy	;wreg free
 19253                           
 19254                           ;oled.c: 589: OLED_UpdateFromRAMBuffer();
 19255  013670  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19256                           
 19257                           ;oled.c: 590: OLED_Frame = OLED_POS5_FSW;
 19258  013674  0E13               	movlw	19
 19259  013676  D50F               	goto	L4
 19260  013678                     l22094:
 19261                           
 19262                           ; BSR set to: 2
 19263                           ;oled.c: 597: OLED_update_flag = 0;
 19264  013678  0E00               	movlw	0
 19265  01367A  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19266                           
 19267                           ; BSR set to: 2
 19268                           ;oled.c: 599: strcpy(OLED_RAM_Buffer.line0, "QI Sw. Freq:");
 19269  01367C  0E00               	movlw	low _OLED_RAM_Buffer
 19270  01367E  6F03               	movwf	strcpy@to& (0+255),b
 19271  013680  0E03               	movlw	high _OLED_RAM_Buffer
 19272  013682  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19273  013684  0E08               	movlw	low STR_132
 19274  013686  6F05               	movwf	strcpy@from& (0+255),b
 19275  013688  0EFD               	movlw	high STR_132
 19276  01368A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19277  01368C  EC7B  F0DE         	call	_strcpy	;wreg free
 19278                           
 19279                           ;oled.c: 600: if (nxq_charge_state == QI_Idle || nxq_charge_state == QI_Error) strcpy(OL
      +                          ED_RAM_Buffer.line1, "Burst Mode");
 19280  013690  0101               	movlb	1	; () banked
 19281  013692  518F               	movf	_nxq_charge_state& (0+255),w,b
 19282  013694  B4D8               	btfsc	status,2,c
 19283  013696  D004               	goto	u27930
 19284                           
 19285                           ; BSR set to: 1
 19286  013698  0E03               	movlw	3
 19287  01369A  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 19288  01369C  A4D8               	btfss	status,2,c
 19289  01369E  D00C               	goto	l22104
 19290  0136A0                     u27930:
 19291                           
 19292                           ; BSR set to: 1
 19293  0136A0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19294  0136A2  0102               	movlb	2	; () banked
 19295  0136A4  6F03               	movwf	strcpy@to& (0+255),b
 19296  0136A6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19297  0136A8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19298  0136AA  0EFC               	movlw	low STR_128
 19299  0136AC  6F05               	movwf	strcpy@from& (0+255),b
 19300  0136AE  0EFD               	movlw	high STR_128
 19301  0136B0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19302  0136B2  EC7B  F0DE         	call	_strcpy	;wreg free
 19303  0136B6  D01D               	goto	l22106
 19304  0136B8                     l22104:
 19305                           
 19306                           ; BSR set to: 1
 19307                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 19308  0136B8  C168  F2A3         	movff	_freq_meas_results,floatToEngineeringFormat@input_value
 19309  0136BC  C169  F2A4         	movff	_freq_meas_results+1,floatToEngineeringFormat@input_value+1
 19310  0136C0  C16A  F2A5         	movff	_freq_meas_results+2,floatToEngineeringFormat@input_value+2
 19311  0136C4  C16B  F2A6         	movff	_freq_meas_results+3,floatToEngineeringFormat@input_value+3
 19312  0136C8  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 19313  0136CC  C2A3  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6043
 19314  0136D0  C2A4  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6043+1
 19315                           
 19316                           ;oled.c: 601: else sprintf(OLED_RAM_Buffer.line1, "%sHz", floatToEngineeringFormat(freq_
      +                          meas_results.QI_Freq_Meas));
 19317  0136D4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19318  0136D6  0102               	movlb	2	; () banked
 19319  0136D8  6F90               	movwf	sprintf@wh& (0+255),b
 19320  0136DA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19321  0136DC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19322  0136DE  0EA4               	movlw	low STR_134
 19323  0136E0  6F92               	movwf	sprintf@f& (0+255),b
 19324  0136E2  0EFF               	movlw	high STR_134
 19325  0136E4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19326  0136E6  C3F3  F294         	movff	_OLED_updateHandler$6043,?_sprintf+4
 19327  0136EA  C3F4  F295         	movff	_OLED_updateHandler$6043+1,?_sprintf+5
 19328  0136EE  EC9F  F0DE         	call	_sprintf	;wreg free
 19329  0136F2                     l22106:
 19330                           
 19331                           ;oled.c: 602: strcpy(OLED_RAM_Buffer.line2, " ");
 19332  0136F2  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19333  0136F4  0102               	movlb	2	; () banked
 19334  0136F6  6F03               	movwf	strcpy@to& (0+255),b
 19335  0136F8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19336  0136FA  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19337  0136FC  0EAA               	movlw	low (STR_56+10)
 19338  0136FE  6F05               	movwf	strcpy@from& (0+255),b
 19339  013700  0EFD               	movlw	high (STR_56+10)
 19340  013702  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19341  013704  EC7B  F0DE         	call	_strcpy	;wreg free
 19342                           
 19343                           ;oled.c: 603: strcpy(OLED_RAM_Buffer.line3, " ");
 19344  013708  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19345  01370A  0102               	movlb	2	; () banked
 19346  01370C  6F03               	movwf	strcpy@to& (0+255),b
 19347  01370E  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19348  013710  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19349  013712  0EAA               	movlw	low (STR_56+10)
 19350  013714  6F05               	movwf	strcpy@from& (0+255),b
 19351  013716  0EFD               	movlw	high (STR_56+10)
 19352  013718  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19353  01371A  EC7B  F0DE         	call	_strcpy	;wreg free
 19354                           
 19355                           ;oled.c: 605: OLED_UpdateFromRAMBuffer();
 19356  01371E  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19357                           
 19358                           ;oled.c: 606: OLED_Frame = OLED_QI_FSW;
 19359  013722  0E14               	movlw	20
 19360  013724  D4B8               	goto	L4
 19361  013726                     l22116:
 19362                           
 19363                           ; BSR set to: 2
 19364                           ;oled.c: 614: OLED_update_flag = 0;
 19365  013726  0E00               	movlw	0
 19366  013728  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19367                           
 19368                           ; BSR set to: 2
 19369                           ;oled.c: 616: strcpy(OLED_RAM_Buffer.line0, "Dev. On Time:");
 19370  01372A  0E00               	movlw	low _OLED_RAM_Buffer
 19371  01372C  6F03               	movwf	strcpy@to& (0+255),b
 19372  01372E  0E03               	movlw	high _OLED_RAM_Buffer
 19373  013730  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19374  013732  0E63               	movlw	low STR_137
 19375  013734  6F05               	movwf	strcpy@from& (0+255),b
 19376  013736  0EFC               	movlw	high STR_137
 19377  013738  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19378  01373A  EC7B  F0DE         	call	_strcpy	;wreg free
 19379                           
 19380                           ;oled.c: 619: if (device_on_time >= 31536000) {
 19381  01373E  0E80               	movlw	128
 19382  013740  0100               	movlb	0	; () banked
 19383  013742  5DC5               	subwf	_device_on_time& (0+255),w,b
 19384  013744  0E33               	movlw	51
 19385  013746  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19386  013748  0EE1               	movlw	225
 19387  01374A  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19388  01374C  0E01               	movlw	1
 19389  01374E  59C8               	subwfb	(_device_on_time+3)& (0+255),w,b
 19390  013750  A0D8               	btfss	status,0,c
 19391  013752  D04F               	goto	l22124
 19392                           
 19393                           ; BSR set to: 0
 19394                           ;oled.c: 621: sprintf(OLED_RAM_Buffer.line1, "%u years", getYearsFromOnTime(device_on_ti
      +                          me));
 19395  013754  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19396  013756  0102               	movlb	2	; () banked
 19397  013758  6F90               	movwf	sprintf@wh& (0+255),b
 19398  01375A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19399  01375C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19400  01375E  0E0D               	movlw	low STR_138
 19401  013760  6F92               	movwf	sprintf@f& (0+255),b
 19402  013762  0EFF               	movlw	high STR_138
 19403  013764  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19404  013766  C0C5  F20D         	movff	_device_on_time,getYearsFromOnTime@input_seconds
 19405  01376A  C0C6  F20E         	movff	_device_on_time+1,getYearsFromOnTime@input_seconds+1
 19406  01376E  C0C7  F20F         	movff	_device_on_time+2,getYearsFromOnTime@input_seconds+2
 19407  013772  C0C8  F210         	movff	_device_on_time+3,getYearsFromOnTime@input_seconds+3
 19408  013776  EC1F  F0E2         	call	_getYearsFromOnTime	;wreg free
 19409  01377A  0102               	movlb	2	; () banked
 19410  01377C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19411  01377E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19412  013780  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19413  013782  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19414  013784  EC9F  F0DE         	call	_sprintf	;wreg free
 19415                           
 19416                           ;oled.c: 622: sprintf(OLED_RAM_Buffer.line2, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19417  013788  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19418  01378A  0102               	movlb	2	; () banked
 19419  01378C  6F90               	movwf	sprintf@wh& (0+255),b
 19420  01378E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19421  013790  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19422  013792  0E62               	movlw	low STR_139
 19423  013794  6F92               	movwf	sprintf@f& (0+255),b
 19424  013796  0EFF               	movlw	high STR_139
 19425  013798  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19426  01379A  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19427  01379E  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19428  0137A2  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19429  0137A6  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19430  0137AA  ECD7  F0D8         	call	_getDaysFromOnTime	;wreg free
 19431  0137AE  0102               	movlb	2	; () banked
 19432  0137B0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19433  0137B2  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19434  0137B4  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19435  0137B6  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19436  0137B8  EC9F  F0DE         	call	_sprintf	;wreg free
 19437                           
 19438                           ;oled.c: 623: sprintf(OLED_RAM_Buffer.line3, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19439  0137BC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19440  0137BE  0102               	movlb	2	; () banked
 19441  0137C0  6F90               	movwf	sprintf@wh& (0+255),b
 19442  0137C2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19443  0137C4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19444  0137C6  0E16               	movlw	low STR_140
 19445  0137C8  6F92               	movwf	sprintf@f& (0+255),b
 19446  0137CA  0EFF               	movlw	high STR_140
 19447  0137CC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19448  0137CE  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19449  0137D2  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19450  0137D6  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19451  0137DA  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19452  0137DE  EC61  F0D3         	call	_getHoursFromOnTime	;wreg free
 19453  0137E2  0102               	movlb	2	; () banked
 19454  0137E4  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19455  0137E6  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19456  0137E8  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19457  0137EA  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19458  0137EC  EC9F  F0DE         	call	_sprintf	;wreg free
 19459                           
 19460                           ;oled.c: 626: }
 19461  0137F0  D129               	goto	l22144
 19462  0137F2                     l22124:
 19463                           
 19464                           ; BSR set to: 0
 19465                           ;oled.c: 629: else if (device_on_time >= 86400) {
 19466  0137F2  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19467  0137F4  E108               	bnz	u27950
 19468  0137F6  0E80               	movlw	128
 19469  0137F8  5DC5               	subwf	_device_on_time& (0+255),w,b
 19470  0137FA  0E51               	movlw	81
 19471  0137FC  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19472  0137FE  0E01               	movlw	1
 19473  013800  59C7               	subwfb	(_device_on_time+2)& (0+255),w,b
 19474  013802  A0D8               	btfss	status,0,c
 19475  013804  D04F               	goto	l22128
 19476  013806                     u27950:
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;oled.c: 631: sprintf(OLED_RAM_Buffer.line1, "%u days", getDaysFromOnTime(device_on_time
      +                          ));
 19480  013806  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19481  013808  0102               	movlb	2	; () banked
 19482  01380A  6F90               	movwf	sprintf@wh& (0+255),b
 19483  01380C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19484  01380E  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19485  013810  0E62               	movlw	low STR_139
 19486  013812  6F92               	movwf	sprintf@f& (0+255),b
 19487  013814  0EFF               	movlw	high STR_139
 19488  013816  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19489  013818  C0C5  F20D         	movff	_device_on_time,getDaysFromOnTime@input_seconds
 19490  01381C  C0C6  F20E         	movff	_device_on_time+1,getDaysFromOnTime@input_seconds+1
 19491  013820  C0C7  F20F         	movff	_device_on_time+2,getDaysFromOnTime@input_seconds+2
 19492  013824  C0C8  F210         	movff	_device_on_time+3,getDaysFromOnTime@input_seconds+3
 19493  013828  ECD7  F0D8         	call	_getDaysFromOnTime	;wreg free
 19494  01382C  0102               	movlb	2	; () banked
 19495  01382E  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19496  013830  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19497  013832  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19498  013834  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19499  013836  EC9F  F0DE         	call	_sprintf	;wreg free
 19500                           
 19501                           ;oled.c: 632: sprintf(OLED_RAM_Buffer.line2, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19502  01383A  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19503  01383C  0102               	movlb	2	; () banked
 19504  01383E  6F90               	movwf	sprintf@wh& (0+255),b
 19505  013840  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19506  013842  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19507  013844  0E16               	movlw	low STR_140
 19508  013846  6F92               	movwf	sprintf@f& (0+255),b
 19509  013848  0EFF               	movlw	high STR_140
 19510  01384A  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19511  01384C  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19512  013850  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19513  013854  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19514  013858  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19515  01385C  EC61  F0D3         	call	_getHoursFromOnTime	;wreg free
 19516  013860  0102               	movlb	2	; () banked
 19517  013862  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19518  013864  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19519  013866  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19520  013868  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19521  01386A  EC9F  F0DE         	call	_sprintf	;wreg free
 19522                           
 19523                           ;oled.c: 633: sprintf(OLED_RAM_Buffer.line3, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19524  01386E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19525  013870  0102               	movlb	2	; () banked
 19526  013872  6F90               	movwf	sprintf@wh& (0+255),b
 19527  013874  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19528  013876  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19529  013878  0E12               	movlw	low STR_143
 19530  01387A  6F92               	movwf	sprintf@f& (0+255),b
 19531  01387C  0EFE               	movlw	high STR_143
 19532  01387E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19533  013880  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19534  013884  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19535  013888  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19536  01388C  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19537  013890  ECD7  F0CD         	call	_getMinutesFromOnTime	;wreg free
 19538  013894  0102               	movlb	2	; () banked
 19539  013896  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19540  013898  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19541  01389A  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19542  01389C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19543  01389E  EC9F  F0DE         	call	_sprintf	;wreg free
 19544                           
 19545                           ;oled.c: 635: }
 19546  0138A2  D0D0               	goto	l22144
 19547  0138A4                     l22128:
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;oled.c: 638: else if (device_on_time >= 3600) {
 19551  0138A4  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19552  0138A6  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19553  0138A8  E106               	bnz	u27960
 19554  0138AA  0E10               	movlw	16
 19555  0138AC  5DC5               	subwf	_device_on_time& (0+255),w,b
 19556  0138AE  0E0E               	movlw	14
 19557  0138B0  59C6               	subwfb	(_device_on_time+1)& (0+255),w,b
 19558  0138B2  A0D8               	btfss	status,0,c
 19559  0138B4  D04F               	goto	l22132
 19560  0138B6                     u27960:
 19561                           
 19562                           ; BSR set to: 0
 19563                           ;oled.c: 640: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(device_on_ti
      +                          me));
 19564  0138B6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19565  0138B8  0102               	movlb	2	; () banked
 19566  0138BA  6F90               	movwf	sprintf@wh& (0+255),b
 19567  0138BC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19568  0138BE  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19569  0138C0  0E16               	movlw	low STR_140
 19570  0138C2  6F92               	movwf	sprintf@f& (0+255),b
 19571  0138C4  0EFF               	movlw	high STR_140
 19572  0138C6  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19573  0138C8  C0C5  F20D         	movff	_device_on_time,getHoursFromOnTime@input_seconds
 19574  0138CC  C0C6  F20E         	movff	_device_on_time+1,getHoursFromOnTime@input_seconds+1
 19575  0138D0  C0C7  F20F         	movff	_device_on_time+2,getHoursFromOnTime@input_seconds+2
 19576  0138D4  C0C8  F210         	movff	_device_on_time+3,getHoursFromOnTime@input_seconds+3
 19577  0138D8  EC61  F0D3         	call	_getHoursFromOnTime	;wreg free
 19578  0138DC  0102               	movlb	2	; () banked
 19579  0138DE  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19580  0138E0  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19581  0138E2  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19582  0138E4  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19583  0138E6  EC9F  F0DE         	call	_sprintf	;wreg free
 19584                           
 19585                           ;oled.c: 641: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19586  0138EA  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19587  0138EC  0102               	movlb	2	; () banked
 19588  0138EE  6F90               	movwf	sprintf@wh& (0+255),b
 19589  0138F0  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19590  0138F2  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19591  0138F4  0E12               	movlw	low STR_143
 19592  0138F6  6F92               	movwf	sprintf@f& (0+255),b
 19593  0138F8  0EFE               	movlw	high STR_143
 19594  0138FA  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19595  0138FC  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19596  013900  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19597  013904  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19598  013908  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19599  01390C  ECD7  F0CD         	call	_getMinutesFromOnTime	;wreg free
 19600  013910  0102               	movlb	2	; () banked
 19601  013912  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19602  013914  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19603  013916  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19604  013918  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19605  01391A  EC9F  F0DE         	call	_sprintf	;wreg free
 19606                           
 19607                           ;oled.c: 642: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19608  01391E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19609  013920  0102               	movlb	2	; () banked
 19610  013922  6F90               	movwf	sprintf@wh& (0+255),b
 19611  013924  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19612  013926  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19613  013928  0E07               	movlw	low STR_146
 19614  01392A  6F92               	movwf	sprintf@f& (0+255),b
 19615  01392C  0EFE               	movlw	high STR_146
 19616  01392E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19617  013930  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19618  013934  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19619  013938  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19620  01393C  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19621  013940  EC6B  F0CC         	call	_getSecondsFromOnTime	;wreg free
 19622  013944  0102               	movlb	2	; () banked
 19623  013946  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19624  013948  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19625  01394A  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19626  01394C  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19627  01394E  EC9F  F0DE         	call	_sprintf	;wreg free
 19628                           
 19629                           ;oled.c: 644: }
 19630  013952  D078               	goto	l22144
 19631  013954                     l22132:
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;oled.c: 647: else if (device_on_time >= 60) {
 19635  013954  51C8               	movf	(_device_on_time+3)& (0+255),w,b
 19636  013956  11C7               	iorwf	(_device_on_time+2)& (0+255),w,b
 19637  013958  11C6               	iorwf	(_device_on_time+1)& (0+255),w,b
 19638  01395A  E104               	bnz	u27970
 19639  01395C  0E3C               	movlw	60
 19640  01395E  5DC5               	subwf	_device_on_time& (0+255),w,b
 19641  013960  A0D8               	btfss	status,0,c
 19642  013962  D040               	goto	l22138
 19643  013964                     u27970:
 19644                           
 19645                           ; BSR set to: 0
 19646                           ;oled.c: 649: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(device_o
      +                          n_time));
 19647  013964  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19648  013966  0102               	movlb	2	; () banked
 19649  013968  6F90               	movwf	sprintf@wh& (0+255),b
 19650  01396A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19651  01396C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19652  01396E  0E12               	movlw	low STR_143
 19653  013970  6F92               	movwf	sprintf@f& (0+255),b
 19654  013972  0EFE               	movlw	high STR_143
 19655  013974  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19656  013976  C0C5  F20D         	movff	_device_on_time,getMinutesFromOnTime@input_seconds
 19657  01397A  C0C6  F20E         	movff	_device_on_time+1,getMinutesFromOnTime@input_seconds+1
 19658  01397E  C0C7  F20F         	movff	_device_on_time+2,getMinutesFromOnTime@input_seconds+2
 19659  013982  C0C8  F210         	movff	_device_on_time+3,getMinutesFromOnTime@input_seconds+3
 19660  013986  ECD7  F0CD         	call	_getMinutesFromOnTime	;wreg free
 19661  01398A  0102               	movlb	2	; () banked
 19662  01398C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19663  01398E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19664  013990  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19665  013992  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19666  013994  EC9F  F0DE         	call	_sprintf	;wreg free
 19667                           
 19668                           ;oled.c: 650: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(device_o
      +                          n_time));
 19669  013998  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19670  01399A  0102               	movlb	2	; () banked
 19671  01399C  6F90               	movwf	sprintf@wh& (0+255),b
 19672  01399E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19673  0139A0  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19674  0139A2  0E07               	movlw	low STR_146
 19675  0139A4  6F92               	movwf	sprintf@f& (0+255),b
 19676  0139A6  0EFE               	movlw	high STR_146
 19677  0139A8  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19678  0139AA  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19679  0139AE  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19680  0139B2  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19681  0139B6  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19682  0139BA  EC6B  F0CC         	call	_getSecondsFromOnTime	;wreg free
 19683  0139BE  0102               	movlb	2	; () banked
 19684  0139C0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19685  0139C2  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19686  0139C4  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19687  0139C6  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19688  0139C8  EC9F  F0DE         	call	_sprintf	;wreg free
 19689                           
 19690                           ;oled.c: 651: strcpy(OLED_RAM_Buffer.line3, " ");
 19691  0139CC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19692  0139CE  0102               	movlb	2	; () banked
 19693  0139D0  6F03               	movwf	strcpy@to& (0+255),b
 19694  0139D2  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19695  0139D4  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19696  0139D6  0EAA               	movlw	low (STR_56+10)
 19697  0139D8  6F05               	movwf	strcpy@from& (0+255),b
 19698  0139DA  0EFD               	movlw	high (STR_56+10)
 19699  0139DC  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19700  0139DE  EC7B  F0DE         	call	_strcpy	;wreg free
 19701                           
 19702                           ;oled.c: 653: }
 19703  0139E2  D030               	goto	l22144
 19704  0139E4                     l22138:
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;oled.c: 656: else {;oled.c: 658: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(device_on_time));
 19708  0139E4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19709  0139E6  0102               	movlb	2	; () banked
 19710  0139E8  6F90               	movwf	sprintf@wh& (0+255),b
 19711  0139EA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19712  0139EC  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19713  0139EE  0E07               	movlw	low STR_146
 19714  0139F0  6F92               	movwf	sprintf@f& (0+255),b
 19715  0139F2  0EFE               	movlw	high STR_146
 19716  0139F4  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19717  0139F6  C0C5  F20D         	movff	_device_on_time,getSecondsFromOnTime@input_seconds
 19718  0139FA  C0C6  F20E         	movff	_device_on_time+1,getSecondsFromOnTime@input_seconds+1
 19719  0139FE  C0C7  F20F         	movff	_device_on_time+2,getSecondsFromOnTime@input_seconds+2
 19720  013A02  C0C8  F210         	movff	_device_on_time+3,getSecondsFromOnTime@input_seconds+3
 19721  013A06  EC6B  F0CC         	call	_getSecondsFromOnTime	;wreg free
 19722  013A0A  0102               	movlb	2	; () banked
 19723  013A0C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19724  013A0E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19725  013A10  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19726  013A12  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19727  013A14  EC9F  F0DE         	call	_sprintf	;wreg free
 19728                           
 19729                           ;oled.c: 659: strcpy(OLED_RAM_Buffer.line2, " ");
 19730  013A18  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19731  013A1A  0102               	movlb	2	; () banked
 19732  013A1C  6F03               	movwf	strcpy@to& (0+255),b
 19733  013A1E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19734  013A20  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19735  013A22  0EAA               	movlw	low (STR_56+10)
 19736  013A24  6F05               	movwf	strcpy@from& (0+255),b
 19737  013A26  0EFD               	movlw	high (STR_56+10)
 19738  013A28  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19739  013A2A  EC7B  F0DE         	call	_strcpy	;wreg free
 19740                           
 19741                           ;oled.c: 660: strcpy(OLED_RAM_Buffer.line3, " ");
 19742  013A2E  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19743  013A30  0102               	movlb	2	; () banked
 19744  013A32  6F03               	movwf	strcpy@to& (0+255),b
 19745  013A34  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19746  013A36  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19747  013A38  0EAA               	movlw	low (STR_56+10)
 19748  013A3A  6F05               	movwf	strcpy@from& (0+255),b
 19749  013A3C  0EFD               	movlw	high (STR_56+10)
 19750  013A3E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19751  013A40  EC7B  F0DE         	call	_strcpy	;wreg free
 19752  013A44                     l22144:
 19753                           
 19754                           ;oled.c: 662: };oled.c: 665: OLED_UpdateFromRAMBuffer();
 19755  013A44  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 19756                           
 19757                           ;oled.c: 666: OLED_Frame = OLED_Dev_On_Time;
 19758  013A48  0E15               	movlw	21
 19759  013A4A  EF4B  F098         	goto	L4
 19760  013A4E                     l22150:
 19761                           
 19762                           ; BSR set to: 2
 19763                           ;oled.c: 673: OLED_update_flag = 0;
 19764  013A4E  0E00               	movlw	0
 19765  013A50  6FD6               	movwf	_OLED_update_flag& (0+255),b
 19766                           
 19767                           ; BSR set to: 2
 19768                           ;oled.c: 675: strcpy(OLED_RAM_Buffer.line0, "Charge Time:");
 19769  013A52  0E00               	movlw	low _OLED_RAM_Buffer
 19770  013A54  6F03               	movwf	strcpy@to& (0+255),b
 19771  013A56  0E03               	movlw	high _OLED_RAM_Buffer
 19772  013A58  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19773  013A5A  0EFB               	movlw	low STR_153
 19774  013A5C  6F05               	movwf	strcpy@from& (0+255),b
 19775  013A5E  0EFC               	movlw	high STR_153
 19776  013A60  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19777  013A62  EC7B  F0DE         	call	_strcpy	;wreg free
 19778                           
 19779                           ;oled.c: 678: if (QI_charge_time >= 3600) {
 19780  013A66  0102               	movlb	2	; () banked
 19781  013A68  51D5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19782  013A6A  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19783  013A6C  E106               	bnz	u27980
 19784  013A6E  0E10               	movlw	16
 19785  013A70  5DD2               	subwf	_QI_charge_time& (0+255),w,b
 19786  013A72  0E0E               	movlw	14
 19787  013A74  59D3               	subwfb	(_QI_charge_time+1)& (0+255),w,b
 19788  013A76  A0D8               	btfss	status,0,c
 19789  013A78  D04E               	goto	l22158
 19790  013A7A                     u27980:
 19791                           
 19792                           ; BSR set to: 2
 19793                           ;oled.c: 680: sprintf(OLED_RAM_Buffer.line1, "%u hours", getHoursFromOnTime(QI_charge_ti
      +                          me));
 19794  013A7A  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19795  013A7C  6F90               	movwf	sprintf@wh& (0+255),b
 19796  013A7E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19797  013A80  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19798  013A82  0E16               	movlw	low STR_140
 19799  013A84  6F92               	movwf	sprintf@f& (0+255),b
 19800  013A86  0EFF               	movlw	high STR_140
 19801  013A88  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19802  013A8A  C2D2  F20D         	movff	_QI_charge_time,getHoursFromOnTime@input_seconds
 19803  013A8E  C2D3  F20E         	movff	_QI_charge_time+1,getHoursFromOnTime@input_seconds+1
 19804  013A92  C2D4  F20F         	movff	_QI_charge_time+2,getHoursFromOnTime@input_seconds+2
 19805  013A96  C2D5  F210         	movff	_QI_charge_time+3,getHoursFromOnTime@input_seconds+3
 19806  013A9A  EC61  F0D3         	call	_getHoursFromOnTime	;wreg free
 19807  013A9E  0102               	movlb	2	; () banked
 19808  013AA0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19809  013AA2  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19810  013AA4  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19811  013AA6  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19812  013AA8  EC9F  F0DE         	call	_sprintf	;wreg free
 19813                           
 19814                           ;oled.c: 681: sprintf(OLED_RAM_Buffer.line2, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19815  013AAC  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19816  013AAE  0102               	movlb	2	; () banked
 19817  013AB0  6F90               	movwf	sprintf@wh& (0+255),b
 19818  013AB2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19819  013AB4  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19820  013AB6  0E12               	movlw	low STR_143
 19821  013AB8  6F92               	movwf	sprintf@f& (0+255),b
 19822  013ABA  0EFE               	movlw	high STR_143
 19823  013ABC  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19824  013ABE  C2D2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19825  013AC2  C2D3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19826  013AC6  C2D4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19827  013ACA  C2D5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19828  013ACE  ECD7  F0CD         	call	_getMinutesFromOnTime	;wreg free
 19829  013AD2  0102               	movlb	2	; () banked
 19830  013AD4  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19831  013AD6  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19832  013AD8  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19833  013ADA  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19834  013ADC  EC9F  F0DE         	call	_sprintf	;wreg free
 19835                           
 19836                           ;oled.c: 682: sprintf(OLED_RAM_Buffer.line3, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19837  013AE0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19838  013AE2  0102               	movlb	2	; () banked
 19839  013AE4  6F90               	movwf	sprintf@wh& (0+255),b
 19840  013AE6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19841  013AE8  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19842  013AEA  0E07               	movlw	low STR_146
 19843  013AEC  6F92               	movwf	sprintf@f& (0+255),b
 19844  013AEE  0EFE               	movlw	high STR_146
 19845  013AF0  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19846  013AF2  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19847  013AF6  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19848  013AFA  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19849  013AFE  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19850  013B02  EC6B  F0CC         	call	_getSecondsFromOnTime	;wreg free
 19851  013B06  0102               	movlb	2	; () banked
 19852  013B08  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19853  013B0A  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19854  013B0C  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19855  013B0E  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19856  013B10  EC9F  F0DE         	call	_sprintf	;wreg free
 19857                           
 19858                           ;oled.c: 684: }
 19859  013B14  D09D               	goto	l22174
 19860  013B16                     l22158:
 19861                           
 19862                           ; BSR set to: 2
 19863                           ;oled.c: 687: else if (QI_charge_time >= 60) {
 19864  013B16  51D5               	movf	(_QI_charge_time+3)& (0+255),w,b
 19865  013B18  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19866  013B1A  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19867  013B1C  E104               	bnz	u27990
 19868  013B1E  0E3C               	movlw	60
 19869  013B20  5DD2               	subwf	_QI_charge_time& (0+255),w,b
 19870  013B22  A0D8               	btfss	status,0,c
 19871  013B24  D03F               	goto	l22164
 19872  013B26                     u27990:
 19873                           
 19874                           ; BSR set to: 2
 19875                           ;oled.c: 689: sprintf(OLED_RAM_Buffer.line1, "%u minutes", getMinutesFromOnTime(QI_charg
      +                          e_time));
 19876  013B26  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19877  013B28  6F90               	movwf	sprintf@wh& (0+255),b
 19878  013B2A  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19879  013B2C  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19880  013B2E  0E12               	movlw	low STR_143
 19881  013B30  6F92               	movwf	sprintf@f& (0+255),b
 19882  013B32  0EFE               	movlw	high STR_143
 19883  013B34  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19884  013B36  C2D2  F20D         	movff	_QI_charge_time,getMinutesFromOnTime@input_seconds
 19885  013B3A  C2D3  F20E         	movff	_QI_charge_time+1,getMinutesFromOnTime@input_seconds+1
 19886  013B3E  C2D4  F20F         	movff	_QI_charge_time+2,getMinutesFromOnTime@input_seconds+2
 19887  013B42  C2D5  F210         	movff	_QI_charge_time+3,getMinutesFromOnTime@input_seconds+3
 19888  013B46  ECD7  F0CD         	call	_getMinutesFromOnTime	;wreg free
 19889  013B4A  0102               	movlb	2	; () banked
 19890  013B4C  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19891  013B4E  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19892  013B50  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19893  013B52  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19894  013B54  EC9F  F0DE         	call	_sprintf	;wreg free
 19895                           
 19896                           ;oled.c: 690: sprintf(OLED_RAM_Buffer.line2, "%u seconds", getSecondsFromOnTime(QI_charg
      +                          e_time));
 19897  013B58  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19898  013B5A  0102               	movlb	2	; () banked
 19899  013B5C  6F90               	movwf	sprintf@wh& (0+255),b
 19900  013B5E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19901  013B60  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19902  013B62  0E07               	movlw	low STR_146
 19903  013B64  6F92               	movwf	sprintf@f& (0+255),b
 19904  013B66  0EFE               	movlw	high STR_146
 19905  013B68  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19906  013B6A  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19907  013B6E  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19908  013B72  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19909  013B76  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19910  013B7A  EC6B  F0CC         	call	_getSecondsFromOnTime	;wreg free
 19911  013B7E  0102               	movlb	2	; () banked
 19912  013B80  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 19913  013B82  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 19914  013B84  6F94               	movwf	(?_sprintf+4)& (0+255),b
 19915  013B86  6B95               	clrf	(?_sprintf+5)& (0+255),b
 19916  013B88  EC9F  F0DE         	call	_sprintf	;wreg free
 19917                           
 19918                           ;oled.c: 691: strcpy(OLED_RAM_Buffer.line3, " ");
 19919  013B8C  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19920  013B8E  0102               	movlb	2	; () banked
 19921  013B90  6F03               	movwf	strcpy@to& (0+255),b
 19922  013B92  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19923  013B94  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19924  013B96  0EAA               	movlw	low (STR_56+10)
 19925  013B98  6F05               	movwf	strcpy@from& (0+255),b
 19926  013B9A  0EFD               	movlw	high (STR_56+10)
 19927  013B9C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19928  013B9E  EC7B  F0DE         	call	_strcpy	;wreg free
 19929                           
 19930                           ;oled.c: 693: }
 19931  013BA2  D056               	goto	l22174
 19932  013BA4                     l22164:
 19933                           
 19934                           ; BSR set to: 2
 19935                           ;oled.c: 695: else if (QI_charge_time == 0) {
 19936  013BA4  51D2               	movf	_QI_charge_time& (0+255),w,b
 19937  013BA6  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 19938  013BA8  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 19939  013BAA  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 19940  013BAC  A4D8               	btfss	status,2,c
 19941  013BAE  D021               	goto	l22168
 19942                           
 19943                           ; BSR set to: 2
 19944                           ;oled.c: 697: strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 19945  013BB0  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19946  013BB2  6F03               	movwf	strcpy@to& (0+255),b
 19947  013BB4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19948  013BB6  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19949  013BB8  0E22               	movlw	low STR_93
 19950  013BBA  6F05               	movwf	strcpy@from& (0+255),b
 19951  013BBC  0EFD               	movlw	high STR_93
 19952  013BBE  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19953  013BC0  EC7B  F0DE         	call	_strcpy	;wreg free
 19954                           
 19955                           ;oled.c: 698: strcpy(OLED_RAM_Buffer.line2, " ");
 19956  013BC4  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 19957  013BC6  0102               	movlb	2	; () banked
 19958  013BC8  6F03               	movwf	strcpy@to& (0+255),b
 19959  013BCA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 19960  013BCC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19961  013BCE  0EAA               	movlw	low (STR_56+10)
 19962  013BD0  6F05               	movwf	strcpy@from& (0+255),b
 19963  013BD2  0EFD               	movlw	high (STR_56+10)
 19964  013BD4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19965  013BD6  EC7B  F0DE         	call	_strcpy	;wreg free
 19966                           
 19967                           ;oled.c: 699: strcpy(OLED_RAM_Buffer.line3, " ");
 19968  013BDA  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 19969  013BDC  0102               	movlb	2	; () banked
 19970  013BDE  6F03               	movwf	strcpy@to& (0+255),b
 19971  013BE0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 19972  013BE2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 19973  013BE4  0EAA               	movlw	low (STR_56+10)
 19974  013BE6  6F05               	movwf	strcpy@from& (0+255),b
 19975  013BE8  0EFD               	movlw	high (STR_56+10)
 19976  013BEA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 19977  013BEC  EC7B  F0DE         	call	_strcpy	;wreg free
 19978                           
 19979                           ;oled.c: 701: }
 19980  013BF0  D02F               	goto	l22174
 19981  013BF2                     l22168:
 19982                           
 19983                           ; BSR set to: 2
 19984                           ;oled.c: 704: else {;oled.c: 706: sprintf(OLED_RAM_Buffer.line1, "%u seconds", getSecond
      +                          sFromOnTime(QI_charge_time));
 19985  013BF2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 19986  013BF4  6F90               	movwf	sprintf@wh& (0+255),b
 19987  013BF6  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 19988  013BF8  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 19989  013BFA  0E07               	movlw	low STR_146
 19990  013BFC  6F92               	movwf	sprintf@f& (0+255),b
 19991  013BFE  0EFE               	movlw	high STR_146
 19992  013C00  6F93               	movwf	(sprintf@f+1)& (0+255),b
 19993  013C02  C2D2  F20D         	movff	_QI_charge_time,getSecondsFromOnTime@input_seconds
 19994  013C06  C2D3  F20E         	movff	_QI_charge_time+1,getSecondsFromOnTime@input_seconds+1
 19995  013C0A  C2D4  F20F         	movff	_QI_charge_time+2,getSecondsFromOnTime@input_seconds+2
 19996  013C0E  C2D5  F210         	movff	_QI_charge_time+3,getSecondsFromOnTime@input_seconds+3
 19997  013C12  EC6B  F0CC         	call	_getSecondsFromOnTime	;wreg free
 19998  013C16  0102               	movlb	2	; () banked
 19999  013C18  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 20000  013C1A  51B9               	movf	??_OLED_updateHandler& (0+255),w,b
 20001  013C1C  6F94               	movwf	(?_sprintf+4)& (0+255),b
 20002  013C1E  6B95               	clrf	(?_sprintf+5)& (0+255),b
 20003  013C20  EC9F  F0DE         	call	_sprintf	;wreg free
 20004                           
 20005                           ;oled.c: 707: strcpy(OLED_RAM_Buffer.line2, " ");
 20006  013C24  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20007  013C26  0102               	movlb	2	; () banked
 20008  013C28  6F03               	movwf	strcpy@to& (0+255),b
 20009  013C2A  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20010  013C2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20011  013C2E  0EAA               	movlw	low (STR_56+10)
 20012  013C30  6F05               	movwf	strcpy@from& (0+255),b
 20013  013C32  0EFD               	movlw	high (STR_56+10)
 20014  013C34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20015  013C36  EC7B  F0DE         	call	_strcpy	;wreg free
 20016                           
 20017                           ;oled.c: 708: strcpy(OLED_RAM_Buffer.line3, " ");
 20018  013C3A  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20019  013C3C  0102               	movlb	2	; () banked
 20020  013C3E  6F03               	movwf	strcpy@to& (0+255),b
 20021  013C40  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20022  013C42  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20023  013C44  0EAA               	movlw	low (STR_56+10)
 20024  013C46  6F05               	movwf	strcpy@from& (0+255),b
 20025  013C48  0EFD               	movlw	high (STR_56+10)
 20026  013C4A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20027  013C4C  EC7B  F0DE         	call	_strcpy	;wreg free
 20028  013C50                     l22174:
 20029                           
 20030                           ;oled.c: 710: };oled.c: 712: OLED_UpdateFromRAMBuffer();
 20031  013C50  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20032                           
 20033                           ;oled.c: 713: OLED_Frame = OLED_Charge_Time;
 20034  013C54  0E0C               	movlw	12
 20035  013C56  EF4B  F098         	goto	L4
 20036  013C5A                     l22180:
 20037                           
 20038                           ; BSR set to: 2
 20039                           ;oled.c: 720: OLED_update_flag = 0;
 20040  013C5A  0E00               	movlw	0
 20041  013C5C  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20042                           
 20043                           ; BSR set to: 2
 20044                           ;oled.c: 722: strcpy(OLED_RAM_Buffer.line0, "Output Charge:");
 20045  013C5E  0E00               	movlw	low _OLED_RAM_Buffer
 20046  013C60  6F03               	movwf	strcpy@to& (0+255),b
 20047  013C62  0E03               	movlw	high _OLED_RAM_Buffer
 20048  013C64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20049  013C66  0ED1               	movlw	low STR_166
 20050  013C68  6F05               	movwf	strcpy@from& (0+255),b
 20051  013C6A  0EFB               	movlw	high STR_166
 20052  013C6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20053  013C6E  EC7B  F0DE         	call	_strcpy	;wreg free
 20054                           
 20055                           ;oled.c: 723: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 20056  013C72  0102               	movlb	2	; () banked
 20057  013C74  51D2               	movf	_QI_charge_time& (0+255),w,b
 20058  013C76  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 20059  013C78  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 20060  013C7A  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 20061  013C7C  A4D8               	btfss	status,2,c
 20062  013C7E  D00B               	goto	l22188
 20063                           
 20064                           ; BSR set to: 2
 20065  013C80  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20066  013C82  6F03               	movwf	strcpy@to& (0+255),b
 20067  013C84  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20068  013C86  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20069  013C88  0E22               	movlw	low STR_93
 20070  013C8A  6F05               	movwf	strcpy@from& (0+255),b
 20071  013C8C  0EFD               	movlw	high STR_93
 20072  013C8E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20073  013C90  EC7B  F0DE         	call	_strcpy	;wreg free
 20074  013C94  D01D               	goto	l22190
 20075  013C96                     l22188:
 20076                           
 20077                           ; BSR set to: 2
 20078                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 20079  013C96  C2CA  F2A3         	movff	_adc_calculations+12,floatToEngineeringFormat@input_value
 20080  013C9A  C2CB  F2A4         	movff	_adc_calculations+13,floatToEngineeringFormat@input_value+1
 20081  013C9E  C2CC  F2A5         	movff	_adc_calculations+14,floatToEngineeringFormat@input_value+2
 20082  013CA2  C2CD  F2A6         	movff	_adc_calculations+15,floatToEngineeringFormat@input_value+3
 20083  013CA6  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 20084  013CAA  C2A3  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6043
 20085  013CAE  C2A4  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6043+1
 20086                           
 20087                           ;oled.c: 724: else sprintf(OLED_RAM_Buffer.line1, "%sC", floatToEngineeringFormat(adc_ca
      +                          lculations.output_charge));
 20088  013CB2  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20089  013CB4  0102               	movlb	2	; () banked
 20090  013CB6  6F90               	movwf	sprintf@wh& (0+255),b
 20091  013CB8  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20092  013CBA  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 20093  013CBC  0EBF               	movlw	low STR_168
 20094  013CBE  6F92               	movwf	sprintf@f& (0+255),b
 20095  013CC0  0EFF               	movlw	high STR_168
 20096  013CC2  6F93               	movwf	(sprintf@f+1)& (0+255),b
 20097  013CC4  C3F3  F294         	movff	_OLED_updateHandler$6043,?_sprintf+4
 20098  013CC8  C3F4  F295         	movff	_OLED_updateHandler$6043+1,?_sprintf+5
 20099  013CCC  EC9F  F0DE         	call	_sprintf	;wreg free
 20100  013CD0                     l22190:
 20101                           
 20102                           ;oled.c: 725: strcpy(OLED_RAM_Buffer.line2, " ");
 20103  013CD0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20104  013CD2  0102               	movlb	2	; () banked
 20105  013CD4  6F03               	movwf	strcpy@to& (0+255),b
 20106  013CD6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20107  013CD8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20108  013CDA  0EAA               	movlw	low (STR_56+10)
 20109  013CDC  6F05               	movwf	strcpy@from& (0+255),b
 20110  013CDE  0EFD               	movlw	high (STR_56+10)
 20111  013CE0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20112  013CE2  EC7B  F0DE         	call	_strcpy	;wreg free
 20113                           
 20114                           ;oled.c: 726: strcpy(OLED_RAM_Buffer.line3, " ");
 20115  013CE6  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20116  013CE8  0102               	movlb	2	; () banked
 20117  013CEA  6F03               	movwf	strcpy@to& (0+255),b
 20118  013CEC  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20119  013CEE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20120  013CF0  0EAA               	movlw	low (STR_56+10)
 20121  013CF2  6F05               	movwf	strcpy@from& (0+255),b
 20122  013CF4  0EFD               	movlw	high (STR_56+10)
 20123  013CF6  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20124  013CF8  EC7B  F0DE         	call	_strcpy	;wreg free
 20125                           
 20126                           ;oled.c: 728: OLED_UpdateFromRAMBuffer();
 20127  013CFC  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20128                           
 20129                           ;oled.c: 729: OLED_Frame = OLED_Load_Charge;
 20130  013D00  0E0D               	movlw	13
 20131  013D02  EF4B  F098         	goto	L4
 20132  013D06                     l22200:
 20133                           
 20134                           ; BSR set to: 2
 20135                           ;oled.c: 736: OLED_update_flag = 0;
 20136  013D06  0E00               	movlw	0
 20137  013D08  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20138                           
 20139                           ; BSR set to: 2
 20140                           ;oled.c: 738: strcpy(OLED_RAM_Buffer.line0, "Output Energy:");
 20141  013D0A  0E00               	movlw	low _OLED_RAM_Buffer
 20142  013D0C  6F03               	movwf	strcpy@to& (0+255),b
 20143  013D0E  0E03               	movlw	high _OLED_RAM_Buffer
 20144  013D10  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20145  013D12  0EEF               	movlw	low STR_171
 20146  013D14  6F05               	movwf	strcpy@from& (0+255),b
 20147  013D16  0EFB               	movlw	high STR_171
 20148  013D18  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20149  013D1A  EC7B  F0DE         	call	_strcpy	;wreg free
 20150                           
 20151                           ;oled.c: 739: if (QI_charge_time == 0) strcpy(OLED_RAM_Buffer.line1, "Not Charging");
 20152  013D1E  0102               	movlb	2	; () banked
 20153  013D20  51D2               	movf	_QI_charge_time& (0+255),w,b
 20154  013D22  11D3               	iorwf	(_QI_charge_time+1)& (0+255),w,b
 20155  013D24  11D4               	iorwf	(_QI_charge_time+2)& (0+255),w,b
 20156  013D26  11D5               	iorwf	(_QI_charge_time+3)& (0+255),w,b
 20157  013D28  A4D8               	btfss	status,2,c
 20158  013D2A  D00B               	goto	l22208
 20159                           
 20160                           ; BSR set to: 2
 20161  013D2C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20162  013D2E  6F03               	movwf	strcpy@to& (0+255),b
 20163  013D30  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20164  013D32  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20165  013D34  0E22               	movlw	low STR_93
 20166  013D36  6F05               	movwf	strcpy@from& (0+255),b
 20167  013D38  0EFD               	movlw	high STR_93
 20168  013D3A  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20169  013D3C  EC7B  F0DE         	call	_strcpy	;wreg free
 20170  013D40  D01D               	goto	l22210
 20171  013D42                     l22208:
 20172                           
 20173                           ; BSR set to: 2
 20174                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 20175  013D42  C2CE  F2A3         	movff	_adc_calculations+16,floatToEngineeringFormat@input_value
 20176  013D46  C2CF  F2A4         	movff	_adc_calculations+17,floatToEngineeringFormat@input_value+1
 20177  013D4A  C2D0  F2A5         	movff	_adc_calculations+18,floatToEngineeringFormat@input_value+2
 20178  013D4E  C2D1  F2A6         	movff	_adc_calculations+19,floatToEngineeringFormat@input_value+3
 20179  013D52  ECFB  F0A4         	call	_floatToEngineeringFormat	;wreg free
 20180  013D56  C2A3  F3F3         	movff	?_floatToEngineeringFormat,_OLED_updateHandler$6043
 20181  013D5A  C2A4  F3F4         	movff	?_floatToEngineeringFormat+1,_OLED_updateHandler$6043+1
 20182                           
 20183                           ;oled.c: 740: else sprintf(OLED_RAM_Buffer.line1, "%sJ", floatToEngineeringFormat(adc_ca
      +                          lculations.output_energy));
 20184  013D5E  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20185  013D60  0102               	movlb	2	; () banked
 20186  013D62  6F90               	movwf	sprintf@wh& (0+255),b
 20187  013D64  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20188  013D66  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 20189  013D68  0EC3               	movlw	low STR_173
 20190  013D6A  6F92               	movwf	sprintf@f& (0+255),b
 20191  013D6C  0EFF               	movlw	high STR_173
 20192  013D6E  6F93               	movwf	(sprintf@f+1)& (0+255),b
 20193  013D70  C3F3  F294         	movff	_OLED_updateHandler$6043,?_sprintf+4
 20194  013D74  C3F4  F295         	movff	_OLED_updateHandler$6043+1,?_sprintf+5
 20195  013D78  EC9F  F0DE         	call	_sprintf	;wreg free
 20196  013D7C                     l22210:
 20197                           
 20198                           ;oled.c: 741: strcpy(OLED_RAM_Buffer.line2, " ");
 20199  013D7C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20200  013D7E  0102               	movlb	2	; () banked
 20201  013D80  6F03               	movwf	strcpy@to& (0+255),b
 20202  013D82  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20203  013D84  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20204  013D86  0EAA               	movlw	low (STR_56+10)
 20205  013D88  6F05               	movwf	strcpy@from& (0+255),b
 20206  013D8A  0EFD               	movlw	high (STR_56+10)
 20207  013D8C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20208  013D8E  EC7B  F0DE         	call	_strcpy	;wreg free
 20209                           
 20210                           ;oled.c: 742: strcpy(OLED_RAM_Buffer.line3, " ");
 20211  013D92  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20212  013D94  0102               	movlb	2	; () banked
 20213  013D96  6F03               	movwf	strcpy@to& (0+255),b
 20214  013D98  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20215  013D9A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20216  013D9C  0EAA               	movlw	low (STR_56+10)
 20217  013D9E  6F05               	movwf	strcpy@from& (0+255),b
 20218  013DA0  0EFD               	movlw	high (STR_56+10)
 20219  013DA2  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20220  013DA4  EC7B  F0DE         	call	_strcpy	;wreg free
 20221                           
 20222                           ;oled.c: 744: OLED_UpdateFromRAMBuffer();
 20223  013DA8  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20224                           
 20225                           ;oled.c: 745: OLED_Frame = OLED_Load_Energy;
 20226  013DAC  0E0E               	movlw	14
 20227  013DAE  EF4B  F098         	goto	L4
 20228  013DB2                     l22220:
 20229                           
 20230                           ; BSR set to: 2
 20231                           ;oled.c: 752: OLED_update_flag = 0;
 20232  013DB2  0E00               	movlw	0
 20233  013DB4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20234                           
 20235                           ; BSR set to: 2
 20236                           ;oled.c: 754: strcpy(OLED_RAM_Buffer.line0, "Cause of Reset:");
 20237  013DB6  0E00               	movlw	low _OLED_RAM_Buffer
 20238  013DB8  6F03               	movwf	strcpy@to& (0+255),b
 20239  013DBA  0E03               	movlw	high _OLED_RAM_Buffer
 20240  013DBC  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20241  013DBE  0E72               	movlw	low STR_64
 20242  013DC0  6F05               	movwf	strcpy@from& (0+255),b
 20243  013DC2  0EFB               	movlw	high STR_64
 20244  013DC4  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20245  013DC6  EC7B  F0DE         	call	_strcpy	;wreg free
 20246                           
 20247                           ;oled.c: 755: strcpy(OLED_RAM_Buffer.line1, " ");
 20248  013DCA  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20249  013DCC  0102               	movlb	2	; () banked
 20250  013DCE  6F03               	movwf	strcpy@to& (0+255),b
 20251  013DD0  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20252  013DD2  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20253  013DD4  0EAA               	movlw	low (STR_56+10)
 20254  013DD6  6F05               	movwf	strcpy@from& (0+255),b
 20255  013DD8  0EFD               	movlw	high (STR_56+10)
 20256  013DDA  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20257  013DDC  EC7B  F0DE         	call	_strcpy	;wreg free
 20258                           
 20259                           ;oled.c: 756: strcpy(OLED_RAM_Buffer.line2, getCauseOfResetStringSmall(reset_cause));
 20260  013DE0  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20261  013DE2  0102               	movlb	2	; () banked
 20262  013DE4  6F03               	movwf	strcpy@to& (0+255),b
 20263  013DE6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20264  013DE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20265  013DEA  51FF               	movf	_reset_cause& (0+255),w,b
 20266  013DEC  EC37  F0E2         	call	_getCauseOfResetStringSmall
 20267  013DF0  C200  F205         	movff	?_getCauseOfResetStringSmall,strcpy@from
 20268  013DF4  C201  F206         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 20269  013DF8  EC7B  F0DE         	call	_strcpy	;wreg free
 20270                           
 20271                           ;oled.c: 757: strcpy(OLED_RAM_Buffer.line3, " ");
 20272  013DFC  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20273  013DFE  0102               	movlb	2	; () banked
 20274  013E00  6F03               	movwf	strcpy@to& (0+255),b
 20275  013E02  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20276  013E04  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20277  013E06  0EAA               	movlw	low (STR_56+10)
 20278  013E08  6F05               	movwf	strcpy@from& (0+255),b
 20279  013E0A  0EFD               	movlw	high (STR_56+10)
 20280  013E0C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20281  013E0E  EC7B  F0DE         	call	_strcpy	;wreg free
 20282                           
 20283                           ;oled.c: 759: OLED_UpdateFromRAMBuffer();
 20284  013E12  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20285                           
 20286                           ;oled.c: 760: OLED_Frame = OLED_Cause_Of_Reset;
 20287  013E16  0E16               	movlw	22
 20288  013E18                     L5:
 20289  013E18  0102               	movlb	2	; () banked
 20290  013E1A  6FD7               	movwf	_OLED_Frame& (0+255),b
 20291                           
 20292                           ; BSR set to: 2
 20293                           ;oled.c: 761: OLED_update_time = 255;
 20294  013E1C  0100               	movlb	0	; () banked
 20295  013E1E  69FB               	setf	_OLED_update_time& (0+255),b
 20296                           
 20297                           ;oled.c: 763: break;
 20298  013E20  0012               	return	
 20299  013E22                     l22236:
 20300                           
 20301                           ; BSR set to: 2
 20302                           ;oled.c: 767: OLED_update_flag = 0;
 20303  013E22  0E00               	movlw	0
 20304  013E24  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20305                           
 20306                           ; BSR set to: 2
 20307                           ;oled.c: 771: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 20308  013E26  0E00               	movlw	low _OLED_RAM_Buffer
 20309  013E28  6F03               	movwf	strcpy@to& (0+255),b
 20310  013E2A  0E03               	movlw	high _OLED_RAM_Buffer
 20311  013E2C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20312  013E2E  0EE6               	movlw	low STR_65
 20313  013E30  6F05               	movwf	strcpy@from& (0+255),b
 20314  013E32  0EFD               	movlw	high STR_65
 20315  013E34  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20316  013E36  EC7B  F0DE         	call	_strcpy	;wreg free
 20317                           
 20318                           ;oled.c: 772: char dev_id_str[17];;oled.c: 773: sprintf(dev_id_str,"0x%X",getDeviceID())
      +                          ;
 20319  013E3A  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 20320  013E3C  0102               	movlb	2	; () banked
 20321  013E3E  6F90               	movwf	sprintf@wh& (0+255),b
 20322  013E40  0E03               	movlw	high OLED_updateHandler@dev_id_str
 20323  013E42  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 20324  013E44  0E9F               	movlw	low STR_66
 20325  013E46  6F92               	movwf	sprintf@f& (0+255),b
 20326  013E48  0EFF               	movlw	high STR_66
 20327  013E4A  6F93               	movwf	(sprintf@f+1)& (0+255),b
 20328  013E4C  ECF9  F0E3         	call	_getDeviceID	;wreg free
 20329  013E50  C20B  F294         	movff	?_getDeviceID,?_sprintf+4
 20330  013E54  C20C  F295         	movff	?_getDeviceID+1,?_sprintf+5
 20331  013E58  EC9F  F0DE         	call	_sprintf	;wreg free
 20332                           
 20333                           ;oled.c: 774: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 20334  013E5C  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20335  013E5E  0102               	movlb	2	; () banked
 20336  013E60  6F03               	movwf	strcpy@to& (0+255),b
 20337  013E62  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20338  013E64  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20339  013E66  0ED1               	movlw	low OLED_updateHandler@dev_id_str
 20340  013E68  6F05               	movwf	strcpy@from& (0+255),b
 20341  013E6A  0E03               	movlw	high OLED_updateHandler@dev_id_str
 20342  013E6C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20343  013E6E  EC7B  F0DE         	call	_strcpy	;wreg free
 20344                           
 20345                           ;oled.c: 777: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 20346  013E72  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20347  013E74  0102               	movlb	2	; () banked
 20348  013E76  6F03               	movwf	strcpy@to& (0+255),b
 20349  013E78  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20350  013E7A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20351  013E7C  0EE1               	movlw	low STR_67
 20352  013E7E  6F05               	movwf	strcpy@from& (0+255),b
 20353  013E80  0EFC               	movlw	high STR_67
 20354  013E82  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20355  013E84  EC7B  F0DE         	call	_strcpy	;wreg free
 20356                           
 20357                           ;oled.c: 778: char rev_id_str[17];;oled.c: 779: sprintf(rev_id_str, "%c%03d", (char) get
      +                          MajorRevisionID() + 65, getMinorRevisionID());
 20358  013E88  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 20359  013E8A  0102               	movlb	2	; () banked
 20360  013E8C  6F90               	movwf	sprintf@wh& (0+255),b
 20361  013E8E  0E03               	movlw	high OLED_updateHandler@rev_id_str
 20362  013E90  6F91               	movwf	(sprintf@wh+1)& (0+255),b
 20363  013E92  0E71               	movlw	low STR_68
 20364  013E94  6F92               	movwf	sprintf@f& (0+255),b
 20365  013E96  0EFF               	movlw	high STR_68
 20366  013E98  6F93               	movwf	(sprintf@f+1)& (0+255),b
 20367  013E9A  ECF6  F0E0         	call	_getMajorRevisionID	;wreg free
 20368  013E9E  0102               	movlb	2	; () banked
 20369  013EA0  6FB9               	movwf	??_OLED_updateHandler& (0+255),b
 20370  013EA2  0E41               	movlw	65
 20371  013EA4  25B9               	addwf	??_OLED_updateHandler& (0+255),w,b
 20372  013EA6  6F94               	movwf	(?_sprintf+4)& (0+255),b
 20373  013EA8  6B95               	clrf	(?_sprintf+5)& (0+255),b
 20374  013EAA  0E00               	movlw	0
 20375  013EAC  2395               	addwfc	(?_sprintf+5)& (0+255),f,b
 20376  013EAE  EC4D  F0E3         	call	_getMinorRevisionID	;wreg free
 20377  013EB2  0102               	movlb	2	; () banked
 20378  013EB4  6FBA               	movwf	(??_OLED_updateHandler+1)& (0+255),b
 20379  013EB6  51BA               	movf	(??_OLED_updateHandler+1)& (0+255),w,b
 20380  013EB8  6F96               	movwf	(?_sprintf+6)& (0+255),b
 20381  013EBA  6B97               	clrf	(?_sprintf+7)& (0+255),b
 20382  013EBC  EC9F  F0DE         	call	_sprintf	;wreg free
 20383                           
 20384                           ;oled.c: 780: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 20385  013EC0  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20386  013EC2  0102               	movlb	2	; () banked
 20387  013EC4  6F03               	movwf	strcpy@to& (0+255),b
 20388  013EC6  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20389  013EC8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20390  013ECA  0EE2               	movlw	low OLED_updateHandler@rev_id_str
 20391  013ECC  6F05               	movwf	strcpy@from& (0+255),b
 20392  013ECE  0E03               	movlw	high OLED_updateHandler@rev_id_str
 20393  013ED0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20394  013ED2  EC7B  F0DE         	call	_strcpy	;wreg free
 20395                           
 20396                           ;oled.c: 782: OLED_UpdateFromRAMBuffer();
 20397  013ED6  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20398                           
 20399                           ;oled.c: 783: OLED_Frame = OLED_Dev_Rev_ID;
 20400  013EDA  0E17               	movlw	23
 20401  013EDC  D79D               	goto	L5
 20402  013EDE                     l22256:
 20403                           
 20404                           ; BSR set to: 2
 20405                           ;oled.c: 790: OLED_update_flag = 0;
 20406  013EDE  0E00               	movlw	0
 20407  013EE0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20408                           
 20409                           ; BSR set to: 2
 20410                           ;oled.c: 792: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 20411  013EE2  0E00               	movlw	low _OLED_RAM_Buffer
 20412  013EE4  6F03               	movwf	strcpy@to& (0+255),b
 20413  013EE6  0E03               	movlw	high _OLED_RAM_Buffer
 20414  013EE8  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20415  013EEA  0E62               	movlw	low STR_69
 20416  013EEC  6F05               	movwf	strcpy@from& (0+255),b
 20417  013EEE  0EFB               	movlw	high STR_69
 20418  013EF0  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20419  013EF2  EC7B  F0DE         	call	_strcpy	;wreg free
 20420                           
 20421                           ;oled.c: 793: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 20422  013EF6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20423  013EF8  0102               	movlb	2	; () banked
 20424  013EFA  6F03               	movwf	strcpy@to& (0+255),b
 20425  013EFC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20426  013EFE  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20427  013F00  0E74               	movlw	low STR_70
 20428  013F02  6F05               	movwf	strcpy@from& (0+255),b
 20429  013F04  0EFE               	movlw	high STR_70
 20430  013F06  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20431  013F08  EC7B  F0DE         	call	_strcpy	;wreg free
 20432                           
 20433                           ;oled.c: 794: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 20434  013F0C  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20435  013F0E  0102               	movlb	2	; () banked
 20436  013F10  6F03               	movwf	strcpy@to& (0+255),b
 20437  013F12  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20438  013F14  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20439  013F16  0E92               	movlw	low STR_71
 20440  013F18  6F05               	movwf	strcpy@from& (0+255),b
 20441  013F1A  0EFB               	movlw	high STR_71
 20442  013F1C  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20443  013F1E  EC7B  F0DE         	call	_strcpy	;wreg free
 20444                           
 20445                           ;oled.c: 795: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow");
 20446  013F22  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20447  013F24  0102               	movlb	2	; () banked
 20448  013F26  6F03               	movwf	strcpy@to& (0+255),b
 20449  013F28  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20450  013F2A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20451  013F2C  0EFE               	movlw	low STR_72
 20452  013F2E  6F05               	movwf	strcpy@from& (0+255),b
 20453  013F30  0EFB               	movlw	high STR_72
 20454  013F32  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20455  013F34  EC7B  F0DE         	call	_strcpy	;wreg free
 20456                           
 20457                           ;oled.c: 797: OLED_UpdateFromRAMBuffer();
 20458  013F38  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20459                           
 20460                           ;oled.c: 798: OLED_Frame = OLED_COM_PORT_SET;
 20461  013F3C  0E18               	movlw	24
 20462  013F3E  D76C               	goto	L5
 20463  013F40                     l22272:
 20464                           
 20465                           ; BSR set to: 2
 20466                           ;oled.c: 805: OLED_update_flag = 0;
 20467  013F40  0E00               	movlw	0
 20468  013F42  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20469                           
 20470                           ; BSR set to: 2
 20471                           ;oled.c: 807: strcpy(OLED_RAM_Buffer.line0, "QI Charger w/");
 20472  013F44  0E00               	movlw	low _OLED_RAM_Buffer
 20473  013F46  6F03               	movwf	strcpy@to& (0+255),b
 20474  013F48  0E03               	movlw	high _OLED_RAM_Buffer
 20475  013F4A  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20476  013F4C  0E47               	movlw	low STR_62
 20477  013F4E  6F05               	movwf	strcpy@from& (0+255),b
 20478  013F50  0EFC               	movlw	high STR_62
 20479  013F52  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20480  013F54  EC7B  F0DE         	call	_strcpy	;wreg free
 20481                           
 20482                           ;oled.c: 808: strcpy(OLED_RAM_Buffer.line1, "Digital Monitor");
 20483  013F58  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 20484  013F5A  0102               	movlb	2	; () banked
 20485  013F5C  6F03               	movwf	strcpy@to& (0+255),b
 20486  013F5E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 20487  013F60  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20488  013F62  0E82               	movlw	low STR_63
 20489  013F64  6F05               	movwf	strcpy@from& (0+255),b
 20490  013F66  0EFB               	movlw	high STR_63
 20491  013F68  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20492  013F6A  EC7B  F0DE         	call	_strcpy	;wreg free
 20493                           
 20494                           ;oled.c: 809: strcpy(OLED_RAM_Buffer.line2, "Drew Maatman");
 20495  013F6E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 20496  013F70  0102               	movlb	2	; () banked
 20497  013F72  6F03               	movwf	strcpy@to& (0+255),b
 20498  013F74  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 20499  013F76  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20500  013F78  0E2F               	movlw	low STR_189
 20501  013F7A  6F05               	movwf	strcpy@from& (0+255),b
 20502  013F7C  0EFD               	movlw	high STR_189
 20503  013F7E  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20504  013F80  EC7B  F0DE         	call	_strcpy	;wreg free
 20505                           
 20506                           ;oled.c: 810: strcpy(OLED_RAM_Buffer.line3, "Spring 2019");
 20507  013F84  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 20508  013F86  0102               	movlb	2	; () banked
 20509  013F88  6F03               	movwf	strcpy@to& (0+255),b
 20510  013F8A  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 20511  013F8C  6F04               	movwf	(strcpy@to+1)& (0+255),b
 20512  013F8E  0E70               	movlw	low STR_190
 20513  013F90  6F05               	movwf	strcpy@from& (0+255),b
 20514  013F92  0EFD               	movlw	high STR_190
 20515  013F94  6F06               	movwf	(strcpy@from+1)& (0+255),b
 20516  013F96  EC7B  F0DE         	call	_strcpy	;wreg free
 20517                           
 20518                           ;oled.c: 812: OLED_UpdateFromRAMBuffer();
 20519  013F9A  EC63  F0D0         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 20520                           
 20521                           ;oled.c: 813: OLED_Frame = OLED_TITLE_FRAME;
 20522  013F9E  0E19               	movlw	25
 20523  013FA0  D73B               	goto	L5
 20524  013FA2                     l22288:
 20525                           
 20526                           ; BSR set to: 2
 20527                           ;oled.c: 820: OLED_update_flag = 0;
 20528  013FA2  0E00               	movlw	0
 20529  013FA4  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20530                           
 20531                           ;oled.c: 822: break;
 20532  013FA6  0012               	return	
 20533  013FA8                     l22290:
 20534                           
 20535                           ; BSR set to: 2
 20536                           ;oled.c: 826: OLED_update_flag = 0;
 20537  013FA8  0E00               	movlw	0
 20538  013FAA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 20539                           
 20540                           ;oled.c: 828: error_handler.I2C_OLED_error_flag = 1;
 20541  013FAC  0E01               	movlw	1
 20542  013FAE  0100               	movlb	0	; () banked
 20543  013FB0  6FBC               	movwf	(_error_handler+3)& (0+255),b
 20544                           
 20545                           ;oled.c: 829: break;
 20546  013FB2  0012               	return	
 20547  013FB4                     l22294:
 20548  013FB4  0102               	movlb	2	; () banked
 20549  013FB6  51D7               	movf	_OLED_Frame& (0+255),w,b
 20550                           
 20551                           ; Switch size 1, requested type "simple"
 20552                           ; Number of cases is 27, Range of values is 0 to 26
 20553                           ; switch strategies available:
 20554                           ; Name         Instructions Cycles
 20555                           ; simple_byte           82    42 (average)
 20556                           ;	Chosen strategy is simple_byte
 20557  013FB8  0A00               	xorlw	0	; case 0
 20558  013FBA  B4D8               	btfsc	status,2,c
 20559  013FBC  EF20  F097         	goto	l21804
 20560  013FC0  0A01               	xorlw	1	; case 1
 20561  013FC2  B4D8               	btfsc	status,2,c
 20562  013FC4  EF59  F097         	goto	l21820
 20563  013FC8  0A03               	xorlw	3	; case 2
 20564  013FCA  B4D8               	btfsc	status,2,c
 20565  013FCC  EFB7  F097         	goto	l21840
 20566  013FD0  0A01               	xorlw	1	; case 3
 20567  013FD2  B4D8               	btfsc	status,2,c
 20568  013FD4  EFE8  F097         	goto	l21856
 20569  013FD8  0A07               	xorlw	7	; case 4
 20570  013FDA  B4D8               	btfsc	status,2,c
 20571  013FDC  EF19  F098         	goto	l21872
 20572  013FE0  0A01               	xorlw	1	; case 5
 20573  013FE2  B4D8               	btfsc	status,2,c
 20574  013FE4  EF51  F098         	goto	l21888
 20575  013FE8  0A03               	xorlw	3	; case 6
 20576  013FEA  B4D8               	btfsc	status,2,c
 20577  013FEC  EF8A  F098         	goto	l21904
 20578  013FF0  0A01               	xorlw	1	; case 7
 20579  013FF2  B4D8               	btfsc	status,2,c
 20580  013FF4  EFC3  F098         	goto	l21920
 20581  013FF8  0A0F               	xorlw	15	; case 8
 20582  013FFA  B4D8               	btfsc	status,2,c
 20583  013FFC  EFFC  F098         	goto	l21936
 20584  014000  0A01               	xorlw	1	; case 9
 20585  014002  B4D8               	btfsc	status,2,c
 20586  014004  EF46  F099         	goto	l21956
 20587  014008  0A03               	xorlw	3	; case 10
 20588  01400A  B4D8               	btfsc	status,2,c
 20589  01400C  EF7F  F099         	goto	l21972
 20590  014010  0A01               	xorlw	1	; case 11
 20591  014012  B4D8               	btfsc	status,2,c
 20592  014014  EFC9  F099         	goto	l21992
 20593  014018  0A07               	xorlw	7	; case 12
 20594  01401A  B4D8               	btfsc	status,2,c
 20595  01401C  D518               	goto	l22150
 20596  01401E  0A01               	xorlw	1	; case 13
 20597  014020  B4D8               	btfsc	status,2,c
 20598  014022  D61B               	goto	l22180
 20599  014024  0A03               	xorlw	3	; case 14
 20600  014026  B4D8               	btfsc	status,2,c
 20601  014028  D66E               	goto	l22200
 20602  01402A  0A01               	xorlw	1	; case 15
 20603  01402C  B4D8               	btfsc	status,2,c
 20604  01402E  EF13  F09A         	goto	l22012
 20605  014032  0A1F               	xorlw	31	; case 16
 20606  014034  B4D8               	btfsc	status,2,c
 20607  014036  EF4C  F09A         	goto	l22028
 20608  01403A  0A01               	xorlw	1	; case 17
 20609  01403C  B4D8               	btfsc	status,2,c
 20610  01403E  EF85  F09A         	goto	l22044
 20611  014042  0A03               	xorlw	3	; case 18
 20612  014044  B4D8               	btfsc	status,2,c
 20613  014046  EFBE  F09A         	goto	l22060
 20614  01404A  0A01               	xorlw	1	; case 19
 20615  01404C  B4D8               	btfsc	status,2,c
 20616  01404E  EFF7  F09A         	goto	l22076
 20617  014052  0A07               	xorlw	7	; case 20
 20618  014054  B4D8               	btfsc	status,2,c
 20619  014056  EF3C  F09B         	goto	l22094
 20620  01405A  0A01               	xorlw	1	; case 21
 20621  01405C  B4D8               	btfsc	status,2,c
 20622  01405E  EF93  F09B         	goto	l22116
 20623  014062  0A03               	xorlw	3	; case 22
 20624  014064  B4D8               	btfsc	status,2,c
 20625  014066  D6A5               	goto	l22220
 20626  014068  0A01               	xorlw	1	; case 23
 20627  01406A  B4D8               	btfsc	status,2,c
 20628  01406C  D6DA               	goto	l22236
 20629  01406E  0A0F               	xorlw	15	; case 24
 20630  014070  B4D8               	btfsc	status,2,c
 20631  014072  D735               	goto	l22256
 20632  014074  0A01               	xorlw	1	; case 25
 20633  014076  B4D8               	btfsc	status,2,c
 20634  014078  D763               	goto	l22272
 20635  01407A  0A03               	xorlw	3	; case 26
 20636  01407C  B4D8               	btfsc	status,2,c
 20637  01407E  D791               	goto	l22288
 20638  014080  D793               	goto	l22290
 20639  014082                     __end_of_OLED_updateHandler:
 20640                           	opt callstack 0
 20641                           
 20642 ;; *************** function _strcpy *****************
 20643 ;; Defined at:
 20644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcpy.c"
 20645 ;; Parameters:    Size  Location     Type
 20646 ;;  to              2    3[BANK2 ] PTR unsigned char 
 20647 ;;		 -> OLED_RAM_Buffer(68), 
 20648 ;;  from            2    5[BANK2 ] PTR const unsigned char 
 20649 ;;		 -> STR_190(12), STR_189(13), STR_188(16), STR_187(14), 
 20650 ;;		 -> STR_186(15), STR_185(16), STR_184(10), STR_183(16), 
 20651 ;;		 -> STR_181(13), STR_179(11), STR_178(2), STR_177(2), 
 20652 ;;		 -> STR_176(16), STR_175(2), STR_174(2), STR_172(13), 
 20653 ;;		 -> STR_171(15), STR_170(2), STR_169(2), STR_167(13), 
 20654 ;;		 -> STR_166(15), STR_165(2), STR_164(2), STR_162(2), 
 20655 ;;		 -> STR_161(2), STR_160(13), STR_159(2), STR_153(13), 
 20656 ;;		 -> STR_152(2), STR_151(2), STR_149(2), STR_137(14), 
 20657 ;;		 -> STR_136(2), STR_135(2), STR_133(11), STR_132(13), 
 20658 ;;		 -> STR_131(2), STR_130(2), STR_129(9), STR_128(11), 
 20659 ;;		 -> STR_127(14), STR_126(2), STR_125(2), STR_123(12), 
 20660 ;;		 -> STR_122(2), STR_121(2), STR_119(14), STR_118(2), 
 20661 ;;		 -> STR_117(2), STR_115(10), STR_114(2), STR_113(2), 
 20662 ;;		 -> STR_111(9), STR_110(2), STR_109(2), STR_107(13), 
 20663 ;;		 -> STR_106(12), STR_105(2), STR_104(2), STR_102(13), 
 20664 ;;		 -> STR_101(14), STR_100(2), STR_99(2), STR_97(13), 
 20665 ;;		 -> STR_96(2), STR_95(2), STR_93(13), STR_92(12), 
 20666 ;;		 -> STR_91(2), STR_90(2), STR_88(14), STR_87(2), 
 20667 ;;		 -> STR_86(2), STR_84(13), STR_83(2), STR_82(2), 
 20668 ;;		 -> STR_80(14), STR_79(2), STR_78(2), STR_77(15), 
 20669 ;;		 -> STR_76(16), STR_75(14), STR_74(11), STR_73(14), 
 20670 ;;		 -> STR_72(15), STR_71(16), STR_70(10), STR_69(16), 
 20671 ;;		 -> OLED_updateHandler@rev_id_str(17), STR_67(13), OLED_updateHandler@dev_id_str(17), STR_65(11), 
 20672 ;;		 -> STR_64(16), STR_63(16), STR_62(14), STR_42(10), 
 20673 ;;		 -> STR_41(11), STR_40(11), STR_39(15), STR_38(11), 
 20674 ;;		 -> STR_37(10), STR_36(11), STR_35(10), STR_34(10), 
 20675 ;;		 -> STR_33(10), STR_22(10), STR_21(6), STR_20(14), 
 20676 ;;		 -> STR_19(9), STR_18(5), 
 20677 ;; Auto vars:     Size  Location     Type
 20678 ;;  cp              2    7[BANK2 ] PTR unsigned char 
 20679 ;;		 -> OLED_RAM_Buffer(68), 
 20680 ;; Return value:  Size  Location     Type
 20681 ;;                  2    3[BANK2 ] PTR unsigned char 
 20682 ;; Registers used:
 20683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20684 ;; Tracked objects:
 20685 ;;		On entry : 0/0
 20686 ;;		On exit  : 0/0
 20687 ;;		Unchanged: 0/0
 20688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20689 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20690 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20692 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20693 ;;Total ram usage:        6 bytes
 20694 ;; Hardware stack levels used:    1
 20695 ;; Hardware stack levels required when called:   11
 20696 ;; This function calls:
 20697 ;;		Nothing
 20698 ;; This function is called by:
 20699 ;;		_OLED_updateHandler
 20700 ;; This function uses a non-reentrant model
 20701 ;;
 20702                           
 20703                           	psect	text64
 20704  01BCF6                     __ptext64:
 20705                           	opt callstack 0
 20706  01BCF6                     _strcpy:
 20707                           	opt callstack 18
 20708                           
 20709                           ;incstack = 0
 20710  01BCF6  C203  F207         	movff	strcpy@to,strcpy@cp
 20711  01BCFA  C204  F208         	movff	strcpy@to+1,strcpy@cp+1
 20712  01BCFE  D005               	goto	l21392
 20713  01BD00                     l21390:
 20714  01BD00  0102               	movlb	2	; () banked
 20715  01BD02  4B07               	infsnz	strcpy@cp& (0+255),f,b
 20716  01BD04  2B08               	incf	(strcpy@cp+1)& (0+255),f,b
 20717  01BD06  4B05               	infsnz	strcpy@from& (0+255),f,b
 20718  01BD08  2B06               	incf	(strcpy@from+1)& (0+255),f,b
 20719  01BD0A                     l21392:
 20720  01BD0A  C205  FFF6         	movff	strcpy@from,tblptrl
 20721  01BD0E  C206  FFF7         	movff	strcpy@from+1,tblptrh
 20722  01BD12  0E00               	movlw	low (__mediumconst shr (0+16))
 20723  01BD14  6EF8               	movwf	tblptru,c
 20724  01BD16  C207  FFD9         	movff	strcpy@cp,fsr2l
 20725  01BD1A  C208  FFDA         	movff	strcpy@cp+1,fsr2h
 20726  01BD1E  0E0E               	movlw	(high __ramtop+-1)
 20727  01BD20  64F7               	cpfsgt	tblptrh,c
 20728  01BD22  D003               	bra	u27377
 20729  01BD24  0008               	tblrd		*
 20730  01BD26  50F5               	movf	tablat,w,c
 20731  01BD28  D005               	bra	u27370
 20732  01BD2A                     u27377:
 20733  01BD2A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20734  01BD2E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20735  01BD32  50EF               	movf	indf0,w,c
 20736  01BD34                     u27370:
 20737  01BD34  6EDF               	movwf	indf2,c
 20738  01BD36  50DF               	movf	indf2,w,c
 20739  01BD38  B4D8               	btfsc	status,2,c
 20740  01BD3A  0012               	return	
 20741  01BD3C  D7E1               	goto	l21390
 20742  01BD3E                     __end_of_strcpy:
 20743                           	opt callstack 0
 20744                           
 20745 ;; *************** function _getYearsFromOnTime *****************
 20746 ;; Defined at:
 20747 ;;		line 180 in file "heartbeat_timer.c"
 20748 ;; Parameters:    Size  Location     Type
 20749 ;;  input_second    4   13[BANK2 ] unsigned long 
 20750 ;; Auto vars:     Size  Location     Type
 20751 ;;  years           1   17[BANK2 ] unsigned char 
 20752 ;; Return value:  Size  Location     Type
 20753 ;;                  1    wreg      unsigned char 
 20754 ;; Registers used:
 20755 ;;		wreg, status,2, status,0, cstack
 20756 ;; Tracked objects:
 20757 ;;		On entry : 0/0
 20758 ;;		On exit  : 0/0
 20759 ;;		Unchanged: 0/0
 20760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20761 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20762 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20764 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;Total ram usage:        5 bytes
 20766 ;; Hardware stack levels used:    1
 20767 ;; Hardware stack levels required when called:   12
 20768 ;; This function calls:
 20769 ;;		___lldiv
 20770 ;; This function is called by:
 20771 ;;		_OLED_updateHandler
 20772 ;; This function uses a non-reentrant model
 20773 ;;
 20774                           
 20775                           	psect	text65
 20776  01C43E                     __ptext65:
 20777                           	opt callstack 0
 20778  01C43E                     _getYearsFromOnTime:
 20779                           	opt callstack 17
 20780                           
 20781                           ;heartbeat_timer.c: 182: uint8_t years;;heartbeat_timer.c: 183: return years = input_sec
      +                          onds / (60 * 60 * 24 * 365);
 20782                           
 20783                           ;incstack = 0
 20784  01C43E  C20D  F200         	movff	getYearsFromOnTime@input_seconds,___lldiv@dividend
 20785  01C442  C20E  F201         	movff	getYearsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20786  01C446  C20F  F202         	movff	getYearsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20787  01C44A  C210  F203         	movff	getYearsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20788  01C44E  0E80               	movlw	128
 20789  01C450  0102               	movlb	2	; () banked
 20790  01C452  6F04               	movwf	___lldiv@divisor& (0+255),b
 20791  01C454  0E33               	movlw	51
 20792  01C456  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20793  01C458  0E00               	movlw	0
 20794  01C45A  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20795  01C45C  0E00               	movlw	0
 20796  01C45E  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20797  01C460  ECED  F0D9         	call	___lldiv	;wreg free
 20798  01C464  0102               	movlb	2	; () banked
 20799  01C466  5100               	movf	?___lldiv& (0+255),w,b
 20800  01C468  6F11               	movwf	getYearsFromOnTime@years& (0+255),b
 20801  01C46A  5111               	movf	getYearsFromOnTime@years& (0+255),w,b
 20802                           
 20803                           ; BSR set to: 2
 20804  01C46C  0012               	return		;funcret
 20805  01C46E                     __end_of_getYearsFromOnTime:
 20806                           	opt callstack 0
 20807                           
 20808 ;; *************** function _getSecondsFromOnTime *****************
 20809 ;; Defined at:
 20810 ;;		line 224 in file "heartbeat_timer.c"
 20811 ;; Parameters:    Size  Location     Type
 20812 ;;  input_second    4   13[BANK2 ] unsigned long 
 20813 ;; Auto vars:     Size  Location     Type
 20814 ;;  minutes         1   25[BANK2 ] unsigned char 
 20815 ;;  hours           1   24[BANK2 ] unsigned char 
 20816 ;;  days            1   23[BANK2 ] unsigned char 
 20817 ;;  years           1   22[BANK2 ] unsigned char 
 20818 ;;  seconds         1   21[BANK2 ] unsigned char 
 20819 ;; Return value:  Size  Location     Type
 20820 ;;                  1    wreg      unsigned char 
 20821 ;; Registers used:
 20822 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20823 ;; Tracked objects:
 20824 ;;		On entry : 0/0
 20825 ;;		On exit  : 0/0
 20826 ;;		Unchanged: 0/0
 20827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20828 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20829 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20830 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20831 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20832 ;;Total ram usage:       13 bytes
 20833 ;; Hardware stack levels used:    1
 20834 ;; Hardware stack levels required when called:   12
 20835 ;; This function calls:
 20836 ;;		___lldiv
 20837 ;;		___wmul
 20838 ;; This function is called by:
 20839 ;;		_OLED_updateHandler
 20840 ;; This function uses a non-reentrant model
 20841 ;;
 20842                           
 20843                           	psect	text66
 20844  0198D6                     __ptext66:
 20845                           	opt callstack 0
 20846  0198D6                     _getSecondsFromOnTime:
 20847                           	opt callstack 17
 20848                           
 20849                           ;heartbeat_timer.c: 226: uint8_t years, days, hours, minutes, seconds;;heartbeat_timer.c
      +                          : 227: years = input_seconds / (60 * 60 * 24 * 365);
 20850                           
 20851                           ; BSR set to: 2
 20852                           ;incstack = 0
 20853  0198D6  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20854  0198DA  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20855  0198DE  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20856  0198E2  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20857  0198E6  0E80               	movlw	128
 20858  0198E8  0102               	movlb	2	; () banked
 20859  0198EA  6F04               	movwf	___lldiv@divisor& (0+255),b
 20860  0198EC  0E33               	movlw	51
 20861  0198EE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20862  0198F0  0E00               	movlw	0
 20863  0198F2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20864  0198F4  0E00               	movlw	0
 20865  0198F6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20866  0198F8  ECED  F0D9         	call	___lldiv	;wreg free
 20867  0198FC  0102               	movlb	2	; () banked
 20868  0198FE  5100               	movf	?___lldiv& (0+255),w,b
 20869  019900  6F16               	movwf	getSecondsFromOnTime@years& (0+255),b
 20870                           
 20871                           ; BSR set to: 2
 20872                           ;heartbeat_timer.c: 228: input_seconds -= years * (60 * 60 * 24 * 365);
 20873  019902  C216  F200         	movff	getSecondsFromOnTime@years,___wmul@multiplier
 20874  019906  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20875  019908  0E33               	movlw	51
 20876  01990A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20877  01990C  0E80               	movlw	128
 20878  01990E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20879  019910  ECFD  F0E2         	call	___wmul	;wreg free
 20880  019914  0102               	movlb	2	; () banked
 20881  019916  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20882  01991A  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20883  01991E  0E00               	movlw	0
 20884  019920  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20885  019922  0EFF               	movlw	255
 20886  019924  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20887  019926  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20888  019928  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20889  01992A  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20890  01992C  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20891  01992E  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20892  019930  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20893  019932  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20894  019934  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20895  019936  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20896                           
 20897                           ; BSR set to: 2
 20898                           ;heartbeat_timer.c: 229: days = input_seconds / (60 * 60 * 24);
 20899  019938  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20900  01993C  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20901  019940  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20902  019944  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20903  019948  0E80               	movlw	128
 20904  01994A  6F04               	movwf	___lldiv@divisor& (0+255),b
 20905  01994C  0E51               	movlw	81
 20906  01994E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20907  019950  0E00               	movlw	0
 20908  019952  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20909  019954  0E00               	movlw	0
 20910  019956  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20911  019958  ECED  F0D9         	call	___lldiv	;wreg free
 20912  01995C  0102               	movlb	2	; () banked
 20913  01995E  5100               	movf	?___lldiv& (0+255),w,b
 20914  019960  6F17               	movwf	getSecondsFromOnTime@days& (0+255),b
 20915                           
 20916                           ;heartbeat_timer.c: 230: input_seconds -= days * (60 * 60 * 24);
 20917  019962  C217  F200         	movff	getSecondsFromOnTime@days,___wmul@multiplier
 20918  019966  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20919  019968  0E51               	movlw	81
 20920  01996A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20921  01996C  0E80               	movlw	128
 20922  01996E  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20923  019970  ECFD  F0E2         	call	___wmul	;wreg free
 20924  019974  0102               	movlb	2	; () banked
 20925  019976  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20926  01997A  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20927  01997E  0E00               	movlw	0
 20928  019980  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20929  019982  0EFF               	movlw	255
 20930  019984  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20931  019986  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20932  019988  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20933  01998A  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20934  01998C  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20935  01998E  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20936  019990  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20937  019992  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20938  019994  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20939  019996  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20940                           
 20941                           ; BSR set to: 2
 20942                           ;heartbeat_timer.c: 231: hours = input_seconds / (60 * 60);
 20943  019998  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20944  01999C  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20945  0199A0  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20946  0199A4  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20947  0199A8  0E10               	movlw	16
 20948  0199AA  6F04               	movwf	___lldiv@divisor& (0+255),b
 20949  0199AC  0E0E               	movlw	14
 20950  0199AE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20951  0199B0  0E00               	movlw	0
 20952  0199B2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20953  0199B4  0E00               	movlw	0
 20954  0199B6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20955  0199B8  ECED  F0D9         	call	___lldiv	;wreg free
 20956  0199BC  0102               	movlb	2	; () banked
 20957  0199BE  5100               	movf	?___lldiv& (0+255),w,b
 20958  0199C0  6F18               	movwf	getSecondsFromOnTime@hours& (0+255),b
 20959                           
 20960                           ; BSR set to: 2
 20961                           ;heartbeat_timer.c: 232: input_seconds -= hours * (60 * 60);
 20962  0199C2  C218  F200         	movff	getSecondsFromOnTime@hours,___wmul@multiplier
 20963  0199C6  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 20964  0199C8  0E0E               	movlw	14
 20965  0199CA  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20966  0199CC  0E10               	movlw	16
 20967  0199CE  6F02               	movwf	___wmul@multiplicand& (0+255),b
 20968  0199D0  ECFD  F0E2         	call	___wmul	;wreg free
 20969  0199D4  0102               	movlb	2	; () banked
 20970  0199D6  C200  F211         	movff	?___wmul,??_getSecondsFromOnTime
 20971  0199DA  C201  F212         	movff	?___wmul+1,??_getSecondsFromOnTime+1
 20972  0199DE  0E00               	movlw	0
 20973  0199E0  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 20974  0199E2  0EFF               	movlw	255
 20975  0199E4  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 20976  0199E6  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 20977  0199E8  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 20978  0199EA  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 20979  0199EC  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 20980  0199EE  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 20981  0199F0  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 20982  0199F2  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 20983  0199F4  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 20984  0199F6  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 20985                           
 20986                           ;heartbeat_timer.c: 233: minutes = input_seconds / 60;
 20987  0199F8  C20D  F200         	movff	getSecondsFromOnTime@input_seconds,___lldiv@dividend
 20988  0199FC  C20E  F201         	movff	getSecondsFromOnTime@input_seconds+1,___lldiv@dividend+1
 20989  019A00  C20F  F202         	movff	getSecondsFromOnTime@input_seconds+2,___lldiv@dividend+2
 20990  019A04  C210  F203         	movff	getSecondsFromOnTime@input_seconds+3,___lldiv@dividend+3
 20991  019A08  0E3C               	movlw	60
 20992  019A0A  6F04               	movwf	___lldiv@divisor& (0+255),b
 20993  019A0C  0E00               	movlw	0
 20994  019A0E  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 20995  019A10  0E00               	movlw	0
 20996  019A12  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 20997  019A14  0E00               	movlw	0
 20998  019A16  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 20999  019A18  ECED  F0D9         	call	___lldiv	;wreg free
 21000  019A1C  0102               	movlb	2	; () banked
 21001  019A1E  5100               	movf	?___lldiv& (0+255),w,b
 21002  019A20  6F19               	movwf	getSecondsFromOnTime@minutes& (0+255),b
 21003                           
 21004                           ; BSR set to: 2
 21005                           ;heartbeat_timer.c: 234: input_seconds -= minutes * 60;
 21006  019A22  5119               	movf	getSecondsFromOnTime@minutes& (0+255),w,b
 21007  019A24  0D3C               	mullw	60
 21008  019A26  CFF3 F211          	movff	prodl,??_getSecondsFromOnTime
 21009  019A2A  CFF4 F212          	movff	prodh,??_getSecondsFromOnTime+1
 21010  019A2E  0E00               	movlw	0
 21011  019A30  BF12               	btfsc	(??_getSecondsFromOnTime+1)& (0+255),7,b
 21012  019A32  0EFF               	movlw	255
 21013  019A34  6F13               	movwf	(??_getSecondsFromOnTime+2)& (0+255),b
 21014  019A36  6F14               	movwf	(??_getSecondsFromOnTime+3)& (0+255),b
 21015  019A38  5111               	movf	??_getSecondsFromOnTime& (0+255),w,b
 21016  019A3A  5F0D               	subwf	getSecondsFromOnTime@input_seconds& (0+255),f,b
 21017  019A3C  5112               	movf	(??_getSecondsFromOnTime+1)& (0+255),w,b
 21018  019A3E  5B0E               	subwfb	(getSecondsFromOnTime@input_seconds+1)& (0+255),f,b
 21019  019A40  5113               	movf	(??_getSecondsFromOnTime+2)& (0+255),w,b
 21020  019A42  5B0F               	subwfb	(getSecondsFromOnTime@input_seconds+2)& (0+255),f,b
 21021  019A44  5114               	movf	(??_getSecondsFromOnTime+3)& (0+255),w,b
 21022  019A46  5B10               	subwfb	(getSecondsFromOnTime@input_seconds+3)& (0+255),f,b
 21023                           
 21024                           ; BSR set to: 2
 21025                           ;heartbeat_timer.c: 235: return seconds = input_seconds;
 21026  019A48  C20D  F215         	movff	getSecondsFromOnTime@input_seconds,getSecondsFromOnTime@seconds
 21027  019A4C  5115               	movf	getSecondsFromOnTime@seconds& (0+255),w,b
 21028                           
 21029                           ; BSR set to: 2
 21030  019A4E  0012               	return		;funcret
 21031  019A50                     __end_of_getSecondsFromOnTime:
 21032                           	opt callstack 0
 21033                           
 21034 ;; *************** function _getNXQChargeStateStringCaps *****************
 21035 ;; Defined at:
 21036 ;;		line 38 in file "NXQ_charge_state.c"
 21037 ;; Parameters:    Size  Location     Type
 21038 ;;		None
 21039 ;; Auto vars:     Size  Location     Type
 21040 ;;		None
 21041 ;; Return value:  Size  Location     Type
 21042 ;;                  2    0[BANK2 ] PTR unsigned char 
 21043 ;; Registers used:
 21044 ;;		wreg, status,2, status,0
 21045 ;; Tracked objects:
 21046 ;;		On entry : 0/0
 21047 ;;		On exit  : 0/0
 21048 ;;		Unchanged: 0/0
 21049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21050 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21053 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21054 ;;Total ram usage:        2 bytes
 21055 ;; Hardware stack levels used:    1
 21056 ;; Hardware stack levels required when called:   11
 21057 ;; This function calls:
 21058 ;;		Nothing
 21059 ;; This function is called by:
 21060 ;;		_OLED_updateHandler
 21061 ;; This function uses a non-reentrant model
 21062 ;;
 21063                           
 21064                           	psect	text67
 21065  01B960                     __ptext67:
 21066                           	opt callstack 0
 21067  01B960                     _getNXQChargeStateStringCaps:
 21068                           	opt callstack 18
 21069                           
 21070                           ;NXQ_charge_state.c: 40: switch (nxq_charge_state) {
 21071                           
 21072                           ; BSR set to: 2
 21073                           ;incstack = 0
 21074  01B960  D01E               	goto	l21124
 21075  01B962                     l21092:
 21076                           
 21077                           ; BSR set to: 1
 21078                           ;NXQ_charge_state.c: 43: return "Idle";
 21079  01B962  0EA9               	movlw	low STR_18
 21080  01B964  0102               	movlb	2	; () banked
 21081  01B966  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21082  01B968  0EFF               	movlw	high STR_18
 21083  01B96A  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21084  01B96C  0012               	return	
 21085  01B96E                     l21098:
 21086                           
 21087                           ; BSR set to: 1
 21088                           ;NXQ_charge_state.c: 47: return "Charging";
 21089  01B96E  0E26               	movlw	low (STR_93+4)
 21090  01B970  0102               	movlb	2	; () banked
 21091  01B972  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21092  01B974  0EFD               	movlw	high (STR_93+4)
 21093  01B976  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21094  01B978  0012               	return	
 21095  01B97A                     l21104:
 21096                           
 21097                           ; BSR set to: 1
 21098                           ;NXQ_charge_state.c: 51: return "Fully Charged";
 21099  01B97A  0EC5               	movlw	low STR_20
 21100  01B97C  0102               	movlb	2	; () banked
 21101  01B97E  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21102  01B980  0EFC               	movlw	high STR_20
 21103  01B982  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21104  01B984  0012               	return	
 21105  01B986                     l21110:
 21106                           
 21107                           ; BSR set to: 1
 21108                           ;NXQ_charge_state.c: 55: return "Error";
 21109  01B986  0E84               	movlw	low STR_21
 21110  01B988  0102               	movlb	2	; () banked
 21111  01B98A  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21112  01B98C  0EFF               	movlw	high STR_21
 21113  01B98E  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21114  01B990  0012               	return	
 21115  01B992                     l21116:
 21116                           
 21117                           ; BSR set to: 1
 21118                           ;NXQ_charge_state.c: 59: return "Undefined";
 21119  01B992  0EBA               	movlw	low STR_22
 21120  01B994  0102               	movlb	2	; () banked
 21121  01B996  6F00               	movwf	?_getNXQChargeStateStringCaps& (0+255),b
 21122  01B998  0EFE               	movlw	high STR_22
 21123  01B99A  6F01               	movwf	(?_getNXQChargeStateStringCaps+1)& (0+255),b
 21124  01B99C  0012               	return	
 21125  01B99E                     l21124:
 21126  01B99E  0101               	movlb	1	; () banked
 21127  01B9A0  518F               	movf	_nxq_charge_state& (0+255),w,b
 21128                           
 21129                           ; Switch size 1, requested type "simple"
 21130                           ; Number of cases is 4, Range of values is 0 to 3
 21131                           ; switch strategies available:
 21132                           ; Name         Instructions Cycles
 21133                           ; simple_byte           13     7 (average)
 21134                           ;	Chosen strategy is simple_byte
 21135  01B9A2  0A00               	xorlw	0	; case 0
 21136  01B9A4  B4D8               	btfsc	status,2,c
 21137  01B9A6  D7DD               	goto	l21092
 21138  01B9A8  0A01               	xorlw	1	; case 1
 21139  01B9AA  B4D8               	btfsc	status,2,c
 21140  01B9AC  D7E0               	goto	l21098
 21141  01B9AE  0A03               	xorlw	3	; case 2
 21142  01B9B0  B4D8               	btfsc	status,2,c
 21143  01B9B2  D7E3               	goto	l21104
 21144  01B9B4  0A01               	xorlw	1	; case 3
 21145  01B9B6  B4D8               	btfsc	status,2,c
 21146  01B9B8  D7E6               	goto	l21110
 21147  01B9BA  D7EB               	goto	l21116
 21148  01B9BC                     __end_of_getNXQChargeStateStringCaps:
 21149                           	opt callstack 0
 21150                           
 21151 ;; *************** function _getMinutesFromOnTime *****************
 21152 ;; Defined at:
 21153 ;;		line 210 in file "heartbeat_timer.c"
 21154 ;; Parameters:    Size  Location     Type
 21155 ;;  input_second    4   13[BANK2 ] unsigned long 
 21156 ;; Auto vars:     Size  Location     Type
 21157 ;;  hours           1   24[BANK2 ] unsigned char 
 21158 ;;  days            1   23[BANK2 ] unsigned char 
 21159 ;;  years           1   22[BANK2 ] unsigned char 
 21160 ;;  minutes         1   21[BANK2 ] unsigned char 
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  1    wreg      unsigned char 
 21163 ;; Registers used:
 21164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/0
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21170 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21171 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21172 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21173 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21174 ;;Total ram usage:       12 bytes
 21175 ;; Hardware stack levels used:    1
 21176 ;; Hardware stack levels required when called:   12
 21177 ;; This function calls:
 21178 ;;		___lldiv
 21179 ;;		___wmul
 21180 ;; This function is called by:
 21181 ;;		_OLED_updateHandler
 21182 ;; This function uses a non-reentrant model
 21183 ;;
 21184                           
 21185                           	psect	text68
 21186  019BAE                     __ptext68:
 21187                           	opt callstack 0
 21188  019BAE                     _getMinutesFromOnTime:
 21189                           	opt callstack 17
 21190                           
 21191                           ;heartbeat_timer.c: 212: uint8_t years, days, hours, minutes;;heartbeat_timer.c: 213: ye
      +                          ars = input_seconds / (60 * 60 * 24 * 365);
 21192                           
 21193                           ; BSR set to: 2
 21194                           ;incstack = 0
 21195  019BAE  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21196  019BB2  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21197  019BB6  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21198  019BBA  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21199  019BBE  0E80               	movlw	128
 21200  019BC0  0102               	movlb	2	; () banked
 21201  019BC2  6F04               	movwf	___lldiv@divisor& (0+255),b
 21202  019BC4  0E33               	movlw	51
 21203  019BC6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21204  019BC8  0E00               	movlw	0
 21205  019BCA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21206  019BCC  0E00               	movlw	0
 21207  019BCE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21208  019BD0  ECED  F0D9         	call	___lldiv	;wreg free
 21209  019BD4  0102               	movlb	2	; () banked
 21210  019BD6  5100               	movf	?___lldiv& (0+255),w,b
 21211  019BD8  6F16               	movwf	getMinutesFromOnTime@years& (0+255),b
 21212                           
 21213                           ; BSR set to: 2
 21214                           ;heartbeat_timer.c: 214: input_seconds -= years * (60 * 60 * 24 * 365);
 21215  019BDA  C216  F200         	movff	getMinutesFromOnTime@years,___wmul@multiplier
 21216  019BDE  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21217  019BE0  0E33               	movlw	51
 21218  019BE2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21219  019BE4  0E80               	movlw	128
 21220  019BE6  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21221  019BE8  ECFD  F0E2         	call	___wmul	;wreg free
 21222  019BEC  0102               	movlb	2	; () banked
 21223  019BEE  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21224  019BF2  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21225  019BF6  0E00               	movlw	0
 21226  019BF8  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21227  019BFA  0EFF               	movlw	255
 21228  019BFC  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21229  019BFE  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21230  019C00  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21231  019C02  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21232  019C04  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21233  019C06  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21234  019C08  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21235  019C0A  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21236  019C0C  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21237  019C0E  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21238                           
 21239                           ; BSR set to: 2
 21240                           ;heartbeat_timer.c: 215: days = input_seconds / (60 * 60 * 24);
 21241  019C10  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21242  019C14  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21243  019C18  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21244  019C1C  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21245  019C20  0E80               	movlw	128
 21246  019C22  6F04               	movwf	___lldiv@divisor& (0+255),b
 21247  019C24  0E51               	movlw	81
 21248  019C26  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21249  019C28  0E00               	movlw	0
 21250  019C2A  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21251  019C2C  0E00               	movlw	0
 21252  019C2E  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21253  019C30  ECED  F0D9         	call	___lldiv	;wreg free
 21254  019C34  0102               	movlb	2	; () banked
 21255  019C36  5100               	movf	?___lldiv& (0+255),w,b
 21256  019C38  6F17               	movwf	getMinutesFromOnTime@days& (0+255),b
 21257                           
 21258                           ;heartbeat_timer.c: 216: input_seconds -= days * (60 * 60 * 24);
 21259  019C3A  C217  F200         	movff	getMinutesFromOnTime@days,___wmul@multiplier
 21260  019C3E  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21261  019C40  0E51               	movlw	81
 21262  019C42  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21263  019C44  0E80               	movlw	128
 21264  019C46  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21265  019C48  ECFD  F0E2         	call	___wmul	;wreg free
 21266  019C4C  0102               	movlb	2	; () banked
 21267  019C4E  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21268  019C52  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21269  019C56  0E00               	movlw	0
 21270  019C58  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21271  019C5A  0EFF               	movlw	255
 21272  019C5C  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21273  019C5E  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21274  019C60  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21275  019C62  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21276  019C64  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21277  019C66  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21278  019C68  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21279  019C6A  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21280  019C6C  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21281  019C6E  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21282                           
 21283                           ; BSR set to: 2
 21284                           ;heartbeat_timer.c: 217: hours = input_seconds / (60 * 60);
 21285  019C70  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21286  019C74  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21287  019C78  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21288  019C7C  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21289  019C80  0E10               	movlw	16
 21290  019C82  6F04               	movwf	___lldiv@divisor& (0+255),b
 21291  019C84  0E0E               	movlw	14
 21292  019C86  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21293  019C88  0E00               	movlw	0
 21294  019C8A  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21295  019C8C  0E00               	movlw	0
 21296  019C8E  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21297  019C90  ECED  F0D9         	call	___lldiv	;wreg free
 21298  019C94  0102               	movlb	2	; () banked
 21299  019C96  5100               	movf	?___lldiv& (0+255),w,b
 21300  019C98  6F18               	movwf	getMinutesFromOnTime@hours& (0+255),b
 21301                           
 21302                           ; BSR set to: 2
 21303                           ;heartbeat_timer.c: 218: input_seconds -= hours * (60 * 60);
 21304  019C9A  C218  F200         	movff	getMinutesFromOnTime@hours,___wmul@multiplier
 21305  019C9E  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21306  019CA0  0E0E               	movlw	14
 21307  019CA2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21308  019CA4  0E10               	movlw	16
 21309  019CA6  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21310  019CA8  ECFD  F0E2         	call	___wmul	;wreg free
 21311  019CAC  0102               	movlb	2	; () banked
 21312  019CAE  C200  F211         	movff	?___wmul,??_getMinutesFromOnTime
 21313  019CB2  C201  F212         	movff	?___wmul+1,??_getMinutesFromOnTime+1
 21314  019CB6  0E00               	movlw	0
 21315  019CB8  BF12               	btfsc	(??_getMinutesFromOnTime+1)& (0+255),7,b
 21316  019CBA  0EFF               	movlw	255
 21317  019CBC  6F13               	movwf	(??_getMinutesFromOnTime+2)& (0+255),b
 21318  019CBE  6F14               	movwf	(??_getMinutesFromOnTime+3)& (0+255),b
 21319  019CC0  5111               	movf	??_getMinutesFromOnTime& (0+255),w,b
 21320  019CC2  5F0D               	subwf	getMinutesFromOnTime@input_seconds& (0+255),f,b
 21321  019CC4  5112               	movf	(??_getMinutesFromOnTime+1)& (0+255),w,b
 21322  019CC6  5B0E               	subwfb	(getMinutesFromOnTime@input_seconds+1)& (0+255),f,b
 21323  019CC8  5113               	movf	(??_getMinutesFromOnTime+2)& (0+255),w,b
 21324  019CCA  5B0F               	subwfb	(getMinutesFromOnTime@input_seconds+2)& (0+255),f,b
 21325  019CCC  5114               	movf	(??_getMinutesFromOnTime+3)& (0+255),w,b
 21326  019CCE  5B10               	subwfb	(getMinutesFromOnTime@input_seconds+3)& (0+255),f,b
 21327                           
 21328                           ;heartbeat_timer.c: 219: return minutes = input_seconds / 60;
 21329  019CD0  C20D  F200         	movff	getMinutesFromOnTime@input_seconds,___lldiv@dividend
 21330  019CD4  C20E  F201         	movff	getMinutesFromOnTime@input_seconds+1,___lldiv@dividend+1
 21331  019CD8  C20F  F202         	movff	getMinutesFromOnTime@input_seconds+2,___lldiv@dividend+2
 21332  019CDC  C210  F203         	movff	getMinutesFromOnTime@input_seconds+3,___lldiv@dividend+3
 21333  019CE0  0E3C               	movlw	60
 21334  019CE2  6F04               	movwf	___lldiv@divisor& (0+255),b
 21335  019CE4  0E00               	movlw	0
 21336  019CE6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21337  019CE8  0E00               	movlw	0
 21338  019CEA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21339  019CEC  0E00               	movlw	0
 21340  019CEE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21341  019CF0  ECED  F0D9         	call	___lldiv	;wreg free
 21342  019CF4  0102               	movlb	2	; () banked
 21343  019CF6  5100               	movf	?___lldiv& (0+255),w,b
 21344  019CF8  6F15               	movwf	getMinutesFromOnTime@minutes& (0+255),b
 21345  019CFA  5115               	movf	getMinutesFromOnTime@minutes& (0+255),w,b
 21346                           
 21347                           ; BSR set to: 2
 21348  019CFC  0012               	return		;funcret
 21349  019CFE                     __end_of_getMinutesFromOnTime:
 21350                           	opt callstack 0
 21351                           
 21352 ;; *************** function _getMinorRevisionID *****************
 21353 ;; Defined at:
 21354 ;;		line 23 in file "device_IDs.c"
 21355 ;; Parameters:    Size  Location     Type
 21356 ;;		None
 21357 ;; Auto vars:     Size  Location     Type
 21358 ;;  REVID_RAW       2   11[BANK2 ] unsigned int 
 21359 ;; Return value:  Size  Location     Type
 21360 ;;                  1    wreg      unsigned char 
 21361 ;; Registers used:
 21362 ;;		wreg, status,2, status,0, cstack
 21363 ;; Tracked objects:
 21364 ;;		On entry : 0/0
 21365 ;;		On exit  : 0/0
 21366 ;;		Unchanged: 0/0
 21367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21369 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21371 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21372 ;;Total ram usage:        2 bytes
 21373 ;; Hardware stack levels used:    1
 21374 ;; Hardware stack levels required when called:   13
 21375 ;; This function calls:
 21376 ;;		_FLASH_ReadWord
 21377 ;; This function is called by:
 21378 ;;		_OLED_updateHandler
 21379 ;;		_ringBufferLUT
 21380 ;; This function uses a non-reentrant model
 21381 ;;
 21382                           
 21383                           	psect	text69
 21384  01C69A                     __ptext69:
 21385                           	opt callstack 0
 21386  01C69A                     _getMinorRevisionID:
 21387                           	opt callstack 15
 21388                           
 21389                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21390                           
 21391                           ; BSR set to: 2
 21392                           ;incstack = 0
 21393  01C69A  0EFC               	movlw	252
 21394  01C69C  0102               	movlb	2	; () banked
 21395  01C69E  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21396  01C6A0  0EFF               	movlw	255
 21397  01C6A2  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21398  01C6A4  0E3F               	movlw	63
 21399  01C6A6  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21400  01C6A8  0E00               	movlw	0
 21401  01C6AA  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21402  01C6AC  ECD9  F0DF         	call	_FLASH_ReadWord	;wreg free
 21403  01C6B0  C204  F20B         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21404  01C6B4  C205  F20C         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21405                           
 21406                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21407  01C6B8  0102               	movlb	2	; () banked
 21408  01C6BA  510B               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21409  01C6BC  0B1F               	andlw	31
 21410                           
 21411                           ; BSR set to: 2
 21412  01C6BE  0012               	return		;funcret
 21413  01C6C0                     __end_of_getMinorRevisionID:
 21414                           	opt callstack 0
 21415                           
 21416 ;; *************** function _getMajorRevisionID *****************
 21417 ;; Defined at:
 21418 ;;		line 12 in file "device_IDs.c"
 21419 ;; Parameters:    Size  Location     Type
 21420 ;;		None
 21421 ;; Auto vars:     Size  Location     Type
 21422 ;;  REVID_RAW       2   14[BANK2 ] unsigned int 
 21423 ;; Return value:  Size  Location     Type
 21424 ;;                  1    wreg      unsigned char 
 21425 ;; Registers used:
 21426 ;;		wreg, status,2, status,0, cstack
 21427 ;; Tracked objects:
 21428 ;;		On entry : 0/0
 21429 ;;		On exit  : 0/0
 21430 ;;		Unchanged: 0/0
 21431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21433 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21434 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21435 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21436 ;;Total ram usage:        5 bytes
 21437 ;; Hardware stack levels used:    1
 21438 ;; Hardware stack levels required when called:   13
 21439 ;; This function calls:
 21440 ;;		_FLASH_ReadWord
 21441 ;; This function is called by:
 21442 ;;		_OLED_updateHandler
 21443 ;;		_ringBufferLUT
 21444 ;; This function uses a non-reentrant model
 21445 ;;
 21446                           
 21447                           	psect	text70
 21448  01C1EC                     __ptext70:
 21449                           	opt callstack 0
 21450  01C1EC                     _getMajorRevisionID:
 21451                           	opt callstack 15
 21452                           
 21453                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21454                           
 21455                           ; BSR set to: 2
 21456                           ;incstack = 0
 21457  01C1EC  0EFC               	movlw	252
 21458  01C1EE  0102               	movlb	2	; () banked
 21459  01C1F0  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21460  01C1F2  0EFF               	movlw	255
 21461  01C1F4  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21462  01C1F6  0E3F               	movlw	63
 21463  01C1F8  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21464  01C1FA  0E00               	movlw	0
 21465  01C1FC  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21466  01C1FE  ECD9  F0DF         	call	_FLASH_ReadWord	;wreg free
 21467  01C202  C204  F20E         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21468  01C206  C205  F20F         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21469                           
 21470                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21471  01C20A  C20E  F20B         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21472  01C20E  C20F  F20C         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21473  01C212  0E06               	movlw	6
 21474  01C214  0102               	movlb	2	; () banked
 21475  01C216  6F0D               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21476  01C218                     u25525:
 21477  01C218  90D8               	bcf	status,0,c
 21478  01C21A  330C               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21479  01C21C  330B               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21480  01C21E  2F0D               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21481  01C220  D7FB               	goto	u25525
 21482  01C222  510B               	movf	??_getMajorRevisionID& (0+255),w,b
 21483  01C224  0B1F               	andlw	31
 21484                           
 21485                           ; BSR set to: 2
 21486  01C226  0012               	return		;funcret
 21487  01C228                     __end_of_getMajorRevisionID:
 21488                           	opt callstack 0
 21489                           
 21490 ;; *************** function _getHoursFromOnTime *****************
 21491 ;; Defined at:
 21492 ;;		line 198 in file "heartbeat_timer.c"
 21493 ;; Parameters:    Size  Location     Type
 21494 ;;  input_second    4   13[BANK2 ] unsigned long 
 21495 ;; Auto vars:     Size  Location     Type
 21496 ;;  days            1   23[BANK2 ] unsigned char 
 21497 ;;  years           1   22[BANK2 ] unsigned char 
 21498 ;;  hours           1   21[BANK2 ] unsigned char 
 21499 ;; Return value:  Size  Location     Type
 21500 ;;                  1    wreg      unsigned char 
 21501 ;; Registers used:
 21502 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21503 ;; Tracked objects:
 21504 ;;		On entry : 0/0
 21505 ;;		On exit  : 0/0
 21506 ;;		Unchanged: 0/0
 21507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21508 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21509 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21510 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21511 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21512 ;;Total ram usage:       11 bytes
 21513 ;; Hardware stack levels used:    1
 21514 ;; Hardware stack levels required when called:   12
 21515 ;; This function calls:
 21516 ;;		___lldiv
 21517 ;;		___wmul
 21518 ;; This function is called by:
 21519 ;;		_OLED_updateHandler
 21520 ;; This function uses a non-reentrant model
 21521 ;;
 21522                           
 21523                           	psect	text71
 21524  01A6C2                     __ptext71:
 21525                           	opt callstack 0
 21526  01A6C2                     _getHoursFromOnTime:
 21527                           	opt callstack 17
 21528                           
 21529                           ;heartbeat_timer.c: 200: uint8_t years, days, hours;;heartbeat_timer.c: 201: years = inp
      +                          ut_seconds / (60 * 60 * 24 * 365);
 21530                           
 21531                           ; BSR set to: 2
 21532                           ;incstack = 0
 21533  01A6C2  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21534  01A6C6  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21535  01A6CA  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21536  01A6CE  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21537  01A6D2  0E80               	movlw	128
 21538  01A6D4  0102               	movlb	2	; () banked
 21539  01A6D6  6F04               	movwf	___lldiv@divisor& (0+255),b
 21540  01A6D8  0E33               	movlw	51
 21541  01A6DA  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21542  01A6DC  0E00               	movlw	0
 21543  01A6DE  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21544  01A6E0  0E00               	movlw	0
 21545  01A6E2  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21546  01A6E4  ECED  F0D9         	call	___lldiv	;wreg free
 21547  01A6E8  0102               	movlb	2	; () banked
 21548  01A6EA  5100               	movf	?___lldiv& (0+255),w,b
 21549  01A6EC  6F16               	movwf	getHoursFromOnTime@years& (0+255),b
 21550                           
 21551                           ; BSR set to: 2
 21552                           ;heartbeat_timer.c: 202: input_seconds -= years * (60 * 60 * 24 * 365);
 21553  01A6EE  C216  F200         	movff	getHoursFromOnTime@years,___wmul@multiplier
 21554  01A6F2  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21555  01A6F4  0E33               	movlw	51
 21556  01A6F6  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21557  01A6F8  0E80               	movlw	128
 21558  01A6FA  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21559  01A6FC  ECFD  F0E2         	call	___wmul	;wreg free
 21560  01A700  0102               	movlb	2	; () banked
 21561  01A702  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21562  01A706  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21563  01A70A  0E00               	movlw	0
 21564  01A70C  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21565  01A70E  0EFF               	movlw	255
 21566  01A710  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21567  01A712  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21568  01A714  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21569  01A716  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21570  01A718  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21571  01A71A  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21572  01A71C  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21573  01A71E  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21574  01A720  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21575  01A722  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21576                           
 21577                           ; BSR set to: 2
 21578                           ;heartbeat_timer.c: 203: days = input_seconds / (60 * 60 * 24);
 21579  01A724  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21580  01A728  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21581  01A72C  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21582  01A730  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21583  01A734  0E80               	movlw	128
 21584  01A736  6F04               	movwf	___lldiv@divisor& (0+255),b
 21585  01A738  0E51               	movlw	81
 21586  01A73A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21587  01A73C  0E00               	movlw	0
 21588  01A73E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21589  01A740  0E00               	movlw	0
 21590  01A742  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21591  01A744  ECED  F0D9         	call	___lldiv	;wreg free
 21592  01A748  0102               	movlb	2	; () banked
 21593  01A74A  5100               	movf	?___lldiv& (0+255),w,b
 21594  01A74C  6F17               	movwf	getHoursFromOnTime@days& (0+255),b
 21595                           
 21596                           ;heartbeat_timer.c: 204: input_seconds -= days * (60 * 60 * 24);
 21597  01A74E  C217  F200         	movff	getHoursFromOnTime@days,___wmul@multiplier
 21598  01A752  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21599  01A754  0E51               	movlw	81
 21600  01A756  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21601  01A758  0E80               	movlw	128
 21602  01A75A  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21603  01A75C  ECFD  F0E2         	call	___wmul	;wreg free
 21604  01A760  0102               	movlb	2	; () banked
 21605  01A762  C200  F211         	movff	?___wmul,??_getHoursFromOnTime
 21606  01A766  C201  F212         	movff	?___wmul+1,??_getHoursFromOnTime+1
 21607  01A76A  0E00               	movlw	0
 21608  01A76C  BF12               	btfsc	(??_getHoursFromOnTime+1)& (0+255),7,b
 21609  01A76E  0EFF               	movlw	255
 21610  01A770  6F13               	movwf	(??_getHoursFromOnTime+2)& (0+255),b
 21611  01A772  6F14               	movwf	(??_getHoursFromOnTime+3)& (0+255),b
 21612  01A774  5111               	movf	??_getHoursFromOnTime& (0+255),w,b
 21613  01A776  5F0D               	subwf	getHoursFromOnTime@input_seconds& (0+255),f,b
 21614  01A778  5112               	movf	(??_getHoursFromOnTime+1)& (0+255),w,b
 21615  01A77A  5B0E               	subwfb	(getHoursFromOnTime@input_seconds+1)& (0+255),f,b
 21616  01A77C  5113               	movf	(??_getHoursFromOnTime+2)& (0+255),w,b
 21617  01A77E  5B0F               	subwfb	(getHoursFromOnTime@input_seconds+2)& (0+255),f,b
 21618  01A780  5114               	movf	(??_getHoursFromOnTime+3)& (0+255),w,b
 21619  01A782  5B10               	subwfb	(getHoursFromOnTime@input_seconds+3)& (0+255),f,b
 21620                           
 21621                           ; BSR set to: 2
 21622                           ;heartbeat_timer.c: 205: return hours = input_seconds / (60 * 60);
 21623  01A784  C20D  F200         	movff	getHoursFromOnTime@input_seconds,___lldiv@dividend
 21624  01A788  C20E  F201         	movff	getHoursFromOnTime@input_seconds+1,___lldiv@dividend+1
 21625  01A78C  C20F  F202         	movff	getHoursFromOnTime@input_seconds+2,___lldiv@dividend+2
 21626  01A790  C210  F203         	movff	getHoursFromOnTime@input_seconds+3,___lldiv@dividend+3
 21627  01A794  0E10               	movlw	16
 21628  01A796  6F04               	movwf	___lldiv@divisor& (0+255),b
 21629  01A798  0E0E               	movlw	14
 21630  01A79A  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21631  01A79C  0E00               	movlw	0
 21632  01A79E  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21633  01A7A0  0E00               	movlw	0
 21634  01A7A2  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21635  01A7A4  ECED  F0D9         	call	___lldiv	;wreg free
 21636  01A7A8  0102               	movlb	2	; () banked
 21637  01A7AA  5100               	movf	?___lldiv& (0+255),w,b
 21638  01A7AC  6F15               	movwf	getHoursFromOnTime@hours& (0+255),b
 21639  01A7AE  5115               	movf	getHoursFromOnTime@hours& (0+255),w,b
 21640                           
 21641                           ; BSR set to: 2
 21642  01A7B0  0012               	return		;funcret
 21643  01A7B2                     __end_of_getHoursFromOnTime:
 21644                           	opt callstack 0
 21645                           
 21646 ;; *************** function _getDeviceID *****************
 21647 ;; Defined at:
 21648 ;;		line 4 in file "device_IDs.c"
 21649 ;; Parameters:    Size  Location     Type
 21650 ;;		None
 21651 ;; Auto vars:     Size  Location     Type
 21652 ;;		None
 21653 ;; Return value:  Size  Location     Type
 21654 ;;                  2   11[BANK2 ] unsigned int 
 21655 ;; Registers used:
 21656 ;;		wreg, status,2, status,0, cstack
 21657 ;; Tracked objects:
 21658 ;;		On entry : 0/0
 21659 ;;		On exit  : 0/0
 21660 ;;		Unchanged: 0/0
 21661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21662 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21665 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21666 ;;Total ram usage:        2 bytes
 21667 ;; Hardware stack levels used:    1
 21668 ;; Hardware stack levels required when called:   13
 21669 ;; This function calls:
 21670 ;;		_FLASH_ReadWord
 21671 ;; This function is called by:
 21672 ;;		_OLED_updateHandler
 21673 ;;		_ringBufferLUT
 21674 ;; This function uses a non-reentrant model
 21675 ;;
 21676                           
 21677                           	psect	text72
 21678  01C7F2                     __ptext72:
 21679                           	opt callstack 0
 21680  01C7F2                     _getDeviceID:
 21681                           	opt callstack 15
 21682                           
 21683                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21684                           
 21685                           ; BSR set to: 2
 21686                           ;incstack = 0
 21687  01C7F2  0EFE               	movlw	254
 21688  01C7F4  0102               	movlb	2	; () banked
 21689  01C7F6  6F04               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21690  01C7F8  0EFF               	movlw	255
 21691  01C7FA  6F05               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21692  01C7FC  0E3F               	movlw	63
 21693  01C7FE  6F06               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21694  01C800  0E00               	movlw	0
 21695  01C802  6F07               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21696  01C804  ECD9  F0DF         	call	_FLASH_ReadWord	;wreg free
 21697  01C808  C204  F20B         	movff	?_FLASH_ReadWord,?_getDeviceID
 21698  01C80C  C205  F20C         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21699  01C810  0012               	return		;funcret
 21700  01C812                     __end_of_getDeviceID:
 21701                           	opt callstack 0
 21702                           
 21703 ;; *************** function _FLASH_ReadWord *****************
 21704 ;; Defined at:
 21705 ;;		line 71 in file "mcc_generated_files/memory.c"
 21706 ;; Parameters:    Size  Location     Type
 21707 ;;  flashAddr       4    4[BANK2 ] unsigned long 
 21708 ;; Auto vars:     Size  Location     Type
 21709 ;;		None
 21710 ;; Return value:  Size  Location     Type
 21711 ;;                  2    4[BANK2 ] unsigned int 
 21712 ;; Registers used:
 21713 ;;		wreg, status,2, status,0, cstack
 21714 ;; Tracked objects:
 21715 ;;		On entry : 0/0
 21716 ;;		On exit  : 0/0
 21717 ;;		Unchanged: 0/0
 21718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21719 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21721 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21722 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21723 ;;Total ram usage:        7 bytes
 21724 ;; Hardware stack levels used:    1
 21725 ;; Hardware stack levels required when called:   12
 21726 ;; This function calls:
 21727 ;;		_FLASH_ReadByte
 21728 ;; This function is called by:
 21729 ;;		_getDeviceID
 21730 ;;		_getMajorRevisionID
 21731 ;;		_getMinorRevisionID
 21732 ;;		_getUserID
 21733 ;; This function uses a non-reentrant model
 21734 ;;
 21735                           
 21736                           	psect	text73
 21737  01BFB2                     __ptext73:
 21738                           	opt callstack 0
 21739  01BFB2                     _FLASH_ReadWord:
 21740                           	opt callstack 15
 21741                           
 21742                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21743                           
 21744                           ;incstack = 0
 21745  01BFB2  C204  F200         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21746  01BFB6  C205  F201         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21747  01BFBA  C206  F202         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21748  01BFBE  C207  F203         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21749  01BFC2  EC7E  F0E4         	call	_FLASH_ReadByte	;wreg free
 21750  01BFC6  0102               	movlb	2	; () banked
 21751  01BFC8  6F08               	movwf	??_FLASH_ReadWord& (0+255),b
 21752  01BFCA  0E01               	movlw	1
 21753  01BFCC  2504               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21754  01BFCE  6F00               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21755  01BFD0  0E00               	movlw	0
 21756  01BFD2  2105               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21757  01BFD4  6F01               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21758  01BFD6  0E00               	movlw	0
 21759  01BFD8  2106               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21760  01BFDA  6F02               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21761  01BFDC  0E00               	movlw	0
 21762  01BFDE  2107               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21763  01BFE0  6F03               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21764  01BFE2  EC7E  F0E4         	call	_FLASH_ReadByte	;wreg free
 21765  01BFE6  0102               	movlb	2	; () banked
 21766  01BFE8  6F09               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21767  01BFEA  5108               	movf	??_FLASH_ReadWord& (0+255),w,b
 21768  01BFEC  6F04               	movwf	?_FLASH_ReadWord& (0+255),b
 21769  01BFEE  C209  F205         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21770                           
 21771                           ; BSR set to: 2
 21772  01BFF2  0012               	return		;funcret
 21773  01BFF4                     __end_of_FLASH_ReadWord:
 21774                           	opt callstack 0
 21775                           
 21776 ;; *************** function _FLASH_ReadByte *****************
 21777 ;; Defined at:
 21778 ;;		line 59 in file "mcc_generated_files/memory.c"
 21779 ;; Parameters:    Size  Location     Type
 21780 ;;  flashAddr       4    0[BANK2 ] unsigned long 
 21781 ;; Auto vars:     Size  Location     Type
 21782 ;;		None
 21783 ;; Return value:  Size  Location     Type
 21784 ;;                  1    wreg      unsigned char 
 21785 ;; Registers used:
 21786 ;;		wreg, status,2
 21787 ;; Tracked objects:
 21788 ;;		On entry : 0/0
 21789 ;;		On exit  : 0/0
 21790 ;;		Unchanged: 0/0
 21791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21792 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21795 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21796 ;;Total ram usage:        4 bytes
 21797 ;; Hardware stack levels used:    1
 21798 ;; Hardware stack levels required when called:   11
 21799 ;; This function calls:
 21800 ;;		Nothing
 21801 ;; This function is called by:
 21802 ;;		_FLASH_ReadWord
 21803 ;;		_FLASH_WriteByte
 21804 ;; This function uses a non-reentrant model
 21805 ;;
 21806                           
 21807                           	psect	text74
 21808  01C8FC                     __ptext74:
 21809                           	opt callstack 0
 21810  01C8FC                     _FLASH_ReadByte:
 21811                           	opt callstack 15
 21812                           
 21813                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21814                           
 21815                           ; BSR set to: 2
 21816                           ;incstack = 0
 21817  01C8FC  5081               	movf	3969,w,c	;volsfr
 21818  01C8FE  0B3F               	andlw	-193
 21819  01C900  0980               	iorlw	128
 21820  01C902  6E81               	movwf	3969,c	;volsfr
 21821                           
 21822                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21823  01C904  C202  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21824                           
 21825                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21826  01C908  C201  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21827                           
 21828                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21829  01C90C  C200  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21830  01C910  0008               	tblrd		*	;# 
 21831                           
 21832                           ;memory.c: 68: return (TABLAT);
 21833  01C912  50F5               	movf	tablat,w,c	;volatile
 21834  01C914  0012               	return		;funcret
 21835  01C916                     __end_of_FLASH_ReadByte:
 21836                           	opt callstack 0
 21837                           
 21838 ;; *************** function _getDaysFromOnTime *****************
 21839 ;; Defined at:
 21840 ;;		line 188 in file "heartbeat_timer.c"
 21841 ;; Parameters:    Size  Location     Type
 21842 ;;  input_second    4   13[BANK2 ] unsigned long 
 21843 ;; Auto vars:     Size  Location     Type
 21844 ;;  years           1   22[BANK2 ] unsigned char 
 21845 ;;  days            1   21[BANK2 ] unsigned char 
 21846 ;; Return value:  Size  Location     Type
 21847 ;;                  1    wreg      unsigned char 
 21848 ;; Registers used:
 21849 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21850 ;; Tracked objects:
 21851 ;;		On entry : 0/0
 21852 ;;		On exit  : 0/0
 21853 ;;		Unchanged: 0/0
 21854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21855 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21856 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21857 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21858 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21859 ;;Total ram usage:       10 bytes
 21860 ;; Hardware stack levels used:    1
 21861 ;; Hardware stack levels required when called:   12
 21862 ;; This function calls:
 21863 ;;		___lldiv
 21864 ;;		___wmul
 21865 ;; This function is called by:
 21866 ;;		_OLED_updateHandler
 21867 ;; This function uses a non-reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text75
 21871  01B1AE                     __ptext75:
 21872                           	opt callstack 0
 21873  01B1AE                     _getDaysFromOnTime:
 21874                           	opt callstack 17
 21875                           
 21876                           ;heartbeat_timer.c: 190: uint8_t years, days;;heartbeat_timer.c: 191: years = input_seco
      +                          nds / (60 * 60 * 24 * 365);
 21877                           
 21878                           ;incstack = 0
 21879  01B1AE  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21880  01B1B2  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21881  01B1B6  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21882  01B1BA  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21883  01B1BE  0E80               	movlw	128
 21884  01B1C0  0102               	movlb	2	; () banked
 21885  01B1C2  6F04               	movwf	___lldiv@divisor& (0+255),b
 21886  01B1C4  0E33               	movlw	51
 21887  01B1C6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21888  01B1C8  0E00               	movlw	0
 21889  01B1CA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21890  01B1CC  0E00               	movlw	0
 21891  01B1CE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21892  01B1D0  ECED  F0D9         	call	___lldiv	;wreg free
 21893  01B1D4  0102               	movlb	2	; () banked
 21894  01B1D6  5100               	movf	?___lldiv& (0+255),w,b
 21895  01B1D8  6F16               	movwf	getDaysFromOnTime@years& (0+255),b
 21896                           
 21897                           ; BSR set to: 2
 21898                           ;heartbeat_timer.c: 192: input_seconds -= years * (60 * 60 * 24 * 365);
 21899  01B1DA  C216  F200         	movff	getDaysFromOnTime@years,___wmul@multiplier
 21900  01B1DE  6B01               	clrf	(___wmul@multiplier+1)& (0+255),b
 21901  01B1E0  0E33               	movlw	51
 21902  01B1E2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21903  01B1E4  0E80               	movlw	128
 21904  01B1E6  6F02               	movwf	___wmul@multiplicand& (0+255),b
 21905  01B1E8  ECFD  F0E2         	call	___wmul	;wreg free
 21906  01B1EC  0102               	movlb	2	; () banked
 21907  01B1EE  C200  F211         	movff	?___wmul,??_getDaysFromOnTime
 21908  01B1F2  C201  F212         	movff	?___wmul+1,??_getDaysFromOnTime+1
 21909  01B1F6  0E00               	movlw	0
 21910  01B1F8  BF12               	btfsc	(??_getDaysFromOnTime+1)& (0+255),7,b
 21911  01B1FA  0EFF               	movlw	255
 21912  01B1FC  6F13               	movwf	(??_getDaysFromOnTime+2)& (0+255),b
 21913  01B1FE  6F14               	movwf	(??_getDaysFromOnTime+3)& (0+255),b
 21914  01B200  5111               	movf	??_getDaysFromOnTime& (0+255),w,b
 21915  01B202  5F0D               	subwf	getDaysFromOnTime@input_seconds& (0+255),f,b
 21916  01B204  5112               	movf	(??_getDaysFromOnTime+1)& (0+255),w,b
 21917  01B206  5B0E               	subwfb	(getDaysFromOnTime@input_seconds+1)& (0+255),f,b
 21918  01B208  5113               	movf	(??_getDaysFromOnTime+2)& (0+255),w,b
 21919  01B20A  5B0F               	subwfb	(getDaysFromOnTime@input_seconds+2)& (0+255),f,b
 21920  01B20C  5114               	movf	(??_getDaysFromOnTime+3)& (0+255),w,b
 21921  01B20E  5B10               	subwfb	(getDaysFromOnTime@input_seconds+3)& (0+255),f,b
 21922                           
 21923                           ; BSR set to: 2
 21924                           ;heartbeat_timer.c: 193: return days = input_seconds / (60 * 60 * 24);
 21925  01B210  C20D  F200         	movff	getDaysFromOnTime@input_seconds,___lldiv@dividend
 21926  01B214  C20E  F201         	movff	getDaysFromOnTime@input_seconds+1,___lldiv@dividend+1
 21927  01B218  C20F  F202         	movff	getDaysFromOnTime@input_seconds+2,___lldiv@dividend+2
 21928  01B21C  C210  F203         	movff	getDaysFromOnTime@input_seconds+3,___lldiv@dividend+3
 21929  01B220  0E80               	movlw	128
 21930  01B222  6F04               	movwf	___lldiv@divisor& (0+255),b
 21931  01B224  0E51               	movlw	81
 21932  01B226  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
 21933  01B228  0E00               	movlw	0
 21934  01B22A  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
 21935  01B22C  0E00               	movlw	0
 21936  01B22E  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
 21937  01B230  ECED  F0D9         	call	___lldiv	;wreg free
 21938  01B234  0102               	movlb	2	; () banked
 21939  01B236  5100               	movf	?___lldiv& (0+255),w,b
 21940  01B238  6F15               	movwf	getDaysFromOnTime@days& (0+255),b
 21941  01B23A  5115               	movf	getDaysFromOnTime@days& (0+255),w,b
 21942                           
 21943                           ; BSR set to: 2
 21944  01B23C  0012               	return		;funcret
 21945  01B23E                     __end_of_getDaysFromOnTime:
 21946                           	opt callstack 0
 21947                           
 21948 ;; *************** function _getCauseOfResetStringSmall *****************
 21949 ;; Defined at:
 21950 ;;		line 118 in file "cause_of_reset.c"
 21951 ;; Parameters:    Size  Location     Type
 21952 ;;  r               1    wreg     enum E9577
 21953 ;; Auto vars:     Size  Location     Type
 21954 ;;  r               1    2[BANK2 ] enum E9577
 21955 ;; Return value:  Size  Location     Type
 21956 ;;                  2    0[BANK2 ] PTR inline unsigned char
 21957 ;; Registers used:
 21958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21959 ;; Tracked objects:
 21960 ;;		On entry : 0/0
 21961 ;;		On exit  : 0/0
 21962 ;;		Unchanged: 0/0
 21963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21964 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21965 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21967 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21968 ;;Total ram usage:        3 bytes
 21969 ;; Hardware stack levels used:    1
 21970 ;; Hardware stack levels required when called:   11
 21971 ;; This function calls:
 21972 ;;		Nothing
 21973 ;; This function is called by:
 21974 ;;		_OLED_updateHandler
 21975 ;; This function uses a non-reentrant model
 21976 ;;
 21977                           
 21978                           	psect	text76
 21979  01C46E                     __ptext76:
 21980                           	opt callstack 0
 21981  01C46E                     _getCauseOfResetStringSmall:
 21982                           	opt callstack 18
 21983                           
 21984                           ; BSR set to: 2
 21985                           ;incstack = 0
 21986                           ;getCauseOfResetStringSmall@r stored from wreg
 21987  01C46E  0102               	movlb	2	; () banked
 21988  01C470  6F02               	movwf	getCauseOfResetStringSmall@r& (0+255),b
 21989                           
 21990                           ;cause_of_reset.c: 121: static char *strings[] = {;cause_of_reset.c: 122: "Undefined",;c
      +                          ause_of_reset.c: 123: "POR Reset",;cause_of_reset.c: 124: "BOR Reset",;cause_of_reset.c:
      +                           125: "MCLR Reset",;cause_of_reset.c: 126: "WDT Reset",;cause_of_reset.c: 127: "WWDT Res
      +                          et",;cause_of_reset.c: 128: "RESET Executed",;cause_of_reset.c: 129: "STOF Reset",;cause
      +                          _of_reset.c: 130: "STUF Reset",;cause_of_reset.c: 131: };;cause_of_reset.c: 134: if (r <
      +                          = 8) {
 21991  01C472  0E09               	movlw	9
 21992  01C474  0102               	movlb	2	; () banked
 21993  01C476  6102               	cpfslt	getCauseOfResetStringSmall@r& (0+255),b
 21994  01C478  D00D               	goto	l21244
 21995                           
 21996                           ; BSR set to: 2
 21997                           ;cause_of_reset.c: 136: return strings[r];
 21998  01C47A  5102               	movf	getCauseOfResetStringSmall@r& (0+255),w,b
 21999  01C47C  0D02               	mullw	2
 22000  01C47E  0EED               	movlw	low getCauseOfResetStringSmall@strings
 22001  01C480  24F3               	addwf	prodl,w,c
 22002  01C482  6ED9               	movwf	fsr2l,c
 22003  01C484  0E02               	movlw	high getCauseOfResetStringSmall@strings
 22004  01C486  20F4               	addwfc	prodh,w,c
 22005  01C488  6EDA               	movwf	fsr2h,c
 22006  01C48A  CFDE F200          	movff	postinc2,?_getCauseOfResetStringSmall
 22007  01C48E  CFDD F201          	movff	postdec2,?_getCauseOfResetStringSmall+1
 22008  01C492  0012               	return	
 22009  01C494                     l21244:
 22010                           
 22011                           ; BSR set to: 2
 22012                           ;cause_of_reset.c: 140: else {;cause_of_reset.c: 142: return "Undefined";
 22013  01C494  0EBA               	movlw	low STR_22
 22014  01C496  6F00               	movwf	?_getCauseOfResetStringSmall& (0+255),b
 22015  01C498  0EFE               	movlw	high STR_22
 22016  01C49A  6F01               	movwf	(?_getCauseOfResetStringSmall+1)& (0+255),b
 22017                           
 22018                           ; BSR set to: 2
 22019  01C49C  0012               	return		;funcret
 22020  01C49E                     __end_of_getCauseOfResetStringSmall:
 22021                           	opt callstack 0
 22022                           
 22023 ;; *************** function _floatToEngineeringFormat *****************
 22024 ;; Defined at:
 22025 ;;		line 436 in file "ring_buffer_LUT.c"
 22026 ;; Parameters:    Size  Location     Type
 22027 ;;  input_value     4  163[BANK2 ] float 
 22028 ;; Auto vars:     Size  Location     Type
 22029 ;;  sign            4  175[BANK2 ] float 
 22030 ;;  res             2  179[BANK2 ] PTR unsigned char 
 22031 ;;		 -> floatToEngineeringFormat@result(20), 
 22032 ;; Return value:  Size  Location     Type
 22033 ;;                  2  163[BANK2 ] PTR unsigned char 
 22034 ;; Registers used:
 22035 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22036 ;; Tracked objects:
 22037 ;;		On entry : 0/0
 22038 ;;		On exit  : 0/0
 22039 ;;		Unchanged: 0/0
 22040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22041 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22042 ;;      Locals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22044 ;;      Totals:         0       0       0      22       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22045 ;;Total ram usage:       22 bytes
 22046 ;; Hardware stack levels used:    1
 22047 ;; Hardware stack levels required when called:   15
 22048 ;; This function calls:
 22049 ;;		___fldiv
 22050 ;;		___fleq
 22051 ;;		___flge
 22052 ;;		___flmul
 22053 ;;		___fltol
 22054 ;;		___xxtofl
 22055 ;;		_abs
 22056 ;;		_sprintf
 22057 ;; This function is called by:
 22058 ;;		_OLED_updateHandler
 22059 ;;		_printCurrentMeasurements
 22060 ;; This function uses a non-reentrant model
 22061 ;;
 22062                           
 22063                           	psect	text77
 22064  0149F6                     __ptext77:
 22065                           	opt callstack 0
 22066  0149F6                     _floatToEngineeringFormat:
 22067                           	opt callstack 12
 22068                           
 22069                           ;ring_buffer_LUT.c: 438: static unsigned char result[20];;ring_buffer_LUT.c: 439: unsign
      +                          ed char *res = result;
 22070                           
 22071                           ; BSR set to: 2
 22072                           ;incstack = 0
 22073  0149F6  0EAC               	movlw	low floatToEngineeringFormat@result
 22074  0149F8  0102               	movlb	2	; () banked
 22075  0149FA  6FB3               	movwf	floatToEngineeringFormat@res& (0+255),b
 22076  0149FC  0E03               	movlw	high floatToEngineeringFormat@result
 22077  0149FE  6FB4               	movwf	(floatToEngineeringFormat@res+1)& (0+255),b
 22078                           
 22079                           ; BSR set to: 2
 22080                           ;ring_buffer_LUT.c: 441: float sign = (input_value > 0.0) ? 1.0 : ((input_value < 0.0) ?
      +                           -1.0 : 0);
 22081  014A00  0E00               	movlw	0
 22082  014A02  6F4C               	movwf	___flge@ff1& (0+255),b
 22083  014A04  0E00               	movlw	0
 22084  014A06  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 22085  014A08  0E00               	movlw	0
 22086  014A0A  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 22087  014A0C  0E00               	movlw	0
 22088  014A0E  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 22089  014A10  C2A3  F250         	movff	floatToEngineeringFormat@input_value,___flge@ff2
 22090  014A14  C2A4  F251         	movff	floatToEngineeringFormat@input_value+1,___flge@ff2+1
 22091  014A18  C2A5  F252         	movff	floatToEngineeringFormat@input_value+2,___flge@ff2+2
 22092  014A1C  C2A6  F253         	movff	floatToEngineeringFormat@input_value+3,___flge@ff2+3
 22093  014A20  EC4D  F0D4         	call	___flge	;wreg free
 22094  014A24  0102               	movlb	2	; () banked
 22095  014A26  A0D8               	btfss	status,0,c
 22096  014A28  D01B               	goto	l19570
 22097                           
 22098                           ; BSR set to: 2
 22099  014A2A  BFA6               	btfsc	(floatToEngineeringFormat@input_value+3)& (0+255),7,b
 22100  014A2C  D008               	goto	l19566
 22101                           
 22102                           ; BSR set to: 2
 22103  014A2E  0E00               	movlw	0
 22104  014A30  6FAB               	movwf	_floatToEngineeringFormat$4720& (0+255),b
 22105  014A32  0E00               	movlw	0
 22106  014A34  6FAC               	movwf	(_floatToEngineeringFormat$4720+1)& (0+255),b
 22107  014A36  0E00               	movlw	0
 22108  014A38  6FAD               	movwf	(_floatToEngineeringFormat$4720+2)& (0+255),b
 22109  014A3A  0E00               	movlw	0
 22110  014A3C  D007               	goto	L6
 22111  014A3E                     l19566:
 22112                           
 22113                           ; BSR set to: 2
 22114  014A3E  0E00               	movlw	0
 22115  014A40  6FAB               	movwf	_floatToEngineeringFormat$4720& (0+255),b
 22116  014A42  0E00               	movlw	0
 22117  014A44  6FAC               	movwf	(_floatToEngineeringFormat$4720+1)& (0+255),b
 22118  014A46  0E80               	movlw	128
 22119  014A48  6FAD               	movwf	(_floatToEngineeringFormat$4720+2)& (0+255),b
 22120  014A4A  0EBF               	movlw	191
 22121  014A4C                     L6:
 22122  014A4C  6FAE               	movwf	(_floatToEngineeringFormat$4720+3)& (0+255),b
 22123                           
 22124                           ; BSR set to: 2
 22125  014A4E  C2AB  F2A7         	movff	_floatToEngineeringFormat$4720,_floatToEngineeringFormat$4719
 22126  014A52  C2AC  F2A8         	movff	_floatToEngineeringFormat$4720+1,_floatToEngineeringFormat$4719+1
 22127  014A56  C2AD  F2A9         	movff	_floatToEngineeringFormat$4720+2,_floatToEngineeringFormat$4719+2
 22128  014A5A  C2AE  F2AA         	movff	_floatToEngineeringFormat$4720+3,_floatToEngineeringFormat$4719+3
 22129  014A5E  D008               	goto	l19572
 22130  014A60                     l19570:
 22131                           
 22132                           ; BSR set to: 2
 22133  014A60  0E00               	movlw	0
 22134  014A62  6FA7               	movwf	_floatToEngineeringFormat$4719& (0+255),b
 22135  014A64  0E00               	movlw	0
 22136  014A66  6FA8               	movwf	(_floatToEngineeringFormat$4719+1)& (0+255),b
 22137  014A68  0E80               	movlw	128
 22138  014A6A  6FA9               	movwf	(_floatToEngineeringFormat$4719+2)& (0+255),b
 22139  014A6C  0E3F               	movlw	63
 22140  014A6E  6FAA               	movwf	(_floatToEngineeringFormat$4719+3)& (0+255),b
 22141  014A70                     l19572:
 22142                           
 22143                           ; BSR set to: 2
 22144  014A70  C2A7  F2AF         	movff	_floatToEngineeringFormat$4719,floatToEngineeringFormat@sign
 22145  014A74  C2A8  F2B0         	movff	_floatToEngineeringFormat$4719+1,floatToEngineeringFormat@sign+1
 22146  014A78  C2A9  F2B1         	movff	_floatToEngineeringFormat$4719+2,floatToEngineeringFormat@sign+2
 22147  014A7C  C2AA  F2B2         	movff	_floatToEngineeringFormat$4719+3,floatToEngineeringFormat@sign+3
 22148                           
 22149                           ; BSR set to: 2
 22150                           ;ring_buffer_LUT.c: 443: if (abs(input_value) >= 1000000.0) sprintf(res, "+%0.3f M", inp
      +                          ut_value * sign / 1000000.0);
 22151  014A80  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22152  014A84  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22153  014A88  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22154  014A8C  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22155  014A90  ECE5  F0D5         	call	___fltol	;wreg free
 22156  014A94  C230  F23A         	movff	?___fltol,abs@a
 22157  014A98  C231  F23B         	movff	?___fltol+1,abs@a+1
 22158  014A9C  ECAA  F0E2         	call	_abs	;wreg free
 22159  014AA0  0102               	movlb	2	; () banked
 22160  014AA2  C23A  F23E         	movff	?_abs,___xxtofl@val
 22161  014AA6  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22162  014AAA  0E00               	movlw	0
 22163  014AAC  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22164  014AAE  0EFF               	movlw	-1
 22165  014AB0  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22166  014AB2  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22167  014AB4  0E01               	movlw	1
 22168  014AB6  EC7F  F0CE         	call	___xxtofl
 22169  014ABA  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22170  014ABE  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22171  014AC2  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22172  014AC6  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22173  014ACA  0E00               	movlw	0
 22174  014ACC  0102               	movlb	2	; () banked
 22175  014ACE  6F50               	movwf	___flge@ff2& (0+255),b
 22176  014AD0  0E24               	movlw	36
 22177  014AD2  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22178  014AD4  0E74               	movlw	116
 22179  014AD6  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22180  014AD8  0E49               	movlw	73
 22181  014ADA  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22182  014ADC  EC4D  F0D4         	call	___flge	;wreg free
 22183  014AE0  0102               	movlb	2	; () banked
 22184  014AE2  A0D8               	btfss	status,0,c
 22185  014AE4  D041               	goto	l19580
 22186                           
 22187                           ; BSR set to: 2
 22188  014AE6  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22189  014AEA  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22190  014AEE  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22191  014AF2  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22192  014AF6  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22193  014AFA  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22194  014AFE  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22195  014B02  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22196  014B06  EC40  F0B5         	call	___flmul	;wreg free
 22197  014B0A  C20E  F227         	movff	?___flmul,___fldiv@b
 22198  014B0E  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22199  014B12  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22200  014B16  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22201  014B1A  0E00               	movlw	0
 22202  014B1C  0102               	movlb	2	; () banked
 22203  014B1E  6F2B               	movwf	___fldiv@a& (0+255),b
 22204  014B20  0E24               	movlw	36
 22205  014B22  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22206  014B24  0E74               	movlw	116
 22207  014B26  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22208  014B28  0E49               	movlw	73
 22209  014B2A  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22210  014B2C  ECF4  F0C2         	call	___fldiv	;wreg free
 22211  014B30  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6044
 22212  014B34  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6044+1
 22213  014B38  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6044+2
 22214  014B3C  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6044+3
 22215  014B40  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22216  014B44  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22217  014B48  0ECE               	movlw	low STR_298
 22218  014B4A  0102               	movlb	2	; () banked
 22219  014B4C  6F92               	movwf	sprintf@f& (0+255),b
 22220  014B4E  0EFE               	movlw	high STR_298
 22221  014B50  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22222  014B52  C2B5  F294         	movff	_floatToEngineeringFormat$6044,?_sprintf+4
 22223  014B56  C2B6  F295         	movff	_floatToEngineeringFormat$6044+1,?_sprintf+5
 22224  014B5A  C2B7  F296         	movff	_floatToEngineeringFormat$6044+2,?_sprintf+6
 22225  014B5E  C2B8  F297         	movff	_floatToEngineeringFormat$6044+3,?_sprintf+7
 22226  014B62  EC9F  F0DE         	call	_sprintf	;wreg free
 22227  014B66  D263               	goto	l2260
 22228  014B68                     l19580:
 22229                           
 22230                           ; BSR set to: 2
 22231                           ;ring_buffer_LUT.c: 444: else if (abs(input_value) >= 1000.0) sprintf(res, "+%0.3f k", i
      +                          nput_value * sign / 1000.0);
 22232  014B68  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22233  014B6C  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22234  014B70  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22235  014B74  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22236  014B78  ECE5  F0D5         	call	___fltol	;wreg free
 22237  014B7C  C230  F23A         	movff	?___fltol,abs@a
 22238  014B80  C231  F23B         	movff	?___fltol+1,abs@a+1
 22239  014B84  ECAA  F0E2         	call	_abs	;wreg free
 22240  014B88  0102               	movlb	2	; () banked
 22241  014B8A  C23A  F23E         	movff	?_abs,___xxtofl@val
 22242  014B8E  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22243  014B92  0E00               	movlw	0
 22244  014B94  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22245  014B96  0EFF               	movlw	-1
 22246  014B98  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22247  014B9A  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22248  014B9C  0E01               	movlw	1
 22249  014B9E  EC7F  F0CE         	call	___xxtofl
 22250  014BA2  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22251  014BA6  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22252  014BAA  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22253  014BAE  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22254  014BB2  0E00               	movlw	0
 22255  014BB4  0102               	movlb	2	; () banked
 22256  014BB6  6F50               	movwf	___flge@ff2& (0+255),b
 22257  014BB8  0E00               	movlw	0
 22258  014BBA  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22259  014BBC  0E7A               	movlw	122
 22260  014BBE  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22261  014BC0  0E44               	movlw	68
 22262  014BC2  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22263  014BC4  EC4D  F0D4         	call	___flge	;wreg free
 22264  014BC8  0102               	movlb	2	; () banked
 22265  014BCA  A0D8               	btfss	status,0,c
 22266  014BCC  D041               	goto	l19586
 22267                           
 22268                           ; BSR set to: 2
 22269  014BCE  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22270  014BD2  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22271  014BD6  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22272  014BDA  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22273  014BDE  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22274  014BE2  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22275  014BE6  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22276  014BEA  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22277  014BEE  EC40  F0B5         	call	___flmul	;wreg free
 22278  014BF2  C20E  F227         	movff	?___flmul,___fldiv@b
 22279  014BF6  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22280  014BFA  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22281  014BFE  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22282  014C02  0E00               	movlw	0
 22283  014C04  0102               	movlb	2	; () banked
 22284  014C06  6F2B               	movwf	___fldiv@a& (0+255),b
 22285  014C08  0E00               	movlw	0
 22286  014C0A  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22287  014C0C  0E7A               	movlw	122
 22288  014C0E  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22289  014C10  0E44               	movlw	68
 22290  014C12  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22291  014C14  ECF4  F0C2         	call	___fldiv	;wreg free
 22292  014C18  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6044
 22293  014C1C  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6044+1
 22294  014C20  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6044+2
 22295  014C24  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6044+3
 22296  014C28  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22297  014C2C  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22298  014C30  0ED7               	movlw	low STR_299
 22299  014C32  0102               	movlb	2	; () banked
 22300  014C34  6F92               	movwf	sprintf@f& (0+255),b
 22301  014C36  0EFE               	movlw	high STR_299
 22302  014C38  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22303  014C3A  C2B5  F294         	movff	_floatToEngineeringFormat$6044,?_sprintf+4
 22304  014C3E  C2B6  F295         	movff	_floatToEngineeringFormat$6044+1,?_sprintf+5
 22305  014C42  C2B7  F296         	movff	_floatToEngineeringFormat$6044+2,?_sprintf+6
 22306  014C46  C2B8  F297         	movff	_floatToEngineeringFormat$6044+3,?_sprintf+7
 22307  014C4A  EC9F  F0DE         	call	_sprintf	;wreg free
 22308  014C4E  D1EF               	goto	l2260
 22309  014C50                     l19586:
 22310                           
 22311                           ; BSR set to: 2
 22312                           ;ring_buffer_LUT.c: 445: else if (abs(input_value) >= 1.0) sprintf(res, "+%0.3f ", input
      +                          _value * sign / 1.0);
 22313  014C50  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22314  014C54  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22315  014C58  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22316  014C5C  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22317  014C60  ECE5  F0D5         	call	___fltol	;wreg free
 22318  014C64  C230  F23A         	movff	?___fltol,abs@a
 22319  014C68  C231  F23B         	movff	?___fltol+1,abs@a+1
 22320  014C6C  ECAA  F0E2         	call	_abs	;wreg free
 22321  014C70  0102               	movlb	2	; () banked
 22322  014C72  C23A  F23E         	movff	?_abs,___xxtofl@val
 22323  014C76  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22324  014C7A  0E00               	movlw	0
 22325  014C7C  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22326  014C7E  0EFF               	movlw	-1
 22327  014C80  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22328  014C82  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22329  014C84  0E01               	movlw	1
 22330  014C86  EC7F  F0CE         	call	___xxtofl
 22331  014C8A  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22332  014C8E  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22333  014C92  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22334  014C96  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22335  014C9A  0E00               	movlw	0
 22336  014C9C  0102               	movlb	2	; () banked
 22337  014C9E  6F50               	movwf	___flge@ff2& (0+255),b
 22338  014CA0  0E00               	movlw	0
 22339  014CA2  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22340  014CA4  0E80               	movlw	128
 22341  014CA6  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22342  014CA8  0E3F               	movlw	63
 22343  014CAA  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22344  014CAC  EC4D  F0D4         	call	___flge	;wreg free
 22345  014CB0  0102               	movlb	2	; () banked
 22346  014CB2  A0D8               	btfss	status,0,c
 22347  014CB4  D041               	goto	l19592
 22348                           
 22349                           ; BSR set to: 2
 22350  014CB6  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22351  014CBA  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22352  014CBE  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22353  014CC2  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22354  014CC6  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22355  014CCA  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22356  014CCE  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22357  014CD2  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22358  014CD6  EC40  F0B5         	call	___flmul	;wreg free
 22359  014CDA  C20E  F227         	movff	?___flmul,___fldiv@b
 22360  014CDE  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22361  014CE2  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22362  014CE6  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22363  014CEA  0E00               	movlw	0
 22364  014CEC  0102               	movlb	2	; () banked
 22365  014CEE  6F2B               	movwf	___fldiv@a& (0+255),b
 22366  014CF0  0E00               	movlw	0
 22367  014CF2  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22368  014CF4  0E80               	movlw	128
 22369  014CF6  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22370  014CF8  0E3F               	movlw	63
 22371  014CFA  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22372  014CFC  ECF4  F0C2         	call	___fldiv	;wreg free
 22373  014D00  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6044
 22374  014D04  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6044+1
 22375  014D08  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6044+2
 22376  014D0C  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6044+3
 22377  014D10  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22378  014D14  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22379  014D18  0E3A               	movlw	low STR_300
 22380  014D1A  0102               	movlb	2	; () banked
 22381  014D1C  6F92               	movwf	sprintf@f& (0+255),b
 22382  014D1E  0EFF               	movlw	high STR_300
 22383  014D20  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22384  014D22  C2B5  F294         	movff	_floatToEngineeringFormat$6044,?_sprintf+4
 22385  014D26  C2B6  F295         	movff	_floatToEngineeringFormat$6044+1,?_sprintf+5
 22386  014D2A  C2B7  F296         	movff	_floatToEngineeringFormat$6044+2,?_sprintf+6
 22387  014D2E  C2B8  F297         	movff	_floatToEngineeringFormat$6044+3,?_sprintf+7
 22388  014D32  EC9F  F0DE         	call	_sprintf	;wreg free
 22389  014D36  D17B               	goto	l2260
 22390  014D38                     l19592:
 22391                           
 22392                           ; BSR set to: 2
 22393                           ;ring_buffer_LUT.c: 446: else if (abs(input_value) >= 0.0001) sprintf(res, "+%0.3f m", i
      +                          nput_value * sign / 0.001);
 22394  014D38  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22395  014D3C  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22396  014D40  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22397  014D44  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22398  014D48  ECE5  F0D5         	call	___fltol	;wreg free
 22399  014D4C  C230  F23A         	movff	?___fltol,abs@a
 22400  014D50  C231  F23B         	movff	?___fltol+1,abs@a+1
 22401  014D54  ECAA  F0E2         	call	_abs	;wreg free
 22402  014D58  0102               	movlb	2	; () banked
 22403  014D5A  C23A  F23E         	movff	?_abs,___xxtofl@val
 22404  014D5E  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22405  014D62  0E00               	movlw	0
 22406  014D64  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22407  014D66  0EFF               	movlw	-1
 22408  014D68  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22409  014D6A  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22410  014D6C  0E01               	movlw	1
 22411  014D6E  EC7F  F0CE         	call	___xxtofl
 22412  014D72  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22413  014D76  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22414  014D7A  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22415  014D7E  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22416  014D82  0E17               	movlw	23
 22417  014D84  0102               	movlb	2	; () banked
 22418  014D86  6F50               	movwf	___flge@ff2& (0+255),b
 22419  014D88  0EB7               	movlw	183
 22420  014D8A  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22421  014D8C  0ED1               	movlw	209
 22422  014D8E  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22423  014D90  0E38               	movlw	56
 22424  014D92  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22425  014D94  EC4D  F0D4         	call	___flge	;wreg free
 22426  014D98  0102               	movlb	2	; () banked
 22427  014D9A  A0D8               	btfss	status,0,c
 22428  014D9C  D041               	goto	l19598
 22429                           
 22430                           ; BSR set to: 2
 22431  014D9E  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22432  014DA2  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22433  014DA6  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22434  014DAA  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22435  014DAE  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22436  014DB2  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22437  014DB6  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22438  014DBA  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22439  014DBE  EC40  F0B5         	call	___flmul	;wreg free
 22440  014DC2  C20E  F227         	movff	?___flmul,___fldiv@b
 22441  014DC6  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22442  014DCA  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22443  014DCE  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22444  014DD2  0E6F               	movlw	111
 22445  014DD4  0102               	movlb	2	; () banked
 22446  014DD6  6F2B               	movwf	___fldiv@a& (0+255),b
 22447  014DD8  0E12               	movlw	18
 22448  014DDA  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22449  014DDC  0E83               	movlw	131
 22450  014DDE  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22451  014DE0  0E3A               	movlw	58
 22452  014DE2  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22453  014DE4  ECF4  F0C2         	call	___fldiv	;wreg free
 22454  014DE8  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6044
 22455  014DEC  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6044+1
 22456  014DF0  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6044+2
 22457  014DF4  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6044+3
 22458  014DF8  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22459  014DFC  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22460  014E00  0EE0               	movlw	low STR_301
 22461  014E02  0102               	movlb	2	; () banked
 22462  014E04  6F92               	movwf	sprintf@f& (0+255),b
 22463  014E06  0EFE               	movlw	high STR_301
 22464  014E08  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22465  014E0A  C2B5  F294         	movff	_floatToEngineeringFormat$6044,?_sprintf+4
 22466  014E0E  C2B6  F295         	movff	_floatToEngineeringFormat$6044+1,?_sprintf+5
 22467  014E12  C2B7  F296         	movff	_floatToEngineeringFormat$6044+2,?_sprintf+6
 22468  014E16  C2B8  F297         	movff	_floatToEngineeringFormat$6044+3,?_sprintf+7
 22469  014E1A  EC9F  F0DE         	call	_sprintf	;wreg free
 22470  014E1E  D107               	goto	l2260
 22471  014E20                     l19598:
 22472                           
 22473                           ; BSR set to: 2
 22474                           ;ring_buffer_LUT.c: 447: else if (abs(input_value) >= 0.0000001) sprintf(res, "+%0.3f u"
      +                          , input_value * sign / 0.000001);
 22475  014E20  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22476  014E24  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22477  014E28  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22478  014E2C  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22479  014E30  ECE5  F0D5         	call	___fltol	;wreg free
 22480  014E34  C230  F23A         	movff	?___fltol,abs@a
 22481  014E38  C231  F23B         	movff	?___fltol+1,abs@a+1
 22482  014E3C  ECAA  F0E2         	call	_abs	;wreg free
 22483  014E40  0102               	movlb	2	; () banked
 22484  014E42  C23A  F23E         	movff	?_abs,___xxtofl@val
 22485  014E46  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22486  014E4A  0E00               	movlw	0
 22487  014E4C  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22488  014E4E  0EFF               	movlw	-1
 22489  014E50  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22490  014E52  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22491  014E54  0E01               	movlw	1
 22492  014E56  EC7F  F0CE         	call	___xxtofl
 22493  014E5A  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22494  014E5E  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22495  014E62  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22496  014E66  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22497  014E6A  0E95               	movlw	149
 22498  014E6C  0102               	movlb	2	; () banked
 22499  014E6E  6F50               	movwf	___flge@ff2& (0+255),b
 22500  014E70  0EBF               	movlw	191
 22501  014E72  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22502  014E74  0ED6               	movlw	214
 22503  014E76  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22504  014E78  0E33               	movlw	51
 22505  014E7A  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22506  014E7C  EC4D  F0D4         	call	___flge	;wreg free
 22507  014E80  0102               	movlb	2	; () banked
 22508  014E82  A0D8               	btfss	status,0,c
 22509  014E84  D041               	goto	l19604
 22510                           
 22511                           ; BSR set to: 2
 22512  014E86  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22513  014E8A  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22514  014E8E  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22515  014E92  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22516  014E96  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22517  014E9A  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22518  014E9E  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22519  014EA2  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22520  014EA6  EC40  F0B5         	call	___flmul	;wreg free
 22521  014EAA  C20E  F227         	movff	?___flmul,___fldiv@b
 22522  014EAE  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22523  014EB2  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22524  014EB6  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22525  014EBA  0EBD               	movlw	189
 22526  014EBC  0102               	movlb	2	; () banked
 22527  014EBE  6F2B               	movwf	___fldiv@a& (0+255),b
 22528  014EC0  0E37               	movlw	55
 22529  014EC2  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22530  014EC4  0E86               	movlw	134
 22531  014EC6  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22532  014EC8  0E35               	movlw	53
 22533  014ECA  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22534  014ECC  ECF4  F0C2         	call	___fldiv	;wreg free
 22535  014ED0  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6044
 22536  014ED4  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6044+1
 22537  014ED8  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6044+2
 22538  014EDC  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6044+3
 22539  014EE0  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22540  014EE4  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22541  014EE8  0EF2               	movlw	low STR_302
 22542  014EEA  0102               	movlb	2	; () banked
 22543  014EEC  6F92               	movwf	sprintf@f& (0+255),b
 22544  014EEE  0EFE               	movlw	high STR_302
 22545  014EF0  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22546  014EF2  C2B5  F294         	movff	_floatToEngineeringFormat$6044,?_sprintf+4
 22547  014EF6  C2B6  F295         	movff	_floatToEngineeringFormat$6044+1,?_sprintf+5
 22548  014EFA  C2B7  F296         	movff	_floatToEngineeringFormat$6044+2,?_sprintf+6
 22549  014EFE  C2B8  F297         	movff	_floatToEngineeringFormat$6044+3,?_sprintf+7
 22550  014F02  EC9F  F0DE         	call	_sprintf	;wreg free
 22551  014F06  D093               	goto	l2260
 22552  014F08                     l19604:
 22553                           
 22554                           ; BSR set to: 2
 22555                           ;ring_buffer_LUT.c: 448: else if (abs(input_value) >= 0.0000000001) sprintf(res, "+%0.3f
      +                           n", input_value * sign / 0.000000001);
 22556  014F08  C2A3  F230         	movff	floatToEngineeringFormat@input_value,___fltol@f1
 22557  014F0C  C2A4  F231         	movff	floatToEngineeringFormat@input_value+1,___fltol@f1+1
 22558  014F10  C2A5  F232         	movff	floatToEngineeringFormat@input_value+2,___fltol@f1+2
 22559  014F14  C2A6  F233         	movff	floatToEngineeringFormat@input_value+3,___fltol@f1+3
 22560  014F18  ECE5  F0D5         	call	___fltol	;wreg free
 22561  014F1C  C230  F23A         	movff	?___fltol,abs@a
 22562  014F20  C231  F23B         	movff	?___fltol+1,abs@a+1
 22563  014F24  ECAA  F0E2         	call	_abs	;wreg free
 22564  014F28  0102               	movlb	2	; () banked
 22565  014F2A  C23A  F23E         	movff	?_abs,___xxtofl@val
 22566  014F2E  C23B  F23F         	movff	?_abs+1,___xxtofl@val+1
 22567  014F32  0E00               	movlw	0
 22568  014F34  BF3F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22569  014F36  0EFF               	movlw	-1
 22570  014F38  6F40               	movwf	(___xxtofl@val+2)& (0+255),b
 22571  014F3A  6F41               	movwf	(___xxtofl@val+3)& (0+255),b
 22572  014F3C  0E01               	movlw	1
 22573  014F3E  EC7F  F0CE         	call	___xxtofl
 22574  014F42  C23E  F24C         	movff	?___xxtofl,___flge@ff1
 22575  014F46  C23F  F24D         	movff	?___xxtofl+1,___flge@ff1+1
 22576  014F4A  C240  F24E         	movff	?___xxtofl+2,___flge@ff1+2
 22577  014F4E  C241  F24F         	movff	?___xxtofl+3,___flge@ff1+3
 22578  014F52  0EFF               	movlw	255
 22579  014F54  0102               	movlb	2	; () banked
 22580  014F56  6F50               	movwf	___flge@ff2& (0+255),b
 22581  014F58  0EE6               	movlw	230
 22582  014F5A  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 22583  014F5C  0EDB               	movlw	219
 22584  014F5E  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 22585  014F60  0E2E               	movlw	46
 22586  014F62  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 22587  014F64  EC4D  F0D4         	call	___flge	;wreg free
 22588  014F68  0102               	movlb	2	; () banked
 22589  014F6A  A0D8               	btfss	status,0,c
 22590  014F6C  D041               	goto	l19610
 22591                           
 22592                           ; BSR set to: 2
 22593  014F6E  C2AF  F212         	movff	floatToEngineeringFormat@sign,___flmul@a
 22594  014F72  C2B0  F213         	movff	floatToEngineeringFormat@sign+1,___flmul@a+1
 22595  014F76  C2B1  F214         	movff	floatToEngineeringFormat@sign+2,___flmul@a+2
 22596  014F7A  C2B2  F215         	movff	floatToEngineeringFormat@sign+3,___flmul@a+3
 22597  014F7E  C2A3  F20E         	movff	floatToEngineeringFormat@input_value,___flmul@b
 22598  014F82  C2A4  F20F         	movff	floatToEngineeringFormat@input_value+1,___flmul@b+1
 22599  014F86  C2A5  F210         	movff	floatToEngineeringFormat@input_value+2,___flmul@b+2
 22600  014F8A  C2A6  F211         	movff	floatToEngineeringFormat@input_value+3,___flmul@b+3
 22601  014F8E  EC40  F0B5         	call	___flmul	;wreg free
 22602  014F92  C20E  F227         	movff	?___flmul,___fldiv@b
 22603  014F96  C20F  F228         	movff	?___flmul+1,___fldiv@b+1
 22604  014F9A  C210  F229         	movff	?___flmul+2,___fldiv@b+2
 22605  014F9E  C211  F22A         	movff	?___flmul+3,___fldiv@b+3
 22606  014FA2  0E5F               	movlw	95
 22607  014FA4  0102               	movlb	2	; () banked
 22608  014FA6  6F2B               	movwf	___fldiv@a& (0+255),b
 22609  014FA8  0E70               	movlw	112
 22610  014FAA  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 22611  014FAC  0E89               	movlw	137
 22612  014FAE  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 22613  014FB0  0E30               	movlw	48
 22614  014FB2  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 22615  014FB4  ECF4  F0C2         	call	___fldiv	;wreg free
 22616  014FB8  C227  F2B5         	movff	?___fldiv,_floatToEngineeringFormat$6044
 22617  014FBC  C228  F2B6         	movff	?___fldiv+1,_floatToEngineeringFormat$6044+1
 22618  014FC0  C229  F2B7         	movff	?___fldiv+2,_floatToEngineeringFormat$6044+2
 22619  014FC4  C22A  F2B8         	movff	?___fldiv+3,_floatToEngineeringFormat$6044+3
 22620  014FC8  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22621  014FCC  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22622  014FD0  0EE9               	movlw	low STR_303
 22623  014FD2  0102               	movlb	2	; () banked
 22624  014FD4  6F92               	movwf	sprintf@f& (0+255),b
 22625  014FD6  0EFE               	movlw	high STR_303
 22626  014FD8  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22627  014FDA  C2B5  F294         	movff	_floatToEngineeringFormat$6044,?_sprintf+4
 22628  014FDE  C2B6  F295         	movff	_floatToEngineeringFormat$6044+1,?_sprintf+5
 22629  014FE2  C2B7  F296         	movff	_floatToEngineeringFormat$6044+2,?_sprintf+6
 22630  014FE6  C2B8  F297         	movff	_floatToEngineeringFormat$6044+3,?_sprintf+7
 22631  014FEA  EC9F  F0DE         	call	_sprintf	;wreg free
 22632  014FEE  D01F               	goto	l2260
 22633  014FF0                     l19610:
 22634                           
 22635                           ; BSR set to: 2
 22636                           ;ring_buffer_LUT.c: 449: else if (input_value == 0.0) sprintf(res, "0.0 ");
 22637  014FF0  C2A3  F200         	movff	floatToEngineeringFormat@input_value,___fleq@ff1
 22638  014FF4  C2A4  F201         	movff	floatToEngineeringFormat@input_value+1,___fleq@ff1+1
 22639  014FF8  C2A5  F202         	movff	floatToEngineeringFormat@input_value+2,___fleq@ff1+2
 22640  014FFC  C2A6  F203         	movff	floatToEngineeringFormat@input_value+3,___fleq@ff1+3
 22641  015000  0E00               	movlw	0
 22642  015002  6F04               	movwf	___fleq@ff2& (0+255),b
 22643  015004  0E00               	movlw	0
 22644  015006  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 22645  015008  0E00               	movlw	0
 22646  01500A  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 22647  01500C  0E00               	movlw	0
 22648  01500E  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 22649  015010  EC1F  F0D9         	call	___fleq	;wreg free
 22650  015014  0102               	movlb	2	; () banked
 22651  015016  A0D8               	btfss	status,0,c
 22652  015018  D00A               	goto	l2260
 22653                           
 22654                           ; BSR set to: 2
 22655  01501A  C2B3  F290         	movff	floatToEngineeringFormat@res,sprintf@wh
 22656  01501E  C2B4  F291         	movff	floatToEngineeringFormat@res+1,sprintf@wh+1
 22657  015022  0E90               	movlw	low STR_304
 22658  015024  6F92               	movwf	sprintf@f& (0+255),b
 22659  015026  0EFF               	movlw	high STR_304
 22660  015028  6F93               	movwf	(sprintf@f+1)& (0+255),b
 22661  01502A  EC9F  F0DE         	call	_sprintf	;wreg free
 22662  01502E                     l2260:
 22663                           
 22664                           ;ring_buffer_LUT.c: 451: return result;
 22665                           
 22666                           ; BSR set to: 2
 22667  01502E  0EAC               	movlw	low floatToEngineeringFormat@result
 22668  015030  0102               	movlb	2	; () banked
 22669  015032  6FA3               	movwf	?_floatToEngineeringFormat& (0+255),b
 22670  015034  0E03               	movlw	high floatToEngineeringFormat@result
 22671  015036  6FA4               	movwf	(?_floatToEngineeringFormat+1)& (0+255),b
 22672                           
 22673                           ; BSR set to: 2
 22674  015038  0012               	return		;funcret
 22675  01503A                     __end_of_floatToEngineeringFormat:
 22676                           	opt callstack 0
 22677                           
 22678 ;; *************** function _sprintf *****************
 22679 ;; Defined at:
 22680 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprintf.c"
 22681 ;; Parameters:    Size  Location     Type
 22682 ;;  wh              2  144[BANK2 ] PTR unsigned char 
 22683 ;;		 -> ftoa@buf(17), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_
      +str(17), 
 22684 ;;		 -> OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), 
 22685 ;;  f               2  146[BANK2 ] PTR const unsigned char 
 22686 ;;		 -> STR_365(11), STR_304(5), STR_303(9), STR_302(9), 
 22687 ;;		 -> STR_301(9), STR_300(8), STR_299(9), STR_298(9), 
 22688 ;;		 -> STR_182(7), STR_180(5), STR_173(4), STR_168(4), 
 22689 ;;		 -> STR_163(11), STR_158(11), STR_157(11), STR_156(11), 
 22690 ;;		 -> STR_155(11), STR_154(9), STR_150(11), STR_148(11), 
 22691 ;;		 -> STR_147(11), STR_146(11), STR_145(11), STR_144(9), 
 22692 ;;		 -> STR_143(11), STR_142(9), STR_141(8), STR_140(9), 
 22693 ;;		 -> STR_139(8), STR_138(9), STR_134(5), STR_124(8), 
 22694 ;;		 -> STR_120(8), STR_116(8), STR_112(8), STR_108(9), 
 22695 ;;		 -> STR_103(8), STR_98(8), STR_94(8), STR_89(8), 
 22696 ;;		 -> STR_85(8), STR_81(8), STR_68(7), STR_66(5), 
 22697 ;;		 -> STR_59(11), STR_58(10), STR_57(13), STR_56(12), 
 22698 ;;		 -> STR_55(11), STR_54(10), STR_53(10), STR_52(9), 
 22699 ;;		 -> STR_51(11), STR_50(10), 
 22700 ;; Auto vars:     Size  Location     Type
 22701 ;;  pb              5  158[BANK2 ] struct __prbuf
 22702 ;;  ap              2  156[BANK2 ] PTR void [1]
 22703 ;;		 -> ?_sprintf(2), ?_printf(2), 
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  2  144[BANK2 ] int 
 22706 ;; Registers used:
 22707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/0
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22713 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22714 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22716 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22717 ;;Total ram usage:       19 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   14
 22720 ;; This function calls:
 22721 ;;		__doprnt
 22722 ;; This function is called by:
 22723 ;;		_getStringSecondsAsTime
 22724 ;;		_OLED_updateHandler
 22725 ;;		_floatToEngineeringFormat
 22726 ;;		_ftoa
 22727 ;; This function uses a non-reentrant model
 22728 ;;
 22729                           
 22730                           	psect	text78
 22731  01BD3E                     __ptext78:
 22732                           	opt callstack 0
 22733  01BD3E                     _sprintf:
 22734                           	opt callstack 12
 22735                           
 22736                           ; BSR set to: 2
 22737                           ;incstack = 0
 22738  01BD3E  C290  F29E         	movff	sprintf@wh,sprintf@pb
 22739  01BD42  C291  F29F         	movff	sprintf@wh+1,sprintf@pb+1
 22740  01BD46  0E00               	movlw	0
 22741  01BD48  0102               	movlb	2	; () banked
 22742  01BD4A  6FA0               	movwf	(sprintf@pb+2)& (0+255),b
 22743  01BD4C  0E00               	movlw	0
 22744  01BD4E  6FA1               	movwf	(sprintf@pb+3)& (0+255),b
 22745  01BD50  0E00               	movlw	0
 22746  01BD52  6FA2               	movwf	(sprintf@pb+4)& (0+255),b
 22747  01BD54  0E94               	movlw	low (?_sprintf+4)
 22748  01BD56  6F9C               	movwf	sprintf@ap& (0+255),b
 22749  01BD58  0E02               	movlw	high (?_sprintf+4)
 22750  01BD5A  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
 22751                           
 22752                           ; BSR set to: 2
 22753  01BD5C  0E9E               	movlw	low sprintf@pb
 22754  01BD5E  6F58               	movwf	__doprnt@pb& (0+255),b
 22755  01BD60  0E02               	movlw	high sprintf@pb
 22756  01BD62  6F59               	movwf	(__doprnt@pb+1)& (0+255),b
 22757  01BD64  C292  F25A         	movff	sprintf@f,__doprnt@f
 22758  01BD68  C293  F25B         	movff	sprintf@f+1,__doprnt@f+1
 22759  01BD6C  0E9C               	movlw	low sprintf@ap
 22760  01BD6E  6F5C               	movwf	__doprnt@ap& (0+255),b
 22761  01BD70  0E02               	movlw	high sprintf@ap
 22762  01BD72  6F5D               	movwf	(__doprnt@ap+1)& (0+255),b
 22763  01BD74  EC00  F080         	call	__doprnt	;wreg free
 22764  01BD78  C29E  FFD9         	movff	sprintf@pb,fsr2l
 22765  01BD7C  C29F  FFDA         	movff	sprintf@pb+1,fsr2h
 22766  01BD80  0E00               	movlw	0
 22767  01BD82  6EDF               	movwf	indf2,c
 22768  01BD84  0012               	return		;funcret
 22769  01BD86                     __end_of_sprintf:
 22770                           	opt callstack 0
 22771                           
 22772 ;; *************** function __doprnt *****************
 22773 ;; Defined at:
 22774 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 22775 ;; Parameters:    Size  Location     Type
 22776 ;;  pb              2   88[BANK2 ] PTR struct __prbuf
 22777 ;;		 -> sprintf@pb(5), printf@pb(5), 
 22778 ;;  f               2   90[BANK2 ] PTR const unsigned char 
 22779 ;;		 -> STR_365(11), STR_362(60), STR_361(24), STR_360(24), 
 22780 ;;		 -> STR_359(24), STR_358(27), STR_357(20), STR_356(35), 
 22781 ;;		 -> STR_355(34), STR_354(37), STR_353(34), STR_352(36), 
 22782 ;;		 -> STR_351(35), STR_350(33), STR_349(35), STR_348(20), 
 22783 ;;		 -> STR_347(23), STR_346(20), STR_345(22), STR_344(21), 
 22784 ;;		 -> STR_343(19), STR_342(21), STR_341(27), STR_340(18), 
 22785 ;;		 -> STR_339(11), terminalTextAttributes@print_string(16), STR_309(4), STR_308(4), 
 22786 ;;		 -> STR_307(4), STR_306(4), STR_305(5), STR_304(5), 
 22787 ;;		 -> STR_303(9), STR_302(9), STR_301(9), STR_300(8), 
 22788 ;;		 -> STR_299(9), STR_298(9), STR_297(3), STR_296(39), 
 22789 ;;		 -> STR_295(96), STR_294(62), STR_293(34), STR_292(3), 
 22790 ;;		 -> STR_291(50), STR_290(56), STR_289(55), STR_288(27), 
 22791 ;;		 -> STR_287(3), STR_286(58), STR_285(40), STR_284(63), 
 22792 ;;		 -> STR_283(42), STR_282(36), STR_281(3), STR_280(61), 
 22793 ;;		 -> STR_279(3), STR_278(59), STR_277(3), STR_276(45), 
 22794 ;;		 -> STR_275(3), STR_274(58), STR_273(59), STR_272(20), 
 22795 ;;		 -> STR_271(3), STR_270(54), STR_269(52), STR_268(23), 
 22796 ;;		 -> STR_267(3), STR_266(43), STR_265(44), STR_264(23), 
 22797 ;;		 -> STR_263(48), STR_262(3), STR_261(50), STR_260(58), 
 22798 ;;		 -> STR_259(35), STR_258(32), STR_257(64), STR_256(30), 
 22799 ;;		 -> STR_255(31), STR_254(63), STR_253(33), STR_252(35), 
 22800 ;;		 -> STR_251(37), STR_250(40), STR_249(28), STR_248(46), 
 22801 ;;		 -> STR_247(31), STR_246(52), STR_245(14), STR_244(28), 
 22802 ;;		 -> STR_243(50), STR_242(29), STR_241(36), STR_240(45), 
 22803 ;;		 -> STR_239(88), STR_238(37), STR_237(3), STR_236(30), 
 22804 ;;		 -> STR_235(46), STR_234(39), STR_233(62), STR_232(57), 
 22805 ;;		 -> STR_231(653), STR_230(22), STR_229(3), STR_227(29), 
 22806 ;;		 -> STR_225(3), STR_224(47), STR_223(3), STR_220(24), 
 22807 ;;		 -> STR_218(23), STR_216(23), STR_214(3), STR_213(3), 
 22808 ;;		 -> STR_212(54), STR_211(3), STR_210(56), STR_209(3), 
 22809 ;;		 -> STR_208(60), STR_207(61), STR_206(3), STR_205(62), 
 22810 ;;		 -> STR_204(3), STR_203(50), STR_202(3), STR_201(45), 
 22811 ;;		 -> STR_200(3), STR_198(54), STR_196(4), STR_195(5), 
 22812 ;;		 -> STR_193(4), STR_192(5), STR_182(7), STR_180(5), 
 22813 ;;		 -> STR_173(4), STR_168(4), STR_163(11), STR_158(11), 
 22814 ;;		 -> STR_157(11), STR_156(11), STR_155(11), STR_154(9), 
 22815 ;;		 -> STR_150(11), STR_148(11), STR_147(11), STR_146(11), 
 22816 ;;		 -> STR_145(11), STR_144(9), STR_143(11), STR_142(9), 
 22817 ;;		 -> STR_141(8), STR_140(9), STR_139(8), STR_138(9), 
 22818 ;;		 -> STR_134(5), STR_124(8), STR_120(8), STR_116(8), 
 22819 ;;		 -> STR_112(8), STR_108(9), STR_103(8), STR_98(8), 
 22820 ;;		 -> STR_94(8), STR_89(8), STR_85(8), STR_81(8), 
 22821 ;;		 -> STR_68(7), STR_66(5), STR_59(11), STR_58(10), 
 22822 ;;		 -> STR_57(13), STR_56(12), STR_55(11), STR_54(10), 
 22823 ;;		 -> STR_53(10), STR_52(9), STR_51(11), STR_50(10), 
 22824 ;;		 -> STR_12(26), STR_11(23), STR_10(47), STR_9(30), 
 22825 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 22826 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 22827 ;;  ap              2   92[BANK2 ] PTR PTR void 
 22828 ;;		 -> sprintf@ap(2), printf@ap(2), 
 22829 ;; Auto vars:     Size  Location     Type
 22830 ;;  idx             1  102[BANK2 ] unsigned char 
 22831 ;;  val             4  133[BANK2 ] unsigned long 
 22832 ;;  fval            4  129[BANK2 ] unsigned long 
 22833 ;;  tmpval          4  125[BANK2 ] struct .
 22834 ;;  flag            2  141[BANK2 ] unsigned short 
 22835 ;;  prec            2  139[BANK2 ] int 
 22836 ;;  width           2  137[BANK2 ] int 
 22837 ;;  eexp            2  123[BANK2 ] int 
 22838 ;;  len             2  121[BANK2 ] unsigned int 
 22839 ;;  cp              2  119[BANK2 ] PTR const unsigned char 
 22840 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_363(7), 
 22841 ;;		 -> _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), OLED_updateHandler@rev_id_str(1
      +7), 
 22842 ;;		 -> OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@buff(20), getStringSecondsAsTime@
      +return_string(40), 
 22843 ;;		 -> STR_49(10), STR_48(13), STR_47(13), STR_46(12), 
 22844 ;;		 -> STR_45(12), STR_44(13), STR_43(12), STR_32(16), 
 22845 ;;		 -> STR_31(22), STR_30(21), STR_29(27), STR_28(41), 
 22846 ;;		 -> STR_27(32), STR_26(19), STR_25(16), STR_24(15), 
 22847 ;;		 -> STR_23(16), STR_17(10), STR_16(6), STR_15(14), 
 22848 ;;		 -> STR_14(9), STR_13(5), LM73Convert@Ambient_Conv(2), LM73Convert@POS5_Conv(2), 
 22849 ;;		 -> LM73Convert@QI_Conv(2), NULL(0), 
 22850 ;;  c               1  143[BANK2 ] unsigned char 
 22851 ;;  d               1    0        unsigned char 
 22852 ;; Return value:  Size  Location     Type
 22853 ;;                  2   88[BANK2 ] int 
 22854 ;; Registers used:
 22855 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22856 ;; Tracked objects:
 22857 ;;		On entry : 0/0
 22858 ;;		On exit  : 0/0
 22859 ;;		Unchanged: 0/0
 22860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22861 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22862 ;;      Locals:         0       0       0      46       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22863 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22864 ;;      Totals:         0       0       0      56       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22865 ;;Total ram usage:       56 bytes
 22866 ;; Hardware stack levels used:    1
 22867 ;; Hardware stack levels required when called:   13
 22868 ;; This function calls:
 22869 ;;		Absolute function
 22870 ;;		___awdiv
 22871 ;;		___fladd
 22872 ;;		___fleq
 22873 ;;		___flge
 22874 ;;		___flmul
 22875 ;;		___flneg
 22876 ;;		___flsub
 22877 ;;		___fltol
 22878 ;;		___lldiv
 22879 ;;		___llmod
 22880 ;;		___wmul
 22881 ;;		___xxtofl
 22882 ;;		__div_to_l_
 22883 ;;		__tdiv_to_l_
 22884 ;;		_fround
 22885 ;;		_isdigit
 22886 ;;		_putch
 22887 ;;		_scale
 22888 ;; This function is called by:
 22889 ;;		_printf
 22890 ;;		_sprintf
 22891 ;; This function uses a non-reentrant model
 22892 ;;
 22893                           
 22894                           	psect	text79
 22895  010000                     __ptext79:
 22896                           	opt callstack 0
 22897  010000                     __doprnt:
 22898                           	opt callstack 13
 22899                           
 22900                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 22901                           
 22902                           ;incstack = 0
 22903  010000  EF6F  F08B         	goto	u23230
 22904  010004                     l18018:
 22905                           
 22906                           ; BSR set to: 2
 22907                           ;doprnt.c: 550: if(c != '%')
 22908  010004  0E25               	movlw	37
 22909  010006  198F               	xorwf	__doprnt@c& (0+255),w,b
 22910  010008  B4D8               	btfsc	status,2,c
 22911  01000A  D036               	goto	l18028
 22912                           
 22913                           ; BSR set to: 2
 22914  01000C  EE20 F002          	lfsr	2,2
 22915  010010  5158               	movf	__doprnt@pb& (0+255),w,b
 22916  010012  26D9               	addwf	fsr2l,f,c
 22917  010014  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 22918  010016  22DA               	addwfc	fsr2h,f,c
 22919  010018  50DE               	movf	postinc2,w,c
 22920  01001A  10DE               	iorwf	postinc2,w,c
 22921  01001C  10DE               	iorwf	postinc2,w,c
 22922  01001E  B4D8               	btfsc	status,2,c
 22923  010020  D014               	goto	l18024
 22924                           
 22925                           ; BSR set to: 2
 22926  010022  EE20 F002          	lfsr	2,2
 22927  010026  5158               	movf	__doprnt@pb& (0+255),w,b
 22928  010028  26D9               	addwf	fsr2l,f,c
 22929  01002A  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 22930  01002C  22DA               	addwfc	fsr2h,f,c
 22931  01002E  D802               	call	u21958
 22932  010030  EF6F  F08B         	goto	u23230
 22933  010034                     u21958:
 22934  010034  0005               	push	
 22935  010036  6EFA               	movwf	pclath,c
 22936  010038  50DE               	movf	postinc2,w,c
 22937  01003A  6EFD               	movwf	tosl,c
 22938  01003C  50DE               	movf	postinc2,w,c
 22939  01003E  6EFE               	movwf	tosh,c
 22940  010040  50DE               	movf	postinc2,w,c
 22941  010042  6EFF               	movwf	tosu,c
 22942  010044  50FA               	movf	pclath,w,c
 22943  010046  518F               	movf	__doprnt@c& (0+255),w,b
 22944  010048  0012               	return		;indir
 22945  01004A                     l18024:
 22946                           
 22947                           ; BSR set to: 2
 22948  01004A  C258  FFD9         	movff	__doprnt@pb,fsr2l
 22949  01004E  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 22950  010052  CFDE F25E          	movff	postinc2,??__doprnt
 22951  010056  CFDD F25F          	movff	postdec2,??__doprnt+1
 22952  01005A  C25E  FFD9         	movff	??__doprnt,fsr2l
 22953  01005E  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 22954  010062  C28F  FFDF         	movff	__doprnt@c,indf2
 22955                           
 22956                           ; BSR set to: 2
 22957  010066  C258  FFD9         	movff	__doprnt@pb,fsr2l
 22958  01006A  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 22959  01006E  2ADE               	incf	postinc2,f,c
 22960  010070  0E00               	movlw	0
 22961  010072  22DD               	addwfc	postdec2,f,c
 22962  010074  EF6F  F08B         	goto	u23230
 22963  010078                     l18028:
 22964                           
 22965                           ; BSR set to: 2
 22966                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 22967  010078  0E00               	movlw	0
 22968  01007A  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 22969  01007C  0E00               	movlw	0
 22970  01007E  6F89               	movwf	__doprnt@width& (0+255),b
 22971                           
 22972                           ;doprnt.c: 560: flag = 0;
 22973  010080  0E00               	movlw	0
 22974  010082  6F8E               	movwf	(__doprnt@flag+1)& (0+255),b
 22975  010084  0E00               	movlw	0
 22976  010086  6F8D               	movwf	__doprnt@flag& (0+255),b
 22977  010088  D00A               	goto	l18038
 22978  01008A                     l18030:
 22979                           
 22980                           ;doprnt.c: 573: flag |= 0x01;
 22981  01008A  0102               	movlb	2	; () banked
 22982  01008C  818D               	bsf	__doprnt@flag& (0+255),0,b
 22983  01008E  D005               	goto	L7
 22984  010090                     l18032:
 22985                           
 22986                           ;doprnt.c: 580: flag |= 0x02;
 22987  010090  0102               	movlb	2	; () banked
 22988  010092  838D               	bsf	__doprnt@flag& (0+255),1,b
 22989  010094  D002               	goto	L7
 22990  010096                     l18034:
 22991                           
 22992                           ;doprnt.c: 592: flag |= 0x04;
 22993  010096  0102               	movlb	2	; () banked
 22994  010098  858D               	bsf	__doprnt@flag& (0+255),2,b
 22995  01009A                     L7:
 22996                           
 22997                           ;doprnt.c: 593: f++;
 22998  01009A  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 22999  01009C  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 23000  01009E                     l18038:
 23001                           
 23002                           ; BSR set to: 2
 23003  01009E  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23004  0100A2  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23005  0100A6  0E00               	movlw	low (__mediumconst shr (0+16))
 23006  0100A8  6EF8               	movwf	tblptru,c
 23007  0100AA  0E0E               	movlw	(high __ramtop+-1)
 23008  0100AC  64F7               	cpfsgt	tblptrh,c
 23009  0100AE  D003               	bra	u21967
 23010  0100B0  0008               	tblrd		*
 23011  0100B2  50F5               	movf	tablat,w,c
 23012  0100B4  D005               	bra	u21960
 23013  0100B6                     u21967:
 23014  0100B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 23015  0100BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 23016  0100BE  50EF               	movf	indf0,w,c
 23017  0100C0                     u21960:
 23018                           
 23019                           ; Switch size 1, requested type "simple"
 23020                           ; Number of cases is 3, Range of values is 32 to 48
 23021                           ; switch strategies available:
 23022                           ; Name         Instructions Cycles
 23023                           ; simple_byte           10     6 (average)
 23024                           ;	Chosen strategy is simple_byte
 23025  0100C0  0A20               	xorlw	32	; case 32
 23026  0100C2  B4D8               	btfsc	status,2,c
 23027  0100C4  D7E2               	goto	l18030
 23028  0100C6  0A0B               	xorlw	11	; case 43
 23029  0100C8  B4D8               	btfsc	status,2,c
 23030  0100CA  D7E2               	goto	l18032
 23031  0100CC  0A1B               	xorlw	27	; case 48
 23032  0100CE  B4D8               	btfsc	status,2,c
 23033  0100D0  D7E2               	goto	l18034
 23034                           
 23035                           ;doprnt.c: 601: if(flag & 0x02)
 23036  0100D2  0102               	movlb	2	; () banked
 23037  0100D4  B38D               	btfsc	__doprnt@flag& (0+255),1,b
 23038                           
 23039                           ; BSR set to: 2
 23040                           ;doprnt.c: 602: flag &= ~0x01;
 23041  0100D6  918D               	bcf	__doprnt@flag& (0+255),0,b
 23042                           
 23043                           ; BSR set to: 2
 23044                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 23045  0100D8  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23046  0100DC  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23047  0100E0  0E00               	movlw	low (__mediumconst shr (0+16))
 23048  0100E2  6EF8               	movwf	tblptru,c
 23049  0100E4  0E0E               	movlw	(high __ramtop+-1)
 23050  0100E6  64F7               	cpfsgt	tblptrh,c
 23051  0100E8  D003               	bra	u21987
 23052  0100EA  0008               	tblrd		*
 23053  0100EC  50F5               	movf	tablat,w,c
 23054  0100EE  D005               	bra	u21980
 23055  0100F0                     u21987:
 23056  0100F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 23057  0100F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 23058  0100F8  50EF               	movf	indf0,w,c
 23059  0100FA                     u21980:
 23060  0100FA  ECA8  F0E3         	call	_isdigit
 23061  0100FE  A0D8               	btfss	status,0,c
 23062  010100  D04C               	goto	u22020
 23063                           
 23064                           ;doprnt.c: 610: width = 0;
 23065  010102  0E00               	movlw	0
 23066  010104  0102               	movlb	2	; () banked
 23067  010106  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 23068  010108  0E00               	movlw	0
 23069  01010A  6F89               	movwf	__doprnt@width& (0+255),b
 23070  01010C                     l18046:
 23071                           
 23072                           ;doprnt.c: 612: width *= 10;
 23073  01010C  C289  F200         	movff	__doprnt@width,___wmul@multiplier
 23074  010110  C28A  F201         	movff	__doprnt@width+1,___wmul@multiplier+1
 23075  010114  0E00               	movlw	0
 23076  010116  0102               	movlb	2	; () banked
 23077  010118  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23078  01011A  0E0A               	movlw	10
 23079  01011C  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23080  01011E  ECFD  F0E2         	call	___wmul	;wreg free
 23081  010122  C200  F289         	movff	?___wmul,__doprnt@width
 23082  010126  C201  F28A         	movff	?___wmul+1,__doprnt@width+1
 23083                           
 23084                           ;doprnt.c: 613: width += *f++ - '0';
 23085  01012A  0ED0               	movlw	208
 23086  01012C  0102               	movlb	2	; () banked
 23087  01012E  6F5E               	movwf	??__doprnt& (0+255),b
 23088  010130  0EFF               	movlw	255
 23089  010132  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 23090  010134  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23091  010138  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23092  01013C  0E00               	movlw	low (__mediumconst shr (0+16))
 23093  01013E  6EF8               	movwf	tblptru,c
 23094  010140  0E0E               	movlw	(high __ramtop+-1)
 23095  010142  64F7               	cpfsgt	tblptrh,c
 23096  010144  D003               	bra	u22007
 23097  010146  0008               	tblrd		*
 23098  010148  50F5               	movf	tablat,w,c
 23099  01014A  D005               	bra	u22000
 23100  01014C                     u22007:
 23101  01014C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23102  010150  CFF7 FFEA          	movff	tblptrh,fsr0h
 23103  010154  50EF               	movf	indf0,w,c
 23104  010156                     u22000:
 23105  010156  0102               	movlb	2	; () banked
 23106  010158  6F60               	movwf	(??__doprnt+2)& (0+255),b
 23107  01015A  6B61               	clrf	(??__doprnt+3)& (0+255),b
 23108  01015C  515E               	movf	??__doprnt& (0+255),w,b
 23109  01015E  2760               	addwf	(??__doprnt+2)& (0+255),f,b
 23110  010160  515F               	movf	(??__doprnt+1)& (0+255),w,b
 23111  010162  2361               	addwfc	(??__doprnt+3)& (0+255),f,b
 23112  010164  5160               	movf	(??__doprnt+2)& (0+255),w,b
 23113  010166  2789               	addwf	__doprnt@width& (0+255),f,b
 23114  010168  5161               	movf	(??__doprnt+3)& (0+255),w,b
 23115  01016A  238A               	addwfc	(__doprnt@width+1)& (0+255),f,b
 23116                           
 23117                           ; BSR set to: 2
 23118  01016C  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 23119  01016E  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 23120                           
 23121                           ; BSR set to: 2
 23122                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 23123  010170  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23124  010174  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23125  010178  0E00               	movlw	low (__mediumconst shr (0+16))
 23126  01017A  6EF8               	movwf	tblptru,c
 23127  01017C  0E0E               	movlw	(high __ramtop+-1)
 23128  01017E  64F7               	cpfsgt	tblptrh,c
 23129  010180  D003               	bra	u22017
 23130  010182  0008               	tblrd		*
 23131  010184  50F5               	movf	tablat,w,c
 23132  010186  D005               	bra	u22010
 23133  010188                     u22017:
 23134  010188  CFF6 FFE9          	movff	tblptrl,fsr0l
 23135  01018C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23136  010190  50EF               	movf	indf0,w,c
 23137  010192                     u22010:
 23138  010192  ECA8  F0E3         	call	_isdigit
 23139  010196  B0D8               	btfsc	status,0,c
 23140  010198  D7B9               	goto	l18046
 23141  01019A                     u22020:
 23142                           
 23143                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 23144  01019A  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23145  01019E  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23146  0101A2  0E00               	movlw	low (__mediumconst shr (0+16))
 23147  0101A4  6EF8               	movwf	tblptru,c
 23148  0101A6  0E0E               	movlw	(high __ramtop+-1)
 23149  0101A8  64F7               	cpfsgt	tblptrh,c
 23150  0101AA  D003               	bra	u22037
 23151  0101AC  0008               	tblrd		*
 23152  0101AE  50F5               	movf	tablat,w,c
 23153  0101B0  D005               	bra	u22030
 23154  0101B2                     u22037:
 23155  0101B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23156  0101B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23157  0101BA  50EF               	movf	indf0,w,c
 23158  0101BC                     u22030:
 23159  0101BC  0A2E               	xorlw	46
 23160  0101BE  A4D8               	btfss	status,2,c
 23161  0101C0  D049               	goto	l18066
 23162                           
 23163                           ;doprnt.c: 624: flag |= 0x4000;
 23164  0101C2  0102               	movlb	2	; () banked
 23165  0101C4  8D8E               	bsf	(__doprnt@flag+1)& (0+255),6,b
 23166                           
 23167                           ;doprnt.c: 625: f++;
 23168  0101C6  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 23169  0101C8  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 23170                           
 23171                           ; BSR set to: 2
 23172                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 23173  0101CA  0E00               	movlw	0
 23174  0101CC  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 23175  0101CE  0E00               	movlw	0
 23176  0101D0  6F8B               	movwf	__doprnt@prec& (0+255),b
 23177                           
 23178                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 23179  0101D2  D02A               	goto	l18064
 23180  0101D4                     l18060:
 23181                           
 23182                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 23183  0101D4  C28B  F200         	movff	__doprnt@prec,___wmul@multiplier
 23184  0101D8  C28C  F201         	movff	__doprnt@prec+1,___wmul@multiplier+1
 23185  0101DC  0E00               	movlw	0
 23186  0101DE  0102               	movlb	2	; () banked
 23187  0101E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23188  0101E2  0E0A               	movlw	10
 23189  0101E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23190  0101E6  ECFD  F0E2         	call	___wmul	;wreg free
 23191  0101EA  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23192  0101EE  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23193  0101F2  0E00               	movlw	low (__mediumconst shr (0+16))
 23194  0101F4  6EF8               	movwf	tblptru,c
 23195  0101F6  0E0E               	movlw	(high __ramtop+-1)
 23196  0101F8  64F7               	cpfsgt	tblptrh,c
 23197  0101FA  D003               	bra	u22057
 23198  0101FC  0008               	tblrd		*
 23199  0101FE  50F5               	movf	tablat,w,c
 23200  010200  D005               	bra	u22050
 23201  010202                     u22057:
 23202  010202  CFF6 FFE9          	movff	tblptrl,fsr0l
 23203  010206  CFF7 FFEA          	movff	tblptrh,fsr0h
 23204  01020A  50EF               	movf	indf0,w,c
 23205  01020C                     u22050:
 23206  01020C  0102               	movlb	2	; () banked
 23207  01020E  6F5E               	movwf	??__doprnt& (0+255),b
 23208  010210  515E               	movf	??__doprnt& (0+255),w,b
 23209  010212  2700               	addwf	?___wmul& (0+255),f,b
 23210  010214  0E00               	movlw	0
 23211  010216  2301               	addwfc	(?___wmul+1)& (0+255),f,b
 23212  010218  0ED0               	movlw	208
 23213  01021A  2500               	addwf	?___wmul& (0+255),w,b
 23214  01021C  6F8B               	movwf	__doprnt@prec& (0+255),b
 23215  01021E  0EFF               	movlw	255
 23216  010220  2101               	addwfc	(?___wmul+1)& (0+255),w,b
 23217  010222  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 23218                           
 23219                           ; BSR set to: 2
 23220  010224  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 23221  010226  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 23222  010228                     l18064:
 23223                           
 23224                           ; BSR set to: 2
 23225  010228  C25A  FFF6         	movff	__doprnt@f,tblptrl
 23226  01022C  C25B  FFF7         	movff	__doprnt@f+1,tblptrh
 23227  010230  0E00               	movlw	low (__mediumconst shr (0+16))
 23228  010232  6EF8               	movwf	tblptru,c
 23229  010234  0E0E               	movlw	(high __ramtop+-1)
 23230  010236  64F7               	cpfsgt	tblptrh,c
 23231  010238  D003               	bra	u22067
 23232  01023A  0008               	tblrd		*
 23233  01023C  50F5               	movf	tablat,w,c
 23234  01023E  D005               	bra	u22060
 23235  010240                     u22067:
 23236  010240  CFF6 FFE9          	movff	tblptrl,fsr0l
 23237  010244  CFF7 FFEA          	movff	tblptrh,fsr0h
 23238  010248  50EF               	movf	indf0,w,c
 23239  01024A                     u22060:
 23240  01024A  ECA8  F0E3         	call	_isdigit
 23241  01024E  A0D8               	btfss	status,0,c
 23242  010250  D12A               	goto	l18134
 23243  010252  D7C0               	goto	l18060
 23244  010254                     l18066:
 23245                           
 23246                           ;doprnt.c: 645: prec = 0;
 23247  010254  0E00               	movlw	0
 23248  010256  0102               	movlb	2	; () banked
 23249  010258  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 23250  01025A  0E00               	movlw	0
 23251  01025C  6F8B               	movwf	__doprnt@prec& (0+255),b
 23252                           
 23253                           ; BSR set to: 2
 23254                           ;doprnt.c: 647: flag |= 0x1000;
 23255  01025E  898E               	bsf	(__doprnt@flag+1)& (0+255),4,b
 23256  010260  D122               	goto	l18134
 23257  010262                     l18070:
 23258                           
 23259                           ; BSR set to: 2
 23260                           ;doprnt.c: 662: flag |= 0x10;
 23261  010262  898D               	bsf	__doprnt@flag& (0+255),4,b
 23262                           
 23263                           ;doprnt.c: 663: goto loop;
 23264  010264  D120               	goto	l18134
 23265  010266                     l18072:
 23266                           
 23267                           ; BSR set to: 2
 23268                           ;doprnt.c: 682: flag |= 0x400;
 23269  010266  858E               	bsf	(__doprnt@flag+1)& (0+255),2,b
 23270                           
 23271                           ;doprnt.c: 683: break;
 23272  010268  D159               	goto	l18136
 23273  01026A                     l18074:
 23274                           
 23275                           ; BSR set to: 2
 23276                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 23277  01026A  8F8D               	bsf	__doprnt@flag& (0+255),7,b
 23278                           
 23279                           ;doprnt.c: 742: break;
 23280  01026C  D157               	goto	l18136
 23281  01026E                     l18076:
 23282                           
 23283                           ; BSR set to: 2
 23284                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23285  01026E  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 23286  010272  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 23287  010276  CFDF F25E          	movff	indf2,??__doprnt
 23288  01027A  0E02               	movlw	2
 23289  01027C  26DE               	addwf	postinc2,f,c
 23290  01027E  CFDF F25F          	movff	indf2,??__doprnt+1
 23291  010282  0E00               	movlw	0
 23292  010284  22DD               	addwfc	postdec2,f,c
 23293  010286  C25E  FFD9         	movff	??__doprnt,fsr2l
 23294  01028A  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23295  01028E  CFDE F277          	movff	postinc2,__doprnt@cp
 23296  010292  CFDD F278          	movff	postdec2,__doprnt@cp+1
 23297                           
 23298                           ; BSR set to: 2
 23299                           ;doprnt.c: 759: if(!cp)
 23300  010296  5177               	movf	__doprnt@cp& (0+255),w,b
 23301  010298  1178               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 23302  01029A  A4D8               	btfss	status,2,c
 23303  01029C  D004               	goto	l18082
 23304                           
 23305                           ; BSR set to: 2
 23306                           ;doprnt.c: 760: cp = "(null)";
 23307  01029E  0E6A               	movlw	low STR_363
 23308  0102A0  6F77               	movwf	__doprnt@cp& (0+255),b
 23309  0102A2  0EFF               	movlw	high STR_363
 23310  0102A4  6F78               	movwf	(__doprnt@cp+1)& (0+255),b
 23311  0102A6                     l18082:
 23312                           
 23313                           ; BSR set to: 2
 23314                           ;doprnt.c: 764: len = 0;
 23315  0102A6  0E00               	movlw	0
 23316  0102A8  6F7A               	movwf	(__doprnt@len+1)& (0+255),b
 23317  0102AA  0E00               	movlw	0
 23318  0102AC  6F79               	movwf	__doprnt@len& (0+255),b
 23319                           
 23320                           ;doprnt.c: 765: while(cp[len])
 23321  0102AE  D003               	goto	l18086
 23322  0102B0                     l18084:
 23323                           
 23324                           ;doprnt.c: 766: len++;
 23325  0102B0  0102               	movlb	2	; () banked
 23326  0102B2  4B79               	infsnz	__doprnt@len& (0+255),f,b
 23327  0102B4  2B7A               	incf	(__doprnt@len+1)& (0+255),f,b
 23328  0102B6                     l18086:
 23329                           
 23330                           ; BSR set to: 2
 23331  0102B6  5179               	movf	__doprnt@len& (0+255),w,b
 23332  0102B8  2577               	addwf	__doprnt@cp& (0+255),w,b
 23333  0102BA  6F5E               	movwf	??__doprnt& (0+255),b
 23334  0102BC  517A               	movf	(__doprnt@len+1)& (0+255),w,b
 23335  0102BE  2178               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 23336  0102C0  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 23337  0102C2  C25E  FFF6         	movff	??__doprnt,tblptrl
 23338  0102C6  C25F  FFF7         	movff	??__doprnt+1,tblptrh
 23339  0102CA  0E00               	movlw	low (__mediumconst shr (0+16))
 23340  0102CC  6EF8               	movwf	tblptru,c
 23341  0102CE  0E0E               	movlw	(high __ramtop+-1)
 23342  0102D0  64F7               	cpfsgt	tblptrh,c
 23343  0102D2  D003               	bra	u22097
 23344  0102D4  0008               	tblrd		*
 23345  0102D6  50F5               	movf	tablat,w,c
 23346  0102D8  D005               	bra	u22090
 23347  0102DA                     u22097:
 23348  0102DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 23349  0102DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 23350  0102E2  50EF               	movf	indf0,w,c
 23351  0102E4                     u22090:
 23352  0102E4  0900               	iorlw	0
 23353  0102E6  A4D8               	btfss	status,2,c
 23354  0102E8  D7E3               	goto	l18084
 23355  0102EA                     u22100:
 23356                           
 23357                           ;doprnt.c: 772: if(prec && prec < len)
 23358  0102EA  0102               	movlb	2	; () banked
 23359  0102EC  518B               	movf	__doprnt@prec& (0+255),w,b
 23360  0102EE  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23361  0102F0  B4D8               	btfsc	status,2,c
 23362  0102F2  D00A               	goto	l18094
 23363                           
 23364                           ; BSR set to: 2
 23365  0102F4  5179               	movf	__doprnt@len& (0+255),w,b
 23366  0102F6  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 23367  0102F8  517A               	movf	(__doprnt@len+1)& (0+255),w,b
 23368  0102FA  598C               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 23369  0102FC  B0D8               	btfsc	status,0,c
 23370  0102FE  D004               	goto	l18094
 23371                           
 23372                           ; BSR set to: 2
 23373                           ;doprnt.c: 773: len = prec;
 23374  010300  C28B  F279         	movff	__doprnt@prec,__doprnt@len
 23375  010304  C28C  F27A         	movff	__doprnt@prec+1,__doprnt@len+1
 23376  010308                     l18094:
 23377                           
 23378                           ; BSR set to: 2
 23379                           ;doprnt.c: 776: if(width > len)
 23380  010308  5189               	movf	__doprnt@width& (0+255),w,b
 23381  01030A  5D79               	subwf	__doprnt@len& (0+255),w,b
 23382  01030C  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 23383  01030E  597A               	subwfb	(__doprnt@len+1)& (0+255),w,b
 23384  010310  B0D8               	btfsc	status,0,c
 23385  010312  D005               	goto	l18098
 23386                           
 23387                           ; BSR set to: 2
 23388                           ;doprnt.c: 777: width -= len;
 23389  010314  5179               	movf	__doprnt@len& (0+255),w,b
 23390  010316  5F89               	subwf	__doprnt@width& (0+255),f,b
 23391  010318  517A               	movf	(__doprnt@len+1)& (0+255),w,b
 23392  01031A  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23393  01031C  D038               	goto	l18108
 23394  01031E                     l18098:
 23395                           
 23396                           ; BSR set to: 2
 23397                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 23398  01031E  0E00               	movlw	0
 23399  010320  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 23400  010322  0E00               	movlw	0
 23401  010324  6F89               	movwf	__doprnt@width& (0+255),b
 23402  010326  D033               	goto	l18108
 23403  010328                     l18100:
 23404                           
 23405                           ; BSR set to: 2
 23406  010328  EE20 F002          	lfsr	2,2
 23407  01032C  5158               	movf	__doprnt@pb& (0+255),w,b
 23408  01032E  26D9               	addwf	fsr2l,f,c
 23409  010330  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23410  010332  22DA               	addwfc	fsr2h,f,c
 23411  010334  50DE               	movf	postinc2,w,c
 23412  010336  10DE               	iorwf	postinc2,w,c
 23413  010338  10DE               	iorwf	postinc2,w,c
 23414  01033A  B4D8               	btfsc	status,2,c
 23415  01033C  D013               	goto	l18104
 23416                           
 23417                           ; BSR set to: 2
 23418  01033E  EE20 F002          	lfsr	2,2
 23419  010342  5158               	movf	__doprnt@pb& (0+255),w,b
 23420  010344  26D9               	addwf	fsr2l,f,c
 23421  010346  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23422  010348  22DA               	addwfc	fsr2h,f,c
 23423  01034A  D801               	call	u22158
 23424  01034C  D020               	goto	l18108
 23425  01034E                     u22158:
 23426  01034E  0005               	push	
 23427  010350  6EFA               	movwf	pclath,c
 23428  010352  50DE               	movf	postinc2,w,c
 23429  010354  6EFD               	movwf	tosl,c
 23430  010356  50DE               	movf	postinc2,w,c
 23431  010358  6EFE               	movwf	tosh,c
 23432  01035A  50DE               	movf	postinc2,w,c
 23433  01035C  6EFF               	movwf	tosu,c
 23434  01035E  50FA               	movf	pclath,w,c
 23435  010360  0E20               	movlw	32
 23436  010362  0012               	return		;indir
 23437  010364                     l18104:
 23438                           
 23439                           ; BSR set to: 2
 23440  010364  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23441  010368  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23442  01036C  CFDE F25E          	movff	postinc2,??__doprnt
 23443  010370  CFDD F25F          	movff	postdec2,??__doprnt+1
 23444  010374  C25E  FFD9         	movff	??__doprnt,fsr2l
 23445  010378  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23446  01037C  0E20               	movlw	32
 23447  01037E  6EDF               	movwf	indf2,c
 23448                           
 23449                           ; BSR set to: 2
 23450  010380  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23451  010384  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23452  010388  2ADE               	incf	postinc2,f,c
 23453  01038A  0E00               	movlw	0
 23454  01038C  22DD               	addwfc	postdec2,f,c
 23455  01038E                     l18108:
 23456  01038E  0102               	movlb	2	; () banked
 23457  010390  0789               	decf	__doprnt@width& (0+255),f,b
 23458  010392  A0D8               	btfss	status,0,c
 23459  010394  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 23460  010396  2989               	incf	__doprnt@width& (0+255),w,b
 23461  010398  E1C7               	bnz	l18100
 23462  01039A  298A               	incf	(__doprnt@width+1)& (0+255),w,b
 23463  01039C  B4D8               	btfsc	status,2,c
 23464  01039E  D05B               	goto	l18122
 23465  0103A0  D7C3               	goto	l18100
 23466  0103A2                     l18110:
 23467                           
 23468                           ; BSR set to: 2
 23469  0103A2  EE20 F002          	lfsr	2,2
 23470  0103A6  5158               	movf	__doprnt@pb& (0+255),w,b
 23471  0103A8  26D9               	addwf	fsr2l,f,c
 23472  0103AA  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23473  0103AC  22DA               	addwfc	fsr2h,f,c
 23474  0103AE  50DE               	movf	postinc2,w,c
 23475  0103B0  10DE               	iorwf	postinc2,w,c
 23476  0103B2  10DE               	iorwf	postinc2,w,c
 23477  0103B4  B4D8               	btfsc	status,2,c
 23478  0103B6  D027               	goto	l18116
 23479                           
 23480                           ; BSR set to: 2
 23481  0103B8  EE20 F002          	lfsr	2,2
 23482  0103BC  5158               	movf	__doprnt@pb& (0+255),w,b
 23483  0103BE  26D9               	addwf	fsr2l,f,c
 23484  0103C0  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 23485  0103C2  22DA               	addwfc	fsr2h,f,c
 23486  0103C4  D801               	call	u22188
 23487  0103C6  D01B               	goto	u22189
 23488  0103C8                     u22188:
 23489  0103C8  0005               	push	
 23490  0103CA  6EFA               	movwf	pclath,c
 23491  0103CC  50DE               	movf	postinc2,w,c
 23492  0103CE  6EFD               	movwf	tosl,c
 23493  0103D0  50DE               	movf	postinc2,w,c
 23494  0103D2  6EFE               	movwf	tosh,c
 23495  0103D4  50DE               	movf	postinc2,w,c
 23496  0103D6  6EFF               	movwf	tosu,c
 23497  0103D8  50FA               	movf	pclath,w,c
 23498  0103DA  C277  FFF6         	movff	__doprnt@cp,tblptrl
 23499  0103DE  C278  FFF7         	movff	__doprnt@cp+1,tblptrh
 23500  0103E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23501  0103E4  6EF8               	movwf	tblptru,c
 23502  0103E6  0E0E               	movlw	(high __ramtop+-1)
 23503  0103E8  64F7               	cpfsgt	tblptrh,c
 23504  0103EA  D003               	bra	u22197
 23505  0103EC  0008               	tblrd		*
 23506  0103EE  50F5               	movf	tablat,w,c
 23507  0103F0  D005               	bra	u22190
 23508  0103F2                     u22197:
 23509  0103F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 23510  0103F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 23511  0103FA  50EF               	movf	indf0,w,c
 23512  0103FC                     u22190:
 23513  0103FC  0012               	return		;indir
 23514  0103FE                     u22189:
 23515  0103FE  0102               	movlb	2	; () banked
 23516  010400  4B77               	infsnz	__doprnt@cp& (0+255),f,b
 23517  010402  2B78               	incf	(__doprnt@cp+1)& (0+255),f,b
 23518  010404  D028               	goto	l18122
 23519  010406                     l18116:
 23520                           
 23521                           ; BSR set to: 2
 23522  010406  C277  FFF6         	movff	__doprnt@cp,tblptrl
 23523  01040A  C278  FFF7         	movff	__doprnt@cp+1,tblptrh
 23524  01040E  0E00               	movlw	low (__mediumconst shr (0+16))
 23525  010410  6EF8               	movwf	tblptru,c
 23526  010412  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23527  010416  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23528  01041A  CFDE F25E          	movff	postinc2,??__doprnt
 23529  01041E  CFDD F25F          	movff	postdec2,??__doprnt+1
 23530  010422  C25E  FFD9         	movff	??__doprnt,fsr2l
 23531  010426  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23532  01042A  0E0E               	movlw	(high __ramtop+-1)
 23533  01042C  64F7               	cpfsgt	tblptrh,c
 23534  01042E  D003               	bra	u22207
 23535  010430  0008               	tblrd		*
 23536  010432  50F5               	movf	tablat,w,c
 23537  010434  D005               	bra	u22200
 23538  010436                     u22207:
 23539  010436  CFF6 FFE9          	movff	tblptrl,fsr0l
 23540  01043A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23541  01043E  50EF               	movf	indf0,w,c
 23542  010440                     u22200:
 23543  010440  6EDF               	movwf	indf2,c
 23544  010442  0102               	movlb	2	; () banked
 23545  010444  4B77               	infsnz	__doprnt@cp& (0+255),f,b
 23546  010446  2B78               	incf	(__doprnt@cp+1)& (0+255),f,b
 23547                           
 23548                           ; BSR set to: 2
 23549  010448  C258  FFD9         	movff	__doprnt@pb,fsr2l
 23550  01044C  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 23551  010450  2ADE               	incf	postinc2,f,c
 23552  010452  0E00               	movlw	0
 23553  010454  22DD               	addwfc	postdec2,f,c
 23554  010456                     l18122:
 23555                           
 23556                           ; BSR set to: 2
 23557  010456  0779               	decf	__doprnt@len& (0+255),f,b
 23558  010458  A0D8               	btfss	status,0,c
 23559  01045A  077A               	decf	(__doprnt@len+1)& (0+255),f,b
 23560  01045C  2979               	incf	__doprnt@len& (0+255),w,b
 23561  01045E  E1A1               	bnz	l18110
 23562  010460  297A               	incf	(__doprnt@len+1)& (0+255),w,b
 23563  010462  B4D8               	btfsc	status,2,c
 23564  010464  EF6F  F08B         	goto	u23230
 23565  010468  D79C               	goto	l18110
 23566  01046A                     l18124:
 23567                           
 23568                           ; BSR set to: 2
 23569                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23570  01046A  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 23571  01046E  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 23572  010472  CFDF F25E          	movff	indf2,??__doprnt
 23573  010476  0E02               	movlw	2
 23574  010478  26DE               	addwf	postinc2,f,c
 23575  01047A  CFDF F25F          	movff	indf2,??__doprnt+1
 23576  01047E  0E00               	movlw	0
 23577  010480  22DD               	addwfc	postdec2,f,c
 23578  010482  C25E  FFD9         	movff	??__doprnt,fsr2l
 23579  010486  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23580  01048A  50DF               	movf	indf2,w,c
 23581  01048C  6F8F               	movwf	__doprnt@c& (0+255),b
 23582  01048E                     l18126:
 23583                           
 23584                           ; BSR set to: 2
 23585                           ;doprnt.c: 824: cp = (char *)&c;
 23586  01048E  0E8F               	movlw	low __doprnt@c
 23587  010490  6F77               	movwf	__doprnt@cp& (0+255),b
 23588  010492  0E02               	movlw	high __doprnt@c
 23589  010494  6F78               	movwf	(__doprnt@cp+1)& (0+255),b
 23590                           
 23591                           ; BSR set to: 2
 23592                           ;doprnt.c: 825: len = 1;
 23593  010496  0E00               	movlw	0
 23594  010498  6F7A               	movwf	(__doprnt@len+1)& (0+255),b
 23595  01049A  0E01               	movlw	1
 23596  01049C  6F79               	movwf	__doprnt@len& (0+255),b
 23597                           
 23598                           ;doprnt.c: 826: goto dostring;
 23599  01049E  D725               	goto	u22100
 23600  0104A0                     l18130:
 23601                           
 23602                           ; BSR set to: 2
 23603                           ;doprnt.c: 837: flag |= 0xC0;
 23604  0104A0  0EC0               	movlw	192
 23605  0104A2  138D               	iorwf	__doprnt@flag& (0+255),f,b
 23606                           
 23607                           ;doprnt.c: 838: break;
 23608  0104A4  D03B               	goto	l18136
 23609  0104A6                     l18134:
 23610  0104A6  0102               	movlb	2	; () banked
 23611  0104A8  515A               	movf	__doprnt@f& (0+255),w,b
 23612  0104AA  6F5E               	movwf	??__doprnt& (0+255),b
 23613  0104AC  515B               	movf	(__doprnt@f+1)& (0+255),w,b
 23614  0104AE  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 23615  0104B0  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 23616  0104B2  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 23617  0104B4  C25E  FFF6         	movff	??__doprnt,tblptrl
 23618  0104B8  C25F  FFF7         	movff	??__doprnt+1,tblptrh
 23619  0104BC  0E00               	movlw	low (__mediumconst shr (0+16))
 23620  0104BE  6EF8               	movwf	tblptru,c
 23621  0104C0  0E0E               	movlw	(high __ramtop+-1)
 23622  0104C2  64F7               	cpfsgt	tblptrh,c
 23623  0104C4  D003               	bra	u22227
 23624  0104C6  0008               	tblrd		*
 23625  0104C8  50F5               	movf	tablat,w,c
 23626  0104CA  D005               	bra	u22220
 23627  0104CC                     u22227:
 23628  0104CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23629  0104D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 23630  0104D4  50EF               	movf	indf0,w,c
 23631  0104D6                     u22220:
 23632  0104D6  0102               	movlb	2	; () banked
 23633  0104D8  6F8F               	movwf	__doprnt@c& (0+255),b
 23634  0104DA  518F               	movf	__doprnt@c& (0+255),w,b
 23635                           
 23636                           ; Switch size 1, requested type "simple"
 23637                           ; Number of cases is 10, Range of values is 0 to 120
 23638                           ; switch strategies available:
 23639                           ; Name         Instructions Cycles
 23640                           ; simple_byte           31    16 (average)
 23641                           ;	Chosen strategy is simple_byte
 23642  0104DC  0A00               	xorlw	0	; case 0
 23643  0104DE  B4D8               	btfsc	status,2,c
 23644  0104E0  EF8D  F08B         	goto	u23250
 23645  0104E4  0A58               	xorlw	88	; case 88
 23646  0104E6  B4D8               	btfsc	status,2,c
 23647  0104E8  D6C0               	goto	l18074
 23648  0104EA  0A3B               	xorlw	59	; case 99
 23649  0104EC  B4D8               	btfsc	status,2,c
 23650  0104EE  D7BD               	goto	l18124
 23651  0104F0  0A07               	xorlw	7	; case 100
 23652  0104F2  B4D8               	btfsc	status,2,c
 23653  0104F4  D013               	goto	l18136
 23654  0104F6  0A02               	xorlw	2	; case 102
 23655  0104F8  B4D8               	btfsc	status,2,c
 23656  0104FA  D6B5               	goto	l18072
 23657  0104FC  0A0F               	xorlw	15	; case 105
 23658  0104FE  B4D8               	btfsc	status,2,c
 23659  010500  D00D               	goto	l18136
 23660  010502  0A05               	xorlw	5	; case 108
 23661  010504  B4D8               	btfsc	status,2,c
 23662  010506  D6AD               	goto	l18070
 23663  010508  0A1F               	xorlw	31	; case 115
 23664  01050A  B4D8               	btfsc	status,2,c
 23665  01050C  D6B0               	goto	l18076
 23666  01050E  0A06               	xorlw	6	; case 117
 23667  010510  B4D8               	btfsc	status,2,c
 23668  010512  D7C6               	goto	l18130
 23669  010514  0A0D               	xorlw	13	; case 120
 23670  010516  B4D8               	btfsc	status,2,c
 23671  010518  D6A8               	goto	l18074
 23672  01051A  D7B9               	goto	l18126
 23673  01051C                     l18136:
 23674                           
 23675                           ; BSR set to: 2
 23676                           ;doprnt.c: 844: if(flag & (0x700)) {
 23677  01051C  0E07               	movlw	7
 23678  01051E  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 23679  010520  B4D8               	btfsc	status,2,c
 23680  010522  EF0F  F088         	goto	l18380
 23681                           
 23682                           ; BSR set to: 2
 23683                           ;doprnt.c: 846: if(flag & 0x1000)
 23684  010526  A98E               	btfss	(__doprnt@flag+1)& (0+255),4,b
 23685  010528  D004               	goto	l18142
 23686                           
 23687                           ; BSR set to: 2
 23688                           ;doprnt.c: 848: prec = 6;
 23689  01052A  0E00               	movlw	0
 23690  01052C  6F8C               	movwf	(__doprnt@prec+1)& (0+255),b
 23691  01052E  0E06               	movlw	6
 23692  010530  6F8B               	movwf	__doprnt@prec& (0+255),b
 23693  010532                     l18142:
 23694                           
 23695                           ; BSR set to: 2
 23696                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 23697  010532  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 23698  010536  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 23699  01053A  CFDF F25E          	movff	indf2,??__doprnt
 23700  01053E  0E04               	movlw	4
 23701  010540  26DE               	addwf	postinc2,f,c
 23702  010542  CFDF F25F          	movff	indf2,??__doprnt+1
 23703  010546  0E00               	movlw	0
 23704  010548  22DD               	addwfc	postdec2,f,c
 23705  01054A  C25E  FFD9         	movff	??__doprnt,fsr2l
 23706  01054E  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 23707  010552  CFDE F281          	movff	postinc2,__doprnt@fval
 23708  010556  CFDE F282          	movff	postinc2,__doprnt@fval+1
 23709  01055A  CFDE F283          	movff	postinc2,__doprnt@fval+2
 23710  01055E  CFDE F284          	movff	postinc2,__doprnt@fval+3
 23711                           
 23712                           ; BSR set to: 2
 23713                           ;doprnt.c: 850: if(fval < 0.0) {
 23714  010562  AF84               	btfss	(__doprnt@fval+3)& (0+255),7,b
 23715  010564  D015               	goto	l18150
 23716                           
 23717                           ; BSR set to: 2
 23718                           ;doprnt.c: 851: fval = -fval;
 23719  010566  C281  F200         	movff	__doprnt@fval,___flneg@f1
 23720  01056A  C282  F201         	movff	__doprnt@fval+1,___flneg@f1+1
 23721  01056E  C283  F202         	movff	__doprnt@fval+2,___flneg@f1+2
 23722  010572  C284  F203         	movff	__doprnt@fval+3,___flneg@f1+3
 23723  010576  EC4F  F0E2         	call	___flneg
 23724  01057A  C200  F281         	movff	?___flneg,__doprnt@fval
 23725  01057E  C201  F282         	movff	?___flneg+1,__doprnt@fval+1
 23726  010582  C202  F283         	movff	?___flneg+2,__doprnt@fval+2
 23727  010586  C203  F284         	movff	?___flneg+3,__doprnt@fval+3
 23728                           
 23729                           ;doprnt.c: 852: flag |= 0x03;
 23730  01058A  0E03               	movlw	3
 23731  01058C  0102               	movlb	2	; () banked
 23732  01058E  138D               	iorwf	__doprnt@flag& (0+255),f,b
 23733  010590                     l18150:
 23734                           
 23735                           ; BSR set to: 2
 23736                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 23737  010590  0E00               	movlw	0
 23738  010592  6F7C               	movwf	(__doprnt@eexp+1)& (0+255),b
 23739  010594  0E00               	movlw	0
 23740  010596  6F7B               	movwf	__doprnt@eexp& (0+255),b
 23741                           
 23742                           ; BSR set to: 2
 23743                           ;doprnt.c: 855: if( fval!=0) {
 23744  010598  C281  F200         	movff	__doprnt@fval,___fleq@ff1
 23745  01059C  C282  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23746  0105A0  C283  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23747  0105A4  C284  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23748  0105A8  0E00               	movlw	0
 23749  0105AA  6F04               	movwf	___fleq@ff2& (0+255),b
 23750  0105AC  0E00               	movlw	0
 23751  0105AE  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23752  0105B0  0E00               	movlw	0
 23753  0105B2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23754  0105B4  0E00               	movlw	0
 23755  0105B6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23756  0105B8  EC1F  F0D9         	call	___fleq	;wreg free
 23757  0105BC  0102               	movlb	2	; () banked
 23758  0105BE  B0D8               	btfsc	status,0,c
 23759  0105C0  D084               	goto	l18178
 23760                           
 23761                           ; BSR set to: 2
 23762                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 23763  0105C2  3583               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 23764  0105C4  3584               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 23765  0105C6  0F82               	addlw	130
 23766  0105C8  6F7B               	movwf	__doprnt@eexp& (0+255),b
 23767  0105CA  6B7C               	clrf	(__doprnt@eexp+1)& (0+255),b
 23768  0105CC  0EFF               	movlw	255
 23769  0105CE  237C               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 23770                           
 23771                           ; BSR set to: 2
 23772                           ;doprnt.c: 857: eexp--;
 23773  0105D0  077B               	decf	__doprnt@eexp& (0+255),f,b
 23774  0105D2  A0D8               	btfss	status,0,c
 23775  0105D4  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23776                           
 23777                           ; BSR set to: 2
 23778                           ;doprnt.c: 858: eexp *= 3;
 23779  0105D6  C27B  F200         	movff	__doprnt@eexp,___wmul@multiplier
 23780  0105DA  C27C  F201         	movff	__doprnt@eexp+1,___wmul@multiplier+1
 23781  0105DE  0E00               	movlw	0
 23782  0105E0  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23783  0105E2  0E03               	movlw	3
 23784  0105E4  6F02               	movwf	___wmul@multiplicand& (0+255),b
 23785  0105E6  ECFD  F0E2         	call	___wmul	;wreg free
 23786  0105EA  C200  F27B         	movff	?___wmul,__doprnt@eexp
 23787  0105EE  C201  F27C         	movff	?___wmul+1,__doprnt@eexp+1
 23788                           
 23789                           ;doprnt.c: 859: eexp /= 10;
 23790  0105F2  C27B  F206         	movff	__doprnt@eexp,___awdiv@dividend
 23791  0105F6  C27C  F207         	movff	__doprnt@eexp+1,___awdiv@dividend+1
 23792  0105FA  0E00               	movlw	0
 23793  0105FC  0102               	movlb	2	; () banked
 23794  0105FE  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 23795  010600  0E0A               	movlw	10
 23796  010602  6F08               	movwf	___awdiv@divisor& (0+255),b
 23797  010604  ECAA  F0D9         	call	___awdiv	;wreg free
 23798  010608  C206  F27B         	movff	?___awdiv,__doprnt@eexp
 23799  01060C  C207  F27C         	movff	?___awdiv+1,__doprnt@eexp+1
 23800                           
 23801                           ;doprnt.c: 860: if(eexp < 0)
 23802  010610  0102               	movlb	2	; () banked
 23803  010612  AF7C               	btfss	(__doprnt@eexp+1)& (0+255),7,b
 23804  010614  D003               	goto	l18166
 23805                           
 23806                           ; BSR set to: 2
 23807                           ;doprnt.c: 861: eexp--;
 23808  010616  077B               	decf	__doprnt@eexp& (0+255),f,b
 23809  010618  A0D8               	btfss	status,0,c
 23810  01061A  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23811  01061C                     l18166:
 23812                           
 23813                           ; BSR set to: 2
 23814                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 23815  01061C  517B               	movf	__doprnt@eexp& (0+255),w,b
 23816  01061E  0800               	sublw	0
 23817  010620  EC94  F0AD         	call	_scale
 23818  010624  C227  F27D         	movff	?_scale,__doprnt@tmpval
 23819  010628  C228  F27E         	movff	?_scale+1,__doprnt@tmpval+1
 23820  01062C  C229  F27F         	movff	?_scale+2,__doprnt@tmpval+2
 23821  010630  C22A  F280         	movff	?_scale+3,__doprnt@tmpval+3
 23822                           
 23823                           ;doprnt.c: 866: tmpval.integ *= fval;
 23824  010634  C27D  F20E         	movff	__doprnt@tmpval,___flmul@b
 23825  010638  C27E  F20F         	movff	__doprnt@tmpval+1,___flmul@b+1
 23826  01063C  C27F  F210         	movff	__doprnt@tmpval+2,___flmul@b+2
 23827  010640  C280  F211         	movff	__doprnt@tmpval+3,___flmul@b+3
 23828  010644  C281  F212         	movff	__doprnt@fval,___flmul@a
 23829  010648  C282  F213         	movff	__doprnt@fval+1,___flmul@a+1
 23830  01064C  C283  F214         	movff	__doprnt@fval+2,___flmul@a+2
 23831  010650  C284  F215         	movff	__doprnt@fval+3,___flmul@a+3
 23832  010654  EC40  F0B5         	call	___flmul	;wreg free
 23833  010658  C20E  F27D         	movff	?___flmul,__doprnt@tmpval
 23834  01065C  C20F  F27E         	movff	?___flmul+1,__doprnt@tmpval+1
 23835  010660  C210  F27F         	movff	?___flmul+2,__doprnt@tmpval+2
 23836  010664  C211  F280         	movff	?___flmul+3,__doprnt@tmpval+3
 23837                           
 23838                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 23839  010668  C27D  F24C         	movff	__doprnt@tmpval,___flge@ff1
 23840  01066C  C27E  F24D         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23841  010670  C27F  F24E         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23842  010674  C280  F24F         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23843  010678  0E00               	movlw	0
 23844  01067A  0102               	movlb	2	; () banked
 23845  01067C  6F50               	movwf	___flge@ff2& (0+255),b
 23846  01067E  0E00               	movlw	0
 23847  010680  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 23848  010682  0E80               	movlw	128
 23849  010684  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 23850  010686  0E3F               	movlw	63
 23851  010688  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 23852  01068A  EC4D  F0D4         	call	___flge	;wreg free
 23853  01068E  0102               	movlb	2	; () banked
 23854  010690  B0D8               	btfsc	status,0,c
 23855  010692  D004               	goto	l18174
 23856                           
 23857                           ; BSR set to: 2
 23858                           ;doprnt.c: 868: eexp--;
 23859  010694  077B               	decf	__doprnt@eexp& (0+255),f,b
 23860  010696  A0D8               	btfss	status,0,c
 23861  010698  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 23862  01069A  D017               	goto	l18178
 23863  01069C                     l18174:
 23864                           
 23865                           ; BSR set to: 2
 23866                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 23867  01069C  C27D  F24C         	movff	__doprnt@tmpval,___flge@ff1
 23868  0106A0  C27E  F24D         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23869  0106A4  C27F  F24E         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23870  0106A8  C280  F24F         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23871  0106AC  0E00               	movlw	0
 23872  0106AE  6F50               	movwf	___flge@ff2& (0+255),b
 23873  0106B0  0E00               	movlw	0
 23874  0106B2  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 23875  0106B4  0E20               	movlw	32
 23876  0106B6  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 23877  0106B8  0E41               	movlw	65
 23878  0106BA  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 23879  0106BC  EC4D  F0D4         	call	___flge	;wreg free
 23880  0106C0  0102               	movlb	2	; () banked
 23881  0106C2  A0D8               	btfss	status,0,c
 23882  0106C4  D002               	goto	l18178
 23883                           
 23884                           ; BSR set to: 2
 23885                           ;doprnt.c: 870: eexp++;
 23886  0106C6  4B7B               	infsnz	__doprnt@eexp& (0+255),f,b
 23887  0106C8  2B7C               	incf	(__doprnt@eexp+1)& (0+255),f,b
 23888  0106CA                     l18178:
 23889                           
 23890                           ; BSR set to: 2
 23891                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 23892  0106CA  BF8C               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 23893  0106CC  D006               	goto	u22300
 23894  0106CE  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 23895  0106D0  E121               	bnz	l18182
 23896  0106D2  0E0D               	movlw	13
 23897  0106D4  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 23898  0106D6  B0D8               	btfsc	status,0,c
 23899  0106D8  D01D               	goto	l18182
 23900  0106DA                     u22300:
 23901                           
 23902                           ; BSR set to: 2
 23903                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 23904  0106DA  C281  F234         	movff	__doprnt@fval,___fladd@b
 23905  0106DE  C282  F235         	movff	__doprnt@fval+1,___fladd@b+1
 23906  0106E2  C283  F236         	movff	__doprnt@fval+2,___fladd@b+2
 23907  0106E6  C284  F237         	movff	__doprnt@fval+3,___fladd@b+3
 23908  0106EA  518B               	movf	__doprnt@prec& (0+255),w,b
 23909  0106EC  EC3C  F0C0         	call	_fround
 23910  0106F0  C227  F238         	movff	?_fround,___fladd@a
 23911  0106F4  C228  F239         	movff	?_fround+1,___fladd@a+1
 23912  0106F8  C229  F23A         	movff	?_fround+2,___fladd@a+2
 23913  0106FC  C22A  F23B         	movff	?_fround+3,___fladd@a+3
 23914  010700  EC3D  F0BA         	call	___fladd	;wreg free
 23915  010704  C234  F281         	movff	?___fladd,__doprnt@fval
 23916  010708  C235  F282         	movff	?___fladd+1,__doprnt@fval+1
 23917  01070C  C236  F283         	movff	?___fladd+2,__doprnt@fval+2
 23918  010710  C237  F284         	movff	?___fladd+3,__doprnt@fval+3
 23919  010714                     l18182:
 23920                           
 23921                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 23922  010714  0102               	movlb	2	; () banked
 23923  010716  BF7C               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23924  010718  D006               	goto	u22310
 23925  01071A  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23926  01071C  E131               	bnz	l18190
 23927  01071E  0E0A               	movlw	10
 23928  010720  5D7B               	subwf	__doprnt@eexp& (0+255),w,b
 23929  010722  B0D8               	btfsc	status,0,c
 23930  010724  D02D               	goto	u22340
 23931  010726                     u22310:
 23932                           
 23933                           ; BSR set to: 2
 23934  010726  C281  F200         	movff	__doprnt@fval,___fleq@ff1
 23935  01072A  C282  F201         	movff	__doprnt@fval+1,___fleq@ff1+1
 23936  01072E  C283  F202         	movff	__doprnt@fval+2,___fleq@ff1+2
 23937  010732  C284  F203         	movff	__doprnt@fval+3,___fleq@ff1+3
 23938  010736  0E00               	movlw	0
 23939  010738  6F04               	movwf	___fleq@ff2& (0+255),b
 23940  01073A  0E00               	movlw	0
 23941  01073C  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 23942  01073E  0E00               	movlw	0
 23943  010740  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 23944  010742  0E00               	movlw	0
 23945  010744  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 23946  010746  EC1F  F0D9         	call	___fleq	;wreg free
 23947  01074A  0102               	movlb	2	; () banked
 23948  01074C  B0D8               	btfsc	status,0,c
 23949  01074E  D062               	goto	l18204
 23950                           
 23951                           ; BSR set to: 2
 23952  010750  C281  F230         	movff	__doprnt@fval,___fltol@f1
 23953  010754  C282  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 23954  010758  C283  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 23955  01075C  C284  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 23956  010760  ECE5  F0D5         	call	___fltol	;wreg free
 23957  010764  0102               	movlb	2	; () banked
 23958  010766  5130               	movf	?___fltol& (0+255),w,b
 23959  010768  1131               	iorwf	(?___fltol+1)& (0+255),w,b
 23960  01076A  1132               	iorwf	(?___fltol+2)& (0+255),w,b
 23961  01076C  1133               	iorwf	(?___fltol+3)& (0+255),w,b
 23962  01076E  B4D8               	btfsc	status,2,c
 23963                           
 23964                           ; BSR set to: 2
 23965  010770  BF7C               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 23966  010772  D050               	goto	l18204
 23967  010774  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 23968  010776  E104               	bnz	u22340
 23969  010778  0E02               	movlw	2
 23970  01077A  5D7B               	subwf	__doprnt@eexp& (0+255),w,b
 23971  01077C  A0D8               	btfss	status,0,c
 23972  01077E  D04A               	goto	l18204
 23973  010780                     u22340:
 23974  010780                     l18190:
 23975                           
 23976                           ; BSR set to: 2
 23977                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 23978  010780  C27D  F24C         	movff	__doprnt@tmpval,___flge@ff1
 23979  010784  C27E  F24D         	movff	__doprnt@tmpval+1,___flge@ff1+1
 23980  010788  C27F  F24E         	movff	__doprnt@tmpval+2,___flge@ff1+2
 23981  01078C  C280  F24F         	movff	__doprnt@tmpval+3,___flge@ff1+3
 23982  010790  0E5F               	movlw	95
 23983  010792  6F50               	movwf	___flge@ff2& (0+255),b
 23984  010794  0E70               	movlw	112
 23985  010796  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 23986  010798  0E89               	movlw	137
 23987  01079A  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 23988  01079C  0E40               	movlw	64
 23989  01079E  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 23990  0107A0  EC4D  F0D4         	call	___flge	;wreg free
 23991  0107A4  0102               	movlb	2	; () banked
 23992  0107A6  B0D8               	btfsc	status,0,c
 23993  0107A8  D002               	goto	l18194
 23994                           
 23995                           ; BSR set to: 2
 23996                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 23997  0107AA  0EF7               	movlw	247
 23998  0107AC  D001               	goto	L8
 23999  0107AE                     l18194:
 24000                           
 24001                           ; BSR set to: 2
 24002                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24003  0107AE  0EF8               	movlw	248
 24004  0107B0                     L8:
 24005  0107B0  277B               	addwf	__doprnt@eexp& (0+255),f,b
 24006  0107B2  0EFF               	movlw	255
 24007  0107B4  237C               	addwfc	(__doprnt@eexp+1)& (0+255),f,b
 24008                           
 24009                           ; BSR set to: 2
 24010                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24011  0107B6  517B               	movf	__doprnt@eexp& (0+255),w,b
 24012  0107B8  EC94  F0AD         	call	_scale
 24013  0107BC  C227  F27D         	movff	?_scale,__doprnt@tmpval
 24014  0107C0  C228  F27E         	movff	?_scale+1,__doprnt@tmpval+1
 24015  0107C4  C229  F27F         	movff	?_scale+2,__doprnt@tmpval+2
 24016  0107C8  C22A  F280         	movff	?_scale+3,__doprnt@tmpval+3
 24017  0107CC  C281  F200         	movff	__doprnt@fval,__div_to_l_@f1
 24018  0107D0  C282  F201         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 24019  0107D4  C283  F202         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 24020  0107D8  C284  F203         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 24021  0107DC  C27D  F204         	movff	__doprnt@tmpval,__div_to_l_@f2
 24022  0107E0  C27E  F205         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 24023  0107E4  C27F  F206         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 24024  0107E8  C280  F207         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 24025  0107EC  ECF3  F0D1         	call	__div_to_l_	;wreg free
 24026  0107F0  C200  F285         	movff	?__div_to_l_,__doprnt@val
 24027  0107F4  C201  F286         	movff	?__div_to_l_+1,__doprnt@val+1
 24028  0107F8  C202  F287         	movff	?__div_to_l_+2,__doprnt@val+2
 24029  0107FC  C203  F288         	movff	?__div_to_l_+3,__doprnt@val+3
 24030                           
 24031                           ;doprnt.c: 1148: fval = 0.0;
 24032  010800  0E00               	movlw	0
 24033  010802  0102               	movlb	2	; () banked
 24034  010804  6F81               	movwf	__doprnt@fval& (0+255),b
 24035  010806  0E00               	movlw	0
 24036  010808  6F82               	movwf	(__doprnt@fval+1)& (0+255),b
 24037  01080A  0E00               	movlw	0
 24038  01080C  6F83               	movwf	(__doprnt@fval+2)& (0+255),b
 24039  01080E  0E00               	movlw	0
 24040  010810  6F84               	movwf	(__doprnt@fval+3)& (0+255),b
 24041                           
 24042                           ;doprnt.c: 1149: } else {
 24043  010812  D03C               	goto	l18208
 24044  010814                     l18204:
 24045                           
 24046                           ; BSR set to: 2
 24047                           ;doprnt.c: 1150: val = (unsigned long)fval;
 24048  010814  C281  F230         	movff	__doprnt@fval,___fltol@f1
 24049  010818  C282  F231         	movff	__doprnt@fval+1,___fltol@f1+1
 24050  01081C  C283  F232         	movff	__doprnt@fval+2,___fltol@f1+2
 24051  010820  C284  F233         	movff	__doprnt@fval+3,___fltol@f1+3
 24052  010824  ECE5  F0D5         	call	___fltol	;wreg free
 24053  010828  C230  F285         	movff	?___fltol,__doprnt@val
 24054  01082C  C231  F286         	movff	?___fltol+1,__doprnt@val+1
 24055  010830  C232  F287         	movff	?___fltol+2,__doprnt@val+2
 24056  010834  C233  F288         	movff	?___fltol+3,__doprnt@val+3
 24057                           
 24058                           ;doprnt.c: 1151: fval -= (double)val;
 24059  010838  C281  F24C         	movff	__doprnt@fval,___flsub@b
 24060  01083C  C282  F24D         	movff	__doprnt@fval+1,___flsub@b+1
 24061  010840  C283  F24E         	movff	__doprnt@fval+2,___flsub@b+2
 24062  010844  C284  F24F         	movff	__doprnt@fval+3,___flsub@b+3
 24063  010848  C285  F23E         	movff	__doprnt@val,___xxtofl@val
 24064  01084C  C286  F23F         	movff	__doprnt@val+1,___xxtofl@val+1
 24065  010850  C287  F240         	movff	__doprnt@val+2,___xxtofl@val+2
 24066  010854  C288  F241         	movff	__doprnt@val+3,___xxtofl@val+3
 24067  010858  0E00               	movlw	0
 24068  01085A  EC7F  F0CE         	call	___xxtofl
 24069  01085E  C23E  F250         	movff	?___xxtofl,___flsub@a
 24070  010862  C23F  F251         	movff	?___xxtofl+1,___flsub@a+1
 24071  010866  C240  F252         	movff	?___xxtofl+2,___flsub@a+2
 24072  01086A  C241  F253         	movff	?___xxtofl+3,___flsub@a+3
 24073  01086E  ECC3  F0DE         	call	___flsub	;wreg free
 24074  010872  C24C  F281         	movff	?___flsub,__doprnt@fval
 24075  010876  C24D  F282         	movff	?___flsub+1,__doprnt@fval+1
 24076  01087A  C24E  F283         	movff	?___flsub+2,__doprnt@fval+2
 24077  01087E  C24F  F284         	movff	?___flsub+3,__doprnt@fval+3
 24078                           
 24079                           ;doprnt.c: 1152: eexp = 0;
 24080  010882  0E00               	movlw	0
 24081  010884  0102               	movlb	2	; () banked
 24082  010886  6F7C               	movwf	(__doprnt@eexp+1)& (0+255),b
 24083  010888  0E00               	movlw	0
 24084  01088A  6F7B               	movwf	__doprnt@eexp& (0+255),b
 24085  01088C                     l18208:
 24086                           
 24087                           ; BSR set to: 2
 24088                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 24089  01088C  0E01               	movlw	1
 24090  01088E  6F8F               	movwf	__doprnt@c& (0+255),b
 24091  010890                     l18210:
 24092                           
 24093                           ; BSR set to: 2
 24094  010890  0E0A               	movlw	10
 24095  010892  198F               	xorwf	__doprnt@c& (0+255),w,b
 24096  010894  B4D8               	btfsc	status,2,c
 24097  010896  D01B               	goto	l18222
 24098                           
 24099                           ; BSR set to: 2
 24100                           ;doprnt.c: 1156: if(val < dpowers[c])
 24101  010898  518F               	movf	__doprnt@c& (0+255),w,b
 24102  01089A  0D04               	mullw	4
 24103  01089C  0E63               	movlw	low _dpowers
 24104  01089E  24F3               	addwf	prodl,w,c
 24105  0108A0  6EF6               	movwf	tblptrl,c
 24106  0108A2  0EE8               	movlw	high _dpowers
 24107  0108A4  20F4               	addwfc	prodh,w,c
 24108  0108A6  6EF7               	movwf	tblptrh,c
 24109  0108A8                     	if	1	;There are 3 active tblptr bytes
 24110  0108A8  6AF8               	clrf	tblptru,c
 24111  0108AA  0E00               	movlw	low (__mediumconst shr (0+16))
 24112  0108AC  22F8               	addwfc	tblptru,f,c
 24113  0108AE                     	endif
 24114  0108AE  0009               	tblrd		*+
 24115  0108B0  50F5               	movf	tablat,w,c
 24116  0108B2  5D85               	subwf	__doprnt@val& (0+255),w,b
 24117  0108B4  0009               	tblrd		*+
 24118  0108B6  50F5               	movf	tablat,w,c
 24119  0108B8  5986               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24120  0108BA  0009               	tblrd		*+
 24121  0108BC  50F5               	movf	tablat,w,c
 24122  0108BE  5987               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24123  0108C0  0009               	tblrd		*+
 24124  0108C2  50F5               	movf	tablat,w,c
 24125  0108C4  5988               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24126  0108C6  A0D8               	btfss	status,0,c
 24127  0108C8  D002               	goto	l18222
 24128                           
 24129                           ; BSR set to: 2
 24130  0108CA  2B8F               	incf	__doprnt@c& (0+255),f,b
 24131  0108CC  D7E1               	goto	l18210
 24132  0108CE                     l18222:
 24133                           
 24134                           ; BSR set to: 2
 24135                           ;doprnt.c: 1161: width -= prec + c + eexp;
 24136  0108CE  518F               	movf	__doprnt@c& (0+255),w,b
 24137  0108D0  258B               	addwf	__doprnt@prec& (0+255),w,b
 24138  0108D2  6F5E               	movwf	??__doprnt& (0+255),b
 24139  0108D4  0E00               	movlw	0
 24140  0108D6  218C               	addwfc	(__doprnt@prec+1)& (0+255),w,b
 24141  0108D8  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 24142  0108DA  517B               	movf	__doprnt@eexp& (0+255),w,b
 24143  0108DC  275E               	addwf	??__doprnt& (0+255),f,b
 24144  0108DE  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 24145  0108E0  235F               	addwfc	(??__doprnt+1)& (0+255),f,b
 24146  0108E2  515E               	movf	??__doprnt& (0+255),w,b
 24147  0108E4  5F89               	subwf	__doprnt@width& (0+255),f,b
 24148  0108E6  515F               	movf	(??__doprnt+1)& (0+255),w,b
 24149  0108E8  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 24150                           
 24151                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 24152  0108EA  518B               	movf	__doprnt@prec& (0+255),w,b
 24153  0108EC  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24154  0108EE  B4D8               	btfsc	status,2,c
 24155  0108F0  D003               	goto	l18226
 24156                           
 24157                           ; BSR set to: 2
 24158                           ;doprnt.c: 1167: width--;
 24159  0108F2  0789               	decf	__doprnt@width& (0+255),f,b
 24160  0108F4  A0D8               	btfss	status,0,c
 24161  0108F6  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 24162  0108F8                     l18226:
 24163                           
 24164                           ; BSR set to: 2
 24165                           ;doprnt.c: 1168: if(flag & 0x03)
 24166  0108F8  0E03               	movlw	3
 24167  0108FA  158D               	andwf	__doprnt@flag& (0+255),w,b
 24168  0108FC  6F5E               	movwf	??__doprnt& (0+255),b
 24169  0108FE  0E00               	movlw	0
 24170  010900  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24171  010902  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 24172  010904  515E               	movf	??__doprnt& (0+255),w,b
 24173  010906  115F               	iorwf	(??__doprnt+1)& (0+255),w,b
 24174  010908  B4D8               	btfsc	status,2,c
 24175  01090A  D003               	goto	l18230
 24176                           
 24177                           ; BSR set to: 2
 24178                           ;doprnt.c: 1169: width--;
 24179  01090C  0789               	decf	__doprnt@width& (0+255),f,b
 24180  01090E  A0D8               	btfss	status,0,c
 24181  010910  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 24182  010912                     l18230:
 24183                           
 24184                           ; BSR set to: 2
 24185                           ;doprnt.c: 1172: if(flag & 0x04) {
 24186  010912  A58D               	btfss	__doprnt@flag& (0+255),2,b
 24187  010914  D0F0               	goto	l18282
 24188                           
 24189                           ; BSR set to: 2
 24190                           ;doprnt.c: 1174: if(flag & 0x02)
 24191  010916  A38D               	btfss	__doprnt@flag& (0+255),1,b
 24192  010918  D041               	goto	l2501
 24193                           
 24194                           ; BSR set to: 2
 24195  01091A  EE20 F002          	lfsr	2,2
 24196  01091E  5158               	movf	__doprnt@pb& (0+255),w,b
 24197  010920  26D9               	addwf	fsr2l,f,c
 24198  010922  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24199  010924  22DA               	addwfc	fsr2h,f,c
 24200  010926  50DE               	movf	postinc2,w,c
 24201  010928  10DE               	iorwf	postinc2,w,c
 24202  01092A  10DE               	iorwf	postinc2,w,c
 24203  01092C  B4D8               	btfsc	status,2,c
 24204  01092E  D01D               	goto	l2503
 24205                           
 24206                           ; BSR set to: 2
 24207  010930  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 24208  010932  D004               	goto	l18240
 24209                           
 24210                           ; BSR set to: 2
 24211  010934  0E00               	movlw	0
 24212  010936  6F68               	movwf	(__doprnt$4989+1)& (0+255),b
 24213  010938  0E2B               	movlw	43
 24214  01093A  D003               	goto	L9
 24215  01093C                     l18240:
 24216                           
 24217                           ; BSR set to: 2
 24218  01093C  0E00               	movlw	0
 24219  01093E  6F68               	movwf	(__doprnt$4989+1)& (0+255),b
 24220  010940  0E2D               	movlw	45
 24221  010942                     L9:
 24222  010942  6F67               	movwf	__doprnt$4989& (0+255),b
 24223                           
 24224                           ; BSR set to: 2
 24225  010944  EE20 F002          	lfsr	2,2
 24226  010948  5158               	movf	__doprnt@pb& (0+255),w,b
 24227  01094A  26D9               	addwf	fsr2l,f,c
 24228  01094C  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24229  01094E  22DA               	addwfc	fsr2h,f,c
 24230  010950  D801               	call	u22448
 24231  010952  D091               	goto	l18270
 24232  010954                     u22448:
 24233  010954  0005               	push	
 24234  010956  6EFA               	movwf	pclath,c
 24235  010958  50DE               	movf	postinc2,w,c
 24236  01095A  6EFD               	movwf	tosl,c
 24237  01095C  50DE               	movf	postinc2,w,c
 24238  01095E  6EFE               	movwf	tosh,c
 24239  010960  50DE               	movf	postinc2,w,c
 24240  010962  6EFF               	movwf	tosu,c
 24241  010964  50FA               	movf	pclath,w,c
 24242  010966  5167               	movf	__doprnt$4989& (0+255),w,b
 24243  010968  0012               	return		;indir
 24244  01096A                     l2503:
 24245                           
 24246                           ; BSR set to: 2
 24247  01096A  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 24248  01096C  D004               	goto	l18246
 24249                           
 24250                           ; BSR set to: 2
 24251  01096E  0E00               	movlw	0
 24252  010970  6F6A               	movwf	(__doprnt$4990+1)& (0+255),b
 24253  010972  0E2B               	movlw	43
 24254  010974  D003               	goto	L10
 24255  010976                     l18246:
 24256                           
 24257                           ; BSR set to: 2
 24258  010976  0E00               	movlw	0
 24259  010978  6F6A               	movwf	(__doprnt$4990+1)& (0+255),b
 24260  01097A  0E2D               	movlw	45
 24261  01097C                     L10:
 24262  01097C  6F69               	movwf	__doprnt$4990& (0+255),b
 24263                           
 24264                           ; BSR set to: 2
 24265  01097E  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24266  010982  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24267  010986  CFDE F25E          	movff	postinc2,??__doprnt
 24268  01098A  CFDD F25F          	movff	postdec2,??__doprnt+1
 24269  01098E  C25E  FFD9         	movff	??__doprnt,fsr2l
 24270  010992  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24271  010996  C269  FFDF         	movff	__doprnt$4990,indf2
 24272  01099A  D02E               	goto	l18258
 24273  01099C                     l2501:
 24274                           
 24275                           ; BSR set to: 2
 24276                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 24277  01099C  A18D               	btfss	__doprnt@flag& (0+255),0,b
 24278  01099E  D06B               	goto	l18270
 24279                           
 24280                           ; BSR set to: 2
 24281  0109A0  EE20 F002          	lfsr	2,2
 24282  0109A4  5158               	movf	__doprnt@pb& (0+255),w,b
 24283  0109A6  26D9               	addwf	fsr2l,f,c
 24284  0109A8  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24285  0109AA  22DA               	addwfc	fsr2h,f,c
 24286  0109AC  50DE               	movf	postinc2,w,c
 24287  0109AE  10DE               	iorwf	postinc2,w,c
 24288  0109B0  10DE               	iorwf	postinc2,w,c
 24289  0109B2  B4D8               	btfsc	status,2,c
 24290  0109B4  D013               	goto	l18256
 24291                           
 24292                           ; BSR set to: 2
 24293  0109B6  EE20 F002          	lfsr	2,2
 24294  0109BA  5158               	movf	__doprnt@pb& (0+255),w,b
 24295  0109BC  26D9               	addwf	fsr2l,f,c
 24296  0109BE  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24297  0109C0  22DA               	addwfc	fsr2h,f,c
 24298  0109C2  D801               	call	u22488
 24299  0109C4  D058               	goto	l18270
 24300  0109C6                     u22488:
 24301  0109C6  0005               	push	
 24302  0109C8  6EFA               	movwf	pclath,c
 24303  0109CA  50DE               	movf	postinc2,w,c
 24304  0109CC  6EFD               	movwf	tosl,c
 24305  0109CE  50DE               	movf	postinc2,w,c
 24306  0109D0  6EFE               	movwf	tosh,c
 24307  0109D2  50DE               	movf	postinc2,w,c
 24308  0109D4  6EFF               	movwf	tosu,c
 24309  0109D6  50FA               	movf	pclath,w,c
 24310  0109D8  0E20               	movlw	32
 24311  0109DA  0012               	return		;indir
 24312  0109DC                     l18256:
 24313                           
 24314                           ; BSR set to: 2
 24315  0109DC  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24316  0109E0  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24317  0109E4  CFDE F25E          	movff	postinc2,??__doprnt
 24318  0109E8  CFDD F25F          	movff	postdec2,??__doprnt+1
 24319  0109EC  C25E  FFD9         	movff	??__doprnt,fsr2l
 24320  0109F0  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24321  0109F4  0E20               	movlw	32
 24322  0109F6  6EDF               	movwf	indf2,c
 24323  0109F8                     l18258:
 24324                           
 24325                           ; BSR set to: 2
 24326  0109F8  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24327  0109FC  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24328  010A00  2ADE               	incf	postinc2,f,c
 24329  010A02  0E00               	movlw	0
 24330  010A04  22DD               	addwfc	postdec2,f,c
 24331  010A06  D037               	goto	l18270
 24332  010A08                     l18260:
 24333                           
 24334                           ; BSR set to: 2
 24335  010A08  EE20 F002          	lfsr	2,2
 24336  010A0C  5158               	movf	__doprnt@pb& (0+255),w,b
 24337  010A0E  26D9               	addwf	fsr2l,f,c
 24338  010A10  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24339  010A12  22DA               	addwfc	fsr2h,f,c
 24340  010A14  50DE               	movf	postinc2,w,c
 24341  010A16  10DE               	iorwf	postinc2,w,c
 24342  010A18  10DE               	iorwf	postinc2,w,c
 24343  010A1A  B4D8               	btfsc	status,2,c
 24344  010A1C  D013               	goto	l18264
 24345                           
 24346                           ; BSR set to: 2
 24347  010A1E  EE20 F002          	lfsr	2,2
 24348  010A22  5158               	movf	__doprnt@pb& (0+255),w,b
 24349  010A24  26D9               	addwf	fsr2l,f,c
 24350  010A26  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24351  010A28  22DA               	addwfc	fsr2h,f,c
 24352  010A2A  D801               	call	u22508
 24353  010A2C  D020               	goto	l18268
 24354  010A2E                     u22508:
 24355  010A2E  0005               	push	
 24356  010A30  6EFA               	movwf	pclath,c
 24357  010A32  50DE               	movf	postinc2,w,c
 24358  010A34  6EFD               	movwf	tosl,c
 24359  010A36  50DE               	movf	postinc2,w,c
 24360  010A38  6EFE               	movwf	tosh,c
 24361  010A3A  50DE               	movf	postinc2,w,c
 24362  010A3C  6EFF               	movwf	tosu,c
 24363  010A3E  50FA               	movf	pclath,w,c
 24364  010A40  0E30               	movlw	48
 24365  010A42  0012               	return		;indir
 24366  010A44                     l18264:
 24367                           
 24368                           ; BSR set to: 2
 24369  010A44  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24370  010A48  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24371  010A4C  CFDE F25E          	movff	postinc2,??__doprnt
 24372  010A50  CFDD F25F          	movff	postdec2,??__doprnt+1
 24373  010A54  C25E  FFD9         	movff	??__doprnt,fsr2l
 24374  010A58  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24375  010A5C  0E30               	movlw	48
 24376  010A5E  6EDF               	movwf	indf2,c
 24377                           
 24378                           ; BSR set to: 2
 24379  010A60  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24380  010A64  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24381  010A68  2ADE               	incf	postinc2,f,c
 24382  010A6A  0E00               	movlw	0
 24383  010A6C  22DD               	addwfc	postdec2,f,c
 24384  010A6E                     l18268:
 24385                           
 24386                           ;doprnt.c: 1189: width--;
 24387  010A6E  0102               	movlb	2	; () banked
 24388  010A70  0789               	decf	__doprnt@width& (0+255),f,b
 24389  010A72  A0D8               	btfss	status,0,c
 24390  010A74  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 24391  010A76                     l18270:
 24392  010A76  0102               	movlb	2	; () banked
 24393  010A78  BF8A               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24394  010A7A  D12F               	goto	l18320
 24395  010A7C  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 24396  010A7E  E1C4               	bnz	l18260
 24397  010A80  0589               	decf	__doprnt@width& (0+255),w,b
 24398  010A82  A0D8               	btfss	status,0,c
 24399  010A84  D12A               	goto	l18320
 24400  010A86  D7C0               	goto	l18260
 24401  010A88                     l18272:
 24402                           
 24403                           ; BSR set to: 2
 24404  010A88  EE20 F002          	lfsr	2,2
 24405  010A8C  5158               	movf	__doprnt@pb& (0+255),w,b
 24406  010A8E  26D9               	addwf	fsr2l,f,c
 24407  010A90  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24408  010A92  22DA               	addwfc	fsr2h,f,c
 24409  010A94  50DE               	movf	postinc2,w,c
 24410  010A96  10DE               	iorwf	postinc2,w,c
 24411  010A98  10DE               	iorwf	postinc2,w,c
 24412  010A9A  B4D8               	btfsc	status,2,c
 24413  010A9C  D013               	goto	l18276
 24414                           
 24415                           ; BSR set to: 2
 24416  010A9E  EE20 F002          	lfsr	2,2
 24417  010AA2  5158               	movf	__doprnt@pb& (0+255),w,b
 24418  010AA4  26D9               	addwf	fsr2l,f,c
 24419  010AA6  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24420  010AA8  22DA               	addwfc	fsr2h,f,c
 24421  010AAA  D801               	call	u22538
 24422  010AAC  D020               	goto	l18280
 24423  010AAE                     u22538:
 24424  010AAE  0005               	push	
 24425  010AB0  6EFA               	movwf	pclath,c
 24426  010AB2  50DE               	movf	postinc2,w,c
 24427  010AB4  6EFD               	movwf	tosl,c
 24428  010AB6  50DE               	movf	postinc2,w,c
 24429  010AB8  6EFE               	movwf	tosh,c
 24430  010ABA  50DE               	movf	postinc2,w,c
 24431  010ABC  6EFF               	movwf	tosu,c
 24432  010ABE  50FA               	movf	pclath,w,c
 24433  010AC0  0E20               	movlw	32
 24434  010AC2  0012               	return		;indir
 24435  010AC4                     l18276:
 24436                           
 24437                           ; BSR set to: 2
 24438  010AC4  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24439  010AC8  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24440  010ACC  CFDE F25E          	movff	postinc2,??__doprnt
 24441  010AD0  CFDD F25F          	movff	postdec2,??__doprnt+1
 24442  010AD4  C25E  FFD9         	movff	??__doprnt,fsr2l
 24443  010AD8  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24444  010ADC  0E20               	movlw	32
 24445  010ADE  6EDF               	movwf	indf2,c
 24446                           
 24447                           ; BSR set to: 2
 24448  010AE0  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24449  010AE4  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24450  010AE8  2ADE               	incf	postinc2,f,c
 24451  010AEA  0E00               	movlw	0
 24452  010AEC  22DD               	addwfc	postdec2,f,c
 24453  010AEE                     l18280:
 24454                           
 24455                           ;doprnt.c: 1201: width--;
 24456  010AEE  0102               	movlb	2	; () banked
 24457  010AF0  0789               	decf	__doprnt@width& (0+255),f,b
 24458  010AF2  A0D8               	btfss	status,0,c
 24459  010AF4  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 24460  010AF6                     l18282:
 24461                           
 24462                           ; BSR set to: 2
 24463  010AF6  BF8A               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24464  010AF8  D005               	goto	u22540
 24465  010AFA  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 24466  010AFC  E1C5               	bnz	l18272
 24467  010AFE  0589               	decf	__doprnt@width& (0+255),w,b
 24468  010B00  B0D8               	btfsc	status,0,c
 24469  010B02  D7C2               	goto	l18272
 24470  010B04                     u22540:
 24471                           
 24472                           ; BSR set to: 2
 24473                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 24474  010B04  A38D               	btfss	__doprnt@flag& (0+255),1,b
 24475  010B06  D041               	goto	l2535
 24476                           
 24477                           ; BSR set to: 2
 24478  010B08  EE20 F002          	lfsr	2,2
 24479  010B0C  5158               	movf	__doprnt@pb& (0+255),w,b
 24480  010B0E  26D9               	addwf	fsr2l,f,c
 24481  010B10  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24482  010B12  22DA               	addwfc	fsr2h,f,c
 24483  010B14  50DE               	movf	postinc2,w,c
 24484  010B16  10DE               	iorwf	postinc2,w,c
 24485  010B18  10DE               	iorwf	postinc2,w,c
 24486  010B1A  B4D8               	btfsc	status,2,c
 24487  010B1C  D01D               	goto	l2537
 24488                           
 24489                           ; BSR set to: 2
 24490  010B1E  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 24491  010B20  D004               	goto	l18290
 24492                           
 24493                           ; BSR set to: 2
 24494  010B22  0E00               	movlw	0
 24495  010B24  6F6C               	movwf	(__doprnt$4991+1)& (0+255),b
 24496  010B26  0E2B               	movlw	43
 24497  010B28  D003               	goto	L11
 24498  010B2A                     l18290:
 24499                           
 24500                           ; BSR set to: 2
 24501  010B2A  0E00               	movlw	0
 24502  010B2C  6F6C               	movwf	(__doprnt$4991+1)& (0+255),b
 24503  010B2E  0E2D               	movlw	45
 24504  010B30                     L11:
 24505  010B30  6F6B               	movwf	__doprnt$4991& (0+255),b
 24506                           
 24507                           ; BSR set to: 2
 24508  010B32  EE20 F002          	lfsr	2,2
 24509  010B36  5158               	movf	__doprnt@pb& (0+255),w,b
 24510  010B38  26D9               	addwf	fsr2l,f,c
 24511  010B3A  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24512  010B3C  22DA               	addwfc	fsr2h,f,c
 24513  010B3E  D801               	call	u22588
 24514  010B40  D0CC               	goto	l18320
 24515  010B42                     u22588:
 24516  010B42  0005               	push	
 24517  010B44  6EFA               	movwf	pclath,c
 24518  010B46  50DE               	movf	postinc2,w,c
 24519  010B48  6EFD               	movwf	tosl,c
 24520  010B4A  50DE               	movf	postinc2,w,c
 24521  010B4C  6EFE               	movwf	tosh,c
 24522  010B4E  50DE               	movf	postinc2,w,c
 24523  010B50  6EFF               	movwf	tosu,c
 24524  010B52  50FA               	movf	pclath,w,c
 24525  010B54  516B               	movf	__doprnt$4991& (0+255),w,b
 24526  010B56  0012               	return		;indir
 24527  010B58                     l2537:
 24528                           
 24529                           ; BSR set to: 2
 24530  010B58  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 24531  010B5A  D004               	goto	l18296
 24532                           
 24533                           ; BSR set to: 2
 24534  010B5C  0E00               	movlw	0
 24535  010B5E  6F6E               	movwf	(__doprnt$4992+1)& (0+255),b
 24536  010B60  0E2B               	movlw	43
 24537  010B62  D003               	goto	L12
 24538  010B64                     l18296:
 24539                           
 24540                           ; BSR set to: 2
 24541  010B64  0E00               	movlw	0
 24542  010B66  6F6E               	movwf	(__doprnt$4992+1)& (0+255),b
 24543  010B68  0E2D               	movlw	45
 24544  010B6A                     L12:
 24545  010B6A  6F6D               	movwf	__doprnt$4992& (0+255),b
 24546                           
 24547                           ; BSR set to: 2
 24548  010B6C  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24549  010B70  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24550  010B74  CFDE F25E          	movff	postinc2,??__doprnt
 24551  010B78  CFDD F25F          	movff	postdec2,??__doprnt+1
 24552  010B7C  C25E  FFD9         	movff	??__doprnt,fsr2l
 24553  010B80  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24554  010B84  C26D  FFDF         	movff	__doprnt$4992,indf2
 24555  010B88  D0A1               	goto	L13
 24556  010B8A                     l2535:
 24557                           
 24558                           ; BSR set to: 2
 24559                           ;doprnt.c: 1211: else if(flag & 0x01)
 24560  010B8A  A18D               	btfss	__doprnt@flag& (0+255),0,b
 24561  010B8C  D0A6               	goto	l18320
 24562                           
 24563                           ; BSR set to: 2
 24564  010B8E  EE20 F002          	lfsr	2,2
 24565  010B92  5158               	movf	__doprnt@pb& (0+255),w,b
 24566  010B94  26D9               	addwf	fsr2l,f,c
 24567  010B96  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24568  010B98  22DA               	addwfc	fsr2h,f,c
 24569  010B9A  50DE               	movf	postinc2,w,c
 24570  010B9C  10DE               	iorwf	postinc2,w,c
 24571  010B9E  10DE               	iorwf	postinc2,w,c
 24572  010BA0  B4D8               	btfsc	status,2,c
 24573  010BA2  D013               	goto	l18306
 24574                           
 24575                           ; BSR set to: 2
 24576  010BA4  EE20 F002          	lfsr	2,2
 24577  010BA8  5158               	movf	__doprnt@pb& (0+255),w,b
 24578  010BAA  26D9               	addwf	fsr2l,f,c
 24579  010BAC  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24580  010BAE  22DA               	addwfc	fsr2h,f,c
 24581  010BB0  D801               	call	u22628
 24582  010BB2  D093               	goto	l18320
 24583  010BB4                     u22628:
 24584  010BB4  0005               	push	
 24585  010BB6  6EFA               	movwf	pclath,c
 24586  010BB8  50DE               	movf	postinc2,w,c
 24587  010BBA  6EFD               	movwf	tosl,c
 24588  010BBC  50DE               	movf	postinc2,w,c
 24589  010BBE  6EFE               	movwf	tosh,c
 24590  010BC0  50DE               	movf	postinc2,w,c
 24591  010BC2  6EFF               	movwf	tosu,c
 24592  010BC4  50FA               	movf	pclath,w,c
 24593  010BC6  0E20               	movlw	32
 24594  010BC8  0012               	return		;indir
 24595  010BCA                     l18306:
 24596                           
 24597                           ; BSR set to: 2
 24598  010BCA  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24599  010BCE  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24600  010BD2  CFDE F25E          	movff	postinc2,??__doprnt
 24601  010BD6  CFDD F25F          	movff	postdec2,??__doprnt+1
 24602  010BDA  C25E  FFD9         	movff	??__doprnt,fsr2l
 24603  010BDE  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24604  010BE2  0E20               	movlw	32
 24605  010BE4  D072               	goto	L59
 24606  010BE6                     l18310:
 24607                           
 24608                           ; BSR set to: 2
 24609                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 24610  010BE6  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 24611  010BEA  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24612  010BEE  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24613  010BF2  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24614  010BF6  518F               	movf	__doprnt@c& (0+255),w,b
 24615  010BF8  0D04               	mullw	4
 24616  010BFA  0E63               	movlw	low _dpowers
 24617  010BFC  24F3               	addwf	prodl,w,c
 24618  010BFE  6EF6               	movwf	tblptrl,c
 24619  010C00  0EE8               	movlw	high _dpowers
 24620  010C02  20F4               	addwfc	prodh,w,c
 24621  010C04  6EF7               	movwf	tblptrh,c
 24622  010C06                     	if	1	;There are 3 active tblptr bytes
 24623  010C06  6AF8               	clrf	tblptru,c
 24624  010C08  0E00               	movlw	low (__mediumconst shr (0+16))
 24625  010C0A  22F8               	addwfc	tblptru,f,c
 24626  010C0C                     	endif
 24627  010C0C  0009               	tblrd		*+
 24628  010C0E  CFF5 F204          	movff	tablat,___lldiv@divisor
 24629  010C12  0009               	tblrd		*+
 24630  010C14  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24631  010C18  0009               	tblrd		*+
 24632  010C1A  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24633  010C1E  000A               	tblrd		*-
 24634  010C20  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24635  010C24  ECED  F0D9         	call	___lldiv
 24636  010C28  C200  F27D         	movff	?___lldiv,__doprnt@tmpval
 24637  010C2C  C201  F27E         	movff	?___lldiv+1,__doprnt@tmpval+1
 24638  010C30  C202  F27F         	movff	?___lldiv+2,__doprnt@tmpval+2
 24639  010C34  C203  F280         	movff	?___lldiv+3,__doprnt@tmpval+3
 24640                           
 24641                           ;doprnt.c: 1221: tmpval.vd %= 10;
 24642  010C38  C27D  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24643  010C3C  C27E  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24644  010C40  C27F  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24645  010C44  C280  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24646  010C48  0E0A               	movlw	10
 24647  010C4A  0102               	movlb	2	; () banked
 24648  010C4C  6F11               	movwf	___llmod@divisor& (0+255),b
 24649  010C4E  0E00               	movlw	0
 24650  010C50  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24651  010C52  0E00               	movlw	0
 24652  010C54  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24653  010C56  0E00               	movlw	0
 24654  010C58  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24655  010C5A  EC23  F0DB         	call	___llmod	;wreg free
 24656  010C5E  C20D  F27D         	movff	?___llmod,__doprnt@tmpval
 24657  010C62  C20E  F27E         	movff	?___llmod+1,__doprnt@tmpval+1
 24658  010C66  C20F  F27F         	movff	?___llmod+2,__doprnt@tmpval+2
 24659  010C6A  C210  F280         	movff	?___llmod+3,__doprnt@tmpval+3
 24660  010C6E  0102               	movlb	2	; () banked
 24661  010C70  EE20 F002          	lfsr	2,2
 24662  010C74  5158               	movf	__doprnt@pb& (0+255),w,b
 24663  010C76  26D9               	addwf	fsr2l,f,c
 24664  010C78  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24665  010C7A  22DA               	addwfc	fsr2h,f,c
 24666  010C7C  50DE               	movf	postinc2,w,c
 24667  010C7E  10DE               	iorwf	postinc2,w,c
 24668  010C80  10DE               	iorwf	postinc2,w,c
 24669  010C82  B4D8               	btfsc	status,2,c
 24670  010C84  D014               	goto	l18318
 24671                           
 24672                           ; BSR set to: 2
 24673  010C86  EE20 F002          	lfsr	2,2
 24674  010C8A  5158               	movf	__doprnt@pb& (0+255),w,b
 24675  010C8C  26D9               	addwf	fsr2l,f,c
 24676  010C8E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24677  010C90  22DA               	addwfc	fsr2h,f,c
 24678  010C92  D801               	call	u22648
 24679  010C94  D022               	goto	l18320
 24680  010C96                     u22648:
 24681  010C96  0005               	push	
 24682  010C98  6EFA               	movwf	pclath,c
 24683  010C9A  50DE               	movf	postinc2,w,c
 24684  010C9C  6EFD               	movwf	tosl,c
 24685  010C9E  50DE               	movf	postinc2,w,c
 24686  010CA0  6EFE               	movwf	tosh,c
 24687  010CA2  50DE               	movf	postinc2,w,c
 24688  010CA4  6EFF               	movwf	tosu,c
 24689  010CA6  50FA               	movf	pclath,w,c
 24690  010CA8  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24691  010CAA  0F30               	addlw	48
 24692  010CAC  0012               	return		;indir
 24693  010CAE                     l18318:
 24694                           
 24695                           ; BSR set to: 2
 24696  010CAE  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24697  010CB0  0F30               	addlw	48
 24698  010CB2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24699  010CB6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24700  010CBA  CFDE F25E          	movff	postinc2,??__doprnt
 24701  010CBE  CFDD F25F          	movff	postdec2,??__doprnt+1
 24702  010CC2  C25E  FFD9         	movff	??__doprnt,fsr2l
 24703  010CC6  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24704  010CCA                     L59:
 24705  010CCA  6EDF               	movwf	indf2,c
 24706  010CCC                     L13:
 24707  010CCC  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24708  010CD0  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24709  010CD4  2ADE               	incf	postinc2,f,c
 24710  010CD6  0E00               	movlw	0
 24711  010CD8  22DD               	addwfc	postdec2,f,c
 24712  010CDA                     l18320:
 24713  010CDA  0102               	movlb	2	; () banked
 24714  010CDC  078F               	decf	__doprnt@c& (0+255),f,b
 24715  010CDE  298F               	incf	__doprnt@c& (0+255),w,b
 24716  010CE0  B4D8               	btfsc	status,2,c
 24717  010CE2  D038               	goto	l18332
 24718  010CE4  D780               	goto	l18310
 24719  010CE6                     l18322:
 24720                           
 24721                           ; BSR set to: 2
 24722  010CE6  EE20 F002          	lfsr	2,2
 24723  010CEA  5158               	movf	__doprnt@pb& (0+255),w,b
 24724  010CEC  26D9               	addwf	fsr2l,f,c
 24725  010CEE  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24726  010CF0  22DA               	addwfc	fsr2h,f,c
 24727  010CF2  50DE               	movf	postinc2,w,c
 24728  010CF4  10DE               	iorwf	postinc2,w,c
 24729  010CF6  10DE               	iorwf	postinc2,w,c
 24730  010CF8  B4D8               	btfsc	status,2,c
 24731  010CFA  D013               	goto	l18326
 24732                           
 24733                           ; BSR set to: 2
 24734  010CFC  EE20 F002          	lfsr	2,2
 24735  010D00  5158               	movf	__doprnt@pb& (0+255),w,b
 24736  010D02  26D9               	addwf	fsr2l,f,c
 24737  010D04  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24738  010D06  22DA               	addwfc	fsr2h,f,c
 24739  010D08  D801               	call	u22678
 24740  010D0A  D020               	goto	l18330
 24741  010D0C                     u22678:
 24742  010D0C  0005               	push	
 24743  010D0E  6EFA               	movwf	pclath,c
 24744  010D10  50DE               	movf	postinc2,w,c
 24745  010D12  6EFD               	movwf	tosl,c
 24746  010D14  50DE               	movf	postinc2,w,c
 24747  010D16  6EFE               	movwf	tosh,c
 24748  010D18  50DE               	movf	postinc2,w,c
 24749  010D1A  6EFF               	movwf	tosu,c
 24750  010D1C  50FA               	movf	pclath,w,c
 24751  010D1E  0E30               	movlw	48
 24752  010D20  0012               	return		;indir
 24753  010D22                     l18326:
 24754                           
 24755                           ; BSR set to: 2
 24756  010D22  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24757  010D26  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24758  010D2A  CFDE F25E          	movff	postinc2,??__doprnt
 24759  010D2E  CFDD F25F          	movff	postdec2,??__doprnt+1
 24760  010D32  C25E  FFD9         	movff	??__doprnt,fsr2l
 24761  010D36  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24762  010D3A  0E30               	movlw	48
 24763  010D3C  6EDF               	movwf	indf2,c
 24764                           
 24765                           ; BSR set to: 2
 24766  010D3E  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24767  010D42  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24768  010D46  2ADE               	incf	postinc2,f,c
 24769  010D48  0E00               	movlw	0
 24770  010D4A  22DD               	addwfc	postdec2,f,c
 24771  010D4C                     l18330:
 24772                           
 24773                           ;doprnt.c: 1228: eexp--;
 24774  010D4C  0102               	movlb	2	; () banked
 24775  010D4E  077B               	decf	__doprnt@eexp& (0+255),f,b
 24776  010D50  A0D8               	btfss	status,0,c
 24777  010D52  077C               	decf	(__doprnt@eexp+1)& (0+255),f,b
 24778  010D54                     l18332:
 24779                           
 24780                           ; BSR set to: 2
 24781  010D54  BF7C               	btfsc	(__doprnt@eexp+1)& (0+255),7,b
 24782  010D56  D005               	goto	u22680
 24783  010D58  517C               	movf	(__doprnt@eexp+1)& (0+255),w,b
 24784  010D5A  E1C5               	bnz	l18322
 24785  010D5C  057B               	decf	__doprnt@eexp& (0+255),w,b
 24786  010D5E  B0D8               	btfsc	status,0,c
 24787  010D60  D7C2               	goto	l18322
 24788  010D62                     u22680:
 24789                           
 24790                           ; BSR set to: 2
 24791                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 24792  010D62  BF8C               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24793  010D64  D009               	goto	l2568
 24794  010D66  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 24795  010D68  E104               	bnz	u22690
 24796  010D6A  0E09               	movlw	9
 24797  010D6C  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 24798  010D6E  A0D8               	btfss	status,0,c
 24799  010D70  D003               	goto	l2568
 24800  010D72                     u22690:
 24801                           
 24802                           ; BSR set to: 2
 24803                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24804  010D72  0E08               	movlw	8
 24805  010D74  6F8F               	movwf	__doprnt@c& (0+255),b
 24806  010D76  D002               	goto	l18338
 24807  010D78                     l2568:
 24808                           
 24809                           ; BSR set to: 2
 24810                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 24811  010D78  C28B  F28F         	movff	__doprnt@prec,__doprnt@c
 24812  010D7C                     l18338:
 24813                           
 24814                           ; BSR set to: 2
 24815                           ;doprnt.c: 1234: prec -= (int)c;
 24816  010D7C  518F               	movf	__doprnt@c& (0+255),w,b
 24817  010D7E  5F8B               	subwf	__doprnt@prec& (0+255),f,b
 24818  010D80  0E00               	movlw	0
 24819  010D82  5B8C               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 24820                           
 24821                           ; BSR set to: 2
 24822                           ;doprnt.c: 1238: if(c)
 24823  010D84  518F               	movf	__doprnt@c& (0+255),w,b
 24824  010D86  B4D8               	btfsc	status,2,c
 24825  010D88  D033               	goto	l18350
 24826                           
 24827                           ; BSR set to: 2
 24828  010D8A  EE20 F002          	lfsr	2,2
 24829  010D8E  5158               	movf	__doprnt@pb& (0+255),w,b
 24830  010D90  26D9               	addwf	fsr2l,f,c
 24831  010D92  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24832  010D94  22DA               	addwfc	fsr2h,f,c
 24833  010D96  50DE               	movf	postinc2,w,c
 24834  010D98  10DE               	iorwf	postinc2,w,c
 24835  010D9A  10DE               	iorwf	postinc2,w,c
 24836  010D9C  B4D8               	btfsc	status,2,c
 24837  010D9E  D013               	goto	l18346
 24838                           
 24839                           ; BSR set to: 2
 24840  010DA0  EE20 F002          	lfsr	2,2
 24841  010DA4  5158               	movf	__doprnt@pb& (0+255),w,b
 24842  010DA6  26D9               	addwf	fsr2l,f,c
 24843  010DA8  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24844  010DAA  22DA               	addwfc	fsr2h,f,c
 24845  010DAC  D801               	call	u22728
 24846  010DAE  D020               	goto	l18350
 24847  010DB0                     u22728:
 24848  010DB0  0005               	push	
 24849  010DB2  6EFA               	movwf	pclath,c
 24850  010DB4  50DE               	movf	postinc2,w,c
 24851  010DB6  6EFD               	movwf	tosl,c
 24852  010DB8  50DE               	movf	postinc2,w,c
 24853  010DBA  6EFE               	movwf	tosh,c
 24854  010DBC  50DE               	movf	postinc2,w,c
 24855  010DBE  6EFF               	movwf	tosu,c
 24856  010DC0  50FA               	movf	pclath,w,c
 24857  010DC2  0E2E               	movlw	46
 24858  010DC4  0012               	return		;indir
 24859  010DC6                     l18346:
 24860                           
 24861                           ; BSR set to: 2
 24862  010DC6  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24863  010DCA  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24864  010DCE  CFDE F25E          	movff	postinc2,??__doprnt
 24865  010DD2  CFDD F25F          	movff	postdec2,??__doprnt+1
 24866  010DD6  C25E  FFD9         	movff	??__doprnt,fsr2l
 24867  010DDA  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 24868  010DDE  0E2E               	movlw	46
 24869  010DE0  6EDF               	movwf	indf2,c
 24870                           
 24871                           ; BSR set to: 2
 24872  010DE2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 24873  010DE6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 24874  010DEA  2ADE               	incf	postinc2,f,c
 24875  010DEC  0E00               	movlw	0
 24876  010DEE  22DD               	addwfc	postdec2,f,c
 24877  010DF0                     l18350:
 24878                           
 24879                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24880  010DF0  0102               	movlb	2	; () banked
 24881  010DF2  518F               	movf	__doprnt@c& (0+255),w,b
 24882  010DF4  EC94  F0AD         	call	_scale
 24883  010DF8  C227  F262         	movff	?_scale,__doprnt$6048
 24884  010DFC  C228  F263         	movff	?_scale+1,__doprnt$6048+1
 24885  010E00  C229  F264         	movff	?_scale+2,__doprnt$6048+2
 24886  010E04  C22A  F265         	movff	?_scale+3,__doprnt$6048+3
 24887                           
 24888                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 24889  010E08  C281  F212         	movff	__doprnt@fval,___flmul@a
 24890  010E0C  C282  F213         	movff	__doprnt@fval+1,___flmul@a+1
 24891  010E10  C283  F214         	movff	__doprnt@fval+2,___flmul@a+2
 24892  010E14  C284  F215         	movff	__doprnt@fval+3,___flmul@a+3
 24893  010E18  C262  F20E         	movff	__doprnt$6048,___flmul@b
 24894  010E1C  C263  F20F         	movff	__doprnt$6048+1,___flmul@b+1
 24895  010E20  C264  F210         	movff	__doprnt$6048+2,___flmul@b+2
 24896  010E24  C265  F211         	movff	__doprnt$6048+3,___flmul@b+3
 24897  010E28  EC40  F0B5         	call	___flmul	;wreg free
 24898  010E2C  C20E  F230         	movff	?___flmul,___fltol@f1
 24899  010E30  C20F  F231         	movff	?___flmul+1,___fltol@f1+1
 24900  010E34  C210  F232         	movff	?___flmul+2,___fltol@f1+2
 24901  010E38  C211  F233         	movff	?___flmul+3,___fltol@f1+3
 24902  010E3C  ECE5  F0D5         	call	___fltol	;wreg free
 24903  010E40  C230  F285         	movff	?___fltol,__doprnt@val
 24904  010E44  C231  F286         	movff	?___fltol+1,__doprnt@val+1
 24905  010E48  C232  F287         	movff	?___fltol+2,__doprnt@val+2
 24906  010E4C  C233  F288         	movff	?___fltol+3,__doprnt@val+3
 24907                           
 24908                           ;doprnt.c: 1247: while(c--) {
 24909  010E50  D0A4               	goto	l18366
 24910  010E52                     l18354:
 24911                           
 24912                           ; BSR set to: 2
 24913                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 24914  010E52  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 24915  010E56  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 24916  010E5A  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 24917  010E5E  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 24918  010E62  518F               	movf	__doprnt@c& (0+255),w,b
 24919  010E64  0D04               	mullw	4
 24920  010E66  0E63               	movlw	low _dpowers
 24921  010E68  24F3               	addwf	prodl,w,c
 24922  010E6A  6EF6               	movwf	tblptrl,c
 24923  010E6C  0EE8               	movlw	high _dpowers
 24924  010E6E  20F4               	addwfc	prodh,w,c
 24925  010E70  6EF7               	movwf	tblptrh,c
 24926  010E72                     	if	1	;There are 3 active tblptr bytes
 24927  010E72  6AF8               	clrf	tblptru,c
 24928  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
 24929  010E76  22F8               	addwfc	tblptru,f,c
 24930  010E78                     	endif
 24931  010E78  0009               	tblrd		*+
 24932  010E7A  CFF5 F204          	movff	tablat,___lldiv@divisor
 24933  010E7E  0009               	tblrd		*+
 24934  010E80  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 24935  010E84  0009               	tblrd		*+
 24936  010E86  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 24937  010E8A  000A               	tblrd		*-
 24938  010E8C  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 24939  010E90  ECED  F0D9         	call	___lldiv	;wreg free
 24940  010E94  C200  F27D         	movff	?___lldiv,__doprnt@tmpval
 24941  010E98  C201  F27E         	movff	?___lldiv+1,__doprnt@tmpval+1
 24942  010E9C  C202  F27F         	movff	?___lldiv+2,__doprnt@tmpval+2
 24943  010EA0  C203  F280         	movff	?___lldiv+3,__doprnt@tmpval+3
 24944                           
 24945                           ;doprnt.c: 1249: tmpval.vd %= 10;
 24946  010EA4  C27D  F20D         	movff	__doprnt@tmpval,___llmod@dividend
 24947  010EA8  C27E  F20E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 24948  010EAC  C27F  F20F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 24949  010EB0  C280  F210         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 24950  010EB4  0E0A               	movlw	10
 24951  010EB6  0102               	movlb	2	; () banked
 24952  010EB8  6F11               	movwf	___llmod@divisor& (0+255),b
 24953  010EBA  0E00               	movlw	0
 24954  010EBC  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 24955  010EBE  0E00               	movlw	0
 24956  010EC0  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 24957  010EC2  0E00               	movlw	0
 24958  010EC4  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 24959  010EC6  EC23  F0DB         	call	___llmod	;wreg free
 24960  010ECA  C20D  F27D         	movff	?___llmod,__doprnt@tmpval
 24961  010ECE  C20E  F27E         	movff	?___llmod+1,__doprnt@tmpval+1
 24962  010ED2  C20F  F27F         	movff	?___llmod+2,__doprnt@tmpval+2
 24963  010ED6  C210  F280         	movff	?___llmod+3,__doprnt@tmpval+3
 24964  010EDA  0102               	movlb	2	; () banked
 24965  010EDC  EE20 F002          	lfsr	2,2
 24966  010EE0  5158               	movf	__doprnt@pb& (0+255),w,b
 24967  010EE2  26D9               	addwf	fsr2l,f,c
 24968  010EE4  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24969  010EE6  22DA               	addwfc	fsr2h,f,c
 24970  010EE8  50DE               	movf	postinc2,w,c
 24971  010EEA  10DE               	iorwf	postinc2,w,c
 24972  010EEC  10DE               	iorwf	postinc2,w,c
 24973  010EEE  B4D8               	btfsc	status,2,c
 24974  010EF0  D014               	goto	l18362
 24975                           
 24976                           ; BSR set to: 2
 24977  010EF2  EE20 F002          	lfsr	2,2
 24978  010EF6  5158               	movf	__doprnt@pb& (0+255),w,b
 24979  010EF8  26D9               	addwf	fsr2l,f,c
 24980  010EFA  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 24981  010EFC  22DA               	addwfc	fsr2h,f,c
 24982  010EFE  D801               	call	u22748
 24983  010F00  D022               	goto	l18364
 24984  010F02                     u22748:
 24985  010F02  0005               	push	
 24986  010F04  6EFA               	movwf	pclath,c
 24987  010F06  50DE               	movf	postinc2,w,c
 24988  010F08  6EFD               	movwf	tosl,c
 24989  010F0A  50DE               	movf	postinc2,w,c
 24990  010F0C  6EFE               	movwf	tosh,c
 24991  010F0E  50DE               	movf	postinc2,w,c
 24992  010F10  6EFF               	movwf	tosu,c
 24993  010F12  50FA               	movf	pclath,w,c
 24994  010F14  517D               	movf	__doprnt@tmpval& (0+255),w,b
 24995  010F16  0F30               	addlw	48
 24996  010F18  0012               	return		;indir
 24997  010F1A                     l18362:
 24998                           
 24999                           ; BSR set to: 2
 25000  010F1A  517D               	movf	__doprnt@tmpval& (0+255),w,b
 25001  010F1C  0F30               	addlw	48
 25002  010F1E  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25003  010F22  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25004  010F26  CFDE F25E          	movff	postinc2,??__doprnt
 25005  010F2A  CFDD F25F          	movff	postdec2,??__doprnt+1
 25006  010F2E  C25E  FFD9         	movff	??__doprnt,fsr2l
 25007  010F32  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25008  010F36  6EDF               	movwf	indf2,c
 25009  010F38  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25010  010F3C  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25011  010F40  2ADE               	incf	postinc2,f,c
 25012  010F42  0E00               	movlw	0
 25013  010F44  22DD               	addwfc	postdec2,f,c
 25014  010F46                     l18364:
 25015                           
 25016                           ;doprnt.c: 1251: val %= dpowers[c];
 25017  010F46  C285  F20D         	movff	__doprnt@val,___llmod@dividend
 25018  010F4A  C286  F20E         	movff	__doprnt@val+1,___llmod@dividend+1
 25019  010F4E  C287  F20F         	movff	__doprnt@val+2,___llmod@dividend+2
 25020  010F52  C288  F210         	movff	__doprnt@val+3,___llmod@dividend+3
 25021  010F56  0102               	movlb	2	; () banked
 25022  010F58  518F               	movf	__doprnt@c& (0+255),w,b
 25023  010F5A  0D04               	mullw	4
 25024  010F5C  0E63               	movlw	low _dpowers
 25025  010F5E  24F3               	addwf	prodl,w,c
 25026  010F60  6EF6               	movwf	tblptrl,c
 25027  010F62  0EE8               	movlw	high _dpowers
 25028  010F64  20F4               	addwfc	prodh,w,c
 25029  010F66  6EF7               	movwf	tblptrh,c
 25030  010F68                     	if	1	;There are 3 active tblptr bytes
 25031  010F68  6AF8               	clrf	tblptru,c
 25032  010F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 25033  010F6C  22F8               	addwfc	tblptru,f,c
 25034  010F6E                     	endif
 25035  010F6E  0009               	tblrd		*+
 25036  010F70  CFF5 F211          	movff	tablat,___llmod@divisor
 25037  010F74  0009               	tblrd		*+
 25038  010F76  CFF5 F212          	movff	tablat,___llmod@divisor+1
 25039  010F7A  0009               	tblrd		*+
 25040  010F7C  CFF5 F213          	movff	tablat,___llmod@divisor+2
 25041  010F80  000A               	tblrd		*-
 25042  010F82  CFF5 F214          	movff	tablat,___llmod@divisor+3
 25043  010F86  EC23  F0DB         	call	___llmod
 25044  010F8A  C20D  F285         	movff	?___llmod,__doprnt@val
 25045  010F8E  C20E  F286         	movff	?___llmod+1,__doprnt@val+1
 25046  010F92  C20F  F287         	movff	?___llmod+2,__doprnt@val+2
 25047  010F96  C210  F288         	movff	?___llmod+3,__doprnt@val+3
 25048  010F9A                     l18366:
 25049  010F9A  0102               	movlb	2	; () banked
 25050  010F9C  078F               	decf	__doprnt@c& (0+255),f,b
 25051  010F9E  298F               	incf	__doprnt@c& (0+255),w,b
 25052  010FA0  B4D8               	btfsc	status,2,c
 25053  010FA2  D038               	goto	l18378
 25054  010FA4  D756               	goto	l18354
 25055  010FA6                     l18368:
 25056                           
 25057                           ; BSR set to: 2
 25058  010FA6  EE20 F002          	lfsr	2,2
 25059  010FAA  5158               	movf	__doprnt@pb& (0+255),w,b
 25060  010FAC  26D9               	addwf	fsr2l,f,c
 25061  010FAE  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25062  010FB0  22DA               	addwfc	fsr2h,f,c
 25063  010FB2  50DE               	movf	postinc2,w,c
 25064  010FB4  10DE               	iorwf	postinc2,w,c
 25065  010FB6  10DE               	iorwf	postinc2,w,c
 25066  010FB8  B4D8               	btfsc	status,2,c
 25067  010FBA  D013               	goto	l18372
 25068                           
 25069                           ; BSR set to: 2
 25070  010FBC  EE20 F002          	lfsr	2,2
 25071  010FC0  5158               	movf	__doprnt@pb& (0+255),w,b
 25072  010FC2  26D9               	addwf	fsr2l,f,c
 25073  010FC4  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25074  010FC6  22DA               	addwfc	fsr2h,f,c
 25075  010FC8  D801               	call	u22778
 25076  010FCA  D020               	goto	l18376
 25077  010FCC                     u22778:
 25078  010FCC  0005               	push	
 25079  010FCE  6EFA               	movwf	pclath,c
 25080  010FD0  50DE               	movf	postinc2,w,c
 25081  010FD2  6EFD               	movwf	tosl,c
 25082  010FD4  50DE               	movf	postinc2,w,c
 25083  010FD6  6EFE               	movwf	tosh,c
 25084  010FD8  50DE               	movf	postinc2,w,c
 25085  010FDA  6EFF               	movwf	tosu,c
 25086  010FDC  50FA               	movf	pclath,w,c
 25087  010FDE  0E30               	movlw	48
 25088  010FE0  0012               	return		;indir
 25089  010FE2                     l18372:
 25090                           
 25091                           ; BSR set to: 2
 25092  010FE2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25093  010FE6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25094  010FEA  CFDE F25E          	movff	postinc2,??__doprnt
 25095  010FEE  CFDD F25F          	movff	postdec2,??__doprnt+1
 25096  010FF2  C25E  FFD9         	movff	??__doprnt,fsr2l
 25097  010FF6  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25098  010FFA  0E30               	movlw	48
 25099  010FFC  6EDF               	movwf	indf2,c
 25100                           
 25101                           ; BSR set to: 2
 25102  010FFE  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25103  011002  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25104  011006  2ADE               	incf	postinc2,f,c
 25105  011008  0E00               	movlw	0
 25106  01100A  22DD               	addwfc	postdec2,f,c
 25107  01100C                     l18376:
 25108                           
 25109                           ;doprnt.c: 1256: prec--;
 25110  01100C  0102               	movlb	2	; () banked
 25111  01100E  078B               	decf	__doprnt@prec& (0+255),f,b
 25112  011010  A0D8               	btfss	status,0,c
 25113  011012  078C               	decf	(__doprnt@prec+1)& (0+255),f,b
 25114  011014                     l18378:
 25115                           
 25116                           ; BSR set to: 2
 25117  011014  518B               	movf	__doprnt@prec& (0+255),w,b
 25118  011016  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25119  011018  B4D8               	btfsc	status,2,c
 25120  01101A  D361               	goto	u23230
 25121  01101C  D7C4               	goto	l18368
 25122  01101E                     l18380:
 25123                           
 25124                           ; BSR set to: 2
 25125                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 25126  01101E  0EC0               	movlw	192
 25127  011020  158D               	andwf	__doprnt@flag& (0+255),w,b
 25128  011022  6F5E               	movwf	??__doprnt& (0+255),b
 25129  011024  0E00               	movlw	0
 25130  011026  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25131  011028  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 25132  01102A  515E               	movf	??__doprnt& (0+255),w,b
 25133  01102C  115F               	iorwf	(??__doprnt+1)& (0+255),w,b
 25134  01102E  A4D8               	btfss	status,2,c
 25135  011030  D041               	goto	l2589
 25136                           
 25137                           ; BSR set to: 2
 25138                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 25139  011032  A98D               	btfss	__doprnt@flag& (0+255),4,b
 25140  011034  D019               	goto	l18386
 25141                           
 25142                           ; BSR set to: 2
 25143                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 25144  011036  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 25145  01103A  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 25146  01103E  CFDF F25E          	movff	indf2,??__doprnt
 25147  011042  0E04               	movlw	4
 25148  011044  26DE               	addwf	postinc2,f,c
 25149  011046  CFDF F25F          	movff	indf2,??__doprnt+1
 25150  01104A  0E00               	movlw	0
 25151  01104C  22DD               	addwfc	postdec2,f,c
 25152  01104E  C25E  FFD9         	movff	??__doprnt,fsr2l
 25153  011052  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25154  011056  CFDE F285          	movff	postinc2,__doprnt@val
 25155  01105A  CFDE F286          	movff	postinc2,__doprnt@val+1
 25156  01105E  CFDE F287          	movff	postinc2,__doprnt@val+2
 25157  011062  CFDE F288          	movff	postinc2,__doprnt@val+3
 25158  011066  D019               	goto	l18388
 25159  011068                     l18386:
 25160                           
 25161                           ; BSR set to: 2
 25162                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 25163  011068  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 25164  01106C  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 25165  011070  CFDF F25E          	movff	indf2,??__doprnt
 25166  011074  0E02               	movlw	2
 25167  011076  26DE               	addwf	postinc2,f,c
 25168  011078  CFDF F25F          	movff	indf2,??__doprnt+1
 25169  01107C  0E00               	movlw	0
 25170  01107E  22DD               	addwfc	postdec2,f,c
 25171  011080  C25E  FFD9         	movff	??__doprnt,fsr2l
 25172  011084  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25173  011088  CFDE F285          	movff	postinc2,__doprnt@val
 25174  01108C  CFDD F286          	movff	postdec2,__doprnt@val+1
 25175  011090  0E00               	movlw	0
 25176  011092  BF86               	btfsc	(__doprnt@val+1)& (0+255),7,b
 25177  011094  0EFF               	movlw	-1
 25178  011096  6F87               	movwf	(__doprnt@val+2)& (0+255),b
 25179  011098  6F88               	movwf	(__doprnt@val+3)& (0+255),b
 25180  01109A                     l18388:
 25181                           
 25182                           ; BSR set to: 2
 25183                           ;doprnt.c: 1280: if((long)val < 0) {
 25184  01109A  AF88               	btfss	(__doprnt@val+3)& (0+255),7,b
 25185  01109C  D040               	goto	l18398
 25186                           
 25187                           ; BSR set to: 2
 25188                           ;doprnt.c: 1281: flag |= 0x03;
 25189  01109E  0E03               	movlw	3
 25190  0110A0  138D               	iorwf	__doprnt@flag& (0+255),f,b
 25191                           
 25192                           ; BSR set to: 2
 25193                           ;doprnt.c: 1282: val = -val;
 25194  0110A2  1F88               	comf	(__doprnt@val+3)& (0+255),f,b
 25195  0110A4  1F87               	comf	(__doprnt@val+2)& (0+255),f,b
 25196  0110A6  1F86               	comf	(__doprnt@val+1)& (0+255),f,b
 25197  0110A8  6D85               	negf	__doprnt@val& (0+255),b
 25198  0110AA  0E00               	movlw	0
 25199  0110AC  2386               	addwfc	(__doprnt@val+1)& (0+255),f,b
 25200  0110AE  2387               	addwfc	(__doprnt@val+2)& (0+255),f,b
 25201  0110B0  2388               	addwfc	(__doprnt@val+3)& (0+255),f,b
 25202  0110B2  D035               	goto	l18398
 25203  0110B4                     l2589:
 25204                           
 25205                           ; BSR set to: 2
 25206                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 25207  0110B4  A98D               	btfss	__doprnt@flag& (0+255),4,b
 25208  0110B6  D019               	goto	l18396
 25209                           
 25210                           ; BSR set to: 2
 25211                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 25212  0110B8  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 25213  0110BC  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 25214  0110C0  CFDF F25E          	movff	indf2,??__doprnt
 25215  0110C4  0E04               	movlw	4
 25216  0110C6  26DE               	addwf	postinc2,f,c
 25217  0110C8  CFDF F25F          	movff	indf2,??__doprnt+1
 25218  0110CC  0E00               	movlw	0
 25219  0110CE  22DD               	addwfc	postdec2,f,c
 25220  0110D0  C25E  FFD9         	movff	??__doprnt,fsr2l
 25221  0110D4  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25222  0110D8  CFDE F285          	movff	postinc2,__doprnt@val
 25223  0110DC  CFDE F286          	movff	postinc2,__doprnt@val+1
 25224  0110E0  CFDE F287          	movff	postinc2,__doprnt@val+2
 25225  0110E4  CFDE F288          	movff	postinc2,__doprnt@val+3
 25226  0110E8  D01A               	goto	l18398
 25227  0110EA                     l18396:
 25228                           
 25229                           ; BSR set to: 2
 25230                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 25231  0110EA  C25C  FFD9         	movff	__doprnt@ap,fsr2l
 25232  0110EE  C25D  FFDA         	movff	__doprnt@ap+1,fsr2h
 25233  0110F2  CFDF F25E          	movff	indf2,??__doprnt
 25234  0110F6  0E02               	movlw	2
 25235  0110F8  26DE               	addwf	postinc2,f,c
 25236  0110FA  CFDF F25F          	movff	indf2,??__doprnt+1
 25237  0110FE  0E00               	movlw	0
 25238  011100  22DD               	addwfc	postdec2,f,c
 25239  011102  C25E  FFD9         	movff	??__doprnt,fsr2l
 25240  011106  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25241  01110A  CFDE F260          	movff	postinc2,??__doprnt+2
 25242  01110E  CFDD F261          	movff	postdec2,??__doprnt+3
 25243  011112  C260  F285         	movff	??__doprnt+2,__doprnt@val
 25244  011116  C261  F286         	movff	??__doprnt+3,__doprnt@val+1
 25245  01111A  6B87               	clrf	(__doprnt@val+2)& (0+255),b
 25246  01111C  6B88               	clrf	(__doprnt@val+3)& (0+255),b
 25247  01111E                     l18398:
 25248                           
 25249                           ; BSR set to: 2
 25250                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 25251  01111E  518B               	movf	__doprnt@prec& (0+255),w,b
 25252  011120  118C               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25253  011122  A4D8               	btfss	status,2,c
 25254  011124  D04B               	goto	l18434
 25255                           
 25256                           ; BSR set to: 2
 25257  011126  5185               	movf	__doprnt@val& (0+255),w,b
 25258  011128  1186               	iorwf	(__doprnt@val+1)& (0+255),w,b
 25259  01112A  1187               	iorwf	(__doprnt@val+2)& (0+255),w,b
 25260  01112C  1188               	iorwf	(__doprnt@val+3)& (0+255),w,b
 25261  01112E  A4D8               	btfss	status,2,c
 25262  011130  D045               	goto	l18434
 25263                           
 25264                           ; BSR set to: 2
 25265                           ;doprnt.c: 1310: prec++;
 25266  011132  4B8B               	infsnz	__doprnt@prec& (0+255),f,b
 25267  011134  2B8C               	incf	(__doprnt@prec+1)& (0+255),f,b
 25268  011136  D042               	goto	l18434
 25269  011138                     l18404:
 25270                           
 25271                           ; BSR set to: 2
 25272                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 25273  011138  0E01               	movlw	1
 25274  01113A  6F8F               	movwf	__doprnt@c& (0+255),b
 25275  01113C                     l18406:
 25276                           
 25277                           ; BSR set to: 2
 25278  01113C  0E0A               	movlw	10
 25279  01113E  198F               	xorwf	__doprnt@c& (0+255),w,b
 25280  011140  B4D8               	btfsc	status,2,c
 25281  011142  D047               	goto	l18436
 25282                           
 25283                           ; BSR set to: 2
 25284                           ;doprnt.c: 1325: if(val < dpowers[c])
 25285  011144  518F               	movf	__doprnt@c& (0+255),w,b
 25286  011146  0D04               	mullw	4
 25287  011148  0E63               	movlw	low _dpowers
 25288  01114A  24F3               	addwf	prodl,w,c
 25289  01114C  6EF6               	movwf	tblptrl,c
 25290  01114E  0EE8               	movlw	high _dpowers
 25291  011150  20F4               	addwfc	prodh,w,c
 25292  011152  6EF7               	movwf	tblptrh,c
 25293  011154                     	if	1	;There are 3 active tblptr bytes
 25294  011154  6AF8               	clrf	tblptru,c
 25295  011156  0E00               	movlw	low (__mediumconst shr (0+16))
 25296  011158  22F8               	addwfc	tblptru,f,c
 25297  01115A                     	endif
 25298  01115A  0009               	tblrd		*+
 25299  01115C  50F5               	movf	tablat,w,c
 25300  01115E  5D85               	subwf	__doprnt@val& (0+255),w,b
 25301  011160  0009               	tblrd		*+
 25302  011162  50F5               	movf	tablat,w,c
 25303  011164  5986               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25304  011166  0009               	tblrd		*+
 25305  011168  50F5               	movf	tablat,w,c
 25306  01116A  5987               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25307  01116C  0009               	tblrd		*+
 25308  01116E  50F5               	movf	tablat,w,c
 25309  011170  5988               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25310  011172  A0D8               	btfss	status,0,c
 25311  011174  D02E               	goto	l18436
 25312                           
 25313                           ; BSR set to: 2
 25314  011176  2B8F               	incf	__doprnt@c& (0+255),f,b
 25315  011178  D7E1               	goto	l18406
 25316  01117A                     l18418:
 25317                           
 25318                           ; BSR set to: 2
 25319                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25320  01117A  0E01               	movlw	1
 25321  01117C  6F8F               	movwf	__doprnt@c& (0+255),b
 25322  01117E                     l18420:
 25323                           
 25324                           ; BSR set to: 2
 25325  01117E  0E08               	movlw	8
 25326  011180  198F               	xorwf	__doprnt@c& (0+255),w,b
 25327  011182  B4D8               	btfsc	status,2,c
 25328  011184  D026               	goto	l18436
 25329                           
 25330                           ; BSR set to: 2
 25331                           ;doprnt.c: 1336: if(val < hexpowers[c])
 25332  011186  518F               	movf	__doprnt@c& (0+255),w,b
 25333  011188  0D04               	mullw	4
 25334  01118A  0E43               	movlw	low _hexpowers
 25335  01118C  24F3               	addwf	prodl,w,c
 25336  01118E  6EF6               	movwf	tblptrl,c
 25337  011190  0EE5               	movlw	high _hexpowers
 25338  011192  20F4               	addwfc	prodh,w,c
 25339  011194  6EF7               	movwf	tblptrh,c
 25340  011196                     	if	1	;There are 3 active tblptr bytes
 25341  011196  6AF8               	clrf	tblptru,c
 25342  011198  0E00               	movlw	low (__mediumconst shr (0+16))
 25343  01119A  22F8               	addwfc	tblptru,f,c
 25344  01119C                     	endif
 25345  01119C  0009               	tblrd		*+
 25346  01119E  50F5               	movf	tablat,w,c
 25347  0111A0  5D85               	subwf	__doprnt@val& (0+255),w,b
 25348  0111A2  0009               	tblrd		*+
 25349  0111A4  50F5               	movf	tablat,w,c
 25350  0111A6  5986               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25351  0111A8  0009               	tblrd		*+
 25352  0111AA  50F5               	movf	tablat,w,c
 25353  0111AC  5987               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25354  0111AE  0009               	tblrd		*+
 25355  0111B0  50F5               	movf	tablat,w,c
 25356  0111B2  5988               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25357  0111B4  A0D8               	btfss	status,0,c
 25358  0111B6  D00D               	goto	l18436
 25359                           
 25360                           ; BSR set to: 2
 25361  0111B8  2B8F               	incf	__doprnt@c& (0+255),f,b
 25362  0111BA  D7E1               	goto	l18420
 25363  0111BC                     l18434:
 25364                           
 25365                           ; BSR set to: 2
 25366  0111BC  518D               	movf	__doprnt@flag& (0+255),w,b
 25367  0111BE  0BC0               	andlw	192
 25368                           
 25369                           ; Switch size 1, requested type "simple"
 25370                           ; Number of cases is 3, Range of values is 0 to 192
 25371                           ; switch strategies available:
 25372                           ; Name         Instructions Cycles
 25373                           ; simple_byte           10     6 (average)
 25374                           ;	Chosen strategy is simple_byte
 25375  0111C0  0A00               	xorlw	0	; case 0
 25376  0111C2  B4D8               	btfsc	status,2,c
 25377  0111C4  D7B9               	goto	l18404
 25378  0111C6  0A80               	xorlw	128	; case 128
 25379  0111C8  B4D8               	btfsc	status,2,c
 25380  0111CA  D7D7               	goto	l18418
 25381  0111CC  0A40               	xorlw	64	; case 192
 25382  0111CE  B4D8               	btfsc	status,2,c
 25383  0111D0  D7B3               	goto	l18404
 25384  0111D2                     l18436:
 25385                           
 25386                           ; BSR set to: 2
 25387                           ;doprnt.c: 1358: if(c < prec)
 25388  0111D2  518F               	movf	__doprnt@c& (0+255),w,b
 25389  0111D4  6F5E               	movwf	??__doprnt& (0+255),b
 25390  0111D6  6B5F               	clrf	(??__doprnt+1)& (0+255),b
 25391  0111D8  518B               	movf	__doprnt@prec& (0+255),w,b
 25392  0111DA  5D5E               	subwf	??__doprnt& (0+255),w,b
 25393  0111DC  515F               	movf	(??__doprnt+1)& (0+255),w,b
 25394  0111DE  0A80               	xorlw	128
 25395  0111E0  6F60               	movwf	(??__doprnt+2)& (0+255),b
 25396  0111E2  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25397  0111E4  0A80               	xorlw	128
 25398  0111E6  5960               	subwfb	(??__doprnt+2)& (0+255),w,b
 25399  0111E8  B0D8               	btfsc	status,0,c
 25400  0111EA  D003               	goto	l18440
 25401                           
 25402                           ; BSR set to: 2
 25403                           ;doprnt.c: 1359: c = prec;
 25404  0111EC  C28B  F28F         	movff	__doprnt@prec,__doprnt@c
 25405  0111F0  D010               	goto	l18444
 25406  0111F2                     l18440:
 25407                           
 25408                           ; BSR set to: 2
 25409                           ;doprnt.c: 1360: else if(prec < c)
 25410  0111F2  518F               	movf	__doprnt@c& (0+255),w,b
 25411  0111F4  6F5E               	movwf	??__doprnt& (0+255),b
 25412  0111F6  6B5F               	clrf	(??__doprnt+1)& (0+255),b
 25413  0111F8  515E               	movf	??__doprnt& (0+255),w,b
 25414  0111FA  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 25415  0111FC  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25416  0111FE  0A80               	xorlw	128
 25417  011200  6F60               	movwf	(??__doprnt+2)& (0+255),b
 25418  011202  515F               	movf	(??__doprnt+1)& (0+255),w,b
 25419  011204  0A80               	xorlw	128
 25420  011206  5960               	subwfb	(??__doprnt+2)& (0+255),w,b
 25421  011208  B0D8               	btfsc	status,0,c
 25422  01120A  D003               	goto	l18444
 25423                           
 25424                           ; BSR set to: 2
 25425                           ;doprnt.c: 1361: prec = c;
 25426  01120C  C28F  F28B         	movff	__doprnt@c,__doprnt@prec
 25427  011210  6B8C               	clrf	(__doprnt@prec+1)& (0+255),b
 25428  011212                     l18444:
 25429                           
 25430                           ; BSR set to: 2
 25431                           ;doprnt.c: 1364: if(width && flag & 0x03)
 25432  011212  5189               	movf	__doprnt@width& (0+255),w,b
 25433  011214  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25434  011216  B4D8               	btfsc	status,2,c
 25435  011218  D00D               	goto	l18450
 25436                           
 25437                           ; BSR set to: 2
 25438  01121A  0E03               	movlw	3
 25439  01121C  158D               	andwf	__doprnt@flag& (0+255),w,b
 25440  01121E  6F5E               	movwf	??__doprnt& (0+255),b
 25441  011220  0E00               	movlw	0
 25442  011222  158E               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25443  011224  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 25444  011226  515E               	movf	??__doprnt& (0+255),w,b
 25445  011228  115F               	iorwf	(??__doprnt+1)& (0+255),w,b
 25446  01122A  B4D8               	btfsc	status,2,c
 25447  01122C  D003               	goto	l18450
 25448                           
 25449                           ; BSR set to: 2
 25450                           ;doprnt.c: 1365: width--;
 25451  01122E  0789               	decf	__doprnt@width& (0+255),f,b
 25452  011230  A0D8               	btfss	status,0,c
 25453  011232  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 25454  011234                     l18450:
 25455                           
 25456                           ; BSR set to: 2
 25457                           ;doprnt.c: 1367: if(flag & 0x4000) {
 25458  011234  AD8E               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25459  011236  D013               	goto	l18458
 25460                           
 25461                           ; BSR set to: 2
 25462                           ;doprnt.c: 1368: if(width > prec)
 25463  011238  5189               	movf	__doprnt@width& (0+255),w,b
 25464  01123A  5D8B               	subwf	__doprnt@prec& (0+255),w,b
 25465  01123C  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25466  01123E  0A80               	xorlw	128
 25467  011240  6F5E               	movwf	??__doprnt& (0+255),b
 25468  011242  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 25469  011244  0A80               	xorlw	128
 25470  011246  595E               	subwfb	??__doprnt& (0+255),w,b
 25471  011248  B0D8               	btfsc	status,0,c
 25472  01124A  D005               	goto	l18456
 25473                           
 25474                           ; BSR set to: 2
 25475                           ;doprnt.c: 1369: width -= prec;
 25476  01124C  518B               	movf	__doprnt@prec& (0+255),w,b
 25477  01124E  5F89               	subwf	__doprnt@width& (0+255),f,b
 25478  011250  518C               	movf	(__doprnt@prec+1)& (0+255),w,b
 25479  011252  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25480  011254  D004               	goto	l18458
 25481  011256                     l18456:
 25482                           
 25483                           ; BSR set to: 2
 25484                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 25485  011256  0E00               	movlw	0
 25486  011258  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 25487  01125A  0E00               	movlw	0
 25488  01125C  6F89               	movwf	__doprnt@width& (0+255),b
 25489  01125E                     l18458:
 25490                           
 25491                           ; BSR set to: 2
 25492                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 25493  01125E  518F               	movf	__doprnt@c& (0+255),w,b
 25494  011260  6F5E               	movwf	??__doprnt& (0+255),b
 25495  011262  6B5F               	clrf	(??__doprnt+1)& (0+255),b
 25496  011264  5189               	movf	__doprnt@width& (0+255),w,b
 25497  011266  5D5E               	subwf	??__doprnt& (0+255),w,b
 25498  011268  515F               	movf	(??__doprnt+1)& (0+255),w,b
 25499  01126A  0A80               	xorlw	128
 25500  01126C  6F60               	movwf	(??__doprnt+2)& (0+255),b
 25501  01126E  518A               	movf	(__doprnt@width+1)& (0+255),w,b
 25502  011270  0A80               	xorlw	128
 25503  011272  5960               	subwfb	(??__doprnt+2)& (0+255),w,b
 25504  011274  B0D8               	btfsc	status,0,c
 25505  011276  D005               	goto	l18462
 25506                           
 25507                           ; BSR set to: 2
 25508                           ;doprnt.c: 1401: width -= c;
 25509  011278  518F               	movf	__doprnt@c& (0+255),w,b
 25510  01127A  5F89               	subwf	__doprnt@width& (0+255),f,b
 25511  01127C  0E00               	movlw	0
 25512  01127E  5B8A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25513  011280  D004               	goto	l18464
 25514  011282                     l18462:
 25515                           
 25516                           ; BSR set to: 2
 25517                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 25518  011282  0E00               	movlw	0
 25519  011284  6F8A               	movwf	(__doprnt@width+1)& (0+255),b
 25520  011286  0E00               	movlw	0
 25521  011288  6F89               	movwf	__doprnt@width& (0+255),b
 25522  01128A                     l18464:
 25523                           
 25524                           ; BSR set to: 2
 25525                           ;doprnt.c: 1406: if(flag & 0x04) {
 25526  01128A  A58D               	btfss	__doprnt@flag& (0+255),2,b
 25527  01128C  D0B5               	goto	l18506
 25528                           
 25529                           ; BSR set to: 2
 25530                           ;doprnt.c: 1408: if(flag & 0x02)
 25531  01128E  A38D               	btfss	__doprnt@flag& (0+255),1,b
 25532  011290  D041               	goto	l2618
 25533                           
 25534                           ; BSR set to: 2
 25535  011292  EE20 F002          	lfsr	2,2
 25536  011296  5158               	movf	__doprnt@pb& (0+255),w,b
 25537  011298  26D9               	addwf	fsr2l,f,c
 25538  01129A  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25539  01129C  22DA               	addwfc	fsr2h,f,c
 25540  01129E  50DE               	movf	postinc2,w,c
 25541  0112A0  10DE               	iorwf	postinc2,w,c
 25542  0112A2  10DE               	iorwf	postinc2,w,c
 25543  0112A4  B4D8               	btfsc	status,2,c
 25544  0112A6  D01D               	goto	l2620
 25545                           
 25546                           ; BSR set to: 2
 25547  0112A8  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25548  0112AA  D004               	goto	l18474
 25549                           
 25550                           ; BSR set to: 2
 25551  0112AC  0E00               	movlw	0
 25552  0112AE  6F70               	movwf	(__doprnt$4993+1)& (0+255),b
 25553  0112B0  0E2B               	movlw	43
 25554  0112B2  D003               	goto	L14
 25555  0112B4                     l18474:
 25556                           
 25557                           ; BSR set to: 2
 25558  0112B4  0E00               	movlw	0
 25559  0112B6  6F70               	movwf	(__doprnt$4993+1)& (0+255),b
 25560  0112B8  0E2D               	movlw	45
 25561  0112BA                     L14:
 25562  0112BA  6F6F               	movwf	__doprnt$4993& (0+255),b
 25563                           
 25564                           ; BSR set to: 2
 25565  0112BC  EE20 F002          	lfsr	2,2
 25566  0112C0  5158               	movf	__doprnt@pb& (0+255),w,b
 25567  0112C2  26D9               	addwf	fsr2l,f,c
 25568  0112C4  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25569  0112C6  22DA               	addwfc	fsr2h,f,c
 25570  0112C8  D801               	call	u23008
 25571  0112CA  D059               	goto	l18494
 25572  0112CC                     u23008:
 25573  0112CC  0005               	push	
 25574  0112CE  6EFA               	movwf	pclath,c
 25575  0112D0  50DE               	movf	postinc2,w,c
 25576  0112D2  6EFD               	movwf	tosl,c
 25577  0112D4  50DE               	movf	postinc2,w,c
 25578  0112D6  6EFE               	movwf	tosh,c
 25579  0112D8  50DE               	movf	postinc2,w,c
 25580  0112DA  6EFF               	movwf	tosu,c
 25581  0112DC  50FA               	movf	pclath,w,c
 25582  0112DE  516F               	movf	__doprnt$4993& (0+255),w,b
 25583  0112E0  0012               	return		;indir
 25584  0112E2                     l2620:
 25585                           
 25586                           ; BSR set to: 2
 25587  0112E2  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25588  0112E4  D004               	goto	l18480
 25589                           
 25590                           ; BSR set to: 2
 25591  0112E6  0E00               	movlw	0
 25592  0112E8  6F72               	movwf	(__doprnt$4994+1)& (0+255),b
 25593  0112EA  0E2B               	movlw	43
 25594  0112EC  D003               	goto	L15
 25595  0112EE                     l18480:
 25596                           
 25597                           ; BSR set to: 2
 25598  0112EE  0E00               	movlw	0
 25599  0112F0  6F72               	movwf	(__doprnt$4994+1)& (0+255),b
 25600  0112F2  0E2D               	movlw	45
 25601  0112F4                     L15:
 25602  0112F4  6F71               	movwf	__doprnt$4994& (0+255),b
 25603                           
 25604                           ; BSR set to: 2
 25605  0112F6  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25606  0112FA  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25607  0112FE  CFDE F25E          	movff	postinc2,??__doprnt
 25608  011302  CFDD F25F          	movff	postdec2,??__doprnt+1
 25609  011306  C25E  FFD9         	movff	??__doprnt,fsr2l
 25610  01130A  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25611  01130E  C271  FFDF         	movff	__doprnt$4994,indf2
 25612  011312  D02E               	goto	l18492
 25613  011314                     l2618:
 25614                           
 25615                           ; BSR set to: 2
 25616                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 25617  011314  A18D               	btfss	__doprnt@flag& (0+255),0,b
 25618  011316  D033               	goto	l18494
 25619                           
 25620                           ; BSR set to: 2
 25621  011318  EE20 F002          	lfsr	2,2
 25622  01131C  5158               	movf	__doprnt@pb& (0+255),w,b
 25623  01131E  26D9               	addwf	fsr2l,f,c
 25624  011320  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25625  011322  22DA               	addwfc	fsr2h,f,c
 25626  011324  50DE               	movf	postinc2,w,c
 25627  011326  10DE               	iorwf	postinc2,w,c
 25628  011328  10DE               	iorwf	postinc2,w,c
 25629  01132A  B4D8               	btfsc	status,2,c
 25630  01132C  D013               	goto	l18490
 25631                           
 25632                           ; BSR set to: 2
 25633  01132E  EE20 F002          	lfsr	2,2
 25634  011332  5158               	movf	__doprnt@pb& (0+255),w,b
 25635  011334  26D9               	addwf	fsr2l,f,c
 25636  011336  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25637  011338  22DA               	addwfc	fsr2h,f,c
 25638  01133A  D801               	call	u23048
 25639  01133C  D020               	goto	l18494
 25640  01133E                     u23048:
 25641  01133E  0005               	push	
 25642  011340  6EFA               	movwf	pclath,c
 25643  011342  50DE               	movf	postinc2,w,c
 25644  011344  6EFD               	movwf	tosl,c
 25645  011346  50DE               	movf	postinc2,w,c
 25646  011348  6EFE               	movwf	tosh,c
 25647  01134A  50DE               	movf	postinc2,w,c
 25648  01134C  6EFF               	movwf	tosu,c
 25649  01134E  50FA               	movf	pclath,w,c
 25650  011350  0E20               	movlw	32
 25651  011352  0012               	return		;indir
 25652  011354                     l18490:
 25653                           
 25654                           ; BSR set to: 2
 25655  011354  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25656  011358  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25657  01135C  CFDE F25E          	movff	postinc2,??__doprnt
 25658  011360  CFDD F25F          	movff	postdec2,??__doprnt+1
 25659  011364  C25E  FFD9         	movff	??__doprnt,fsr2l
 25660  011368  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25661  01136C  0E20               	movlw	32
 25662  01136E  6EDF               	movwf	indf2,c
 25663  011370                     l18492:
 25664                           
 25665                           ; BSR set to: 2
 25666  011370  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25667  011374  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25668  011378  2ADE               	incf	postinc2,f,c
 25669  01137A  0E00               	movlw	0
 25670  01137C  22DD               	addwfc	postdec2,f,c
 25671  01137E                     l18494:
 25672                           
 25673                           ;doprnt.c: 1434: if(width)
 25674  01137E  0102               	movlb	2	; () banked
 25675  011380  5189               	movf	__doprnt@width& (0+255),w,b
 25676  011382  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25677  011384  B4D8               	btfsc	status,2,c
 25678  011386  D1A2               	goto	l18562
 25679                           
 25680                           ; BSR set to: 2
 25681  011388  EE20 F002          	lfsr	2,2
 25682  01138C  5158               	movf	__doprnt@pb& (0+255),w,b
 25683  01138E  26D9               	addwf	fsr2l,f,c
 25684  011390  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25685  011392  22DA               	addwfc	fsr2h,f,c
 25686  011394  50DE               	movf	postinc2,w,c
 25687  011396  10DE               	iorwf	postinc2,w,c
 25688  011398  10DE               	iorwf	postinc2,w,c
 25689  01139A  B4D8               	btfsc	status,2,c
 25690  01139C  D013               	goto	l18500
 25691                           
 25692                           ; BSR set to: 2
 25693  01139E  EE20 F002          	lfsr	2,2
 25694  0113A2  5158               	movf	__doprnt@pb& (0+255),w,b
 25695  0113A4  26D9               	addwf	fsr2l,f,c
 25696  0113A6  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25697  0113A8  22DA               	addwfc	fsr2h,f,c
 25698  0113AA  D801               	call	u23078
 25699  0113AC  D020               	goto	l18504
 25700  0113AE                     u23078:
 25701  0113AE  0005               	push	
 25702  0113B0  6EFA               	movwf	pclath,c
 25703  0113B2  50DE               	movf	postinc2,w,c
 25704  0113B4  6EFD               	movwf	tosl,c
 25705  0113B6  50DE               	movf	postinc2,w,c
 25706  0113B8  6EFE               	movwf	tosh,c
 25707  0113BA  50DE               	movf	postinc2,w,c
 25708  0113BC  6EFF               	movwf	tosu,c
 25709  0113BE  50FA               	movf	pclath,w,c
 25710  0113C0  0E30               	movlw	48
 25711  0113C2  0012               	return		;indir
 25712  0113C4                     l18500:
 25713                           
 25714                           ; BSR set to: 2
 25715  0113C4  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25716  0113C8  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25717  0113CC  CFDE F25E          	movff	postinc2,??__doprnt
 25718  0113D0  CFDD F25F          	movff	postdec2,??__doprnt+1
 25719  0113D4  C25E  FFD9         	movff	??__doprnt,fsr2l
 25720  0113D8  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25721  0113DC  0E30               	movlw	48
 25722  0113DE  6EDF               	movwf	indf2,c
 25723                           
 25724                           ; BSR set to: 2
 25725  0113E0  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25726  0113E4  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25727  0113E8  2ADE               	incf	postinc2,f,c
 25728  0113EA  0E00               	movlw	0
 25729  0113EC  22DD               	addwfc	postdec2,f,c
 25730  0113EE                     l18504:
 25731                           
 25732                           ;doprnt.c: 1437: while(--width);
 25733  0113EE  0102               	movlb	2	; () banked
 25734  0113F0  0789               	decf	__doprnt@width& (0+255),f,b
 25735  0113F2  A0D8               	btfss	status,0,c
 25736  0113F4  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 25737  0113F6  D7C4               	goto	L58
 25738  0113F8                     l18506:
 25739                           
 25740                           ; BSR set to: 2
 25741                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 25742  0113F8  5189               	movf	__doprnt@width& (0+255),w,b
 25743  0113FA  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25744  0113FC  B4D8               	btfsc	status,2,c
 25745  0113FE  D03B               	goto	u23120
 25746  011400                     u23090:
 25747                           
 25748                           ; BSR set to: 2
 25749  011400  EE20 F002          	lfsr	2,2
 25750  011404  5158               	movf	__doprnt@pb& (0+255),w,b
 25751  011406  26D9               	addwf	fsr2l,f,c
 25752  011408  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25753  01140A  22DA               	addwfc	fsr2h,f,c
 25754  01140C  50DE               	movf	postinc2,w,c
 25755  01140E  10DE               	iorwf	postinc2,w,c
 25756  011410  10DE               	iorwf	postinc2,w,c
 25757  011412  B4D8               	btfsc	status,2,c
 25758  011414  D013               	goto	l18512
 25759                           
 25760                           ; BSR set to: 2
 25761  011416  EE20 F002          	lfsr	2,2
 25762  01141A  5158               	movf	__doprnt@pb& (0+255),w,b
 25763  01141C  26D9               	addwf	fsr2l,f,c
 25764  01141E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25765  011420  22DA               	addwfc	fsr2h,f,c
 25766  011422  D801               	call	u23118
 25767  011424  D020               	goto	l18516
 25768  011426                     u23118:
 25769  011426  0005               	push	
 25770  011428  6EFA               	movwf	pclath,c
 25771  01142A  50DE               	movf	postinc2,w,c
 25772  01142C  6EFD               	movwf	tosl,c
 25773  01142E  50DE               	movf	postinc2,w,c
 25774  011430  6EFE               	movwf	tosh,c
 25775  011432  50DE               	movf	postinc2,w,c
 25776  011434  6EFF               	movwf	tosu,c
 25777  011436  50FA               	movf	pclath,w,c
 25778  011438  0E20               	movlw	32
 25779  01143A  0012               	return		;indir
 25780  01143C                     l18512:
 25781                           
 25782                           ; BSR set to: 2
 25783  01143C  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25784  011440  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25785  011444  CFDE F25E          	movff	postinc2,??__doprnt
 25786  011448  CFDD F25F          	movff	postdec2,??__doprnt+1
 25787  01144C  C25E  FFD9         	movff	??__doprnt,fsr2l
 25788  011450  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25789  011454  0E20               	movlw	32
 25790  011456  6EDF               	movwf	indf2,c
 25791                           
 25792                           ; BSR set to: 2
 25793  011458  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25794  01145C  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25795  011460  2ADE               	incf	postinc2,f,c
 25796  011462  0E00               	movlw	0
 25797  011464  22DD               	addwfc	postdec2,f,c
 25798  011466                     l18516:
 25799                           
 25800                           ;doprnt.c: 1450: while(--width);
 25801  011466  0102               	movlb	2	; () banked
 25802  011468  0789               	decf	__doprnt@width& (0+255),f,b
 25803  01146A  A0D8               	btfss	status,0,c
 25804  01146C  078A               	decf	(__doprnt@width+1)& (0+255),f,b
 25805  01146E  5189               	movf	__doprnt@width& (0+255),w,b
 25806  011470  118A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25807  011472  A4D8               	btfss	status,2,c
 25808  011474  D7C5               	goto	u23090
 25809  011476                     u23120:
 25810                           
 25811                           ; BSR set to: 2
 25812                           ;doprnt.c: 1453: if(flag & 0x02)
 25813  011476  A38D               	btfss	__doprnt@flag& (0+255),1,b
 25814  011478  D041               	goto	l2652
 25815                           
 25816                           ; BSR set to: 2
 25817  01147A  EE20 F002          	lfsr	2,2
 25818  01147E  5158               	movf	__doprnt@pb& (0+255),w,b
 25819  011480  26D9               	addwf	fsr2l,f,c
 25820  011482  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25821  011484  22DA               	addwfc	fsr2h,f,c
 25822  011486  50DE               	movf	postinc2,w,c
 25823  011488  10DE               	iorwf	postinc2,w,c
 25824  01148A  10DE               	iorwf	postinc2,w,c
 25825  01148C  B4D8               	btfsc	status,2,c
 25826  01148E  D01D               	goto	l2654
 25827                           
 25828                           ; BSR set to: 2
 25829  011490  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25830  011492  D004               	goto	l18524
 25831                           
 25832                           ; BSR set to: 2
 25833  011494  0E00               	movlw	0
 25834  011496  6F74               	movwf	(__doprnt$4995+1)& (0+255),b
 25835  011498  0E2B               	movlw	43
 25836  01149A  D003               	goto	L16
 25837  01149C                     l18524:
 25838                           
 25839                           ; BSR set to: 2
 25840  01149C  0E00               	movlw	0
 25841  01149E  6F74               	movwf	(__doprnt$4995+1)& (0+255),b
 25842  0114A0  0E2D               	movlw	45
 25843  0114A2                     L16:
 25844  0114A2  6F73               	movwf	__doprnt$4995& (0+255),b
 25845                           
 25846                           ; BSR set to: 2
 25847  0114A4  EE20 F002          	lfsr	2,2
 25848  0114A8  5158               	movf	__doprnt@pb& (0+255),w,b
 25849  0114AA  26D9               	addwf	fsr2l,f,c
 25850  0114AC  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25851  0114AE  22DA               	addwfc	fsr2h,f,c
 25852  0114B0  D801               	call	u23168
 25853  0114B2  D10C               	goto	l18562
 25854  0114B4                     u23168:
 25855  0114B4  0005               	push	
 25856  0114B6  6EFA               	movwf	pclath,c
 25857  0114B8  50DE               	movf	postinc2,w,c
 25858  0114BA  6EFD               	movwf	tosl,c
 25859  0114BC  50DE               	movf	postinc2,w,c
 25860  0114BE  6EFE               	movwf	tosh,c
 25861  0114C0  50DE               	movf	postinc2,w,c
 25862  0114C2  6EFF               	movwf	tosu,c
 25863  0114C4  50FA               	movf	pclath,w,c
 25864  0114C6  5173               	movf	__doprnt$4995& (0+255),w,b
 25865  0114C8  0012               	return		;indir
 25866  0114CA                     l2654:
 25867                           
 25868                           ; BSR set to: 2
 25869  0114CA  B18D               	btfsc	__doprnt@flag& (0+255),0,b
 25870  0114CC  D004               	goto	l18530
 25871                           
 25872                           ; BSR set to: 2
 25873  0114CE  0E00               	movlw	0
 25874  0114D0  6F76               	movwf	(__doprnt$4996+1)& (0+255),b
 25875  0114D2  0E2B               	movlw	43
 25876  0114D4  D003               	goto	L17
 25877  0114D6                     l18530:
 25878                           
 25879                           ; BSR set to: 2
 25880  0114D6  0E00               	movlw	0
 25881  0114D8  6F76               	movwf	(__doprnt$4996+1)& (0+255),b
 25882  0114DA  0E2D               	movlw	45
 25883  0114DC                     L17:
 25884  0114DC  6F75               	movwf	__doprnt$4996& (0+255),b
 25885                           
 25886                           ; BSR set to: 2
 25887  0114DE  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25888  0114E2  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25889  0114E6  CFDE F25E          	movff	postinc2,??__doprnt
 25890  0114EA  CFDD F25F          	movff	postdec2,??__doprnt+1
 25891  0114EE  C25E  FFD9         	movff	??__doprnt,fsr2l
 25892  0114F2  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25893  0114F6  C275  FFDF         	movff	__doprnt$4996,indf2
 25894  0114FA  D0E1               	goto	l18560
 25895  0114FC                     l2652:
 25896                           
 25897                           ; BSR set to: 2
 25898                           ;doprnt.c: 1462: else if(flag & 0x01)
 25899  0114FC  A18D               	btfss	__doprnt@flag& (0+255),0,b
 25900  0114FE  D0E6               	goto	l18562
 25901                           
 25902                           ; BSR set to: 2
 25903  011500  EE20 F002          	lfsr	2,2
 25904  011504  5158               	movf	__doprnt@pb& (0+255),w,b
 25905  011506  26D9               	addwf	fsr2l,f,c
 25906  011508  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25907  01150A  22DA               	addwfc	fsr2h,f,c
 25908  01150C  50DE               	movf	postinc2,w,c
 25909  01150E  10DE               	iorwf	postinc2,w,c
 25910  011510  10DE               	iorwf	postinc2,w,c
 25911  011512  B4D8               	btfsc	status,2,c
 25912  011514  D013               	goto	l18540
 25913                           
 25914                           ; BSR set to: 2
 25915  011516  EE20 F002          	lfsr	2,2
 25916  01151A  5158               	movf	__doprnt@pb& (0+255),w,b
 25917  01151C  26D9               	addwf	fsr2l,f,c
 25918  01151E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 25919  011520  22DA               	addwfc	fsr2h,f,c
 25920  011522  D801               	call	u23208
 25921  011524  D0D3               	goto	l18562
 25922  011526                     u23208:
 25923  011526  0005               	push	
 25924  011528  6EFA               	movwf	pclath,c
 25925  01152A  50DE               	movf	postinc2,w,c
 25926  01152C  6EFD               	movwf	tosl,c
 25927  01152E  50DE               	movf	postinc2,w,c
 25928  011530  6EFE               	movwf	tosh,c
 25929  011532  50DE               	movf	postinc2,w,c
 25930  011534  6EFF               	movwf	tosu,c
 25931  011536  50FA               	movf	pclath,w,c
 25932  011538  0E20               	movlw	32
 25933  01153A  0012               	return		;indir
 25934  01153C                     l18540:
 25935                           
 25936                           ; BSR set to: 2
 25937  01153C  C258  FFD9         	movff	__doprnt@pb,fsr2l
 25938  011540  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 25939  011544  CFDE F25E          	movff	postinc2,??__doprnt
 25940  011548  CFDD F25F          	movff	postdec2,??__doprnt+1
 25941  01154C  C25E  FFD9         	movff	??__doprnt,fsr2l
 25942  011550  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 25943  011554  0E20               	movlw	32
 25944  011556  6EDF               	movwf	indf2,c
 25945  011558  D0B2               	goto	l18560
 25946  01155A                     l18544:
 25947                           
 25948                           ; BSR set to: 2
 25949                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 25950  01155A  C28B  F25E         	movff	__doprnt@prec,??__doprnt
 25951  01155E  C28C  F25F         	movff	__doprnt@prec+1,??__doprnt+1
 25952  011562  90D8               	bcf	status,0,c
 25953  011564  375E               	rlcf	??__doprnt& (0+255),f,b
 25954  011566  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 25955  011568  90D8               	bcf	status,0,c
 25956  01156A  375E               	rlcf	??__doprnt& (0+255),f,b
 25957  01156C  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 25958  01156E  0E63               	movlw	low _dpowers
 25959  011570  255E               	addwf	??__doprnt& (0+255),w,b
 25960  011572  6EF6               	movwf	tblptrl,c
 25961  011574  0EE8               	movlw	high _dpowers
 25962  011576  215F               	addwfc	(??__doprnt+1)& (0+255),w,b
 25963  011578  6EF7               	movwf	tblptrh,c
 25964  01157A                     	if	1	;There are 3 active tblptr bytes
 25965  01157A  6AF8               	clrf	tblptru,c
 25966  01157C  0E00               	movlw	low (__mediumconst shr (0+16))
 25967  01157E  22F8               	addwfc	tblptru,f,c
 25968  011580                     	endif
 25969  011580  0009               	tblrd		*+
 25970  011582  CFF5 F204          	movff	tablat,___lldiv@divisor
 25971  011586  0009               	tblrd		*+
 25972  011588  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 25973  01158C  0009               	tblrd		*+
 25974  01158E  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 25975  011592  000A               	tblrd		*-
 25976  011594  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 25977  011598  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 25978  01159C  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 25979  0115A0  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 25980  0115A4  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 25981  0115A8  ECED  F0D9         	call	___lldiv
 25982  0115AC  C200  F20D         	movff	?___lldiv,___llmod@dividend
 25983  0115B0  C201  F20E         	movff	?___lldiv+1,___llmod@dividend+1
 25984  0115B4  C202  F20F         	movff	?___lldiv+2,___llmod@dividend+2
 25985  0115B8  C203  F210         	movff	?___lldiv+3,___llmod@dividend+3
 25986  0115BC  0E0A               	movlw	10
 25987  0115BE  0102               	movlb	2	; () banked
 25988  0115C0  6F11               	movwf	___llmod@divisor& (0+255),b
 25989  0115C2  0E00               	movlw	0
 25990  0115C4  6F12               	movwf	(___llmod@divisor+1)& (0+255),b
 25991  0115C6  0E00               	movlw	0
 25992  0115C8  6F13               	movwf	(___llmod@divisor+2)& (0+255),b
 25993  0115CA  0E00               	movlw	0
 25994  0115CC  6F14               	movwf	(___llmod@divisor+3)& (0+255),b
 25995  0115CE  EC23  F0DB         	call	___llmod	;wreg free
 25996  0115D2  0102               	movlb	2	; () banked
 25997  0115D4  510D               	movf	?___llmod& (0+255),w,b
 25998  0115D6  0F30               	addlw	48
 25999  0115D8  6F8F               	movwf	__doprnt@c& (0+255),b
 26000                           
 26001                           ;doprnt.c: 1510: break;
 26002  0115DA  D045               	goto	l18554
 26003  0115DC                     l18546:
 26004                           
 26005                           ; BSR set to: 2
 26006                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26007  0115DC  C285  F200         	movff	__doprnt@val,___lldiv@dividend
 26008  0115E0  C286  F201         	movff	__doprnt@val+1,___lldiv@dividend+1
 26009  0115E4  C287  F202         	movff	__doprnt@val+2,___lldiv@dividend+2
 26010  0115E8  C288  F203         	movff	__doprnt@val+3,___lldiv@dividend+3
 26011  0115EC  C28B  F25E         	movff	__doprnt@prec,??__doprnt
 26012  0115F0  C28C  F25F         	movff	__doprnt@prec+1,??__doprnt+1
 26013  0115F4  90D8               	bcf	status,0,c
 26014  0115F6  375E               	rlcf	??__doprnt& (0+255),f,b
 26015  0115F8  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 26016  0115FA  90D8               	bcf	status,0,c
 26017  0115FC  375E               	rlcf	??__doprnt& (0+255),f,b
 26018  0115FE  375F               	rlcf	(??__doprnt+1)& (0+255),f,b
 26019  011600  0E43               	movlw	low _hexpowers
 26020  011602  255E               	addwf	??__doprnt& (0+255),w,b
 26021  011604  6EF6               	movwf	tblptrl,c
 26022  011606  0EE5               	movlw	high _hexpowers
 26023  011608  215F               	addwfc	(??__doprnt+1)& (0+255),w,b
 26024  01160A  6EF7               	movwf	tblptrh,c
 26025  01160C                     	if	1	;There are 3 active tblptr bytes
 26026  01160C  6AF8               	clrf	tblptru,c
 26027  01160E  0E00               	movlw	low (__mediumconst shr (0+16))
 26028  011610  22F8               	addwfc	tblptru,f,c
 26029  011612                     	endif
 26030  011612  0009               	tblrd		*+
 26031  011614  CFF5 F204          	movff	tablat,___lldiv@divisor
 26032  011618  0009               	tblrd		*+
 26033  01161A  CFF5 F205          	movff	tablat,___lldiv@divisor+1
 26034  01161E  0009               	tblrd		*+
 26035  011620  CFF5 F206          	movff	tablat,___lldiv@divisor+2
 26036  011624  000A               	tblrd		*-
 26037  011626  CFF5 F207          	movff	tablat,___lldiv@divisor+3
 26038  01162A  ECED  F0D9         	call	___lldiv	;wreg free
 26039  01162E  0102               	movlb	2	; () banked
 26040  011630  5100               	movf	?___lldiv& (0+255),w,b
 26041  011632  0B0F               	andlw	15
 26042  011634  6F66               	movwf	__doprnt@idx& (0+255),b
 26043                           
 26044                           ; BSR set to: 2
 26045                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 26046  011636  0E1F               	movlw	low STR_364
 26047  011638  2566               	addwf	__doprnt@idx& (0+255),w,b
 26048  01163A  6EF6               	movwf	tblptrl,c
 26049  01163C  6AF7               	clrf	tblptrh,c
 26050  01163E  0EFB               	movlw	high STR_364
 26051  011640  22F7               	addwfc	tblptrh,f,c
 26052  011642                     	if	1	;There are 3 active tblptr bytes
 26053  011642  6AF8               	clrf	tblptru,c
 26054  011644  0E00               	movlw	low (__mediumconst shr (0+16))
 26055  011646  22F8               	addwfc	tblptru,f,c
 26056  011648                     	endif
 26057  011648  0008               	tblrd		*
 26058  01164A  CFF5 F28F          	movff	tablat,__doprnt@c
 26059                           
 26060                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 26061  01164E  D00B               	goto	l18554
 26062  011650                     l18552:
 26063                           
 26064                           ; BSR set to: 2
 26065  011650  518D               	movf	__doprnt@flag& (0+255),w,b
 26066  011652  0BC0               	andlw	192
 26067                           
 26068                           ; Switch size 1, requested type "simple"
 26069                           ; Number of cases is 3, Range of values is 0 to 192
 26070                           ; switch strategies available:
 26071                           ; Name         Instructions Cycles
 26072                           ; simple_byte           10     6 (average)
 26073                           ;	Chosen strategy is simple_byte
 26074  011654  0A00               	xorlw	0	; case 0
 26075  011656  B4D8               	btfsc	status,2,c
 26076  011658  D780               	goto	l18544
 26077  01165A  0A80               	xorlw	128	; case 128
 26078  01165C  B4D8               	btfsc	status,2,c
 26079  01165E  D7BE               	goto	l18546
 26080  011660  0A40               	xorlw	64	; case 192
 26081  011662  B4D8               	btfsc	status,2,c
 26082  011664  D77A               	goto	l18544
 26083  011666                     l18554:
 26084                           
 26085                           ; BSR set to: 2
 26086  011666  EE20 F002          	lfsr	2,2
 26087  01166A  5158               	movf	__doprnt@pb& (0+255),w,b
 26088  01166C  26D9               	addwf	fsr2l,f,c
 26089  01166E  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 26090  011670  22DA               	addwfc	fsr2h,f,c
 26091  011672  50DE               	movf	postinc2,w,c
 26092  011674  10DE               	iorwf	postinc2,w,c
 26093  011676  10DE               	iorwf	postinc2,w,c
 26094  011678  B4D8               	btfsc	status,2,c
 26095  01167A  D013               	goto	l18558
 26096                           
 26097                           ; BSR set to: 2
 26098  01167C  EE20 F002          	lfsr	2,2
 26099  011680  5158               	movf	__doprnt@pb& (0+255),w,b
 26100  011682  26D9               	addwf	fsr2l,f,c
 26101  011684  5159               	movf	(__doprnt@pb+1)& (0+255),w,b
 26102  011686  22DA               	addwfc	fsr2h,f,c
 26103  011688  D801               	call	u23228
 26104  01168A  D020               	goto	l18562
 26105  01168C                     u23228:
 26106  01168C  0005               	push	
 26107  01168E  6EFA               	movwf	pclath,c
 26108  011690  50DE               	movf	postinc2,w,c
 26109  011692  6EFD               	movwf	tosl,c
 26110  011694  50DE               	movf	postinc2,w,c
 26111  011696  6EFE               	movwf	tosh,c
 26112  011698  50DE               	movf	postinc2,w,c
 26113  01169A  6EFF               	movwf	tosu,c
 26114  01169C  50FA               	movf	pclath,w,c
 26115  01169E  518F               	movf	__doprnt@c& (0+255),w,b
 26116  0116A0  0012               	return		;indir
 26117  0116A2                     l18558:
 26118                           
 26119                           ; BSR set to: 2
 26120  0116A2  C258  FFD9         	movff	__doprnt@pb,fsr2l
 26121  0116A6  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 26122  0116AA  CFDE F25E          	movff	postinc2,??__doprnt
 26123  0116AE  CFDD F25F          	movff	postdec2,??__doprnt+1
 26124  0116B2  C25E  FFD9         	movff	??__doprnt,fsr2l
 26125  0116B6  C25F  FFDA         	movff	??__doprnt+1,fsr2h
 26126  0116BA  C28F  FFDF         	movff	__doprnt@c,indf2
 26127  0116BE                     l18560:
 26128                           
 26129                           ; BSR set to: 2
 26130  0116BE  C258  FFD9         	movff	__doprnt@pb,fsr2l
 26131  0116C2  C259  FFDA         	movff	__doprnt@pb+1,fsr2h
 26132  0116C6  2ADE               	incf	postinc2,f,c
 26133  0116C8  0E00               	movlw	0
 26134  0116CA  22DD               	addwfc	postdec2,f,c
 26135  0116CC                     l18562:
 26136  0116CC  0102               	movlb	2	; () banked
 26137  0116CE  078B               	decf	__doprnt@prec& (0+255),f,b
 26138  0116D0  A0D8               	btfss	status,0,c
 26139  0116D2  078C               	decf	(__doprnt@prec+1)& (0+255),f,b
 26140  0116D4  298B               	incf	__doprnt@prec& (0+255),w,b
 26141  0116D6  E1BC               	bnz	l18552
 26142  0116D8  298C               	incf	(__doprnt@prec+1)& (0+255),w,b
 26143  0116DA  A4D8               	btfss	status,2,c
 26144  0116DC  D7B9               	goto	l18552
 26145  0116DE                     u23230:
 26146  0116DE  0102               	movlb	2	; () banked
 26147  0116E0  515A               	movf	__doprnt@f& (0+255),w,b
 26148  0116E2  6F5E               	movwf	??__doprnt& (0+255),b
 26149  0116E4  515B               	movf	(__doprnt@f+1)& (0+255),w,b
 26150  0116E6  6F5F               	movwf	(??__doprnt+1)& (0+255),b
 26151  0116E8  4B5A               	infsnz	__doprnt@f& (0+255),f,b
 26152  0116EA  2B5B               	incf	(__doprnt@f+1)& (0+255),f,b
 26153  0116EC  C25E  FFF6         	movff	??__doprnt,tblptrl
 26154  0116F0  C25F  FFF7         	movff	??__doprnt+1,tblptrh
 26155  0116F4  0E00               	movlw	low (__mediumconst shr (0+16))
 26156  0116F6  6EF8               	movwf	tblptru,c
 26157  0116F8  0E0E               	movlw	(high __ramtop+-1)
 26158  0116FA  64F7               	cpfsgt	tblptrh,c
 26159  0116FC  D003               	bra	u23247
 26160  0116FE  0008               	tblrd		*
 26161  011700  50F5               	movf	tablat,w,c
 26162  011702  D005               	bra	u23240
 26163  011704                     u23247:
 26164  011704  CFF6 FFE9          	movff	tblptrl,fsr0l
 26165  011708  CFF7 FFEA          	movff	tblptrh,fsr0h
 26166  01170C  50EF               	movf	indf0,w,c
 26167  01170E                     u23240:
 26168  01170E  0102               	movlb	2	; () banked
 26169  011710  6F8F               	movwf	__doprnt@c& (0+255),b
 26170  011712  518F               	movf	__doprnt@c& (0+255),w,b
 26171  011714  A4D8               	btfss	status,2,c
 26172  011716  EF02  F080         	goto	l18018
 26173  01171A                     u23250:
 26174                           
 26175                           ; BSR set to: 2
 26176                           ;doprnt.c: 1559: return 0;
 26177  01171A  0E00               	movlw	0
 26178  01171C  6F59               	movwf	(?__doprnt+1)& (0+255),b
 26179  01171E  0E00               	movlw	0
 26180  011720  6F58               	movwf	?__doprnt& (0+255),b
 26181                           
 26182                           ; BSR set to: 2
 26183  011722  0012               	return		;funcret
 26184  011724                     __end_of__doprnt:
 26185                           	opt callstack 0
 26186                           
 26187 ;; *************** function _scale *****************
 26188 ;; Defined at:
 26189 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 26190 ;; Parameters:    Size  Location     Type
 26191 ;;  scl             1    wreg     char 
 26192 ;; Auto vars:     Size  Location     Type
 26193 ;;  scl             1   47[BANK2 ] char 
 26194 ;; Return value:  Size  Location     Type
 26195 ;;                  4   39[BANK2 ] char 
 26196 ;; Registers used:
 26197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26198 ;; Tracked objects:
 26199 ;;		On entry : 0/0
 26200 ;;		On exit  : 0/0
 26201 ;;		Unchanged: 0/0
 26202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26203 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26204 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26206 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26207 ;;Total ram usage:        9 bytes
 26208 ;; Hardware stack levels used:    1
 26209 ;; Hardware stack levels required when called:   12
 26210 ;; This function calls:
 26211 ;;		___awdiv
 26212 ;;		___awmod
 26213 ;;		___flmul
 26214 ;; This function is called by:
 26215 ;;		__doprnt
 26216 ;; This function uses a non-reentrant model
 26217 ;;
 26218                           
 26219                           	psect	text80
 26220  015B28                     __ptext80:
 26221                           	opt callstack 0
 26222  015B28                     _scale:
 26223                           	opt callstack 13
 26224                           
 26225                           ; BSR set to: 2
 26226                           ;incstack = 0
 26227                           ;scale@scl stored from wreg
 26228  015B28  0102               	movlb	2	; () banked
 26229  015B2A  6F2F               	movwf	scale@scl& (0+255),b
 26230                           
 26231                           ;doprnt.c: 436: if(scl < 0) {
 26232  015B2C  0102               	movlb	2	; () banked
 26233  015B2E  AF2F               	btfss	scale@scl& (0+255),7,b
 26234  015B30  D10B               	goto	l17650
 26235                           
 26236                           ; BSR set to: 2
 26237                           ;doprnt.c: 437: scl = -scl;
 26238  015B32  6D2F               	negf	scale@scl& (0+255),b
 26239                           
 26240                           ;doprnt.c: 438: if(scl>=110)
 26241  015B34  512F               	movf	scale@scl& (0+255),w,b
 26242  015B36  0A80               	xorlw	128
 26243  015B38  0F12               	addlw	-238
 26244  015B3A  A0D8               	btfss	status,0,c
 26245  015B3C  D095               	goto	l17640
 26246                           
 26247                           ; BSR set to: 2
 26248                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 26249  015B3E  0E00               	movlw	0
 26250  015B40  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26251  015B42  0E0A               	movlw	10
 26252  015B44  6F08               	movwf	___awdiv@divisor& (0+255),b
 26253  015B46  0E00               	movlw	0
 26254  015B48  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26255  015B4A  0E64               	movlw	100
 26256  015B4C  6F02               	movwf	___awmod@divisor& (0+255),b
 26257  015B4E  512F               	movf	scale@scl& (0+255),w,b
 26258  015B50  6F00               	movwf	___awmod@dividend& (0+255),b
 26259  015B52  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26260  015B54  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26261  015B56  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26262  015B58  ECB2  F0DA         	call	___awmod
 26263  015B5C  C200  F206         	movff	?___awmod,___awdiv@dividend
 26264  015B60  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 26265  015B64  ECAA  F0D9         	call	___awdiv	;wreg free
 26266  015B68  0E09               	movlw	9
 26267  015B6A  0102               	movlb	2	; () banked
 26268  015B6C  2706               	addwf	?___awdiv& (0+255),f,b
 26269  015B6E  5106               	movf	?___awdiv& (0+255),w,b
 26270  015B70  0D04               	mullw	4
 26271  015B72  0E0F               	movlw	low __npowers_
 26272  015B74  24F3               	addwf	prodl,w,c
 26273  015B76  6EF6               	movwf	tblptrl,c
 26274  015B78  0EE5               	movlw	high __npowers_
 26275  015B7A  20F4               	addwfc	prodh,w,c
 26276  015B7C  6EF7               	movwf	tblptrh,c
 26277  015B7E                     	if	1	;There are 3 active tblptr bytes
 26278  015B7E  6AF8               	clrf	tblptru,c
 26279  015B80  0E00               	movlw	low (__mediumconst shr (0+16))
 26280  015B82  22F8               	addwfc	tblptru,f,c
 26281  015B84                     	endif
 26282  015B84  0009               	tblrd		*+
 26283  015B86  CFF5 F212          	movff	tablat,___flmul@a
 26284  015B8A  0009               	tblrd		*+
 26285  015B8C  CFF5 F213          	movff	tablat,___flmul@a+1
 26286  015B90  0009               	tblrd		*+
 26287  015B92  CFF5 F214          	movff	tablat,___flmul@a+2
 26288  015B96  000A               	tblrd		*-
 26289  015B98  CFF5 F215          	movff	tablat,___flmul@a+3
 26290  015B9C  0E00               	movlw	0
 26291  015B9E  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26292  015BA0  0E64               	movlw	100
 26293  015BA2  6F08               	movwf	___awdiv@divisor& (0+255),b
 26294  015BA4  512F               	movf	scale@scl& (0+255),w,b
 26295  015BA6  6F06               	movwf	___awdiv@dividend& (0+255),b
 26296  015BA8  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26297  015BAA  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26298  015BAC  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26299  015BAE  ECAA  F0D9         	call	___awdiv	;wreg free
 26300  015BB2  0E12               	movlw	18
 26301  015BB4  0102               	movlb	2	; () banked
 26302  015BB6  2706               	addwf	?___awdiv& (0+255),f,b
 26303  015BB8  5106               	movf	?___awdiv& (0+255),w,b
 26304  015BBA  0D04               	mullw	4
 26305  015BBC  0E0F               	movlw	low __npowers_
 26306  015BBE  24F3               	addwf	prodl,w,c
 26307  015BC0  6EF6               	movwf	tblptrl,c
 26308  015BC2  0EE5               	movlw	high __npowers_
 26309  015BC4  20F4               	addwfc	prodh,w,c
 26310  015BC6  6EF7               	movwf	tblptrh,c
 26311  015BC8                     	if	1	;There are 3 active tblptr bytes
 26312  015BC8  6AF8               	clrf	tblptru,c
 26313  015BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 26314  015BCC  22F8               	addwfc	tblptru,f,c
 26315  015BCE                     	endif
 26316  015BCE  0009               	tblrd		*+
 26317  015BD0  CFF5 F20E          	movff	tablat,___flmul@b
 26318  015BD4  0009               	tblrd		*+
 26319  015BD6  CFF5 F20F          	movff	tablat,___flmul@b+1
 26320  015BDA  0009               	tblrd		*+
 26321  015BDC  CFF5 F210          	movff	tablat,___flmul@b+2
 26322  015BE0  000A               	tblrd		*-
 26323  015BE2  CFF5 F211          	movff	tablat,___flmul@b+3
 26324  015BE6  EC40  F0B5         	call	___flmul	;wreg free
 26325  015BEA  C20E  F22B         	movff	?___flmul,_scale$6047
 26326  015BEE  C20F  F22C         	movff	?___flmul+1,_scale$6047+1
 26327  015BF2  C210  F22D         	movff	?___flmul+2,_scale$6047+2
 26328  015BF6  C211  F22E         	movff	?___flmul+3,_scale$6047+3
 26329                           
 26330                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 26331  015BFA  C22B  F20E         	movff	_scale$6047,___flmul@b
 26332  015BFE  C22C  F20F         	movff	_scale$6047+1,___flmul@b+1
 26333  015C02  C22D  F210         	movff	_scale$6047+2,___flmul@b+2
 26334  015C06  C22E  F211         	movff	_scale$6047+3,___flmul@b+3
 26335  015C0A  0E00               	movlw	0
 26336  015C0C  0102               	movlb	2	; () banked
 26337  015C0E  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26338  015C10  0E0A               	movlw	10
 26339  015C12  6F02               	movwf	___awmod@divisor& (0+255),b
 26340  015C14  512F               	movf	scale@scl& (0+255),w,b
 26341  015C16  6F00               	movwf	___awmod@dividend& (0+255),b
 26342  015C18  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26343  015C1A  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26344  015C1C  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26345  015C1E  ECB2  F0DA         	call	___awmod	;wreg free
 26346  015C22  0102               	movlb	2	; () banked
 26347  015C24  5100               	movf	?___awmod& (0+255),w,b
 26348  015C26  0D04               	mullw	4
 26349  015C28  0E0F               	movlw	low __npowers_
 26350  015C2A  24F3               	addwf	prodl,w,c
 26351  015C2C  6EF6               	movwf	tblptrl,c
 26352  015C2E  0EE5               	movlw	high __npowers_
 26353  015C30  20F4               	addwfc	prodh,w,c
 26354  015C32  6EF7               	movwf	tblptrh,c
 26355  015C34                     	if	1	;There are 3 active tblptr bytes
 26356  015C34  6AF8               	clrf	tblptru,c
 26357  015C36  0E00               	movlw	low (__mediumconst shr (0+16))
 26358  015C38  22F8               	addwfc	tblptru,f,c
 26359  015C3A                     	endif
 26360  015C3A  0009               	tblrd		*+
 26361  015C3C  CFF5 F212          	movff	tablat,___flmul@a
 26362  015C40  0009               	tblrd		*+
 26363  015C42  CFF5 F213          	movff	tablat,___flmul@a+1
 26364  015C46  0009               	tblrd		*+
 26365  015C48  CFF5 F214          	movff	tablat,___flmul@a+2
 26366  015C4C  000A               	tblrd		*-
 26367  015C4E  CFF5 F215          	movff	tablat,___flmul@a+3
 26368  015C52  EC40  F0B5         	call	___flmul	;wreg free
 26369  015C56  C20E  F227         	movff	?___flmul,?_scale
 26370  015C5A  C20F  F228         	movff	?___flmul+1,?_scale+1
 26371  015C5E  C210  F229         	movff	?___flmul+2,?_scale+2
 26372  015C62  C211  F22A         	movff	?___flmul+3,?_scale+3
 26373  015C66  0012               	return	
 26374  015C68                     l17640:
 26375                           
 26376                           ; BSR set to: 2
 26377                           ;doprnt.c: 440: else if(scl > 10)
 26378  015C68  512F               	movf	scale@scl& (0+255),w,b
 26379  015C6A  0A80               	xorlw	128
 26380  015C6C  0F75               	addlw	-139
 26381  015C6E  A0D8               	btfss	status,0,c
 26382  015C70  D053               	goto	l17646
 26383                           
 26384                           ; BSR set to: 2
 26385                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 26386  015C72  0E00               	movlw	0
 26387  015C74  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26388  015C76  0E0A               	movlw	10
 26389  015C78  6F08               	movwf	___awdiv@divisor& (0+255),b
 26390  015C7A  512F               	movf	scale@scl& (0+255),w,b
 26391  015C7C  6F06               	movwf	___awdiv@dividend& (0+255),b
 26392  015C7E  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26393  015C80  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26394  015C82  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26395  015C84  ECAA  F0D9         	call	___awdiv	;wreg free
 26396  015C88  0E09               	movlw	9
 26397  015C8A  0102               	movlb	2	; () banked
 26398  015C8C  2706               	addwf	?___awdiv& (0+255),f,b
 26399  015C8E  5106               	movf	?___awdiv& (0+255),w,b
 26400  015C90  0D04               	mullw	4
 26401  015C92  0E0F               	movlw	low __npowers_
 26402  015C94  24F3               	addwf	prodl,w,c
 26403  015C96  6EF6               	movwf	tblptrl,c
 26404  015C98  0EE5               	movlw	high __npowers_
 26405  015C9A  20F4               	addwfc	prodh,w,c
 26406  015C9C  6EF7               	movwf	tblptrh,c
 26407  015C9E                     	if	1	;There are 3 active tblptr bytes
 26408  015C9E  6AF8               	clrf	tblptru,c
 26409  015CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 26410  015CA2  22F8               	addwfc	tblptru,f,c
 26411  015CA4                     	endif
 26412  015CA4  0009               	tblrd		*+
 26413  015CA6  CFF5 F20E          	movff	tablat,___flmul@b
 26414  015CAA  0009               	tblrd		*+
 26415  015CAC  CFF5 F20F          	movff	tablat,___flmul@b+1
 26416  015CB0  0009               	tblrd		*+
 26417  015CB2  CFF5 F210          	movff	tablat,___flmul@b+2
 26418  015CB6  000A               	tblrd		*-
 26419  015CB8  CFF5 F211          	movff	tablat,___flmul@b+3
 26420  015CBC  0E00               	movlw	0
 26421  015CBE  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26422  015CC0  0E0A               	movlw	10
 26423  015CC2  6F02               	movwf	___awmod@divisor& (0+255),b
 26424  015CC4  512F               	movf	scale@scl& (0+255),w,b
 26425  015CC6  6F00               	movwf	___awmod@dividend& (0+255),b
 26426  015CC8  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26427  015CCA  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26428  015CCC  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26429  015CCE  ECB2  F0DA         	call	___awmod	;wreg free
 26430  015CD2  0102               	movlb	2	; () banked
 26431  015CD4  5100               	movf	?___awmod& (0+255),w,b
 26432  015CD6  0D04               	mullw	4
 26433  015CD8  0E0F               	movlw	low __npowers_
 26434  015CDA  24F3               	addwf	prodl,w,c
 26435  015CDC  6EF6               	movwf	tblptrl,c
 26436  015CDE  0EE5               	movlw	high __npowers_
 26437  015CE0  20F4               	addwfc	prodh,w,c
 26438  015CE2  6EF7               	movwf	tblptrh,c
 26439  015CE4                     	if	1	;There are 3 active tblptr bytes
 26440  015CE4  6AF8               	clrf	tblptru,c
 26441  015CE6  0E00               	movlw	low (__mediumconst shr (0+16))
 26442  015CE8  22F8               	addwfc	tblptru,f,c
 26443  015CEA                     	endif
 26444  015CEA  0009               	tblrd		*+
 26445  015CEC  CFF5 F212          	movff	tablat,___flmul@a
 26446  015CF0  0009               	tblrd		*+
 26447  015CF2  CFF5 F213          	movff	tablat,___flmul@a+1
 26448  015CF6  0009               	tblrd		*+
 26449  015CF8  CFF5 F214          	movff	tablat,___flmul@a+2
 26450  015CFC  000A               	tblrd		*-
 26451  015CFE  CFF5 F215          	movff	tablat,___flmul@a+3
 26452  015D02  EC40  F0B5         	call	___flmul	;wreg free
 26453  015D06  C20E  F227         	movff	?___flmul,?_scale
 26454  015D0A  C20F  F228         	movff	?___flmul+1,?_scale+1
 26455  015D0E  C210  F229         	movff	?___flmul+2,?_scale+2
 26456  015D12  C211  F22A         	movff	?___flmul+3,?_scale+3
 26457  015D16  0012               	return	
 26458  015D18                     l17646:
 26459                           
 26460                           ; BSR set to: 2
 26461                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 26462  015D18  512F               	movf	scale@scl& (0+255),w,b
 26463  015D1A  0D04               	mullw	4
 26464  015D1C  0E0F               	movlw	low __npowers_
 26465  015D1E  24F3               	addwf	prodl,w,c
 26466  015D20  6EF6               	movwf	tblptrl,c
 26467  015D22  0EE5               	movlw	high __npowers_
 26468  015D24  20F4               	addwfc	prodh,w,c
 26469  015D26  6EF7               	movwf	tblptrh,c
 26470  015D28                     	if	1	;There are 3 active tblptr bytes
 26471  015D28  6AF8               	clrf	tblptru,c
 26472  015D2A  0E00               	movlw	low (__mediumconst shr (0+16))
 26473  015D2C  22F8               	addwfc	tblptru,f,c
 26474  015D2E                     	endif
 26475  015D2E  0009               	tblrd		*+
 26476  015D30  CFF5 F227          	movff	tablat,?_scale
 26477  015D34  0009               	tblrd		*+
 26478  015D36  CFF5 F228          	movff	tablat,?_scale+1
 26479  015D3A  0009               	tblrd		*+
 26480  015D3C  CFF5 F229          	movff	tablat,?_scale+2
 26481  015D40  000A               	tblrd		*-
 26482  015D42  CFF5 F22A          	movff	tablat,?_scale+3
 26483  015D46  0012               	return	
 26484  015D48                     l17650:
 26485                           
 26486                           ; BSR set to: 2
 26487                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 26488  015D48  512F               	movf	scale@scl& (0+255),w,b
 26489  015D4A  0A80               	xorlw	128
 26490  015D4C  0F12               	addlw	-238
 26491  015D4E  A0D8               	btfss	status,0,c
 26492  015D50  D095               	goto	l17658
 26493                           
 26494                           ; BSR set to: 2
 26495                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26496  015D52  0E00               	movlw	0
 26497  015D54  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26498  015D56  0E0A               	movlw	10
 26499  015D58  6F08               	movwf	___awdiv@divisor& (0+255),b
 26500  015D5A  0E00               	movlw	0
 26501  015D5C  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26502  015D5E  0E64               	movlw	100
 26503  015D60  6F02               	movwf	___awmod@divisor& (0+255),b
 26504  015D62  512F               	movf	scale@scl& (0+255),w,b
 26505  015D64  6F00               	movwf	___awmod@dividend& (0+255),b
 26506  015D66  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26507  015D68  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26508  015D6A  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26509  015D6C  ECB2  F0DA         	call	___awmod	;wreg free
 26510  015D70  C200  F206         	movff	?___awmod,___awdiv@dividend
 26511  015D74  C201  F207         	movff	?___awmod+1,___awdiv@dividend+1
 26512  015D78  ECAA  F0D9         	call	___awdiv	;wreg free
 26513  015D7C  0E09               	movlw	9
 26514  015D7E  0102               	movlb	2	; () banked
 26515  015D80  2706               	addwf	?___awdiv& (0+255),f,b
 26516  015D82  5106               	movf	?___awdiv& (0+255),w,b
 26517  015D84  0D04               	mullw	4
 26518  015D86  0EDB               	movlw	low __powers_
 26519  015D88  24F3               	addwf	prodl,w,c
 26520  015D8A  6EF6               	movwf	tblptrl,c
 26521  015D8C  0EE4               	movlw	high __powers_
 26522  015D8E  20F4               	addwfc	prodh,w,c
 26523  015D90  6EF7               	movwf	tblptrh,c
 26524  015D92                     	if	1	;There are 3 active tblptr bytes
 26525  015D92  6AF8               	clrf	tblptru,c
 26526  015D94  0E00               	movlw	low (__mediumconst shr (0+16))
 26527  015D96  22F8               	addwfc	tblptru,f,c
 26528  015D98                     	endif
 26529  015D98  0009               	tblrd		*+
 26530  015D9A  CFF5 F212          	movff	tablat,___flmul@a
 26531  015D9E  0009               	tblrd		*+
 26532  015DA0  CFF5 F213          	movff	tablat,___flmul@a+1
 26533  015DA4  0009               	tblrd		*+
 26534  015DA6  CFF5 F214          	movff	tablat,___flmul@a+2
 26535  015DAA  000A               	tblrd		*-
 26536  015DAC  CFF5 F215          	movff	tablat,___flmul@a+3
 26537  015DB0  0E00               	movlw	0
 26538  015DB2  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26539  015DB4  0E64               	movlw	100
 26540  015DB6  6F08               	movwf	___awdiv@divisor& (0+255),b
 26541  015DB8  512F               	movf	scale@scl& (0+255),w,b
 26542  015DBA  6F06               	movwf	___awdiv@dividend& (0+255),b
 26543  015DBC  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26544  015DBE  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26545  015DC0  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26546  015DC2  ECAA  F0D9         	call	___awdiv	;wreg free
 26547  015DC6  0E12               	movlw	18
 26548  015DC8  0102               	movlb	2	; () banked
 26549  015DCA  2706               	addwf	?___awdiv& (0+255),f,b
 26550  015DCC  5106               	movf	?___awdiv& (0+255),w,b
 26551  015DCE  0D04               	mullw	4
 26552  015DD0  0EDB               	movlw	low __powers_
 26553  015DD2  24F3               	addwf	prodl,w,c
 26554  015DD4  6EF6               	movwf	tblptrl,c
 26555  015DD6  0EE4               	movlw	high __powers_
 26556  015DD8  20F4               	addwfc	prodh,w,c
 26557  015DDA  6EF7               	movwf	tblptrh,c
 26558  015DDC                     	if	1	;There are 3 active tblptr bytes
 26559  015DDC  6AF8               	clrf	tblptru,c
 26560  015DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 26561  015DE0  22F8               	addwfc	tblptru,f,c
 26562  015DE2                     	endif
 26563  015DE2  0009               	tblrd		*+
 26564  015DE4  CFF5 F20E          	movff	tablat,___flmul@b
 26565  015DE8  0009               	tblrd		*+
 26566  015DEA  CFF5 F20F          	movff	tablat,___flmul@b+1
 26567  015DEE  0009               	tblrd		*+
 26568  015DF0  CFF5 F210          	movff	tablat,___flmul@b+2
 26569  015DF4  000A               	tblrd		*-
 26570  015DF6  CFF5 F211          	movff	tablat,___flmul@b+3
 26571  015DFA  EC40  F0B5         	call	___flmul	;wreg free
 26572  015DFE  C20E  F22B         	movff	?___flmul,_scale$6047
 26573  015E02  C20F  F22C         	movff	?___flmul+1,_scale$6047+1
 26574  015E06  C210  F22D         	movff	?___flmul+2,_scale$6047+2
 26575  015E0A  C211  F22E         	movff	?___flmul+3,_scale$6047+3
 26576                           
 26577                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 26578  015E0E  C22B  F20E         	movff	_scale$6047,___flmul@b
 26579  015E12  C22C  F20F         	movff	_scale$6047+1,___flmul@b+1
 26580  015E16  C22D  F210         	movff	_scale$6047+2,___flmul@b+2
 26581  015E1A  C22E  F211         	movff	_scale$6047+3,___flmul@b+3
 26582  015E1E  0E00               	movlw	0
 26583  015E20  0102               	movlb	2	; () banked
 26584  015E22  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26585  015E24  0E0A               	movlw	10
 26586  015E26  6F02               	movwf	___awmod@divisor& (0+255),b
 26587  015E28  512F               	movf	scale@scl& (0+255),w,b
 26588  015E2A  6F00               	movwf	___awmod@dividend& (0+255),b
 26589  015E2C  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26590  015E2E  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26591  015E30  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26592  015E32  ECB2  F0DA         	call	___awmod	;wreg free
 26593  015E36  0102               	movlb	2	; () banked
 26594  015E38  5100               	movf	?___awmod& (0+255),w,b
 26595  015E3A  0D04               	mullw	4
 26596  015E3C  0EDB               	movlw	low __powers_
 26597  015E3E  24F3               	addwf	prodl,w,c
 26598  015E40  6EF6               	movwf	tblptrl,c
 26599  015E42  0EE4               	movlw	high __powers_
 26600  015E44  20F4               	addwfc	prodh,w,c
 26601  015E46  6EF7               	movwf	tblptrh,c
 26602  015E48                     	if	1	;There are 3 active tblptr bytes
 26603  015E48  6AF8               	clrf	tblptru,c
 26604  015E4A  0E00               	movlw	low (__mediumconst shr (0+16))
 26605  015E4C  22F8               	addwfc	tblptru,f,c
 26606  015E4E                     	endif
 26607  015E4E  0009               	tblrd		*+
 26608  015E50  CFF5 F212          	movff	tablat,___flmul@a
 26609  015E54  0009               	tblrd		*+
 26610  015E56  CFF5 F213          	movff	tablat,___flmul@a+1
 26611  015E5A  0009               	tblrd		*+
 26612  015E5C  CFF5 F214          	movff	tablat,___flmul@a+2
 26613  015E60  000A               	tblrd		*-
 26614  015E62  CFF5 F215          	movff	tablat,___flmul@a+3
 26615  015E66  EC40  F0B5         	call	___flmul	;wreg free
 26616  015E6A  C20E  F227         	movff	?___flmul,?_scale
 26617  015E6E  C20F  F228         	movff	?___flmul+1,?_scale+1
 26618  015E72  C210  F229         	movff	?___flmul+2,?_scale+2
 26619  015E76  C211  F22A         	movff	?___flmul+3,?_scale+3
 26620  015E7A  0012               	return	
 26621  015E7C                     l17658:
 26622                           
 26623                           ; BSR set to: 2
 26624                           ;doprnt.c: 446: else if(scl > 10)
 26625  015E7C  512F               	movf	scale@scl& (0+255),w,b
 26626  015E7E  0A80               	xorlw	128
 26627  015E80  0F75               	addlw	-139
 26628  015E82  A0D8               	btfss	status,0,c
 26629  015E84  D053               	goto	l17664
 26630                           
 26631                           ; BSR set to: 2
 26632                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 26633  015E86  0E00               	movlw	0
 26634  015E88  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 26635  015E8A  0E0A               	movlw	10
 26636  015E8C  6F08               	movwf	___awdiv@divisor& (0+255),b
 26637  015E8E  512F               	movf	scale@scl& (0+255),w,b
 26638  015E90  6F06               	movwf	___awdiv@dividend& (0+255),b
 26639  015E92  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 26640  015E94  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 26641  015E96  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26642  015E98  ECAA  F0D9         	call	___awdiv	;wreg free
 26643  015E9C  0E09               	movlw	9
 26644  015E9E  0102               	movlb	2	; () banked
 26645  015EA0  2706               	addwf	?___awdiv& (0+255),f,b
 26646  015EA2  5106               	movf	?___awdiv& (0+255),w,b
 26647  015EA4  0D04               	mullw	4
 26648  015EA6  0EDB               	movlw	low __powers_
 26649  015EA8  24F3               	addwf	prodl,w,c
 26650  015EAA  6EF6               	movwf	tblptrl,c
 26651  015EAC  0EE4               	movlw	high __powers_
 26652  015EAE  20F4               	addwfc	prodh,w,c
 26653  015EB0  6EF7               	movwf	tblptrh,c
 26654  015EB2                     	if	1	;There are 3 active tblptr bytes
 26655  015EB2  6AF8               	clrf	tblptru,c
 26656  015EB4  0E00               	movlw	low (__mediumconst shr (0+16))
 26657  015EB6  22F8               	addwfc	tblptru,f,c
 26658  015EB8                     	endif
 26659  015EB8  0009               	tblrd		*+
 26660  015EBA  CFF5 F20E          	movff	tablat,___flmul@b
 26661  015EBE  0009               	tblrd		*+
 26662  015EC0  CFF5 F20F          	movff	tablat,___flmul@b+1
 26663  015EC4  0009               	tblrd		*+
 26664  015EC6  CFF5 F210          	movff	tablat,___flmul@b+2
 26665  015ECA  000A               	tblrd		*-
 26666  015ECC  CFF5 F211          	movff	tablat,___flmul@b+3
 26667  015ED0  0E00               	movlw	0
 26668  015ED2  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 26669  015ED4  0E0A               	movlw	10
 26670  015ED6  6F02               	movwf	___awmod@divisor& (0+255),b
 26671  015ED8  512F               	movf	scale@scl& (0+255),w,b
 26672  015EDA  6F00               	movwf	___awmod@dividend& (0+255),b
 26673  015EDC  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 26674  015EDE  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 26675  015EE0  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 26676  015EE2  ECB2  F0DA         	call	___awmod	;wreg free
 26677  015EE6  0102               	movlb	2	; () banked
 26678  015EE8  5100               	movf	?___awmod& (0+255),w,b
 26679  015EEA  0D04               	mullw	4
 26680  015EEC  0EDB               	movlw	low __powers_
 26681  015EEE  24F3               	addwf	prodl,w,c
 26682  015EF0  6EF6               	movwf	tblptrl,c
 26683  015EF2  0EE4               	movlw	high __powers_
 26684  015EF4  20F4               	addwfc	prodh,w,c
 26685  015EF6  6EF7               	movwf	tblptrh,c
 26686  015EF8                     	if	1	;There are 3 active tblptr bytes
 26687  015EF8  6AF8               	clrf	tblptru,c
 26688  015EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 26689  015EFC  22F8               	addwfc	tblptru,f,c
 26690  015EFE                     	endif
 26691  015EFE  0009               	tblrd		*+
 26692  015F00  CFF5 F212          	movff	tablat,___flmul@a
 26693  015F04  0009               	tblrd		*+
 26694  015F06  CFF5 F213          	movff	tablat,___flmul@a+1
 26695  015F0A  0009               	tblrd		*+
 26696  015F0C  CFF5 F214          	movff	tablat,___flmul@a+2
 26697  015F10  000A               	tblrd		*-
 26698  015F12  CFF5 F215          	movff	tablat,___flmul@a+3
 26699  015F16  EC40  F0B5         	call	___flmul	;wreg free
 26700  015F1A  C20E  F227         	movff	?___flmul,?_scale
 26701  015F1E  C20F  F228         	movff	?___flmul+1,?_scale+1
 26702  015F22  C210  F229         	movff	?___flmul+2,?_scale+2
 26703  015F26  C211  F22A         	movff	?___flmul+3,?_scale+3
 26704  015F2A  0012               	return	
 26705  015F2C                     l17664:
 26706                           
 26707                           ; BSR set to: 2
 26708                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 26709  015F2C  512F               	movf	scale@scl& (0+255),w,b
 26710  015F2E  0D04               	mullw	4
 26711  015F30  0EDB               	movlw	low __powers_
 26712  015F32  24F3               	addwf	prodl,w,c
 26713  015F34  6EF6               	movwf	tblptrl,c
 26714  015F36  0EE4               	movlw	high __powers_
 26715  015F38  20F4               	addwfc	prodh,w,c
 26716  015F3A  6EF7               	movwf	tblptrh,c
 26717  015F3C                     	if	1	;There are 3 active tblptr bytes
 26718  015F3C  6AF8               	clrf	tblptru,c
 26719  015F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 26720  015F40  22F8               	addwfc	tblptru,f,c
 26721  015F42                     	endif
 26722  015F42  0009               	tblrd		*+
 26723  015F44  CFF5 F227          	movff	tablat,?_scale
 26724  015F48  0009               	tblrd		*+
 26725  015F4A  CFF5 F228          	movff	tablat,?_scale+1
 26726  015F4E  0009               	tblrd		*+
 26727  015F50  CFF5 F229          	movff	tablat,?_scale+2
 26728  015F54  000A               	tblrd		*-
 26729  015F56  CFF5 F22A          	movff	tablat,?_scale+3
 26730  015F5A  0012               	return		;funcret
 26731  015F5C                     __end_of_scale:
 26732                           	opt callstack 0
 26733                           
 26734 ;; *************** function ___awmod *****************
 26735 ;; Defined at:
 26736 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 26737 ;; Parameters:    Size  Location     Type
 26738 ;;  dividend        2    0[BANK2 ] int 
 26739 ;;  divisor         2    2[BANK2 ] int 
 26740 ;; Auto vars:     Size  Location     Type
 26741 ;;  sign            1    5[BANK2 ] unsigned char 
 26742 ;;  counter         1    4[BANK2 ] unsigned char 
 26743 ;; Return value:  Size  Location     Type
 26744 ;;                  2    0[BANK2 ] int 
 26745 ;; Registers used:
 26746 ;;		wreg, status,2, status,0
 26747 ;; Tracked objects:
 26748 ;;		On entry : 0/0
 26749 ;;		On exit  : 0/0
 26750 ;;		Unchanged: 0/0
 26751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26752 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26753 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26755 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26756 ;;Total ram usage:        6 bytes
 26757 ;; Hardware stack levels used:    1
 26758 ;; Hardware stack levels required when called:   11
 26759 ;; This function calls:
 26760 ;;		Nothing
 26761 ;; This function is called by:
 26762 ;;		_scale
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text81
 26767  01B564                     __ptext81:
 26768                           	opt callstack 0
 26769  01B564                     ___awmod:
 26770                           	opt callstack 13
 26771                           
 26772                           ;incstack = 0
 26773  01B564  0E00               	movlw	0
 26774  01B566  0102               	movlb	2	; () banked
 26775  01B568  6F05               	movwf	___awmod@sign& (0+255),b
 26776                           
 26777                           ; BSR set to: 2
 26778  01B56A  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
 26779  01B56C  D006               	goto	l17540
 26780                           
 26781                           ; BSR set to: 2
 26782  01B56E  6D00               	negf	___awmod@dividend& (0+255),b
 26783  01B570  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26784  01B572  B0D8               	btfsc	status,0,c
 26785  01B574  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26786                           
 26787                           ; BSR set to: 2
 26788  01B576  0E01               	movlw	1
 26789  01B578  6F05               	movwf	___awmod@sign& (0+255),b
 26790  01B57A                     l17540:
 26791                           
 26792                           ; BSR set to: 2
 26793  01B57A  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26794  01B57C  D004               	goto	l17544
 26795                           
 26796                           ; BSR set to: 2
 26797  01B57E  6D02               	negf	___awmod@divisor& (0+255),b
 26798  01B580  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 26799  01B582  B0D8               	btfsc	status,0,c
 26800  01B584  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 26801  01B586                     l17544:
 26802                           
 26803                           ; BSR set to: 2
 26804  01B586  5102               	movf	___awmod@divisor& (0+255),w,b
 26805  01B588  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 26806  01B58A  B4D8               	btfsc	status,2,c
 26807  01B58C  D018               	goto	l17560
 26808                           
 26809                           ; BSR set to: 2
 26810  01B58E  0E01               	movlw	1
 26811  01B590  6F04               	movwf	___awmod@counter& (0+255),b
 26812  01B592  D004               	goto	l17550
 26813  01B594                     l17548:
 26814                           
 26815                           ; BSR set to: 2
 26816  01B594  90D8               	bcf	status,0,c
 26817  01B596  3702               	rlcf	___awmod@divisor& (0+255),f,b
 26818  01B598  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26819  01B59A  2B04               	incf	___awmod@counter& (0+255),f,b
 26820  01B59C                     l17550:
 26821                           
 26822                           ; BSR set to: 2
 26823  01B59C  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26824  01B59E  D7FA               	goto	l17548
 26825  01B5A0                     u21220:
 26826                           
 26827                           ; BSR set to: 2
 26828  01B5A0  5102               	movf	___awmod@divisor& (0+255),w,b
 26829  01B5A2  5D00               	subwf	___awmod@dividend& (0+255),w,b
 26830  01B5A4  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26831  01B5A6  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26832  01B5A8  A0D8               	btfss	status,0,c
 26833  01B5AA  D004               	goto	l17556
 26834                           
 26835                           ; BSR set to: 2
 26836  01B5AC  5102               	movf	___awmod@divisor& (0+255),w,b
 26837  01B5AE  5F00               	subwf	___awmod@dividend& (0+255),f,b
 26838  01B5B0  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 26839  01B5B2  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26840  01B5B4                     l17556:
 26841                           
 26842                           ; BSR set to: 2
 26843  01B5B4  90D8               	bcf	status,0,c
 26844  01B5B6  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26845  01B5B8  3302               	rrcf	___awmod@divisor& (0+255),f,b
 26846                           
 26847                           ; BSR set to: 2
 26848  01B5BA  2F04               	decfsz	___awmod@counter& (0+255),f,b
 26849  01B5BC  D7F1               	goto	u21220
 26850  01B5BE                     l17560:
 26851                           
 26852                           ; BSR set to: 2
 26853  01B5BE  5105               	movf	___awmod@sign& (0+255),w,b
 26854  01B5C0  B4D8               	btfsc	status,2,c
 26855  01B5C2  D004               	goto	l17564
 26856                           
 26857                           ; BSR set to: 2
 26858  01B5C4  6D00               	negf	___awmod@dividend& (0+255),b
 26859  01B5C6  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 26860  01B5C8  B0D8               	btfsc	status,0,c
 26861  01B5CA  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 26862  01B5CC                     l17564:
 26863                           
 26864                           ; BSR set to: 2
 26865  01B5CC  C200  F200         	movff	___awmod@dividend,?___awmod
 26866  01B5D0  C201  F201         	movff	___awmod@dividend+1,?___awmod+1
 26867                           
 26868                           ; BSR set to: 2
 26869  01B5D4  0012               	return		;funcret
 26870  01B5D6                     __end_of___awmod:
 26871                           	opt callstack 0
 26872                           
 26873 ;; *************** function ___awdiv *****************
 26874 ;; Defined at:
 26875 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 26876 ;; Parameters:    Size  Location     Type
 26877 ;;  dividend        2    6[BANK2 ] int 
 26878 ;;  divisor         2    8[BANK2 ] int 
 26879 ;; Auto vars:     Size  Location     Type
 26880 ;;  quotient        2   12[BANK2 ] int 
 26881 ;;  sign            1   11[BANK2 ] unsigned char 
 26882 ;;  counter         1   10[BANK2 ] unsigned char 
 26883 ;; Return value:  Size  Location     Type
 26884 ;;                  2    6[BANK2 ] int 
 26885 ;; Registers used:
 26886 ;;		wreg, status,2, status,0
 26887 ;; Tracked objects:
 26888 ;;		On entry : 0/0
 26889 ;;		On exit  : 0/0
 26890 ;;		Unchanged: 0/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26892 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26893 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26895 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26896 ;;Total ram usage:        8 bytes
 26897 ;; Hardware stack levels used:    1
 26898 ;; Hardware stack levels required when called:   11
 26899 ;; This function calls:
 26900 ;;		Nothing
 26901 ;; This function is called by:
 26902 ;;		_scale
 26903 ;;		__doprnt
 26904 ;; This function uses a non-reentrant model
 26905 ;;
 26906                           
 26907                           	psect	text82
 26908  01B354                     __ptext82:
 26909                           	opt callstack 0
 26910  01B354                     ___awdiv:
 26911                           	opt callstack 13
 26912                           
 26913                           ; BSR set to: 2
 26914                           ;incstack = 0
 26915  01B354  0E00               	movlw	0
 26916  01B356  0102               	movlb	2	; () banked
 26917  01B358  6F0B               	movwf	___awdiv@sign& (0+255),b
 26918                           
 26919                           ; BSR set to: 2
 26920  01B35A  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26921  01B35C  D006               	goto	l17496
 26922                           
 26923                           ; BSR set to: 2
 26924  01B35E  6D08               	negf	___awdiv@divisor& (0+255),b
 26925  01B360  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26926  01B362  B0D8               	btfsc	status,0,c
 26927  01B364  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26928                           
 26929                           ; BSR set to: 2
 26930  01B366  0E01               	movlw	1
 26931  01B368  6F0B               	movwf	___awdiv@sign& (0+255),b
 26932  01B36A                     l17496:
 26933                           
 26934                           ; BSR set to: 2
 26935  01B36A  AF07               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 26936  01B36C  D006               	goto	l17502
 26937                           
 26938                           ; BSR set to: 2
 26939  01B36E  6D06               	negf	___awdiv@dividend& (0+255),b
 26940  01B370  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26941  01B372  B0D8               	btfsc	status,0,c
 26942  01B374  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26943                           
 26944                           ; BSR set to: 2
 26945  01B376  0E01               	movlw	1
 26946  01B378  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 26947  01B37A                     l17502:
 26948                           
 26949                           ; BSR set to: 2
 26950  01B37A  0E00               	movlw	0
 26951  01B37C  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 26952  01B37E  0E00               	movlw	0
 26953  01B380  6F0C               	movwf	___awdiv@quotient& (0+255),b
 26954                           
 26955                           ; BSR set to: 2
 26956  01B382  5108               	movf	___awdiv@divisor& (0+255),w,b
 26957  01B384  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 26958  01B386  B4D8               	btfsc	status,2,c
 26959  01B388  D01C               	goto	l17524
 26960                           
 26961                           ; BSR set to: 2
 26962  01B38A  0E01               	movlw	1
 26963  01B38C  6F0A               	movwf	___awdiv@counter& (0+255),b
 26964  01B38E  D004               	goto	l17510
 26965  01B390                     l17508:
 26966                           
 26967                           ; BSR set to: 2
 26968  01B390  90D8               	bcf	status,0,c
 26969  01B392  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 26970  01B394  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26971  01B396  2B0A               	incf	___awdiv@counter& (0+255),f,b
 26972  01B398                     l17510:
 26973                           
 26974                           ; BSR set to: 2
 26975  01B398  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26976  01B39A  D7FA               	goto	l17508
 26977  01B39C                     u21160:
 26978                           
 26979                           ; BSR set to: 2
 26980  01B39C  90D8               	bcf	status,0,c
 26981  01B39E  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 26982  01B3A0  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26983                           
 26984                           ; BSR set to: 2
 26985  01B3A2  5108               	movf	___awdiv@divisor& (0+255),w,b
 26986  01B3A4  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 26987  01B3A6  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26988  01B3A8  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26989  01B3AA  A0D8               	btfss	status,0,c
 26990  01B3AC  D005               	goto	l17520
 26991                           
 26992                           ; BSR set to: 2
 26993  01B3AE  5108               	movf	___awdiv@divisor& (0+255),w,b
 26994  01B3B0  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 26995  01B3B2  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26996  01B3B4  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26997                           
 26998                           ; BSR set to: 2
 26999  01B3B6  810C               	bsf	___awdiv@quotient& (0+255),0,b
 27000  01B3B8                     l17520:
 27001                           
 27002                           ; BSR set to: 2
 27003  01B3B8  90D8               	bcf	status,0,c
 27004  01B3BA  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 27005  01B3BC  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 27006                           
 27007                           ; BSR set to: 2
 27008  01B3BE  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 27009  01B3C0  D7ED               	goto	u21160
 27010  01B3C2                     l17524:
 27011                           
 27012                           ; BSR set to: 2
 27013  01B3C2  510B               	movf	___awdiv@sign& (0+255),w,b
 27014  01B3C4  B4D8               	btfsc	status,2,c
 27015  01B3C6  D004               	goto	l17528
 27016                           
 27017                           ; BSR set to: 2
 27018  01B3C8  6D0C               	negf	___awdiv@quotient& (0+255),b
 27019  01B3CA  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 27020  01B3CC  B0D8               	btfsc	status,0,c
 27021  01B3CE  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 27022  01B3D0                     l17528:
 27023                           
 27024                           ; BSR set to: 2
 27025  01B3D0  C20C  F206         	movff	___awdiv@quotient,?___awdiv
 27026  01B3D4  C20D  F207         	movff	___awdiv@quotient+1,?___awdiv+1
 27027                           
 27028                           ; BSR set to: 2
 27029  01B3D8  0012               	return		;funcret
 27030  01B3DA                     __end_of___awdiv:
 27031                           	opt callstack 0
 27032                           
 27033 ;; *************** function _putch *****************
 27034 ;; Defined at:
 27035 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 27036 ;; Parameters:    Size  Location     Type
 27037 ;;  txData          1    wreg     unsigned char 
 27038 ;; Auto vars:     Size  Location     Type
 27039 ;;  txData          1    1[BANK2 ] unsigned char 
 27040 ;; Return value:  Size  Location     Type
 27041 ;;                  1    wreg      void 
 27042 ;; Registers used:
 27043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27044 ;; Tracked objects:
 27045 ;;		On entry : 0/0
 27046 ;;		On exit  : 0/0
 27047 ;;		Unchanged: 0/0
 27048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27050 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27052 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27053 ;;Total ram usage:        1 bytes
 27054 ;; Hardware stack levels used:    1
 27055 ;; Hardware stack levels required when called:   12
 27056 ;; This function calls:
 27057 ;;		_EUSART2_Write
 27058 ;; This function is called by:
 27059 ;;		_printf
 27060 ;;		__doprnt
 27061 ;;		i2__doprnt
 27062 ;; This function uses a non-reentrant model
 27063 ;;
 27064                           
 27065                           	psect	text83
 27066  01C9D4                     __ptext83:
 27067                           	opt callstack 0
 27068  01C9D4                     _putch:
 27069                           	opt callstack 0
 27070                           
 27071                           ; BSR set to: 2
 27072                           ;Skip over the trampoline to the duplicate function for level 2
 27073  01C9D4  B25F               	btfsc	btemp,1,c
 27074  01C9D6  EFF1  F0E5         	goto	i2_putch
 27075  01C9DA                     _putch$intlevel0:
 27076                           	opt callstack 13
 27077                           
 27078                           ;incstack = 0
 27079                           ;putch@txData stored from wreg
 27080  01C9DA  0102               	movlb	2	; () banked
 27081  01C9DC  6F01               	movwf	putch@txData& (0+255),b
 27082                           
 27083                           ;eusart2.c: 184: EUSART2_Write(txData);
 27084  01C9DE  0102               	movlb	2	; () banked
 27085  01C9E0  5101               	movf	putch@txData& (0+255),w,b
 27086  01C9E2  EC51  F0DF         	call	_EUSART2_Write
 27087  01C9E6  0012               	return		;funcret
 27088  01C9E8                     __end_of_putch:
 27089                           	opt callstack 0
 27090                           
 27091 ;; *************** function _EUSART2_Write *****************
 27092 ;; Defined at:
 27093 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 27094 ;; Parameters:    Size  Location     Type
 27095 ;;  txData          1    wreg     unsigned char 
 27096 ;; Auto vars:     Size  Location     Type
 27097 ;;  txData          1    0[BANK2 ] unsigned char 
 27098 ;; Return value:  Size  Location     Type
 27099 ;;                  1    wreg      void 
 27100 ;; Registers used:
 27101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27102 ;; Tracked objects:
 27103 ;;		On entry : 0/0
 27104 ;;		On exit  : 0/0
 27105 ;;		Unchanged: 0/0
 27106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27108 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27110 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27111 ;;Total ram usage:        1 bytes
 27112 ;; Hardware stack levels used:    1
 27113 ;; Hardware stack levels required when called:   11
 27114 ;; This function calls:
 27115 ;;		Nothing
 27116 ;; This function is called by:
 27117 ;;		_putch
 27118 ;; This function uses a non-reentrant model
 27119 ;;
 27120                           
 27121                           	psect	text84
 27122  01BEA2                     __ptext84:
 27123                           	opt callstack 0
 27124  01BEA2                     _EUSART2_Write:
 27125                           	opt callstack 13
 27126                           
 27127                           ;incstack = 0
 27128                           ;EUSART2_Write@txData stored from wreg
 27129  01BEA2  0102               	movlb	2	; () banked
 27130  01BEA4  6F00               	movwf	EUSART2_Write@txData& (0+255),b
 27131                           
 27132                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 27133  01BEA6  D001               	goto	l17140
 27134  01BEA8                     l122:
 27135                           
 27136                           ; BSR set to: 1
 27137  01BEA8  0004               	clrwdt		;# 
 27138  01BEAA                     l17140:
 27139  01BEAA  0101               	movlb	1	; () banked
 27140  01BEAC  5193               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27141  01BEAE  B4D8               	btfsc	status,2,c
 27142  01BEB0  D7FB               	goto	l122
 27143                           
 27144                           ; BSR set to: 1
 27145                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 27146  01BEB2  010E               	movlb	14	; () banked
 27147  01BEB4  BDC5               	btfsc	197,6,b	;volatile
 27148  01BEB6  D003               	goto	l124
 27149                           
 27150                           ; BSR set to: 14
 27151                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 27152  01BEB8  C200  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 27153                           
 27154                           ;eusart2.c: 163: }
 27155  01BEBC  D011               	goto	l17154
 27156  01BEBE                     l124:
 27157                           
 27158                           ; BSR set to: 14
 27159                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 27160  01BEBE  9DC5               	bcf	197,6,b	;volatile
 27161                           
 27162                           ; BSR set to: 14
 27163                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 27164  01BEC0  0EC0               	movlw	low _eusart2TxBuffer
 27165  01BEC2  0101               	movlb	1	; () banked
 27166  01BEC4  2595               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 27167  01BEC6  6ED9               	movwf	fsr2l,c
 27168  01BEC8  6ADA               	clrf	fsr2h,c
 27169  01BECA  0E04               	movlw	high _eusart2TxBuffer
 27170  01BECC  22DA               	addwfc	fsr2h,f,c
 27171  01BECE  C200  FFDF         	movff	EUSART2_Write@txData,indf2
 27172                           
 27173                           ; BSR set to: 1
 27174  01BED2  2B95               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27175                           
 27176                           ; BSR set to: 1
 27177                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27178  01BED4  0E3F               	movlw	63
 27179  01BED6  6595               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27180  01BED8  D002               	goto	l17152
 27181                           
 27182                           ; BSR set to: 1
 27183                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 27184  01BEDA  0E00               	movlw	0
 27185  01BEDC  6F95               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27186  01BEDE                     l17152:
 27187                           
 27188                           ; BSR set to: 1
 27189                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 27190  01BEDE  0793               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27191  01BEE0                     l17154:
 27192                           
 27193                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 27194  01BEE0  010E               	movlb	14	; () banked
 27195  01BEE2  8DC5               	bsf	197,6,b	;volatile
 27196                           
 27197                           ; BSR set to: 14
 27198  01BEE4  0012               	return		;funcret
 27199  01BEE6                     __end_of_EUSART2_Write:
 27200                           	opt callstack 0
 27201                           
 27202 ;; *************** function _isdigit *****************
 27203 ;; Defined at:
 27204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 27205 ;; Parameters:    Size  Location     Type
 27206 ;;  c               1    wreg     unsigned char 
 27207 ;; Auto vars:     Size  Location     Type
 27208 ;;  c               1    2[BANK2 ] unsigned char 
 27209 ;; Return value:  Size  Location     Type
 27210 ;;		None               void
 27211 ;; Registers used:
 27212 ;;		wreg, status,2, status,0
 27213 ;; Tracked objects:
 27214 ;;		On entry : 0/0
 27215 ;;		On exit  : 0/0
 27216 ;;		Unchanged: 0/0
 27217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27219 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27220 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27221 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27222 ;;Total ram usage:        3 bytes
 27223 ;; Hardware stack levels used:    1
 27224 ;; Hardware stack levels required when called:   11
 27225 ;; This function calls:
 27226 ;;		Nothing
 27227 ;; This function is called by:
 27228 ;;		__doprnt
 27229 ;; This function uses a non-reentrant model
 27230 ;;
 27231                           
 27232                           	psect	text85
 27233  01C750                     __ptext85:
 27234                           	opt callstack 0
 27235  01C750                     _isdigit:
 27236                           	opt callstack 14
 27237                           
 27238                           ; BSR set to: 14
 27239                           ;incstack = 0
 27240                           ;isdigit@c stored from wreg
 27241  01C750  0102               	movlb	2	; () banked
 27242  01C752  6F02               	movwf	isdigit@c& (0+255),b
 27243  01C754  0E00               	movlw	0
 27244  01C756  0102               	movlb	2	; () banked
 27245  01C758  6F01               	movwf	_isdigit$5463& (0+255),b
 27246                           
 27247                           ; BSR set to: 2
 27248  01C75A  0E3A               	movlw	58
 27249  01C75C  6102               	cpfslt	isdigit@c& (0+255),b
 27250  01C75E  D005               	goto	l17676
 27251                           
 27252                           ; BSR set to: 2
 27253  01C760  0E2F               	movlw	47
 27254  01C762  6502               	cpfsgt	isdigit@c& (0+255),b
 27255  01C764  D002               	goto	l17676
 27256                           
 27257                           ; BSR set to: 2
 27258  01C766  0E01               	movlw	1
 27259  01C768  6F01               	movwf	_isdigit$5463& (0+255),b
 27260  01C76A                     l17676:
 27261                           
 27262                           ; BSR set to: 2
 27263  01C76A  C201  F200         	movff	_isdigit$5463,??_isdigit
 27264  01C76E  3100               	rrcf	??_isdigit& (0+255),w,b
 27265                           
 27266                           ; BSR set to: 2
 27267  01C770  0012               	return		;funcret
 27268  01C772                     __end_of_isdigit:
 27269                           	opt callstack 0
 27270                           
 27271 ;; *************** function _fround *****************
 27272 ;; Defined at:
 27273 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 27274 ;; Parameters:    Size  Location     Type
 27275 ;;  prec            1    wreg     unsigned char 
 27276 ;; Auto vars:     Size  Location     Type
 27277 ;;  prec            1   51[BANK2 ] unsigned char 
 27278 ;; Return value:  Size  Location     Type
 27279 ;;                  4   39[BANK2 ] unsigned char 
 27280 ;; Registers used:
 27281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27282 ;; Tracked objects:
 27283 ;;		On entry : 0/0
 27284 ;;		On exit  : 0/0
 27285 ;;		Unchanged: 0/0
 27286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27287 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27288 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27290 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27291 ;;Total ram usage:       13 bytes
 27292 ;; Hardware stack levels used:    1
 27293 ;; Hardware stack levels required when called:   12
 27294 ;; This function calls:
 27295 ;;		___flmul
 27296 ;;		___lwdiv
 27297 ;;		___lwmod
 27298 ;; This function is called by:
 27299 ;;		__doprnt
 27300 ;; This function uses a non-reentrant model
 27301 ;;
 27302                           
 27303                           	psect	text86
 27304  018078                     __ptext86:
 27305                           	opt callstack 0
 27306  018078                     _fround:
 27307                           	opt callstack 13
 27308                           
 27309                           ; BSR set to: 2
 27310                           ;incstack = 0
 27311                           ;fround@prec stored from wreg
 27312  018078  0102               	movlb	2	; () banked
 27313  01807A  6F33               	movwf	fround@prec& (0+255),b
 27314                           
 27315                           ;doprnt.c: 421: if(prec>=110)
 27316  01807C  0E6D               	movlw	109
 27317  01807E  0102               	movlb	2	; () banked
 27318  018080  6533               	cpfsgt	fround@prec& (0+255),b
 27319  018082  D0BA               	goto	l17620
 27320                           
 27321                           ; BSR set to: 2
 27322                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27323  018084  0E00               	movlw	0
 27324  018086  6F12               	movwf	___flmul@a& (0+255),b
 27325  018088  0E00               	movlw	0
 27326  01808A  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27327  01808C  0E00               	movlw	0
 27328  01808E  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27329  018090  0E3F               	movlw	63
 27330  018092  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27331  018094  0E00               	movlw	0
 27332  018096  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27333  018098  0E64               	movlw	100
 27334  01809A  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27335  01809C  C233  F205         	movff	fround@prec,___lwdiv@dividend
 27336  0180A0  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 27337  0180A2  EC37  F0DD         	call	___lwdiv	;wreg free
 27338  0180A6  0102               	movlb	2	; () banked
 27339  0180A8  90D8               	bcf	status,0,c
 27340  0180AA  3705               	rlcf	?___lwdiv& (0+255),f,b
 27341  0180AC  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27342  0180AE  90D8               	bcf	status,0,c
 27343  0180B0  3705               	rlcf	?___lwdiv& (0+255),f,b
 27344  0180B2  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27345  0180B4  0E48               	movlw	72
 27346  0180B6  2705               	addwf	?___lwdiv& (0+255),f,b
 27347  0180B8  0E00               	movlw	0
 27348  0180BA  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27349  0180BC  0E0F               	movlw	low __npowers_
 27350  0180BE  2505               	addwf	?___lwdiv& (0+255),w,b
 27351  0180C0  6EF6               	movwf	tblptrl,c
 27352  0180C2  0EE5               	movlw	high __npowers_
 27353  0180C4  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27354  0180C6  6EF7               	movwf	tblptrh,c
 27355  0180C8                     	if	1	;There are 3 active tblptr bytes
 27356  0180C8  6AF8               	clrf	tblptru,c
 27357  0180CA  0E00               	movlw	low (__mediumconst shr (0+16))
 27358  0180CC  22F8               	addwfc	tblptru,f,c
 27359  0180CE                     	endif
 27360  0180CE  0009               	tblrd		*+
 27361  0180D0  CFF5 F20E          	movff	tablat,___flmul@b
 27362  0180D4  0009               	tblrd		*+
 27363  0180D6  CFF5 F20F          	movff	tablat,___flmul@b+1
 27364  0180DA  0009               	tblrd		*+
 27365  0180DC  CFF5 F210          	movff	tablat,___flmul@b+2
 27366  0180E0  000A               	tblrd		*-
 27367  0180E2  CFF5 F211          	movff	tablat,___flmul@b+3
 27368  0180E6  EC40  F0B5         	call	___flmul	;wreg free
 27369  0180EA  C20E  F22F         	movff	?___flmul,_fround$6045
 27370  0180EE  C20F  F230         	movff	?___flmul+1,_fround$6045+1
 27371  0180F2  C210  F231         	movff	?___flmul+2,_fround$6045+2
 27372  0180F6  C211  F232         	movff	?___flmul+3,_fround$6045+3
 27373                           
 27374                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27375  0180FA  0E00               	movlw	0
 27376  0180FC  0102               	movlb	2	; () banked
 27377  0180FE  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27378  018100  0E0A               	movlw	10
 27379  018102  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27380  018104  0E00               	movlw	0
 27381  018106  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27382  018108  0E64               	movlw	100
 27383  01810A  6F02               	movwf	___lwmod@divisor& (0+255),b
 27384  01810C  C233  F200         	movff	fround@prec,___lwmod@dividend
 27385  018110  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27386  018112  EC73  F0DF         	call	___lwmod	;wreg free
 27387  018116  C200  F205         	movff	?___lwmod,___lwdiv@dividend
 27388  01811A  C201  F206         	movff	?___lwmod+1,___lwdiv@dividend+1
 27389  01811E  EC37  F0DD         	call	___lwdiv	;wreg free
 27390  018122  0102               	movlb	2	; () banked
 27391  018124  90D8               	bcf	status,0,c
 27392  018126  3705               	rlcf	?___lwdiv& (0+255),f,b
 27393  018128  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27394  01812A  90D8               	bcf	status,0,c
 27395  01812C  3705               	rlcf	?___lwdiv& (0+255),f,b
 27396  01812E  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27397  018130  0E24               	movlw	36
 27398  018132  2705               	addwf	?___lwdiv& (0+255),f,b
 27399  018134  0E00               	movlw	0
 27400  018136  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27401  018138  0E0F               	movlw	low __npowers_
 27402  01813A  2505               	addwf	?___lwdiv& (0+255),w,b
 27403  01813C  6EF6               	movwf	tblptrl,c
 27404  01813E  0EE5               	movlw	high __npowers_
 27405  018140  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27406  018142  6EF7               	movwf	tblptrh,c
 27407  018144                     	if	1	;There are 3 active tblptr bytes
 27408  018144  6AF8               	clrf	tblptru,c
 27409  018146  0E00               	movlw	low (__mediumconst shr (0+16))
 27410  018148  22F8               	addwfc	tblptru,f,c
 27411  01814A                     	endif
 27412  01814A  0009               	tblrd		*+
 27413  01814C  CFF5 F212          	movff	tablat,___flmul@a
 27414  018150  0009               	tblrd		*+
 27415  018152  CFF5 F213          	movff	tablat,___flmul@a+1
 27416  018156  0009               	tblrd		*+
 27417  018158  CFF5 F214          	movff	tablat,___flmul@a+2
 27418  01815C  000A               	tblrd		*-
 27419  01815E  CFF5 F215          	movff	tablat,___flmul@a+3
 27420  018162  C22F  F20E         	movff	_fround$6045,___flmul@b
 27421  018166  C230  F20F         	movff	_fround$6045+1,___flmul@b+1
 27422  01816A  C231  F210         	movff	_fround$6045+2,___flmul@b+2
 27423  01816E  C232  F211         	movff	_fround$6045+3,___flmul@b+3
 27424  018172  EC40  F0B5         	call	___flmul	;wreg free
 27425  018176  C20E  F22B         	movff	?___flmul,_fround$6046
 27426  01817A  C20F  F22C         	movff	?___flmul+1,_fround$6046+1
 27427  01817E  C210  F22D         	movff	?___flmul+2,_fround$6046+2
 27428  018182  C211  F22E         	movff	?___flmul+3,_fround$6046+3
 27429                           
 27430                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 27431  018186  C22B  F20E         	movff	_fround$6046,___flmul@b
 27432  01818A  C22C  F20F         	movff	_fround$6046+1,___flmul@b+1
 27433  01818E  C22D  F210         	movff	_fround$6046+2,___flmul@b+2
 27434  018192  C22E  F211         	movff	_fround$6046+3,___flmul@b+3
 27435  018196  0E00               	movlw	0
 27436  018198  0102               	movlb	2	; () banked
 27437  01819A  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27438  01819C  0E0A               	movlw	10
 27439  01819E  6F02               	movwf	___lwmod@divisor& (0+255),b
 27440  0181A0  C233  F200         	movff	fround@prec,___lwmod@dividend
 27441  0181A4  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27442  0181A6  EC73  F0DF         	call	___lwmod	;wreg free
 27443  0181AA  0102               	movlb	2	; () banked
 27444  0181AC  90D8               	bcf	status,0,c
 27445  0181AE  3700               	rlcf	?___lwmod& (0+255),f,b
 27446  0181B0  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27447  0181B2  90D8               	bcf	status,0,c
 27448  0181B4  3700               	rlcf	?___lwmod& (0+255),f,b
 27449  0181B6  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27450  0181B8  0E0F               	movlw	low __npowers_
 27451  0181BA  2500               	addwf	?___lwmod& (0+255),w,b
 27452  0181BC  6EF6               	movwf	tblptrl,c
 27453  0181BE  0EE5               	movlw	high __npowers_
 27454  0181C0  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27455  0181C2  6EF7               	movwf	tblptrh,c
 27456  0181C4                     	if	1	;There are 3 active tblptr bytes
 27457  0181C4  6AF8               	clrf	tblptru,c
 27458  0181C6  0E00               	movlw	low (__mediumconst shr (0+16))
 27459  0181C8  22F8               	addwfc	tblptru,f,c
 27460  0181CA                     	endif
 27461  0181CA  0009               	tblrd		*+
 27462  0181CC  CFF5 F212          	movff	tablat,___flmul@a
 27463  0181D0  0009               	tblrd		*+
 27464  0181D2  CFF5 F213          	movff	tablat,___flmul@a+1
 27465  0181D6  0009               	tblrd		*+
 27466  0181D8  CFF5 F214          	movff	tablat,___flmul@a+2
 27467  0181DC  000A               	tblrd		*-
 27468  0181DE  CFF5 F215          	movff	tablat,___flmul@a+3
 27469  0181E2  EC40  F0B5         	call	___flmul	;wreg free
 27470  0181E6  C20E  F227         	movff	?___flmul,?_fround
 27471  0181EA  C20F  F228         	movff	?___flmul+1,?_fround+1
 27472  0181EE  C210  F229         	movff	?___flmul+2,?_fround+2
 27473  0181F2  C211  F22A         	movff	?___flmul+3,?_fround+3
 27474  0181F6  0012               	return	
 27475  0181F8                     l17620:
 27476                           
 27477                           ; BSR set to: 2
 27478                           ;doprnt.c: 423: else if(prec > 10)
 27479  0181F8  0E0A               	movlw	10
 27480  0181FA  6533               	cpfsgt	fround@prec& (0+255),b
 27481  0181FC  D074               	goto	l17626
 27482                           
 27483                           ; BSR set to: 2
 27484                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27485  0181FE  0E00               	movlw	0
 27486  018200  6F12               	movwf	___flmul@a& (0+255),b
 27487  018202  0E00               	movlw	0
 27488  018204  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27489  018206  0E00               	movlw	0
 27490  018208  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27491  01820A  0E3F               	movlw	63
 27492  01820C  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27493  01820E  0E00               	movlw	0
 27494  018210  6F08               	movwf	(___lwdiv@divisor+1)& (0+255),b
 27495  018212  0E0A               	movlw	10
 27496  018214  6F07               	movwf	___lwdiv@divisor& (0+255),b
 27497  018216  C233  F205         	movff	fround@prec,___lwdiv@dividend
 27498  01821A  6B06               	clrf	(___lwdiv@dividend+1)& (0+255),b
 27499  01821C  EC37  F0DD         	call	___lwdiv	;wreg free
 27500  018220  0102               	movlb	2	; () banked
 27501  018222  90D8               	bcf	status,0,c
 27502  018224  3705               	rlcf	?___lwdiv& (0+255),f,b
 27503  018226  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27504  018228  90D8               	bcf	status,0,c
 27505  01822A  3705               	rlcf	?___lwdiv& (0+255),f,b
 27506  01822C  3706               	rlcf	(?___lwdiv+1)& (0+255),f,b
 27507  01822E  0E24               	movlw	36
 27508  018230  2705               	addwf	?___lwdiv& (0+255),f,b
 27509  018232  0E00               	movlw	0
 27510  018234  2306               	addwfc	(?___lwdiv+1)& (0+255),f,b
 27511  018236  0E0F               	movlw	low __npowers_
 27512  018238  2505               	addwf	?___lwdiv& (0+255),w,b
 27513  01823A  6EF6               	movwf	tblptrl,c
 27514  01823C  0EE5               	movlw	high __npowers_
 27515  01823E  2106               	addwfc	(?___lwdiv+1)& (0+255),w,b
 27516  018240  6EF7               	movwf	tblptrh,c
 27517  018242                     	if	1	;There are 3 active tblptr bytes
 27518  018242  6AF8               	clrf	tblptru,c
 27519  018244  0E00               	movlw	low (__mediumconst shr (0+16))
 27520  018246  22F8               	addwfc	tblptru,f,c
 27521  018248                     	endif
 27522  018248  0009               	tblrd		*+
 27523  01824A  CFF5 F20E          	movff	tablat,___flmul@b
 27524  01824E  0009               	tblrd		*+
 27525  018250  CFF5 F20F          	movff	tablat,___flmul@b+1
 27526  018254  0009               	tblrd		*+
 27527  018256  CFF5 F210          	movff	tablat,___flmul@b+2
 27528  01825A  000A               	tblrd		*-
 27529  01825C  CFF5 F211          	movff	tablat,___flmul@b+3
 27530  018260  EC40  F0B5         	call	___flmul	;wreg free
 27531  018264  C20E  F22F         	movff	?___flmul,_fround$6045
 27532  018268  C20F  F230         	movff	?___flmul+1,_fround$6045+1
 27533  01826C  C210  F231         	movff	?___flmul+2,_fround$6045+2
 27534  018270  C211  F232         	movff	?___flmul+3,_fround$6045+3
 27535                           
 27536                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 27537  018274  C22F  F20E         	movff	_fround$6045,___flmul@b
 27538  018278  C230  F20F         	movff	_fround$6045+1,___flmul@b+1
 27539  01827C  C231  F210         	movff	_fround$6045+2,___flmul@b+2
 27540  018280  C232  F211         	movff	_fround$6045+3,___flmul@b+3
 27541  018284  0E00               	movlw	0
 27542  018286  0102               	movlb	2	; () banked
 27543  018288  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
 27544  01828A  0E0A               	movlw	10
 27545  01828C  6F02               	movwf	___lwmod@divisor& (0+255),b
 27546  01828E  C233  F200         	movff	fround@prec,___lwmod@dividend
 27547  018292  6B01               	clrf	(___lwmod@dividend+1)& (0+255),b
 27548  018294  EC73  F0DF         	call	___lwmod	;wreg free
 27549  018298  0102               	movlb	2	; () banked
 27550  01829A  90D8               	bcf	status,0,c
 27551  01829C  3700               	rlcf	?___lwmod& (0+255),f,b
 27552  01829E  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27553  0182A0  90D8               	bcf	status,0,c
 27554  0182A2  3700               	rlcf	?___lwmod& (0+255),f,b
 27555  0182A4  3701               	rlcf	(?___lwmod+1)& (0+255),f,b
 27556  0182A6  0E0F               	movlw	low __npowers_
 27557  0182A8  2500               	addwf	?___lwmod& (0+255),w,b
 27558  0182AA  6EF6               	movwf	tblptrl,c
 27559  0182AC  0EE5               	movlw	high __npowers_
 27560  0182AE  2101               	addwfc	(?___lwmod+1)& (0+255),w,b
 27561  0182B0  6EF7               	movwf	tblptrh,c
 27562  0182B2                     	if	1	;There are 3 active tblptr bytes
 27563  0182B2  6AF8               	clrf	tblptru,c
 27564  0182B4  0E00               	movlw	low (__mediumconst shr (0+16))
 27565  0182B6  22F8               	addwfc	tblptru,f,c
 27566  0182B8                     	endif
 27567  0182B8  0009               	tblrd		*+
 27568  0182BA  CFF5 F212          	movff	tablat,___flmul@a
 27569  0182BE  0009               	tblrd		*+
 27570  0182C0  CFF5 F213          	movff	tablat,___flmul@a+1
 27571  0182C4  0009               	tblrd		*+
 27572  0182C6  CFF5 F214          	movff	tablat,___flmul@a+2
 27573  0182CA  000A               	tblrd		*-
 27574  0182CC  CFF5 F215          	movff	tablat,___flmul@a+3
 27575  0182D0  EC40  F0B5         	call	___flmul	;wreg free
 27576  0182D4  C20E  F227         	movff	?___flmul,?_fround
 27577  0182D8  C20F  F228         	movff	?___flmul+1,?_fround+1
 27578  0182DC  C210  F229         	movff	?___flmul+2,?_fround+2
 27579  0182E0  C211  F22A         	movff	?___flmul+3,?_fround+3
 27580  0182E4  0012               	return	
 27581  0182E6                     l17626:
 27582                           
 27583                           ; BSR set to: 2
 27584                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 27585  0182E6  5133               	movf	fround@prec& (0+255),w,b
 27586  0182E8  0D04               	mullw	4
 27587  0182EA  0E0F               	movlw	low __npowers_
 27588  0182EC  24F3               	addwf	prodl,w,c
 27589  0182EE  6EF6               	movwf	tblptrl,c
 27590  0182F0  0EE5               	movlw	high __npowers_
 27591  0182F2  20F4               	addwfc	prodh,w,c
 27592  0182F4  6EF7               	movwf	tblptrh,c
 27593  0182F6                     	if	1	;There are 3 active tblptr bytes
 27594  0182F6  6AF8               	clrf	tblptru,c
 27595  0182F8  0E00               	movlw	low (__mediumconst shr (0+16))
 27596  0182FA  22F8               	addwfc	tblptru,f,c
 27597  0182FC                     	endif
 27598  0182FC  0009               	tblrd		*+
 27599  0182FE  CFF5 F20E          	movff	tablat,___flmul@b
 27600  018302  0009               	tblrd		*+
 27601  018304  CFF5 F20F          	movff	tablat,___flmul@b+1
 27602  018308  0009               	tblrd		*+
 27603  01830A  CFF5 F210          	movff	tablat,___flmul@b+2
 27604  01830E  000A               	tblrd		*-
 27605  018310  CFF5 F211          	movff	tablat,___flmul@b+3
 27606  018314  0E00               	movlw	0
 27607  018316  6F12               	movwf	___flmul@a& (0+255),b
 27608  018318  0E00               	movlw	0
 27609  01831A  6F13               	movwf	(___flmul@a+1)& (0+255),b
 27610  01831C  0E00               	movlw	0
 27611  01831E  6F14               	movwf	(___flmul@a+2)& (0+255),b
 27612  018320  0E3F               	movlw	63
 27613  018322  6F15               	movwf	(___flmul@a+3)& (0+255),b
 27614  018324  EC40  F0B5         	call	___flmul	;wreg free
 27615  018328  C20E  F227         	movff	?___flmul,?_fround
 27616  01832C  C20F  F228         	movff	?___flmul+1,?_fround+1
 27617  018330  C210  F229         	movff	?___flmul+2,?_fround+2
 27618  018334  C211  F22A         	movff	?___flmul+3,?_fround+3
 27619  018338  0012               	return		;funcret
 27620  01833A                     __end_of_fround:
 27621                           	opt callstack 0
 27622                           
 27623 ;; *************** function ___lwmod *****************
 27624 ;; Defined at:
 27625 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 27626 ;; Parameters:    Size  Location     Type
 27627 ;;  dividend        2    0[BANK2 ] unsigned int 
 27628 ;;  divisor         2    2[BANK2 ] unsigned int 
 27629 ;; Auto vars:     Size  Location     Type
 27630 ;;  counter         1    4[BANK2 ] unsigned char 
 27631 ;; Return value:  Size  Location     Type
 27632 ;;                  2    0[BANK2 ] unsigned int 
 27633 ;; Registers used:
 27634 ;;		wreg, status,2, status,0
 27635 ;; Tracked objects:
 27636 ;;		On entry : 0/0
 27637 ;;		On exit  : 0/0
 27638 ;;		Unchanged: 0/0
 27639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27640 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27641 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27643 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27644 ;;Total ram usage:        5 bytes
 27645 ;; Hardware stack levels used:    1
 27646 ;; Hardware stack levels required when called:   11
 27647 ;; This function calls:
 27648 ;;		Nothing
 27649 ;; This function is called by:
 27650 ;;		_fround
 27651 ;; This function uses a non-reentrant model
 27652 ;;
 27653                           
 27654                           	psect	text87
 27655  01BEE6                     __ptext87:
 27656                           	opt callstack 0
 27657  01BEE6                     ___lwmod:
 27658                           	opt callstack 13
 27659                           
 27660                           ;incstack = 0
 27661  01BEE6  0102               	movlb	2	; () banked
 27662  01BEE8  5102               	movf	___lwmod@divisor& (0+255),w,b
 27663  01BEEA  1103               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 27664  01BEEC  B4D8               	btfsc	status,2,c
 27665  01BEEE  D018               	goto	l3210
 27666                           
 27667                           ; BSR set to: 2
 27668  01BEF0  0E01               	movlw	1
 27669  01BEF2  6F04               	movwf	___lwmod@counter& (0+255),b
 27670  01BEF4  D004               	goto	l17596
 27671  01BEF6                     l17594:
 27672                           
 27673                           ; BSR set to: 2
 27674  01BEF6  90D8               	bcf	status,0,c
 27675  01BEF8  3702               	rlcf	___lwmod@divisor& (0+255),f,b
 27676  01BEFA  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 27677  01BEFC  2B04               	incf	___lwmod@counter& (0+255),f,b
 27678  01BEFE                     l17596:
 27679                           
 27680                           ; BSR set to: 2
 27681  01BEFE  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 27682  01BF00  D7FA               	goto	l17594
 27683  01BF02                     u21290:
 27684                           
 27685                           ; BSR set to: 2
 27686  01BF02  5102               	movf	___lwmod@divisor& (0+255),w,b
 27687  01BF04  5D00               	subwf	___lwmod@dividend& (0+255),w,b
 27688  01BF06  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27689  01BF08  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 27690  01BF0A  A0D8               	btfss	status,0,c
 27691  01BF0C  D004               	goto	l17602
 27692                           
 27693                           ; BSR set to: 2
 27694  01BF0E  5102               	movf	___lwmod@divisor& (0+255),w,b
 27695  01BF10  5F00               	subwf	___lwmod@dividend& (0+255),f,b
 27696  01BF12  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27697  01BF14  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 27698  01BF16                     l17602:
 27699                           
 27700                           ; BSR set to: 2
 27701  01BF16  90D8               	bcf	status,0,c
 27702  01BF18  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 27703  01BF1A  3302               	rrcf	___lwmod@divisor& (0+255),f,b
 27704                           
 27705                           ; BSR set to: 2
 27706  01BF1C  2F04               	decfsz	___lwmod@counter& (0+255),f,b
 27707  01BF1E  D7F1               	goto	u21290
 27708  01BF20                     l3210:
 27709                           
 27710                           ; BSR set to: 2
 27711  01BF20  C200  F200         	movff	___lwmod@dividend,?___lwmod
 27712  01BF24  C201  F201         	movff	___lwmod@dividend+1,?___lwmod+1
 27713                           
 27714                           ; BSR set to: 2
 27715  01BF28  0012               	return		;funcret
 27716  01BF2A                     __end_of___lwmod:
 27717                           	opt callstack 0
 27718                           
 27719 ;; *************** function ___lwdiv *****************
 27720 ;; Defined at:
 27721 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 27722 ;; Parameters:    Size  Location     Type
 27723 ;;  dividend        2    5[BANK2 ] unsigned int 
 27724 ;;  divisor         2    7[BANK2 ] unsigned int 
 27725 ;; Auto vars:     Size  Location     Type
 27726 ;;  quotient        2   10[BANK2 ] unsigned int 
 27727 ;;  counter         1    9[BANK2 ] unsigned char 
 27728 ;; Return value:  Size  Location     Type
 27729 ;;                  2    5[BANK2 ] unsigned int 
 27730 ;; Registers used:
 27731 ;;		wreg, status,2, status,0
 27732 ;; Tracked objects:
 27733 ;;		On entry : 0/0
 27734 ;;		On exit  : 0/0
 27735 ;;		Unchanged: 0/0
 27736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27737 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27738 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27740 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27741 ;;Total ram usage:        7 bytes
 27742 ;; Hardware stack levels used:    1
 27743 ;; Hardware stack levels required when called:   11
 27744 ;; This function calls:
 27745 ;;		Nothing
 27746 ;; This function is called by:
 27747 ;;		_fround
 27748 ;; This function uses a non-reentrant model
 27749 ;;
 27750                           
 27751                           	psect	text88
 27752  01BA6E                     __ptext88:
 27753                           	opt callstack 0
 27754  01BA6E                     ___lwdiv:
 27755                           	opt callstack 13
 27756                           
 27757                           ; BSR set to: 2
 27758                           ;incstack = 0
 27759  01BA6E  0E00               	movlw	0
 27760  01BA70  0102               	movlb	2	; () banked
 27761  01BA72  6F0B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 27762  01BA74  0E00               	movlw	0
 27763  01BA76  6F0A               	movwf	___lwdiv@quotient& (0+255),b
 27764                           
 27765                           ; BSR set to: 2
 27766  01BA78  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27767  01BA7A  1108               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 27768  01BA7C  B4D8               	btfsc	status,2,c
 27769  01BA7E  D01C               	goto	l3200
 27770                           
 27771                           ; BSR set to: 2
 27772  01BA80  0E01               	movlw	1
 27773  01BA82  6F09               	movwf	___lwdiv@counter& (0+255),b
 27774  01BA84  D004               	goto	l17576
 27775  01BA86                     l17574:
 27776                           
 27777                           ; BSR set to: 2
 27778  01BA86  90D8               	bcf	status,0,c
 27779  01BA88  3707               	rlcf	___lwdiv@divisor& (0+255),f,b
 27780  01BA8A  3708               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 27781  01BA8C  2B09               	incf	___lwdiv@counter& (0+255),f,b
 27782  01BA8E                     l17576:
 27783                           
 27784                           ; BSR set to: 2
 27785  01BA8E  AF08               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 27786  01BA90  D7FA               	goto	l17574
 27787  01BA92                     u21260:
 27788                           
 27789                           ; BSR set to: 2
 27790  01BA92  90D8               	bcf	status,0,c
 27791  01BA94  370A               	rlcf	___lwdiv@quotient& (0+255),f,b
 27792  01BA96  370B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 27793                           
 27794                           ; BSR set to: 2
 27795  01BA98  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27796  01BA9A  5D05               	subwf	___lwdiv@dividend& (0+255),w,b
 27797  01BA9C  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27798  01BA9E  5906               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 27799  01BAA0  A0D8               	btfss	status,0,c
 27800  01BAA2  D005               	goto	l17586
 27801                           
 27802                           ; BSR set to: 2
 27803  01BAA4  5107               	movf	___lwdiv@divisor& (0+255),w,b
 27804  01BAA6  5F05               	subwf	___lwdiv@dividend& (0+255),f,b
 27805  01BAA8  5108               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 27806  01BAAA  5B06               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 27807                           
 27808                           ; BSR set to: 2
 27809  01BAAC  810A               	bsf	___lwdiv@quotient& (0+255),0,b
 27810  01BAAE                     l17586:
 27811                           
 27812                           ; BSR set to: 2
 27813  01BAAE  90D8               	bcf	status,0,c
 27814  01BAB0  3308               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 27815  01BAB2  3307               	rrcf	___lwdiv@divisor& (0+255),f,b
 27816                           
 27817                           ; BSR set to: 2
 27818  01BAB4  2F09               	decfsz	___lwdiv@counter& (0+255),f,b
 27819  01BAB6  D7ED               	goto	u21260
 27820  01BAB8                     l3200:
 27821                           
 27822                           ; BSR set to: 2
 27823  01BAB8  C20A  F205         	movff	___lwdiv@quotient,?___lwdiv
 27824  01BABC  C20B  F206         	movff	___lwdiv@quotient+1,?___lwdiv+1
 27825                           
 27826                           ; BSR set to: 2
 27827  01BAC0  0012               	return		;funcret
 27828  01BAC2                     __end_of___lwdiv:
 27829                           	opt callstack 0
 27830                           
 27831 ;; *************** function __tdiv_to_l_ *****************
 27832 ;; Defined at:
 27833 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 27834 ;; Parameters:    Size  Location     Type
 27835 ;;  f1              4    0[BANK2 ] float 
 27836 ;;  f2              4    4[BANK2 ] float 
 27837 ;; Auto vars:     Size  Location     Type
 27838 ;;  quot            4   11[BANK2 ] unsigned long 
 27839 ;;  exp1            1   16[BANK2 ] unsigned char 
 27840 ;;  cntr            1   15[BANK2 ] unsigned char 
 27841 ;; Return value:  Size  Location     Type
 27842 ;;                  4    0[BANK2 ] unsigned long 
 27843 ;; Registers used:
 27844 ;;		wreg, status,2, status,0
 27845 ;; Tracked objects:
 27846 ;;		On entry : 0/0
 27847 ;;		On exit  : 0/0
 27848 ;;		Unchanged: 0/0
 27849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27850 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27851 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27852 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27853 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27854 ;;Total ram usage:       17 bytes
 27855 ;; Hardware stack levels used:    1
 27856 ;; Hardware stack levels required when called:   11
 27857 ;; This function calls:
 27858 ;;		Nothing
 27859 ;; This function is called by:
 27860 ;;		__doprnt
 27861 ;; This function uses a non-reentrant model
 27862 ;;
 27863                           
 27864                           	psect	text89
 27865  01A1E8                     __ptext89:
 27866                           	opt callstack 0
 27867  01A1E8                     __tdiv_to_l_:
 27868                           	opt callstack 14
 27869                           
 27870                           ; BSR set to: 2
 27871                           ;incstack = 0
 27872  01A1E8  C202  F208         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 27873  01A1EC  0102               	movlb	2	; () banked
 27874  01A1EE  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27875  01A1F0  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27876  01A1F2  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27877  01A1F4  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27878  01A1F6  E301               	bnc	u21411
 27879  01A1F8  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27880  01A1FA                     u21411:
 27881  01A1FA  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27882  01A1FC  6F10               	movwf	__tdiv_to_l_@exp1& (0+255),b
 27883  01A1FE  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 27884  01A200  A4D8               	btfss	status,2,c
 27885  01A202  D009               	goto	l17686
 27886  01A204                     u21420:
 27887                           
 27888                           ; BSR set to: 2
 27889  01A204  0E00               	movlw	0
 27890  01A206  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 27891  01A208  0E00               	movlw	0
 27892  01A20A  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 27893  01A20C  0E00               	movlw	0
 27894  01A20E  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 27895  01A210  0E00               	movlw	0
 27896  01A212  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 27897  01A214  0012               	return	
 27898  01A216                     l17686:
 27899                           
 27900                           ; BSR set to: 2
 27901  01A216  C206  F208         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 27902  01A21A  6B09               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 27903  01A21C  6B0A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 27904  01A21E  3505               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27905  01A220  3708               	rlcf	??__tdiv_to_l_& (0+255),f,b
 27906  01A222  E301               	bnc	u21431
 27907  01A224  8109               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 27908  01A226                     u21431:
 27909  01A226  5108               	movf	??__tdiv_to_l_& (0+255),w,b
 27910  01A228  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27911  01A22A  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27912  01A22C  B4D8               	btfsc	status,2,c
 27913  01A22E  D7EA               	goto	u21420
 27914                           
 27915                           ; BSR set to: 2
 27916  01A230  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 27917                           
 27918                           ; BSR set to: 2
 27919  01A232  0EFF               	movlw	255
 27920  01A234  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 27921  01A236  0EFF               	movlw	255
 27922  01A238  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27923  01A23A  0E00               	movlw	0
 27924  01A23C  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27925  01A23E  8F05               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 27926                           
 27927                           ; BSR set to: 2
 27928  01A240  0EFF               	movlw	255
 27929  01A242  1704               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 27930  01A244  0EFF               	movlw	255
 27931  01A246  1705               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 27932  01A248  0E00               	movlw	0
 27933  01A24A  1706               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 27934                           
 27935                           ; BSR set to: 2
 27936  01A24C  0E00               	movlw	0
 27937  01A24E  6F0B               	movwf	__tdiv_to_l_@quot& (0+255),b
 27938  01A250  0E00               	movlw	0
 27939  01A252  6F0C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 27940  01A254  0E00               	movlw	0
 27941  01A256  6F0D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 27942  01A258  0E00               	movlw	0
 27943  01A25A  6F0E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 27944                           
 27945                           ; BSR set to: 2
 27946  01A25C  0E7F               	movlw	127
 27947  01A25E  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27948                           
 27949                           ; BSR set to: 2
 27950  01A260  510F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 27951  01A262  0F98               	addlw	152
 27952  01A264  5F10               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 27953                           
 27954                           ; BSR set to: 2
 27955  01A266  0E18               	movlw	24
 27956  01A268  6F0F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 27957  01A26A                     l3052:
 27958                           
 27959                           ; BSR set to: 2
 27960  01A26A  90D8               	bcf	status,0,c
 27961  01A26C  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 27962  01A26E  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 27963  01A270  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 27964  01A272  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 27965                           
 27966                           ; BSR set to: 2
 27967  01A274  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27968  01A276  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 27969  01A278  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27970  01A27A  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 27971  01A27C  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27972  01A27E  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 27973  01A280  A0D8               	btfss	status,0,c
 27974  01A282  D007               	goto	l3053
 27975                           
 27976                           ; BSR set to: 2
 27977  01A284  5104               	movf	__tdiv_to_l_@f2& (0+255),w,b
 27978  01A286  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 27979  01A288  5105               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 27980  01A28A  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27981  01A28C  5106               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 27982  01A28E  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27983                           
 27984                           ; BSR set to: 2
 27985  01A290  810B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 27986  01A292                     l3053:
 27987                           
 27988                           ; BSR set to: 2
 27989  01A292  90D8               	bcf	status,0,c
 27990  01A294  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 27991  01A296  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 27992  01A298  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 27993                           
 27994                           ; BSR set to: 2
 27995  01A29A  2F0F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 27996  01A29C  D7E6               	goto	l3052
 27997                           
 27998                           ; BSR set to: 2
 27999  01A29E  AF10               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 28000  01A2A0  D00D               	goto	l17726
 28001                           
 28002                           ; BSR set to: 2
 28003  01A2A2  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28004  01A2A4  0A80               	xorlw	128
 28005  01A2A6  0F97               	addlw	151
 28006  01A2A8  A0D8               	btfss	status,0,c
 28007  01A2AA  D7AC               	goto	u21420
 28008  01A2AC                     l17722:
 28009                           
 28010                           ; BSR set to: 2
 28011  01A2AC  90D8               	bcf	status,0,c
 28012  01A2AE  330E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 28013  01A2B0  330D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 28014  01A2B2  330C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 28015  01A2B4  330B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 28016                           
 28017                           ; BSR set to: 2
 28018  01A2B6  3F10               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 28019  01A2B8  D7F9               	goto	l17722
 28020  01A2BA  D00D               	goto	u21490
 28021  01A2BC                     l17726:
 28022                           
 28023                           ; BSR set to: 2
 28024  01A2BC  0E17               	movlw	23
 28025  01A2BE  6510               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 28026  01A2C0  D007               	goto	l17734
 28027  01A2C2  D7A0               	goto	u21420
 28028  01A2C4                     l17732:
 28029                           
 28030                           ; BSR set to: 2
 28031  01A2C4  90D8               	bcf	status,0,c
 28032  01A2C6  370B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 28033  01A2C8  370C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 28034  01A2CA  370D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 28035  01A2CC  370E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 28036  01A2CE  0710               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 28037  01A2D0                     l17734:
 28038                           
 28039                           ; BSR set to: 2
 28040  01A2D0  5110               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28041  01A2D2  A4D8               	btfss	status,2,c
 28042  01A2D4  D7F7               	goto	l17732
 28043  01A2D6                     u21490:
 28044                           
 28045                           ; BSR set to: 2
 28046  01A2D6  C20B  F200         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 28047  01A2DA  C20C  F201         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 28048  01A2DE  C20D  F202         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 28049  01A2E2  C20E  F203         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 28050                           
 28051                           ; BSR set to: 2
 28052  01A2E6  0012               	return		;funcret
 28053  01A2E8                     __end_of__tdiv_to_l_:
 28054                           	opt callstack 0
 28055                           
 28056 ;; *************** function __div_to_l_ *****************
 28057 ;; Defined at:
 28058 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;  f1              4    0[BANK2 ] unsigned long 
 28061 ;;  f2              4    4[BANK2 ] unsigned long 
 28062 ;; Auto vars:     Size  Location     Type
 28063 ;;  quot            4    8[BANK2 ] unsigned long 
 28064 ;;  exp1            1   13[BANK2 ] unsigned char 
 28065 ;;  cntr            1   12[BANK2 ] unsigned char 
 28066 ;; Return value:  Size  Location     Type
 28067 ;;                  4    0[BANK2 ] unsigned long 
 28068 ;; Registers used:
 28069 ;;		wreg, status,2, status,0
 28070 ;; Tracked objects:
 28071 ;;		On entry : 0/0
 28072 ;;		On exit  : 0/0
 28073 ;;		Unchanged: 0/0
 28074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28075 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28078 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28079 ;;Total ram usage:       14 bytes
 28080 ;; Hardware stack levels used:    1
 28081 ;; Hardware stack levels required when called:   11
 28082 ;; This function calls:
 28083 ;;		Nothing
 28084 ;; This function is called by:
 28085 ;;		__doprnt
 28086 ;; This function uses a non-reentrant model
 28087 ;;
 28088                           
 28089                           	psect	text90
 28090  01A3E6                     __ptext90:
 28091                           	opt callstack 0
 28092  01A3E6                     __div_to_l_:
 28093                           	opt callstack 14
 28094                           
 28095                           ; BSR set to: 2
 28096                           ;incstack = 0
 28097  01A3E6  0102               	movlb	2	; () banked
 28098  01A3E8  3502               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 28099  01A3EA  3503               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 28100  01A3EC  6F0D               	movwf	__div_to_l_@exp1& (0+255),b
 28101  01A3EE  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 28102  01A3F0  A4D8               	btfss	status,2,c
 28103  01A3F2  D009               	goto	l17742
 28104  01A3F4                     u21500:
 28105                           
 28106                           ; BSR set to: 2
 28107  01A3F4  0E00               	movlw	0
 28108  01A3F6  6F00               	movwf	?__div_to_l_& (0+255),b
 28109  01A3F8  0E00               	movlw	0
 28110  01A3FA  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 28111  01A3FC  0E00               	movlw	0
 28112  01A3FE  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 28113  01A400  0E00               	movlw	0
 28114  01A402  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 28115  01A404  0012               	return	
 28116  01A406                     l17742:
 28117                           
 28118                           ; BSR set to: 2
 28119  01A406  3506               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 28120  01A408  3507               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 28121  01A40A  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 28122  01A40C  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 28123  01A40E  B4D8               	btfsc	status,2,c
 28124  01A410  D7F1               	goto	u21500
 28125                           
 28126                           ; BSR set to: 2
 28127  01A412  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 28128                           
 28129                           ; BSR set to: 2
 28130  01A414  0EFF               	movlw	255
 28131  01A416  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 28132  01A418  0EFF               	movlw	255
 28133  01A41A  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 28134  01A41C  0EFF               	movlw	255
 28135  01A41E  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 28136  01A420  0E00               	movlw	0
 28137  01A422  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 28138                           
 28139                           ; BSR set to: 2
 28140  01A424  8F06               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 28141  01A426  0EFF               	movlw	255
 28142  01A428  1704               	andwf	__div_to_l_@f2& (0+255),f,b
 28143  01A42A  0EFF               	movlw	255
 28144  01A42C  1705               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 28145  01A42E  0EFF               	movlw	255
 28146  01A430  1706               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 28147  01A432  0E00               	movlw	0
 28148  01A434  1707               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 28149                           
 28150                           ; BSR set to: 2
 28151  01A436  0E00               	movlw	0
 28152  01A438  6F08               	movwf	__div_to_l_@quot& (0+255),b
 28153  01A43A  0E00               	movlw	0
 28154  01A43C  6F09               	movwf	(__div_to_l_@quot+1)& (0+255),b
 28155  01A43E  0E00               	movlw	0
 28156  01A440  6F0A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 28157  01A442  0E00               	movlw	0
 28158  01A444  6F0B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 28159                           
 28160                           ; BSR set to: 2
 28161  01A446  0E7F               	movlw	127
 28162  01A448  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 28163                           
 28164                           ; BSR set to: 2
 28165  01A44A  510C               	movf	__div_to_l_@cntr& (0+255),w,b
 28166  01A44C  0FA0               	addlw	160
 28167  01A44E  5F0D               	subwf	__div_to_l_@exp1& (0+255),f,b
 28168                           
 28169                           ; BSR set to: 2
 28170  01A450  0E20               	movlw	32
 28171  01A452  6F0C               	movwf	__div_to_l_@cntr& (0+255),b
 28172  01A454                     l17762:
 28173                           
 28174                           ; BSR set to: 2
 28175  01A454  90D8               	bcf	status,0,c
 28176  01A456  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 28177  01A458  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 28178  01A45A  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 28179  01A45C  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 28180                           
 28181                           ; BSR set to: 2
 28182  01A45E  5104               	movf	__div_to_l_@f2& (0+255),w,b
 28183  01A460  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 28184  01A462  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 28185  01A464  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 28186  01A466  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 28187  01A468  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 28188  01A46A  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 28189  01A46C  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 28190  01A46E  A0D8               	btfss	status,0,c
 28191  01A470  D009               	goto	l17770
 28192                           
 28193                           ; BSR set to: 2
 28194  01A472  5104               	movf	__div_to_l_@f2& (0+255),w,b
 28195  01A474  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 28196  01A476  5105               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 28197  01A478  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 28198  01A47A  5106               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 28199  01A47C  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 28200  01A47E  5107               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 28201  01A480  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 28202                           
 28203                           ; BSR set to: 2
 28204  01A482  8108               	bsf	__div_to_l_@quot& (0+255),0,b
 28205  01A484                     l17770:
 28206                           
 28207                           ; BSR set to: 2
 28208  01A484  90D8               	bcf	status,0,c
 28209  01A486  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 28210  01A488  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 28211  01A48A  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 28212  01A48C  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 28213                           
 28214                           ; BSR set to: 2
 28215  01A48E  2F0C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 28216  01A490  D7E1               	goto	l17762
 28217                           
 28218                           ; BSR set to: 2
 28219  01A492  AF0D               	btfss	__div_to_l_@exp1& (0+255),7,b
 28220  01A494  D00D               	goto	l17786
 28221                           
 28222                           ; BSR set to: 2
 28223  01A496  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 28224  01A498  0A80               	xorlw	128
 28225  01A49A  0F9F               	addlw	159
 28226  01A49C  A0D8               	btfss	status,0,c
 28227  01A49E  D7AA               	goto	u21500
 28228  01A4A0                     l17782:
 28229                           
 28230                           ; BSR set to: 2
 28231  01A4A0  90D8               	bcf	status,0,c
 28232  01A4A2  330B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 28233  01A4A4  330A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 28234  01A4A6  3309               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 28235  01A4A8  3308               	rrcf	__div_to_l_@quot& (0+255),f,b
 28236                           
 28237                           ; BSR set to: 2
 28238  01A4AA  3F0D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 28239  01A4AC  D7F9               	goto	l17782
 28240  01A4AE  D00D               	goto	u21560
 28241  01A4B0                     l17786:
 28242                           
 28243                           ; BSR set to: 2
 28244  01A4B0  0E1F               	movlw	31
 28245  01A4B2  650D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 28246  01A4B4  D007               	goto	l17794
 28247  01A4B6  D79E               	goto	u21500
 28248  01A4B8                     l17792:
 28249                           
 28250                           ; BSR set to: 2
 28251  01A4B8  90D8               	bcf	status,0,c
 28252  01A4BA  3708               	rlcf	__div_to_l_@quot& (0+255),f,b
 28253  01A4BC  3709               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 28254  01A4BE  370A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 28255  01A4C0  370B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 28256  01A4C2  070D               	decf	__div_to_l_@exp1& (0+255),f,b
 28257  01A4C4                     l17794:
 28258                           
 28259                           ; BSR set to: 2
 28260  01A4C4  510D               	movf	__div_to_l_@exp1& (0+255),w,b
 28261  01A4C6  A4D8               	btfss	status,2,c
 28262  01A4C8  D7F7               	goto	l17792
 28263  01A4CA                     u21560:
 28264                           
 28265                           ; BSR set to: 2
 28266  01A4CA  C208  F200         	movff	__div_to_l_@quot,?__div_to_l_
 28267  01A4CE  C209  F201         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 28268  01A4D2  C20A  F202         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 28269  01A4D6  C20B  F203         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 28270                           
 28271                           ; BSR set to: 2
 28272  01A4DA  0012               	return		;funcret
 28273  01A4DC                     __end_of__div_to_l_:
 28274                           	opt callstack 0
 28275                           
 28276 ;; *************** function ___wmul *****************
 28277 ;; Defined at:
 28278 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 28279 ;; Parameters:    Size  Location     Type
 28280 ;;  multiplier      2    0[BANK2 ] unsigned int 
 28281 ;;  multiplicand    2    2[BANK2 ] unsigned int 
 28282 ;; Auto vars:     Size  Location     Type
 28283 ;;  product         2    4[BANK2 ] unsigned int 
 28284 ;; Return value:  Size  Location     Type
 28285 ;;                  2    0[BANK2 ] unsigned int 
 28286 ;; Registers used:
 28287 ;;		wreg, status,2, status,0, prodl, prodh
 28288 ;; Tracked objects:
 28289 ;;		On entry : 0/0
 28290 ;;		On exit  : 0/0
 28291 ;;		Unchanged: 0/0
 28292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28293 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28294 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28296 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28297 ;;Total ram usage:        6 bytes
 28298 ;; Hardware stack levels used:    1
 28299 ;; Hardware stack levels required when called:   11
 28300 ;; This function calls:
 28301 ;;		Nothing
 28302 ;; This function is called by:
 28303 ;;		_getStringSecondsAsTime
 28304 ;;		_getDaysFromOnTime
 28305 ;;		_getHoursFromOnTime
 28306 ;;		_getMinutesFromOnTime
 28307 ;;		_getSecondsFromOnTime
 28308 ;;		__doprnt
 28309 ;; This function uses a non-reentrant model
 28310 ;;
 28311                           
 28312                           	psect	text91
 28313  01C5FA                     __ptext91:
 28314                           	opt callstack 0
 28315  01C5FA                     ___wmul:
 28316                           	opt callstack 14
 28317                           
 28318                           ; BSR set to: 2
 28319                           ;incstack = 0
 28320  01C5FA  0102               	movlb	2	; () banked
 28321  01C5FC  5100               	movf	___wmul@multiplier& (0+255),w,b
 28322  01C5FE  0302               	mulwf	___wmul@multiplicand& (0+255),b
 28323  01C600  CFF3 F204          	movff	prodl,___wmul@product
 28324  01C604  CFF4 F205          	movff	prodh,___wmul@product+1
 28325  01C608  5100               	movf	___wmul@multiplier& (0+255),w,b
 28326  01C60A  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28327  01C60C  50F3               	movf	prodl,w,c
 28328  01C60E  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 28329  01C610  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28330  01C612  0302               	mulwf	___wmul@multiplicand& (0+255),b
 28331  01C614  50F3               	movf	prodl,w,c
 28332  01C616  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 28333                           
 28334                           ; BSR set to: 2
 28335  01C618  C204  F200         	movff	___wmul@product,?___wmul
 28336  01C61C  C205  F201         	movff	___wmul@product+1,?___wmul+1
 28337                           
 28338                           ; BSR set to: 2
 28339  01C620  0012               	return		;funcret
 28340  01C622                     __end_of___wmul:
 28341                           	opt callstack 0
 28342                           
 28343 ;; *************** function ___llmod *****************
 28344 ;; Defined at:
 28345 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 28346 ;; Parameters:    Size  Location     Type
 28347 ;;  dividend        4   13[BANK2 ] unsigned long 
 28348 ;;  divisor         4   17[BANK2 ] unsigned long 
 28349 ;; Auto vars:     Size  Location     Type
 28350 ;;  counter         1   21[BANK2 ] unsigned char 
 28351 ;; Return value:  Size  Location     Type
 28352 ;;                  4   13[BANK2 ] unsigned long 
 28353 ;; Registers used:
 28354 ;;		wreg, status,2, status,0
 28355 ;; Tracked objects:
 28356 ;;		On entry : 0/0
 28357 ;;		On exit  : 0/0
 28358 ;;		Unchanged: 0/0
 28359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28360 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28361 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28363 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28364 ;;Total ram usage:        9 bytes
 28365 ;; Hardware stack levels used:    1
 28366 ;; Hardware stack levels required when called:   11
 28367 ;; This function calls:
 28368 ;;		Nothing
 28369 ;; This function is called by:
 28370 ;;		__doprnt
 28371 ;; This function uses a non-reentrant model
 28372 ;;
 28373                           
 28374                           	psect	text92
 28375  01B646                     __ptext92:
 28376                           	opt callstack 0
 28377  01B646                     ___llmod:
 28378                           	opt callstack 14
 28379                           
 28380                           ; BSR set to: 2
 28381                           ;incstack = 0
 28382  01B646  0102               	movlb	2	; () banked
 28383  01B648  5111               	movf	___llmod@divisor& (0+255),w,b
 28384  01B64A  1112               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 28385  01B64C  1113               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 28386  01B64E  1114               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 28387  01B650  B4D8               	btfsc	status,2,c
 28388  01B652  D024               	goto	l3129
 28389                           
 28390                           ; BSR set to: 2
 28391  01B654  0E01               	movlw	1
 28392  01B656  6F15               	movwf	___llmod@counter& (0+255),b
 28393  01B658  D006               	goto	l17926
 28394  01B65A                     l17924:
 28395                           
 28396                           ; BSR set to: 2
 28397  01B65A  90D8               	bcf	status,0,c
 28398  01B65C  3711               	rlcf	___llmod@divisor& (0+255),f,b
 28399  01B65E  3712               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 28400  01B660  3713               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 28401  01B662  3714               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 28402  01B664  2B15               	incf	___llmod@counter& (0+255),f,b
 28403  01B666                     l17926:
 28404                           
 28405                           ; BSR set to: 2
 28406  01B666  AF14               	btfss	(___llmod@divisor+3)& (0+255),7,b
 28407  01B668  D7F8               	goto	l17924
 28408  01B66A                     u21770:
 28409                           
 28410                           ; BSR set to: 2
 28411  01B66A  5111               	movf	___llmod@divisor& (0+255),w,b
 28412  01B66C  5D0D               	subwf	___llmod@dividend& (0+255),w,b
 28413  01B66E  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28414  01B670  590E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 28415  01B672  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28416  01B674  590F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 28417  01B676  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28418  01B678  5910               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 28419  01B67A  A0D8               	btfss	status,0,c
 28420  01B67C  D008               	goto	l17932
 28421                           
 28422                           ; BSR set to: 2
 28423  01B67E  5111               	movf	___llmod@divisor& (0+255),w,b
 28424  01B680  5F0D               	subwf	___llmod@dividend& (0+255),f,b
 28425  01B682  5112               	movf	(___llmod@divisor+1)& (0+255),w,b
 28426  01B684  5B0E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 28427  01B686  5113               	movf	(___llmod@divisor+2)& (0+255),w,b
 28428  01B688  5B0F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 28429  01B68A  5114               	movf	(___llmod@divisor+3)& (0+255),w,b
 28430  01B68C  5B10               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 28431  01B68E                     l17932:
 28432                           
 28433                           ; BSR set to: 2
 28434  01B68E  90D8               	bcf	status,0,c
 28435  01B690  3314               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 28436  01B692  3313               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 28437  01B694  3312               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 28438  01B696  3311               	rrcf	___llmod@divisor& (0+255),f,b
 28439                           
 28440                           ; BSR set to: 2
 28441  01B698  2F15               	decfsz	___llmod@counter& (0+255),f,b
 28442  01B69A  D7E7               	goto	u21770
 28443  01B69C                     l3129:
 28444                           
 28445                           ; BSR set to: 2
 28446  01B69C  C20D  F20D         	movff	___llmod@dividend,?___llmod
 28447  01B6A0  C20E  F20E         	movff	___llmod@dividend+1,?___llmod+1
 28448  01B6A4  C20F  F20F         	movff	___llmod@dividend+2,?___llmod+2
 28449  01B6A8  C210  F210         	movff	___llmod@dividend+3,?___llmod+3
 28450                           
 28451                           ; BSR set to: 2
 28452  01B6AC  0012               	return		;funcret
 28453  01B6AE                     __end_of___llmod:
 28454                           	opt callstack 0
 28455                           
 28456 ;; *************** function ___lldiv *****************
 28457 ;; Defined at:
 28458 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 28459 ;; Parameters:    Size  Location     Type
 28460 ;;  dividend        4    0[BANK2 ] unsigned long 
 28461 ;;  divisor         4    4[BANK2 ] unsigned long 
 28462 ;; Auto vars:     Size  Location     Type
 28463 ;;  quotient        4    8[BANK2 ] unsigned long 
 28464 ;;  counter         1   12[BANK2 ] unsigned char 
 28465 ;; Return value:  Size  Location     Type
 28466 ;;                  4    0[BANK2 ] unsigned long 
 28467 ;; Registers used:
 28468 ;;		wreg, status,2, status,0
 28469 ;; Tracked objects:
 28470 ;;		On entry : 0/0
 28471 ;;		On exit  : 0/0
 28472 ;;		Unchanged: 0/0
 28473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28474 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28475 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28477 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28478 ;;Total ram usage:       13 bytes
 28479 ;; Hardware stack levels used:    1
 28480 ;; Hardware stack levels required when called:   11
 28481 ;; This function calls:
 28482 ;;		Nothing
 28483 ;; This function is called by:
 28484 ;;		_getStringSecondsAsTime
 28485 ;;		_getYearsFromOnTime
 28486 ;;		_getDaysFromOnTime
 28487 ;;		_getHoursFromOnTime
 28488 ;;		_getMinutesFromOnTime
 28489 ;;		_getSecondsFromOnTime
 28490 ;;		__doprnt
 28491 ;; This function uses a non-reentrant model
 28492 ;;
 28493                           
 28494                           	psect	text93
 28495  01B3DA                     __ptext93:
 28496                           	opt callstack 0
 28497  01B3DA                     ___lldiv:
 28498                           	opt callstack 14
 28499                           
 28500                           ; BSR set to: 2
 28501                           ;incstack = 0
 28502  01B3DA  0E00               	movlw	0
 28503  01B3DC  0102               	movlb	2	; () banked
 28504  01B3DE  6F08               	movwf	___lldiv@quotient& (0+255),b
 28505  01B3E0  0E00               	movlw	0
 28506  01B3E2  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 28507  01B3E4  0E00               	movlw	0
 28508  01B3E6  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 28509  01B3E8  0E00               	movlw	0
 28510  01B3EA  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 28511                           
 28512                           ; BSR set to: 2
 28513  01B3EC  5104               	movf	___lldiv@divisor& (0+255),w,b
 28514  01B3EE  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 28515  01B3F0  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 28516  01B3F2  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 28517  01B3F4  B4D8               	btfsc	status,2,c
 28518  01B3F6  D02A               	goto	l2714
 28519                           
 28520                           ; BSR set to: 2
 28521  01B3F8  0E01               	movlw	1
 28522  01B3FA  6F0C               	movwf	___lldiv@counter& (0+255),b
 28523  01B3FC  D006               	goto	l17810
 28524  01B3FE                     l17808:
 28525                           
 28526                           ; BSR set to: 2
 28527  01B3FE  90D8               	bcf	status,0,c
 28528  01B400  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 28529  01B402  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 28530  01B404  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 28531  01B406  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 28532  01B408  2B0C               	incf	___lldiv@counter& (0+255),f,b
 28533  01B40A                     l17810:
 28534                           
 28535                           ; BSR set to: 2
 28536  01B40A  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 28537  01B40C  D7F8               	goto	l17808
 28538  01B40E                     u21580:
 28539                           
 28540                           ; BSR set to: 2
 28541  01B40E  90D8               	bcf	status,0,c
 28542  01B410  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 28543  01B412  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 28544  01B414  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 28545  01B416  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 28546                           
 28547                           ; BSR set to: 2
 28548  01B418  5104               	movf	___lldiv@divisor& (0+255),w,b
 28549  01B41A  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 28550  01B41C  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28551  01B41E  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 28552  01B420  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28553  01B422  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 28554  01B424  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28555  01B426  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 28556  01B428  A0D8               	btfss	status,0,c
 28557  01B42A  D009               	goto	l17820
 28558                           
 28559                           ; BSR set to: 2
 28560  01B42C  5104               	movf	___lldiv@divisor& (0+255),w,b
 28561  01B42E  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 28562  01B430  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 28563  01B432  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 28564  01B434  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 28565  01B436  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 28566  01B438  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 28567  01B43A  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 28568                           
 28569                           ; BSR set to: 2
 28570  01B43C  8108               	bsf	___lldiv@quotient& (0+255),0,b
 28571  01B43E                     l17820:
 28572                           
 28573                           ; BSR set to: 2
 28574  01B43E  90D8               	bcf	status,0,c
 28575  01B440  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 28576  01B442  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 28577  01B444  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 28578  01B446  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 28579                           
 28580                           ; BSR set to: 2
 28581  01B448  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 28582  01B44A  D7E1               	goto	u21580
 28583  01B44C                     l2714:
 28584                           
 28585                           ; BSR set to: 2
 28586  01B44C  C208  F200         	movff	___lldiv@quotient,?___lldiv
 28587  01B450  C209  F201         	movff	___lldiv@quotient+1,?___lldiv+1
 28588  01B454  C20A  F202         	movff	___lldiv@quotient+2,?___lldiv+2
 28589  01B458  C20B  F203         	movff	___lldiv@quotient+3,?___lldiv+3
 28590                           
 28591                           ; BSR set to: 2
 28592  01B45C  0012               	return		;funcret
 28593  01B45E                     __end_of___lldiv:
 28594                           	opt callstack 0
 28595                           
 28596 ;; *************** function ___fltol *****************
 28597 ;; Defined at:
 28598 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 28599 ;; Parameters:    Size  Location     Type
 28600 ;;  f1              4   48[BANK2 ] unsigned long 
 28601 ;; Auto vars:     Size  Location     Type
 28602 ;;  exp1            1   57[BANK2 ] unsigned char 
 28603 ;;  sign1           1   56[BANK2 ] unsigned char 
 28604 ;; Return value:  Size  Location     Type
 28605 ;;                  4   48[BANK2 ] long 
 28606 ;; Registers used:
 28607 ;;		wreg, status,2, status,0
 28608 ;; Tracked objects:
 28609 ;;		On entry : 0/0
 28610 ;;		On exit  : 0/0
 28611 ;;		Unchanged: 0/0
 28612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28613 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28614 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28615 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28616 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28617 ;;Total ram usage:       10 bytes
 28618 ;; Hardware stack levels used:    1
 28619 ;; Hardware stack levels required when called:   11
 28620 ;; This function calls:
 28621 ;;		Nothing
 28622 ;; This function is called by:
 28623 ;;		_floatToEngineeringFormat
 28624 ;;		__doprnt
 28625 ;;		_ftoa
 28626 ;; This function uses a non-reentrant model
 28627 ;;
 28628                           
 28629                           	psect	text94
 28630  01ABCA                     __ptext94:
 28631                           	opt callstack 0
 28632  01ABCA                     ___fltol:
 28633                           	opt callstack 14
 28634                           
 28635                           ; BSR set to: 2
 28636                           ;incstack = 0
 28637  01ABCA  0102               	movlb	2	; () banked
 28638  01ABCC  3532               	rlcf	(___fltol@f1+2)& (0+255),w,b
 28639  01ABCE  3533               	rlcf	(___fltol@f1+3)& (0+255),w,b
 28640  01ABD0  6F39               	movwf	___fltol@exp1& (0+255),b
 28641  01ABD2  5139               	movf	___fltol@exp1& (0+255),w,b
 28642  01ABD4  A4D8               	btfss	status,2,c
 28643  01ABD6  D009               	goto	l17882
 28644  01ABD8                     u21690:
 28645                           
 28646                           ; BSR set to: 2
 28647  01ABD8  0E00               	movlw	0
 28648  01ABDA  6F30               	movwf	?___fltol& (0+255),b
 28649  01ABDC  0E00               	movlw	0
 28650  01ABDE  6F31               	movwf	(?___fltol+1)& (0+255),b
 28651  01ABE0  0E00               	movlw	0
 28652  01ABE2  6F32               	movwf	(?___fltol+2)& (0+255),b
 28653  01ABE4  0E00               	movlw	0
 28654  01ABE6  6F33               	movwf	(?___fltol+3)& (0+255),b
 28655  01ABE8  0012               	return	
 28656  01ABEA                     l17882:
 28657                           
 28658                           ; BSR set to: 2
 28659  01ABEA  C230  F234         	movff	___fltol@f1,??___fltol
 28660  01ABEE  C231  F235         	movff	___fltol@f1+1,??___fltol+1
 28661  01ABF2  C232  F236         	movff	___fltol@f1+2,??___fltol+2
 28662  01ABF6  C233  F237         	movff	___fltol@f1+3,??___fltol+3
 28663  01ABFA  0E20               	movlw	32
 28664  01ABFC  D005               	goto	u21700
 28665  01ABFE                     u21705:
 28666  01ABFE  90D8               	bcf	status,0,c
 28667  01AC00  3337               	rrcf	(??___fltol+3)& (0+255),f,b
 28668  01AC02  3336               	rrcf	(??___fltol+2)& (0+255),f,b
 28669  01AC04  3335               	rrcf	(??___fltol+1)& (0+255),f,b
 28670  01AC06  3334               	rrcf	??___fltol& (0+255),f,b
 28671  01AC08                     u21700:
 28672  01AC08  2EE8               	decfsz	wreg,f,c
 28673  01AC0A  D7F9               	goto	u21705
 28674  01AC0C  5134               	movf	??___fltol& (0+255),w,b
 28675  01AC0E  6F38               	movwf	___fltol@sign1& (0+255),b
 28676                           
 28677                           ; BSR set to: 2
 28678  01AC10  8F32               	bsf	(___fltol@f1+2)& (0+255),7,b
 28679                           
 28680                           ; BSR set to: 2
 28681  01AC12  0EFF               	movlw	255
 28682  01AC14  1730               	andwf	___fltol@f1& (0+255),f,b
 28683  01AC16  0EFF               	movlw	255
 28684  01AC18  1731               	andwf	(___fltol@f1+1)& (0+255),f,b
 28685  01AC1A  0EFF               	movlw	255
 28686  01AC1C  1732               	andwf	(___fltol@f1+2)& (0+255),f,b
 28687  01AC1E  0E00               	movlw	0
 28688  01AC20  1733               	andwf	(___fltol@f1+3)& (0+255),f,b
 28689                           
 28690                           ; BSR set to: 2
 28691  01AC22  0E96               	movlw	150
 28692  01AC24  5F39               	subwf	___fltol@exp1& (0+255),f,b
 28693                           
 28694                           ; BSR set to: 2
 28695  01AC26  AF39               	btfss	___fltol@exp1& (0+255),7,b
 28696  01AC28  D00D               	goto	l17902
 28697                           
 28698                           ; BSR set to: 2
 28699  01AC2A  5139               	movf	___fltol@exp1& (0+255),w,b
 28700  01AC2C  0A80               	xorlw	128
 28701  01AC2E  0F97               	addlw	151
 28702  01AC30  A0D8               	btfss	status,0,c
 28703  01AC32  D7D2               	goto	u21690
 28704  01AC34                     l17898:
 28705                           
 28706                           ; BSR set to: 2
 28707  01AC34  90D8               	bcf	status,0,c
 28708  01AC36  3333               	rrcf	(___fltol@f1+3)& (0+255),f,b
 28709  01AC38  3332               	rrcf	(___fltol@f1+2)& (0+255),f,b
 28710  01AC3A  3331               	rrcf	(___fltol@f1+1)& (0+255),f,b
 28711  01AC3C  3330               	rrcf	___fltol@f1& (0+255),f,b
 28712                           
 28713                           ; BSR set to: 2
 28714  01AC3E  3F39               	incfsz	___fltol@exp1& (0+255),f,b
 28715  01AC40  D7F9               	goto	l17898
 28716  01AC42  D00D               	goto	u21740
 28717  01AC44                     l17902:
 28718                           
 28719                           ; BSR set to: 2
 28720  01AC44  0E1F               	movlw	31
 28721  01AC46  6539               	cpfsgt	___fltol@exp1& (0+255),b
 28722  01AC48  D007               	goto	l17910
 28723  01AC4A  D7C6               	goto	u21690
 28724  01AC4C                     l17908:
 28725                           
 28726                           ; BSR set to: 2
 28727  01AC4C  90D8               	bcf	status,0,c
 28728  01AC4E  3730               	rlcf	___fltol@f1& (0+255),f,b
 28729  01AC50  3731               	rlcf	(___fltol@f1+1)& (0+255),f,b
 28730  01AC52  3732               	rlcf	(___fltol@f1+2)& (0+255),f,b
 28731  01AC54  3733               	rlcf	(___fltol@f1+3)& (0+255),f,b
 28732  01AC56  0739               	decf	___fltol@exp1& (0+255),f,b
 28733  01AC58                     l17910:
 28734                           
 28735                           ; BSR set to: 2
 28736  01AC58  5139               	movf	___fltol@exp1& (0+255),w,b
 28737  01AC5A  A4D8               	btfss	status,2,c
 28738  01AC5C  D7F7               	goto	l17908
 28739  01AC5E                     u21740:
 28740                           
 28741                           ; BSR set to: 2
 28742  01AC5E  5138               	movf	___fltol@sign1& (0+255),w,b
 28743  01AC60  B4D8               	btfsc	status,2,c
 28744  01AC62  D008               	goto	l17916
 28745                           
 28746                           ; BSR set to: 2
 28747  01AC64  1F33               	comf	(___fltol@f1+3)& (0+255),f,b
 28748  01AC66  1F32               	comf	(___fltol@f1+2)& (0+255),f,b
 28749  01AC68  1F31               	comf	(___fltol@f1+1)& (0+255),f,b
 28750  01AC6A  6D30               	negf	___fltol@f1& (0+255),b
 28751  01AC6C  0E00               	movlw	0
 28752  01AC6E  2331               	addwfc	(___fltol@f1+1)& (0+255),f,b
 28753  01AC70  2332               	addwfc	(___fltol@f1+2)& (0+255),f,b
 28754  01AC72  2333               	addwfc	(___fltol@f1+3)& (0+255),f,b
 28755  01AC74                     l17916:
 28756                           
 28757                           ; BSR set to: 2
 28758  01AC74  C230  F230         	movff	___fltol@f1,?___fltol
 28759  01AC78  C231  F231         	movff	___fltol@f1+1,?___fltol+1
 28760  01AC7C  C232  F232         	movff	___fltol@f1+2,?___fltol+2
 28761  01AC80  C233  F233         	movff	___fltol@f1+3,?___fltol+3
 28762                           
 28763                           ; BSR set to: 2
 28764  01AC84  0012               	return		;funcret
 28765  01AC86                     __end_of___fltol:
 28766                           	opt callstack 0
 28767                           
 28768 ;; *************** function ___flsub *****************
 28769 ;; Defined at:
 28770 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28771 ;; Parameters:    Size  Location     Type
 28772 ;;  b               4   76[BANK2 ] long 
 28773 ;;  a               4   80[BANK2 ] long 
 28774 ;; Auto vars:     Size  Location     Type
 28775 ;;		None
 28776 ;; Return value:  Size  Location     Type
 28777 ;;                  4   76[BANK2 ] long 
 28778 ;; Registers used:
 28779 ;;		wreg, status,2, status,0, cstack
 28780 ;; Tracked objects:
 28781 ;;		On entry : 0/0
 28782 ;;		On exit  : 0/0
 28783 ;;		Unchanged: 0/0
 28784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28785 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28788 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28789 ;;Total ram usage:        8 bytes
 28790 ;; Hardware stack levels used:    1
 28791 ;; Hardware stack levels required when called:   12
 28792 ;; This function calls:
 28793 ;;		___fladd
 28794 ;; This function is called by:
 28795 ;;		__doprnt
 28796 ;;		_ftoa
 28797 ;; This function uses a non-reentrant model
 28798 ;;
 28799                           
 28800                           	psect	text95
 28801  01BD86                     __ptext95:
 28802                           	opt callstack 0
 28803  01BD86                     ___flsub:
 28804                           	opt callstack 13
 28805                           
 28806                           ; BSR set to: 2
 28807                           ;incstack = 0
 28808  01BD86  0E00               	movlw	0
 28809  01BD88  0102               	movlb	2	; () banked
 28810  01BD8A  1B50               	xorwf	___flsub@a& (0+255),f,b
 28811  01BD8C  0E00               	movlw	0
 28812  01BD8E  1B51               	xorwf	(___flsub@a+1)& (0+255),f,b
 28813  01BD90  0E00               	movlw	0
 28814  01BD92  1B52               	xorwf	(___flsub@a+2)& (0+255),f,b
 28815  01BD94  0E80               	movlw	128
 28816  01BD96  1B53               	xorwf	(___flsub@a+3)& (0+255),f,b
 28817                           
 28818                           ; BSR set to: 2
 28819  01BD98  C24C  F234         	movff	___flsub@b,___fladd@b
 28820  01BD9C  C24D  F235         	movff	___flsub@b+1,___fladd@b+1
 28821  01BDA0  C24E  F236         	movff	___flsub@b+2,___fladd@b+2
 28822  01BDA4  C24F  F237         	movff	___flsub@b+3,___fladd@b+3
 28823  01BDA8  C250  F238         	movff	___flsub@a,___fladd@a
 28824  01BDAC  C251  F239         	movff	___flsub@a+1,___fladd@a+1
 28825  01BDB0  C252  F23A         	movff	___flsub@a+2,___fladd@a+2
 28826  01BDB4  C253  F23B         	movff	___flsub@a+3,___fladd@a+3
 28827  01BDB8  EC3D  F0BA         	call	___fladd	;wreg free
 28828  01BDBC  C234  F24C         	movff	?___fladd,?___flsub
 28829  01BDC0  C235  F24D         	movff	?___fladd+1,?___flsub+1
 28830  01BDC4  C236  F24E         	movff	?___fladd+2,?___flsub+2
 28831  01BDC8  C237  F24F         	movff	?___fladd+3,?___flsub+3
 28832  01BDCC  0012               	return		;funcret
 28833  01BDCE                     __end_of___flsub:
 28834                           	opt callstack 0
 28835                           
 28836 ;; *************** function ___fladd *****************
 28837 ;; Defined at:
 28838 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 28839 ;; Parameters:    Size  Location     Type
 28840 ;;  b               4   52[BANK2 ] long 
 28841 ;;  a               4   56[BANK2 ] long 
 28842 ;; Auto vars:     Size  Location     Type
 28843 ;;  grs             1   67[BANK2 ] unsigned char 
 28844 ;;  bexp            1   66[BANK2 ] unsigned char 
 28845 ;;  aexp            1   65[BANK2 ] unsigned char 
 28846 ;;  signs           1   64[BANK2 ] unsigned char 
 28847 ;; Return value:  Size  Location     Type
 28848 ;;                  4   52[BANK2 ] unsigned char 
 28849 ;; Registers used:
 28850 ;;		wreg, status,2, status,0
 28851 ;; Tracked objects:
 28852 ;;		On entry : 0/0
 28853 ;;		On exit  : 0/0
 28854 ;;		Unchanged: 0/0
 28855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28856 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28857 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28858 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28859 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28860 ;;Total ram usage:       16 bytes
 28861 ;; Hardware stack levels used:    1
 28862 ;; Hardware stack levels required when called:   11
 28863 ;; This function calls:
 28864 ;;		Nothing
 28865 ;; This function is called by:
 28866 ;;		__doprnt
 28867 ;;		___flsub
 28868 ;; This function uses a non-reentrant model
 28869 ;;
 28870                           
 28871                           	psect	text96
 28872  01747A                     __ptext96:
 28873                           	opt callstack 0
 28874  01747A                     ___fladd:
 28875                           	opt callstack 13
 28876                           
 28877                           ;incstack = 0
 28878  01747A  0102               	movlb	2	; () banked
 28879  01747C  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28880  01747E  0B80               	andlw	128
 28881  017480  6F40               	movwf	___fladd@signs& (0+255),b
 28882  017482  5137               	movf	(___fladd@b+3)& (0+255),w,b
 28883  017484  2537               	addwf	(___fladd@b+3)& (0+255),w,b
 28884  017486  6F42               	movwf	___fladd@bexp& (0+255),b
 28885                           
 28886                           ; BSR set to: 2
 28887  017488  BF36               	btfsc	(___fladd@b+2)& (0+255),7,b
 28888                           
 28889                           ; BSR set to: 2
 28890  01748A  8142               	bsf	___fladd@bexp& (0+255),0,b
 28891                           
 28892                           ; BSR set to: 2
 28893  01748C  5142               	movf	___fladd@bexp& (0+255),w,b
 28894  01748E  B4D8               	btfsc	status,2,c
 28895  017490  D00D               	goto	l17172
 28896                           
 28897                           ; BSR set to: 2
 28898  017492  2942               	incf	___fladd@bexp& (0+255),w,b
 28899  017494  A4D8               	btfss	status,2,c
 28900  017496  D008               	goto	l17168
 28901                           
 28902                           ; BSR set to: 2
 28903  017498  0E00               	movlw	0
 28904  01749A  6F34               	movwf	___fladd@b& (0+255),b
 28905  01749C  0E00               	movlw	0
 28906  01749E  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28907  0174A0  0E00               	movlw	0
 28908  0174A2  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28909  0174A4  0E00               	movlw	0
 28910  0174A6  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28911  0174A8                     l17168:
 28912                           
 28913                           ; BSR set to: 2
 28914  0174A8  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 28915  0174AA  D006               	goto	L18
 28916  0174AC                     l17172:
 28917                           
 28918                           ; BSR set to: 2
 28919  0174AC  0E00               	movlw	0
 28920  0174AE  6F34               	movwf	___fladd@b& (0+255),b
 28921  0174B0  0E00               	movlw	0
 28922  0174B2  6F35               	movwf	(___fladd@b+1)& (0+255),b
 28923  0174B4  0E00               	movlw	0
 28924  0174B6  6F36               	movwf	(___fladd@b+2)& (0+255),b
 28925  0174B8                     L18:
 28926  0174B8  0E00               	movlw	0
 28927  0174BA  6F37               	movwf	(___fladd@b+3)& (0+255),b
 28928                           
 28929                           ; BSR set to: 2
 28930  0174BC  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28931  0174BE  0B80               	andlw	128
 28932  0174C0  6F41               	movwf	___fladd@aexp& (0+255),b
 28933                           
 28934                           ; BSR set to: 2
 28935  0174C2  5140               	movf	___fladd@signs& (0+255),w,b
 28936  0174C4  1941               	xorwf	___fladd@aexp& (0+255),w,b
 28937  0174C6  A4D8               	btfss	status,2,c
 28938                           
 28939                           ; BSR set to: 2
 28940  0174C8  8D40               	bsf	___fladd@signs& (0+255),6,b
 28941                           
 28942                           ; BSR set to: 2
 28943  0174CA  513B               	movf	(___fladd@a+3)& (0+255),w,b
 28944  0174CC  253B               	addwf	(___fladd@a+3)& (0+255),w,b
 28945  0174CE  6F41               	movwf	___fladd@aexp& (0+255),b
 28946                           
 28947                           ; BSR set to: 2
 28948  0174D0  BF3A               	btfsc	(___fladd@a+2)& (0+255),7,b
 28949                           
 28950                           ; BSR set to: 2
 28951  0174D2  8141               	bsf	___fladd@aexp& (0+255),0,b
 28952                           
 28953                           ; BSR set to: 2
 28954  0174D4  5141               	movf	___fladd@aexp& (0+255),w,b
 28955  0174D6  B4D8               	btfsc	status,2,c
 28956  0174D8  D00D               	goto	l17196
 28957                           
 28958                           ; BSR set to: 2
 28959  0174DA  2941               	incf	___fladd@aexp& (0+255),w,b
 28960  0174DC  A4D8               	btfss	status,2,c
 28961  0174DE  D008               	goto	l17192
 28962                           
 28963                           ; BSR set to: 2
 28964  0174E0  0E00               	movlw	0
 28965  0174E2  6F38               	movwf	___fladd@a& (0+255),b
 28966  0174E4  0E00               	movlw	0
 28967  0174E6  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28968  0174E8  0E00               	movlw	0
 28969  0174EA  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28970  0174EC  0E00               	movlw	0
 28971  0174EE  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28972  0174F0                     l17192:
 28973                           
 28974                           ; BSR set to: 2
 28975  0174F0  8F3A               	bsf	(___fladd@a+2)& (0+255),7,b
 28976  0174F2  D006               	goto	L19
 28977  0174F4                     l17196:
 28978                           
 28979                           ; BSR set to: 2
 28980  0174F4  0E00               	movlw	0
 28981  0174F6  6F38               	movwf	___fladd@a& (0+255),b
 28982  0174F8  0E00               	movlw	0
 28983  0174FA  6F39               	movwf	(___fladd@a+1)& (0+255),b
 28984  0174FC  0E00               	movlw	0
 28985  0174FE  6F3A               	movwf	(___fladd@a+2)& (0+255),b
 28986  017500                     L19:
 28987  017500  0E00               	movlw	0
 28988  017502  6F3B               	movwf	(___fladd@a+3)& (0+255),b
 28989                           
 28990                           ; BSR set to: 2
 28991  017504  5142               	movf	___fladd@bexp& (0+255),w,b
 28992  017506  5D41               	subwf	___fladd@aexp& (0+255),w,b
 28993  017508  B0D8               	btfsc	status,0,c
 28994  01750A  D022               	goto	l17234
 28995                           
 28996                           ; BSR set to: 2
 28997  01750C  AD40               	btfss	___fladd@signs& (0+255),6,b
 28998  01750E  D002               	goto	l17204
 28999                           
 29000                           ; BSR set to: 2
 29001  017510  0E80               	movlw	128
 29002  017512  1B40               	xorwf	___fladd@signs& (0+255),f,b
 29003  017514                     l17204:
 29004                           
 29005                           ; BSR set to: 2
 29006  017514  C242  F243         	movff	___fladd@bexp,___fladd@grs
 29007                           
 29008                           ; BSR set to: 2
 29009  017518  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 29010                           
 29011                           ; BSR set to: 2
 29012  01751C  C243  F241         	movff	___fladd@grs,___fladd@aexp
 29013                           
 29014                           ; BSR set to: 2
 29015  017520  C234  F243         	movff	___fladd@b,___fladd@grs
 29016                           
 29017                           ; BSR set to: 2
 29018  017524  C238  F234         	movff	___fladd@a,___fladd@b
 29019                           
 29020                           ; BSR set to: 2
 29021  017528  C243  F238         	movff	___fladd@grs,___fladd@a
 29022                           
 29023                           ; BSR set to: 2
 29024  01752C  C235  F243         	movff	___fladd@b+1,___fladd@grs
 29025                           
 29026                           ; BSR set to: 2
 29027  017530  C239  F235         	movff	___fladd@a+1,___fladd@b+1
 29028                           
 29029                           ; BSR set to: 2
 29030  017534  C243  F239         	movff	___fladd@grs,___fladd@a+1
 29031                           
 29032                           ; BSR set to: 2
 29033  017538  C236  F243         	movff	___fladd@b+2,___fladd@grs
 29034                           
 29035                           ; BSR set to: 2
 29036  01753C  C23A  F236         	movff	___fladd@a+2,___fladd@b+2
 29037                           
 29038                           ; BSR set to: 2
 29039  017540  C243  F23A         	movff	___fladd@grs,___fladd@a+2
 29040                           
 29041                           ; BSR set to: 2
 29042  017544  C237  F243         	movff	___fladd@b+3,___fladd@grs
 29043                           
 29044                           ; BSR set to: 2
 29045  017548  C23B  F237         	movff	___fladd@a+3,___fladd@b+3
 29046                           
 29047                           ; BSR set to: 2
 29048  01754C  C243  F23B         	movff	___fladd@grs,___fladd@a+3
 29049  017550                     l17234:
 29050                           
 29051                           ; BSR set to: 2
 29052  017550  0E00               	movlw	0
 29053  017552  6F43               	movwf	___fladd@grs& (0+255),b
 29054                           
 29055                           ; BSR set to: 2
 29056  017554  5142               	movf	___fladd@bexp& (0+255),w,b
 29057  017556  C241  F23C         	movff	___fladd@aexp,??___fladd
 29058  01755A  6B3D               	clrf	(??___fladd+1)& (0+255),b
 29059  01755C  5F3C               	subwf	??___fladd& (0+255),f,b
 29060  01755E  0E00               	movlw	0
 29061  017560  5B3D               	subwfb	(??___fladd+1)& (0+255),f,b
 29062  017562  BF3D               	btfsc	(??___fladd+1)& (0+255),7,b
 29063  017564  D02C               	goto	l3238
 29064  017566  513D               	movf	(??___fladd+1)& (0+255),w,b
 29065  017568  E104               	bnz	u20640
 29066  01756A  0E1A               	movlw	26
 29067  01756C  5D3C               	subwf	??___fladd& (0+255),w,b
 29068  01756E  A0D8               	btfss	status,0,c
 29069  017570  D026               	goto	l3238
 29070  017572                     u20640:
 29071                           
 29072                           ; BSR set to: 2
 29073  017572  5134               	movf	___fladd@b& (0+255),w,b
 29074  017574  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 29075  017576  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 29076  017578  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 29077  01757A  B4D8               	btfsc	status,2,c
 29078  01757C  D002               	goto	u20650
 29079  01757E  0E01               	movlw	1
 29080  017580  D001               	goto	u20660
 29081  017582                     u20650:
 29082  017582  0E00               	movlw	0
 29083  017584                     u20660:
 29084  017584  6F43               	movwf	___fladd@grs& (0+255),b
 29085                           
 29086                           ; BSR set to: 2
 29087  017586  0E00               	movlw	0
 29088  017588  6F34               	movwf	___fladd@b& (0+255),b
 29089  01758A  0E00               	movlw	0
 29090  01758C  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29091  01758E  0E00               	movlw	0
 29092  017590  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29093  017592  0E00               	movlw	0
 29094  017594  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29095                           
 29096                           ; BSR set to: 2
 29097  017596  C241  F242         	movff	___fladd@aexp,___fladd@bexp
 29098  01759A  D015               	goto	u20690
 29099  01759C                     l3239:
 29100                           
 29101                           ; BSR set to: 2
 29102  01759C  A143               	btfss	___fladd@grs& (0+255),0,b
 29103  01759E  D005               	goto	l17246
 29104                           
 29105                           ; BSR set to: 2
 29106  0175A0  90D8               	bcf	status,0,c
 29107  0175A2  3143               	rrcf	___fladd@grs& (0+255),w,b
 29108  0175A4  0901               	iorlw	1
 29109  0175A6  6F43               	movwf	___fladd@grs& (0+255),b
 29110  0175A8  D002               	goto	l17248
 29111  0175AA                     l17246:
 29112                           
 29113                           ; BSR set to: 2
 29114  0175AA  90D8               	bcf	status,0,c
 29115  0175AC  3343               	rrcf	___fladd@grs& (0+255),f,b
 29116  0175AE                     l17248:
 29117                           
 29118                           ; BSR set to: 2
 29119  0175AE  B134               	btfsc	___fladd@b& (0+255),0,b
 29120                           
 29121                           ; BSR set to: 2
 29122  0175B0  8F43               	bsf	___fladd@grs& (0+255),7,b
 29123                           
 29124                           ; BSR set to: 2
 29125  0175B2  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 29126  0175B4  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 29127  0175B6  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 29128  0175B8  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 29129  0175BA  3334               	rrcf	___fladd@b& (0+255),f,b
 29130                           
 29131                           ; BSR set to: 2
 29132  0175BC  2B42               	incf	___fladd@bexp& (0+255),f,b
 29133  0175BE                     l3238:
 29134                           
 29135                           ; BSR set to: 2
 29136  0175BE  5141               	movf	___fladd@aexp& (0+255),w,b
 29137  0175C0  5D42               	subwf	___fladd@bexp& (0+255),w,b
 29138  0175C2  A0D8               	btfss	status,0,c
 29139  0175C4  D7EB               	goto	l3239
 29140  0175C6                     u20690:
 29141                           
 29142                           ; BSR set to: 2
 29143  0175C6  BD40               	btfsc	___fladd@signs& (0+255),6,b
 29144  0175C8  D028               	goto	l17280
 29145                           
 29146                           ; BSR set to: 2
 29147  0175CA  5142               	movf	___fladd@bexp& (0+255),w,b
 29148  0175CC  A4D8               	btfss	status,2,c
 29149  0175CE  D009               	goto	l17262
 29150                           
 29151                           ; BSR set to: 2
 29152  0175D0  0E00               	movlw	0
 29153  0175D2  6F34               	movwf	?___fladd& (0+255),b
 29154  0175D4  0E00               	movlw	0
 29155  0175D6  6F35               	movwf	(?___fladd+1)& (0+255),b
 29156  0175D8  0E00               	movlw	0
 29157  0175DA  6F36               	movwf	(?___fladd+2)& (0+255),b
 29158  0175DC  0E00               	movlw	0
 29159  0175DE  6F37               	movwf	(?___fladd+3)& (0+255),b
 29160  0175E0  0012               	return	
 29161  0175E2                     l17262:
 29162                           
 29163                           ; BSR set to: 2
 29164  0175E2  5138               	movf	___fladd@a& (0+255),w,b
 29165  0175E4  2734               	addwf	___fladd@b& (0+255),f,b
 29166  0175E6  5139               	movf	(___fladd@a+1)& (0+255),w,b
 29167  0175E8  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29168  0175EA  513A               	movf	(___fladd@a+2)& (0+255),w,b
 29169  0175EC  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29170  0175EE  513B               	movf	(___fladd@a+3)& (0+255),w,b
 29171  0175F0  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29172                           
 29173                           ; BSR set to: 2
 29174  0175F2  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 29175  0175F4  D071               	goto	u20820
 29176                           
 29177                           ; BSR set to: 2
 29178  0175F6  A143               	btfss	___fladd@grs& (0+255),0,b
 29179  0175F8  D005               	goto	l17270
 29180                           
 29181                           ; BSR set to: 2
 29182  0175FA  90D8               	bcf	status,0,c
 29183  0175FC  3143               	rrcf	___fladd@grs& (0+255),w,b
 29184  0175FE  0901               	iorlw	1
 29185  017600  6F43               	movwf	___fladd@grs& (0+255),b
 29186  017602  D002               	goto	l17272
 29187  017604                     l17270:
 29188                           
 29189                           ; BSR set to: 2
 29190  017604  90D8               	bcf	status,0,c
 29191  017606  3343               	rrcf	___fladd@grs& (0+255),f,b
 29192  017608                     l17272:
 29193                           
 29194                           ; BSR set to: 2
 29195  017608  B134               	btfsc	___fladd@b& (0+255),0,b
 29196                           
 29197                           ; BSR set to: 2
 29198  01760A  8F43               	bsf	___fladd@grs& (0+255),7,b
 29199                           
 29200                           ; BSR set to: 2
 29201  01760C  3537               	rlcf	(___fladd@b+3)& (0+255),w,b
 29202  01760E  3337               	rrcf	(___fladd@b+3)& (0+255),f,b
 29203  017610  3336               	rrcf	(___fladd@b+2)& (0+255),f,b
 29204  017612  3335               	rrcf	(___fladd@b+1)& (0+255),f,b
 29205  017614  3334               	rrcf	___fladd@b& (0+255),f,b
 29206                           
 29207                           ; BSR set to: 2
 29208  017616  2B42               	incf	___fladd@bexp& (0+255),f,b
 29209  017618  D05F               	goto	u20820
 29210  01761A                     l17280:
 29211                           
 29212                           ; BSR set to: 2
 29213  01761A  5138               	movf	___fladd@a& (0+255),w,b
 29214  01761C  5D34               	subwf	___fladd@b& (0+255),w,b
 29215  01761E  5139               	movf	(___fladd@a+1)& (0+255),w,b
 29216  017620  5935               	subwfb	(___fladd@b+1)& (0+255),w,b
 29217  017622  513A               	movf	(___fladd@a+2)& (0+255),w,b
 29218  017624  5936               	subwfb	(___fladd@b+2)& (0+255),w,b
 29219  017626  5137               	movf	(___fladd@b+3)& (0+255),w,b
 29220  017628  0A80               	xorlw	128
 29221  01762A  6F3C               	movwf	??___fladd& (0+255),b
 29222  01762C  513B               	movf	(___fladd@a+3)& (0+255),w,b
 29223  01762E  0A80               	xorlw	128
 29224  017630  593C               	subwfb	??___fladd& (0+255),w,b
 29225  017632  B0D8               	btfsc	status,0,c
 29226  017634  D025               	goto	l17290
 29227                           
 29228                           ; BSR set to: 2
 29229  017636  5134               	movf	___fladd@b& (0+255),w,b
 29230  017638  5D38               	subwf	___fladd@a& (0+255),w,b
 29231  01763A  6F3C               	movwf	??___fladd& (0+255),b
 29232  01763C  5135               	movf	(___fladd@b+1)& (0+255),w,b
 29233  01763E  5939               	subwfb	(___fladd@a+1)& (0+255),w,b
 29234  017640  6F3D               	movwf	(??___fladd+1)& (0+255),b
 29235  017642  5136               	movf	(___fladd@b+2)& (0+255),w,b
 29236  017644  593A               	subwfb	(___fladd@a+2)& (0+255),w,b
 29237  017646  6F3E               	movwf	(??___fladd+2)& (0+255),b
 29238  017648  5137               	movf	(___fladd@b+3)& (0+255),w,b
 29239  01764A  593B               	subwfb	(___fladd@a+3)& (0+255),w,b
 29240  01764C  6F3F               	movwf	(??___fladd+3)& (0+255),b
 29241  01764E  0EFF               	movlw	255
 29242  017650  253C               	addwf	??___fladd& (0+255),w,b
 29243  017652  6F34               	movwf	___fladd@b& (0+255),b
 29244  017654  0EFF               	movlw	255
 29245  017656  213D               	addwfc	(??___fladd+1)& (0+255),w,b
 29246  017658  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29247  01765A  0EFF               	movlw	255
 29248  01765C  213E               	addwfc	(??___fladd+2)& (0+255),w,b
 29249  01765E  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29250  017660  0EFF               	movlw	255
 29251  017662  213F               	addwfc	(??___fladd+3)& (0+255),w,b
 29252  017664  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29253  017666  0E80               	movlw	128
 29254  017668  1B40               	xorwf	___fladd@signs& (0+255),f,b
 29255                           
 29256                           ; BSR set to: 2
 29257  01766A  6D43               	negf	___fladd@grs& (0+255),b
 29258                           
 29259                           ; BSR set to: 2
 29260  01766C  5143               	movf	___fladd@grs& (0+255),w,b
 29261  01766E  A4D8               	btfss	status,2,c
 29262  017670  D00F               	goto	l3254
 29263                           
 29264                           ; BSR set to: 2
 29265  017672  0E01               	movlw	1
 29266  017674  2734               	addwf	___fladd@b& (0+255),f,b
 29267  017676  0E00               	movlw	0
 29268  017678  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29269  01767A  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29270  01767C  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29271  01767E  D008               	goto	l3254
 29272  017680                     l17290:
 29273                           
 29274                           ; BSR set to: 2
 29275  017680  5138               	movf	___fladd@a& (0+255),w,b
 29276  017682  5F34               	subwf	___fladd@b& (0+255),f,b
 29277  017684  5139               	movf	(___fladd@a+1)& (0+255),w,b
 29278  017686  5B35               	subwfb	(___fladd@b+1)& (0+255),f,b
 29279  017688  513A               	movf	(___fladd@a+2)& (0+255),w,b
 29280  01768A  5B36               	subwfb	(___fladd@b+2)& (0+255),f,b
 29281  01768C  513B               	movf	(___fladd@a+3)& (0+255),w,b
 29282  01768E  5B37               	subwfb	(___fladd@b+3)& (0+255),f,b
 29283  017690                     l3254:
 29284                           
 29285                           ; BSR set to: 2
 29286  017690  5134               	movf	___fladd@b& (0+255),w,b
 29287  017692  1135               	iorwf	(___fladd@b+1)& (0+255),w,b
 29288  017694  1136               	iorwf	(___fladd@b+2)& (0+255),w,b
 29289  017696  1137               	iorwf	(___fladd@b+3)& (0+255),w,b
 29290  017698  A4D8               	btfss	status,2,c
 29291  01769A  D01C               	goto	l17314
 29292                           
 29293                           ; BSR set to: 2
 29294  01769C  5143               	movf	___fladd@grs& (0+255),w,b
 29295  01769E  A4D8               	btfss	status,2,c
 29296  0176A0  D019               	goto	l17314
 29297                           
 29298                           ; BSR set to: 2
 29299  0176A2  0E00               	movlw	0
 29300  0176A4  6F34               	movwf	?___fladd& (0+255),b
 29301  0176A6  0E00               	movlw	0
 29302  0176A8  6F35               	movwf	(?___fladd+1)& (0+255),b
 29303  0176AA  0E00               	movlw	0
 29304  0176AC  6F36               	movwf	(?___fladd+2)& (0+255),b
 29305  0176AE  0E00               	movlw	0
 29306  0176B0  6F37               	movwf	(?___fladd+3)& (0+255),b
 29307  0176B2  0012               	return	
 29308  0176B4                     l17298:
 29309                           
 29310                           ; BSR set to: 2
 29311  0176B4  90D8               	bcf	status,0,c
 29312  0176B6  3734               	rlcf	___fladd@b& (0+255),f,b
 29313  0176B8  3735               	rlcf	(___fladd@b+1)& (0+255),f,b
 29314  0176BA  3736               	rlcf	(___fladd@b+2)& (0+255),f,b
 29315  0176BC  3737               	rlcf	(___fladd@b+3)& (0+255),f,b
 29316                           
 29317                           ; BSR set to: 2
 29318  0176BE  BF43               	btfsc	___fladd@grs& (0+255),7,b
 29319                           
 29320                           ; BSR set to: 2
 29321  0176C0  8134               	bsf	___fladd@b& (0+255),0,b
 29322                           
 29323                           ; BSR set to: 2
 29324  0176C2  A143               	btfss	___fladd@grs& (0+255),0,b
 29325  0176C4  D002               	goto	l17308
 29326                           
 29327                           ; BSR set to: 2
 29328  0176C6  80D8               	bsf	status,0,c
 29329  0176C8  D001               	goto	L20
 29330  0176CA                     l17308:
 29331                           
 29332                           ; BSR set to: 2
 29333  0176CA  90D8               	bcf	status,0,c
 29334  0176CC                     L20:
 29335  0176CC  3743               	rlcf	___fladd@grs& (0+255),f,b
 29336                           
 29337                           ; BSR set to: 2
 29338  0176CE  5142               	movf	___fladd@bexp& (0+255),w,b
 29339  0176D0  A4D8               	btfss	status,2,c
 29340                           
 29341                           ; BSR set to: 2
 29342  0176D2  0742               	decf	___fladd@bexp& (0+255),f,b
 29343  0176D4                     l17314:
 29344                           
 29345                           ; BSR set to: 2
 29346  0176D4  AF36               	btfss	(___fladd@b+2)& (0+255),7,b
 29347  0176D6  D7EE               	goto	l17298
 29348  0176D8                     u20820:
 29349                           
 29350                           ; BSR set to: 2
 29351  0176D8  0E00               	movlw	0
 29352  0176DA  6F41               	movwf	___fladd@aexp& (0+255),b
 29353                           
 29354                           ; BSR set to: 2
 29355  0176DC  AF43               	btfss	___fladd@grs& (0+255),7,b
 29356  0176DE  D00B               	goto	l3263
 29357                           
 29358                           ; BSR set to: 2
 29359  0176E0  C243  F23C         	movff	___fladd@grs,??___fladd
 29360  0176E4  0E7F               	movlw	127
 29361  0176E6  173C               	andwf	??___fladd& (0+255),f,b
 29362  0176E8  B4D8               	btfsc	status,2,c
 29363  0176EA  D003               	goto	l3264
 29364  0176EC                     u20840:
 29365                           
 29366                           ; BSR set to: 2
 29367  0176EC  0E01               	movlw	1
 29368  0176EE  6F41               	movwf	___fladd@aexp& (0+255),b
 29369  0176F0  D002               	goto	l3263
 29370  0176F2                     l3264:
 29371                           
 29372                           ; BSR set to: 2
 29373  0176F2  B134               	btfsc	___fladd@b& (0+255),0,b
 29374  0176F4  D7FB               	goto	u20840
 29375  0176F6                     l3263:
 29376                           
 29377                           ; BSR set to: 2
 29378  0176F6  5141               	movf	___fladd@aexp& (0+255),w,b
 29379  0176F8  B4D8               	btfsc	status,2,c
 29380  0176FA  D020               	goto	l17334
 29381                           
 29382                           ; BSR set to: 2
 29383  0176FC  0E01               	movlw	1
 29384  0176FE  2734               	addwf	___fladd@b& (0+255),f,b
 29385  017700  0E00               	movlw	0
 29386  017702  2335               	addwfc	(___fladd@b+1)& (0+255),f,b
 29387  017704  2336               	addwfc	(___fladd@b+2)& (0+255),f,b
 29388  017706  2337               	addwfc	(___fladd@b+3)& (0+255),f,b
 29389                           
 29390                           ; BSR set to: 2
 29391  017708  A137               	btfss	(___fladd@b+3)& (0+255),0,b
 29392  01770A  D018               	goto	l17334
 29393                           
 29394                           ; BSR set to: 2
 29395  01770C  C234  F23C         	movff	___fladd@b,??___fladd
 29396  017710  C235  F23D         	movff	___fladd@b+1,??___fladd+1
 29397  017714  C236  F23E         	movff	___fladd@b+2,??___fladd+2
 29398  017718  C237  F23F         	movff	___fladd@b+3,??___fladd+3
 29399  01771C  353F               	rlcf	(??___fladd+3)& (0+255),w,b
 29400  01771E  333F               	rrcf	(??___fladd+3)& (0+255),f,b
 29401  017720  333E               	rrcf	(??___fladd+2)& (0+255),f,b
 29402  017722  333D               	rrcf	(??___fladd+1)& (0+255),f,b
 29403  017724  333C               	rrcf	??___fladd& (0+255),f,b
 29404  017726  C23C  F234         	movff	??___fladd,___fladd@b
 29405  01772A  C23D  F235         	movff	??___fladd+1,___fladd@b+1
 29406  01772E  C23E  F236         	movff	??___fladd+2,___fladd@b+2
 29407  017732  C23F  F237         	movff	??___fladd+3,___fladd@b+3
 29408  017736  2942               	incf	___fladd@bexp& (0+255),w,b
 29409  017738  A4D8               	btfss	status,2,c
 29410                           
 29411                           ; BSR set to: 2
 29412  01773A  2B42               	incf	___fladd@bexp& (0+255),f,b
 29413  01773C                     l17334:
 29414                           
 29415                           ; BSR set to: 2
 29416  01773C  2942               	incf	___fladd@bexp& (0+255),w,b
 29417  01773E  B4D8               	btfsc	status,2,c
 29418  017740  D003               	goto	u20900
 29419                           
 29420                           ; BSR set to: 2
 29421  017742  5142               	movf	___fladd@bexp& (0+255),w,b
 29422  017744  A4D8               	btfss	status,2,c
 29423  017746  D00D               	goto	l17342
 29424  017748                     u20900:
 29425                           
 29426                           ; BSR set to: 2
 29427  017748  0E00               	movlw	0
 29428  01774A  6F34               	movwf	___fladd@b& (0+255),b
 29429  01774C  0E00               	movlw	0
 29430  01774E  6F35               	movwf	(___fladd@b+1)& (0+255),b
 29431  017750  0E00               	movlw	0
 29432  017752  6F36               	movwf	(___fladd@b+2)& (0+255),b
 29433  017754  0E00               	movlw	0
 29434  017756  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29435  017758  5142               	movf	___fladd@bexp& (0+255),w,b
 29436  01775A  A4D8               	btfss	status,2,c
 29437  01775C  D002               	goto	l17342
 29438                           
 29439                           ; BSR set to: 2
 29440  01775E  0E00               	movlw	0
 29441  017760  6F40               	movwf	___fladd@signs& (0+255),b
 29442  017762                     l17342:
 29443                           
 29444                           ; BSR set to: 2
 29445  017762  A142               	btfss	___fladd@bexp& (0+255),0,b
 29446  017764  D002               	goto	l17346
 29447                           
 29448                           ; BSR set to: 2
 29449  017766  8F36               	bsf	(___fladd@b+2)& (0+255),7,b
 29450  017768  D001               	goto	l17348
 29451  01776A                     l17346:
 29452                           
 29453                           ; BSR set to: 2
 29454  01776A  9F36               	bcf	(___fladd@b+2)& (0+255),7,b
 29455  01776C                     l17348:
 29456                           
 29457                           ; BSR set to: 2
 29458  01776C  90D8               	bcf	status,0,c
 29459  01776E  3142               	rrcf	___fladd@bexp& (0+255),w,b
 29460  017770  6F37               	movwf	(___fladd@b+3)& (0+255),b
 29461                           
 29462                           ; BSR set to: 2
 29463  017772  BF40               	btfsc	___fladd@signs& (0+255),7,b
 29464                           
 29465                           ; BSR set to: 2
 29466  017774  8F37               	bsf	(___fladd@b+3)& (0+255),7,b
 29467                           
 29468                           ; BSR set to: 2
 29469  017776  C234  F234         	movff	___fladd@b,?___fladd
 29470  01777A  C235  F235         	movff	___fladd@b+1,?___fladd+1
 29471  01777E  C236  F236         	movff	___fladd@b+2,?___fladd+2
 29472  017782  C237  F237         	movff	___fladd@b+3,?___fladd+3
 29473                           
 29474                           ; BSR set to: 2
 29475  017786  0012               	return		;funcret
 29476  017788                     __end_of___fladd:
 29477                           	opt callstack 0
 29478                           
 29479 ;; *************** function ___flneg *****************
 29480 ;; Defined at:
 29481 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 29482 ;; Parameters:    Size  Location     Type
 29483 ;;  f1              4    0[BANK2 ] unsigned char 
 29484 ;; Auto vars:     Size  Location     Type
 29485 ;;		None
 29486 ;; Return value:  Size  Location     Type
 29487 ;;                  4    0[BANK2 ] unsigned char 
 29488 ;; Registers used:
 29489 ;;		wreg, status,2, status,0
 29490 ;; Tracked objects:
 29491 ;;		On entry : 0/0
 29492 ;;		On exit  : 0/0
 29493 ;;		Unchanged: 0/0
 29494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29495 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29498 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29499 ;;Total ram usage:        4 bytes
 29500 ;; Hardware stack levels used:    1
 29501 ;; Hardware stack levels required when called:   11
 29502 ;; This function calls:
 29503 ;;		Nothing
 29504 ;; This function is called by:
 29505 ;;		__doprnt
 29506 ;;		_ftoa
 29507 ;; This function uses a non-reentrant model
 29508 ;;
 29509                           
 29510                           	psect	text97
 29511  01C49E                     __ptext97:
 29512                           	opt callstack 0
 29513  01C49E                     ___flneg:
 29514                           	opt callstack 14
 29515                           
 29516                           ; BSR set to: 2
 29517                           ;incstack = 0
 29518  01C49E  0102               	movlb	2	; () banked
 29519  01C4A0  5100               	movf	___flneg@f1& (0+255),w,b
 29520  01C4A2  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
 29521  01C4A4  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
 29522  01C4A6  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
 29523  01C4A8  B4D8               	btfsc	status,2,c
 29524  01C4AA  D008               	goto	l17872
 29525                           
 29526                           ; BSR set to: 2
 29527  01C4AC  0E00               	movlw	0
 29528  01C4AE  1B00               	xorwf	___flneg@f1& (0+255),f,b
 29529  01C4B0  0E00               	movlw	0
 29530  01C4B2  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
 29531  01C4B4  0E00               	movlw	0
 29532  01C4B6  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
 29533  01C4B8  0E80               	movlw	128
 29534  01C4BA  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
 29535  01C4BC                     l17872:
 29536                           
 29537                           ; BSR set to: 2
 29538  01C4BC  C200  F200         	movff	___flneg@f1,?___flneg
 29539  01C4C0  C201  F201         	movff	___flneg@f1+1,?___flneg+1
 29540  01C4C4  C202  F202         	movff	___flneg@f1+2,?___flneg+2
 29541  01C4C8  C203  F203         	movff	___flneg@f1+3,?___flneg+3
 29542                           
 29543                           ; BSR set to: 2
 29544  01C4CC  0012               	return		;funcret
 29545  01C4CE                     __end_of___flneg:
 29546                           	opt callstack 0
 29547                           
 29548 ;; *************** function ___flge *****************
 29549 ;; Defined at:
 29550 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 29551 ;; Parameters:    Size  Location     Type
 29552 ;;  ff1             4   76[BANK2 ] unsigned char 
 29553 ;;  ff2             4   80[BANK2 ] unsigned char 
 29554 ;; Auto vars:     Size  Location     Type
 29555 ;;		None
 29556 ;; Return value:  Size  Location     Type
 29557 ;;		None               void
 29558 ;; Registers used:
 29559 ;;		wreg, status,2, status,0
 29560 ;; Tracked objects:
 29561 ;;		On entry : 0/0
 29562 ;;		On exit  : 0/0
 29563 ;;		Unchanged: 0/0
 29564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29565 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29567 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29568 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29569 ;;Total ram usage:       12 bytes
 29570 ;; Hardware stack levels used:    1
 29571 ;; Hardware stack levels required when called:   11
 29572 ;; This function calls:
 29573 ;;		Nothing
 29574 ;; This function is called by:
 29575 ;;		_printCurrentMeasurements
 29576 ;;		_floatToEngineeringFormat
 29577 ;;		__doprnt
 29578 ;; This function uses a non-reentrant model
 29579 ;;
 29580                           
 29581                           	psect	text98
 29582  01A89A                     __ptext98:
 29583                           	opt callstack 0
 29584  01A89A                     ___flge:
 29585                           	opt callstack 14
 29586                           
 29587                           ; BSR set to: 2
 29588                           ;incstack = 0
 29589  01A89A  0E00               	movlw	0
 29590  01A89C  0102               	movlb	2	; () banked
 29591  01A89E  154C               	andwf	___flge@ff1& (0+255),w,b
 29592  01A8A0  6F54               	movwf	??___flge& (0+255),b
 29593  01A8A2  0E00               	movlw	0
 29594  01A8A4  154D               	andwf	(___flge@ff1+1)& (0+255),w,b
 29595  01A8A6  6F55               	movwf	(??___flge+1)& (0+255),b
 29596  01A8A8  0E80               	movlw	128
 29597  01A8AA  154E               	andwf	(___flge@ff1+2)& (0+255),w,b
 29598  01A8AC  6F56               	movwf	(??___flge+2)& (0+255),b
 29599  01A8AE  0E7F               	movlw	127
 29600  01A8B0  154F               	andwf	(___flge@ff1+3)& (0+255),w,b
 29601  01A8B2  6F57               	movwf	(??___flge+3)& (0+255),b
 29602  01A8B4  5154               	movf	??___flge& (0+255),w,b
 29603  01A8B6  1155               	iorwf	(??___flge+1)& (0+255),w,b
 29604  01A8B8  1156               	iorwf	(??___flge+2)& (0+255),w,b
 29605  01A8BA  1157               	iorwf	(??___flge+3)& (0+255),w,b
 29606  01A8BC  A4D8               	btfss	status,2,c
 29607  01A8BE  D008               	goto	l17850
 29608                           
 29609                           ; BSR set to: 2
 29610  01A8C0  0E00               	movlw	0
 29611  01A8C2  6F4C               	movwf	___flge@ff1& (0+255),b
 29612  01A8C4  0E00               	movlw	0
 29613  01A8C6  6F4D               	movwf	(___flge@ff1+1)& (0+255),b
 29614  01A8C8  0E00               	movlw	0
 29615  01A8CA  6F4E               	movwf	(___flge@ff1+2)& (0+255),b
 29616  01A8CC  0E00               	movlw	0
 29617  01A8CE  6F4F               	movwf	(___flge@ff1+3)& (0+255),b
 29618  01A8D0                     l17850:
 29619                           
 29620                           ; BSR set to: 2
 29621  01A8D0  0E00               	movlw	0
 29622  01A8D2  1550               	andwf	___flge@ff2& (0+255),w,b
 29623  01A8D4  6F54               	movwf	??___flge& (0+255),b
 29624  01A8D6  0E00               	movlw	0
 29625  01A8D8  1551               	andwf	(___flge@ff2+1)& (0+255),w,b
 29626  01A8DA  6F55               	movwf	(??___flge+1)& (0+255),b
 29627  01A8DC  0E80               	movlw	128
 29628  01A8DE  1552               	andwf	(___flge@ff2+2)& (0+255),w,b
 29629  01A8E0  6F56               	movwf	(??___flge+2)& (0+255),b
 29630  01A8E2  0E7F               	movlw	127
 29631  01A8E4  1553               	andwf	(___flge@ff2+3)& (0+255),w,b
 29632  01A8E6  6F57               	movwf	(??___flge+3)& (0+255),b
 29633  01A8E8  5154               	movf	??___flge& (0+255),w,b
 29634  01A8EA  1155               	iorwf	(??___flge+1)& (0+255),w,b
 29635  01A8EC  1156               	iorwf	(??___flge+2)& (0+255),w,b
 29636  01A8EE  1157               	iorwf	(??___flge+3)& (0+255),w,b
 29637  01A8F0  A4D8               	btfss	status,2,c
 29638  01A8F2  D008               	goto	l17854
 29639                           
 29640                           ; BSR set to: 2
 29641  01A8F4  0E00               	movlw	0
 29642  01A8F6  6F50               	movwf	___flge@ff2& (0+255),b
 29643  01A8F8  0E00               	movlw	0
 29644  01A8FA  6F51               	movwf	(___flge@ff2+1)& (0+255),b
 29645  01A8FC  0E00               	movlw	0
 29646  01A8FE  6F52               	movwf	(___flge@ff2+2)& (0+255),b
 29647  01A900  0E00               	movlw	0
 29648  01A902  6F53               	movwf	(___flge@ff2+3)& (0+255),b
 29649  01A904                     l17854:
 29650                           
 29651                           ; BSR set to: 2
 29652  01A904  AF4F               	btfss	(___flge@ff1+3)& (0+255),7,b
 29653  01A906  D009               	goto	l17858
 29654                           
 29655                           ; BSR set to: 2
 29656  01A908  6D4C               	negf	___flge@ff1& (0+255),b
 29657  01A90A  1F4D               	comf	(___flge@ff1+1)& (0+255),f,b
 29658  01A90C  B0D8               	btfsc	status,0,c
 29659  01A90E  2B4D               	incf	(___flge@ff1+1)& (0+255),f,b
 29660  01A910  1F4E               	comf	(___flge@ff1+2)& (0+255),f,b
 29661  01A912  B0D8               	btfsc	status,0,c
 29662  01A914  2B4E               	incf	(___flge@ff1+2)& (0+255),f,b
 29663  01A916  0E80               	movlw	128
 29664  01A918  574F               	subfwb	(___flge@ff1+3)& (0+255),f,b
 29665  01A91A                     l17858:
 29666                           
 29667                           ; BSR set to: 2
 29668  01A91A  AF53               	btfss	(___flge@ff2+3)& (0+255),7,b
 29669  01A91C  D009               	goto	l2965
 29670                           
 29671                           ; BSR set to: 2
 29672  01A91E  6D50               	negf	___flge@ff2& (0+255),b
 29673  01A920  1F51               	comf	(___flge@ff2+1)& (0+255),f,b
 29674  01A922  B0D8               	btfsc	status,0,c
 29675  01A924  2B51               	incf	(___flge@ff2+1)& (0+255),f,b
 29676  01A926  1F52               	comf	(___flge@ff2+2)& (0+255),f,b
 29677  01A928  B0D8               	btfsc	status,0,c
 29678  01A92A  2B52               	incf	(___flge@ff2+2)& (0+255),f,b
 29679  01A92C  0E80               	movlw	128
 29680  01A92E  5753               	subfwb	(___flge@ff2+3)& (0+255),f,b
 29681  01A930                     l2965:
 29682                           
 29683                           ; BSR set to: 2
 29684  01A930  0E00               	movlw	0
 29685  01A932  1B4C               	xorwf	___flge@ff1& (0+255),f,b
 29686  01A934  0E00               	movlw	0
 29687  01A936  1B4D               	xorwf	(___flge@ff1+1)& (0+255),f,b
 29688  01A938  0E00               	movlw	0
 29689  01A93A  1B4E               	xorwf	(___flge@ff1+2)& (0+255),f,b
 29690  01A93C  0E80               	movlw	128
 29691  01A93E  1B4F               	xorwf	(___flge@ff1+3)& (0+255),f,b
 29692  01A940  0E00               	movlw	0
 29693  01A942  1B50               	xorwf	___flge@ff2& (0+255),f,b
 29694  01A944  0E00               	movlw	0
 29695  01A946  1B51               	xorwf	(___flge@ff2+1)& (0+255),f,b
 29696  01A948  0E00               	movlw	0
 29697  01A94A  1B52               	xorwf	(___flge@ff2+2)& (0+255),f,b
 29698  01A94C  0E80               	movlw	128
 29699  01A94E  1B53               	xorwf	(___flge@ff2+3)& (0+255),f,b
 29700  01A950  5150               	movf	___flge@ff2& (0+255),w,b
 29701  01A952  5D4C               	subwf	___flge@ff1& (0+255),w,b
 29702  01A954  5151               	movf	(___flge@ff2+1)& (0+255),w,b
 29703  01A956  594D               	subwfb	(___flge@ff1+1)& (0+255),w,b
 29704  01A958  5152               	movf	(___flge@ff2+2)& (0+255),w,b
 29705  01A95A  594E               	subwfb	(___flge@ff1+2)& (0+255),w,b
 29706  01A95C  5153               	movf	(___flge@ff2+3)& (0+255),w,b
 29707  01A95E  594F               	subwfb	(___flge@ff1+3)& (0+255),w,b
 29708  01A960  B0D8               	btfsc	status,0,c
 29709  01A962  D002               	goto	l17864
 29710                           
 29711                           ; BSR set to: 2
 29712  01A964  90D8               	bcf	status,0,c
 29713  01A966  0012               	return	
 29714  01A968                     l17864:
 29715                           
 29716                           ; BSR set to: 2
 29717  01A968  80D8               	bsf	status,0,c
 29718                           
 29719                           ; BSR set to: 2
 29720  01A96A  0012               	return		;funcret
 29721  01A96C                     __end_of___flge:
 29722                           	opt callstack 0
 29723                           
 29724 ;; *************** function ___fleq *****************
 29725 ;; Defined at:
 29726 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 29727 ;; Parameters:    Size  Location     Type
 29728 ;;  ff1             4    0[BANK2 ] unsigned char 
 29729 ;;  ff2             4    4[BANK2 ] unsigned char 
 29730 ;; Auto vars:     Size  Location     Type
 29731 ;;		None
 29732 ;; Return value:  Size  Location     Type
 29733 ;;		None               void
 29734 ;; Registers used:
 29735 ;;		wreg, status,2, status,0
 29736 ;; Tracked objects:
 29737 ;;		On entry : 0/0
 29738 ;;		On exit  : 0/0
 29739 ;;		Unchanged: 0/0
 29740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29741 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29743 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29744 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29745 ;;Total ram usage:       12 bytes
 29746 ;; Hardware stack levels used:    1
 29747 ;; Hardware stack levels required when called:   11
 29748 ;; This function calls:
 29749 ;;		Nothing
 29750 ;; This function is called by:
 29751 ;;		_floatToEngineeringFormat
 29752 ;;		__doprnt
 29753 ;; This function uses a non-reentrant model
 29754 ;;
 29755                           
 29756                           	psect	text99
 29757  01B23E                     __ptext99:
 29758                           	opt callstack 0
 29759  01B23E                     ___fleq:
 29760                           	opt callstack 14
 29761                           
 29762                           ; BSR set to: 2
 29763                           ;incstack = 0
 29764  01B23E  0E00               	movlw	0
 29765  01B240  0102               	movlb	2	; () banked
 29766  01B242  1500               	andwf	___fleq@ff1& (0+255),w,b
 29767  01B244  6F08               	movwf	??___fleq& (0+255),b
 29768  01B246  0E00               	movlw	0
 29769  01B248  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
 29770  01B24A  6F09               	movwf	(??___fleq+1)& (0+255),b
 29771  01B24C  0E80               	movlw	128
 29772  01B24E  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
 29773  01B250  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29774  01B252  0E7F               	movlw	127
 29775  01B254  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
 29776  01B256  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29777  01B258  5108               	movf	??___fleq& (0+255),w,b
 29778  01B25A  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29779  01B25C  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29780  01B25E  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29781  01B260  A4D8               	btfss	status,2,c
 29782  01B262  D008               	goto	l17834
 29783                           
 29784                           ; BSR set to: 2
 29785  01B264  0E00               	movlw	0
 29786  01B266  6F00               	movwf	___fleq@ff1& (0+255),b
 29787  01B268  0E00               	movlw	0
 29788  01B26A  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
 29789  01B26C  0E00               	movlw	0
 29790  01B26E  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
 29791  01B270  0E00               	movlw	0
 29792  01B272  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
 29793  01B274                     l17834:
 29794                           
 29795                           ; BSR set to: 2
 29796  01B274  0E00               	movlw	0
 29797  01B276  1504               	andwf	___fleq@ff2& (0+255),w,b
 29798  01B278  6F08               	movwf	??___fleq& (0+255),b
 29799  01B27A  0E00               	movlw	0
 29800  01B27C  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
 29801  01B27E  6F09               	movwf	(??___fleq+1)& (0+255),b
 29802  01B280  0E80               	movlw	128
 29803  01B282  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
 29804  01B284  6F0A               	movwf	(??___fleq+2)& (0+255),b
 29805  01B286  0E7F               	movlw	127
 29806  01B288  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
 29807  01B28A  6F0B               	movwf	(??___fleq+3)& (0+255),b
 29808  01B28C  5108               	movf	??___fleq& (0+255),w,b
 29809  01B28E  1109               	iorwf	(??___fleq+1)& (0+255),w,b
 29810  01B290  110A               	iorwf	(??___fleq+2)& (0+255),w,b
 29811  01B292  110B               	iorwf	(??___fleq+3)& (0+255),w,b
 29812  01B294  A4D8               	btfss	status,2,c
 29813  01B296  D008               	goto	l17838
 29814                           
 29815                           ; BSR set to: 2
 29816  01B298  0E00               	movlw	0
 29817  01B29A  6F04               	movwf	___fleq@ff2& (0+255),b
 29818  01B29C  0E00               	movlw	0
 29819  01B29E  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
 29820  01B2A0  0E00               	movlw	0
 29821  01B2A2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
 29822  01B2A4  0E00               	movlw	0
 29823  01B2A6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
 29824  01B2A8                     l17838:
 29825                           
 29826                           ; BSR set to: 2
 29827  01B2A8  5104               	movf	___fleq@ff2& (0+255),w,b
 29828  01B2AA  1900               	xorwf	___fleq@ff1& (0+255),w,b
 29829  01B2AC  E10A               	bnz	u21620
 29830  01B2AE  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
 29831  01B2B0  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 29832  01B2B2  E107               	bnz	u21620
 29833  01B2B4  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
 29834  01B2B6  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 29835  01B2B8  E104               	bnz	u21620
 29836  01B2BA  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
 29837  01B2BC  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 29838  01B2BE  B4D8               	btfsc	status,2,c
 29839  01B2C0  D002               	goto	l17842
 29840  01B2C2                     u21620:
 29841                           
 29842                           ; BSR set to: 2
 29843  01B2C2  90D8               	bcf	status,0,c
 29844  01B2C4  0012               	return	
 29845  01B2C6                     l17842:
 29846                           
 29847                           ; BSR set to: 2
 29848  01B2C6  80D8               	bsf	status,0,c
 29849                           
 29850                           ; BSR set to: 2
 29851  01B2C8  0012               	return		;funcret
 29852  01B2CA                     __end_of___fleq:
 29853                           	opt callstack 0
 29854                           
 29855 ;; *************** function _abs *****************
 29856 ;; Defined at:
 29857 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abs.c"
 29858 ;; Parameters:    Size  Location     Type
 29859 ;;  a               2   58[BANK2 ] int 
 29860 ;; Auto vars:     Size  Location     Type
 29861 ;;		None
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  2   58[BANK2 ] int 
 29864 ;; Registers used:
 29865 ;;		wreg, status,2, status,0
 29866 ;; Tracked objects:
 29867 ;;		On entry : 0/0
 29868 ;;		On exit  : 0/0
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29871 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29873 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29874 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29875 ;;Total ram usage:        4 bytes
 29876 ;; Hardware stack levels used:    1
 29877 ;; Hardware stack levels required when called:   11
 29878 ;; This function calls:
 29879 ;;		Nothing
 29880 ;; This function is called by:
 29881 ;;		_floatToEngineeringFormat
 29882 ;; This function uses a non-reentrant model
 29883 ;;
 29884                           
 29885                           	psect	text100
 29886  01C554                     __ptext100:
 29887                           	opt callstack 0
 29888  01C554                     _abs:
 29889                           	opt callstack 15
 29890                           
 29891                           ; BSR set to: 2
 29892                           ;incstack = 0
 29893  01C554  0102               	movlb	2	; () banked
 29894  01C556  AF3B               	btfss	(abs@a+1)& (0+255),7,b
 29895  01C558  D00D               	goto	l3383
 29896                           
 29897                           ; BSR set to: 2
 29898  01C55A  C23A  F23C         	movff	abs@a,??_abs
 29899  01C55E  C23B  F23D         	movff	abs@a+1,??_abs+1
 29900  01C562  1F3C               	comf	??_abs& (0+255),f,b
 29901  01C564  1F3D               	comf	(??_abs+1)& (0+255),f,b
 29902  01C566  4B3C               	infsnz	??_abs& (0+255),f,b
 29903  01C568  2B3D               	incf	(??_abs+1)& (0+255),f,b
 29904  01C56A  C23C  F23A         	movff	??_abs,?_abs
 29905  01C56E  C23D  F23B         	movff	??_abs+1,?_abs+1
 29906  01C572  0012               	return	
 29907  01C574                     l3383:
 29908                           
 29909                           ; BSR set to: 2
 29910  01C574  C23A  F23A         	movff	abs@a,?_abs
 29911  01C578  C23B  F23B         	movff	abs@a+1,?_abs+1
 29912                           
 29913                           ; BSR set to: 2
 29914  01C57C  0012               	return		;funcret
 29915  01C57E                     __end_of_abs:
 29916                           	opt callstack 0
 29917                           
 29918 ;; *************** function ___fldiv *****************
 29919 ;; Defined at:
 29920 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 29921 ;; Parameters:    Size  Location     Type
 29922 ;;  b               4   39[BANK2 ] int 
 29923 ;;  a               4   43[BANK2 ] int 
 29924 ;; Auto vars:     Size  Location     Type
 29925 ;;  grs             4   58[BANK2 ] unsigned long 
 29926 ;;  rem             4   51[BANK2 ] unsigned long 
 29927 ;;  new_exp         2   56[BANK2 ] int 
 29928 ;;  aexp            1   63[BANK2 ] unsigned char 
 29929 ;;  bexp            1   62[BANK2 ] unsigned char 
 29930 ;;  sign            1   55[BANK2 ] unsigned char 
 29931 ;; Return value:  Size  Location     Type
 29932 ;;                  4   39[BANK2 ] unsigned char 
 29933 ;; Registers used:
 29934 ;;		wreg, status,2, status,0
 29935 ;; Tracked objects:
 29936 ;;		On entry : 0/0
 29937 ;;		On exit  : 0/0
 29938 ;;		Unchanged: 0/0
 29939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29940 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29941 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29942 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29943 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29944 ;;Total ram usage:       25 bytes
 29945 ;; Hardware stack levels used:    1
 29946 ;; Hardware stack levels required when called:   11
 29947 ;; This function calls:
 29948 ;;		Nothing
 29949 ;; This function is called by:
 29950 ;;		_floatToEngineeringFormat
 29951 ;; This function uses a non-reentrant model
 29952 ;;
 29953                           
 29954                           	psect	text101
 29955  0185E8                     __ptext101:
 29956                           	opt callstack 0
 29957  0185E8                     ___fldiv:
 29958                           	opt callstack 15
 29959                           
 29960                           ; BSR set to: 2
 29961                           ;incstack = 0
 29962  0185E8  0102               	movlb	2	; () banked
 29963  0185EA  512A               	movf	(___fldiv@b+3)& (0+255),w,b
 29964  0185EC  0B80               	andlw	128
 29965  0185EE  6F37               	movwf	___fldiv@sign& (0+255),b
 29966  0185F0  512A               	movf	(___fldiv@b+3)& (0+255),w,b
 29967  0185F2  252A               	addwf	(___fldiv@b+3)& (0+255),w,b
 29968  0185F4  6F3E               	movwf	___fldiv@bexp& (0+255),b
 29969                           
 29970                           ; BSR set to: 2
 29971  0185F6  BF29               	btfsc	(___fldiv@b+2)& (0+255),7,b
 29972                           
 29973                           ; BSR set to: 2
 29974  0185F8  813E               	bsf	___fldiv@bexp& (0+255),0,b
 29975                           
 29976                           ; BSR set to: 2
 29977  0185FA  513E               	movf	___fldiv@bexp& (0+255),w,b
 29978  0185FC  B4D8               	btfsc	status,2,c
 29979  0185FE  D00D               	goto	l18714
 29980                           
 29981                           ; BSR set to: 2
 29982  018600  293E               	incf	___fldiv@bexp& (0+255),w,b
 29983  018602  A4D8               	btfss	status,2,c
 29984  018604  D008               	goto	l18710
 29985                           
 29986                           ; BSR set to: 2
 29987  018606  0E00               	movlw	0
 29988  018608  6F27               	movwf	___fldiv@b& (0+255),b
 29989  01860A  0E00               	movlw	0
 29990  01860C  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 29991  01860E  0E00               	movlw	0
 29992  018610  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 29993  018612  0E00               	movlw	0
 29994  018614  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 29995  018616                     l18710:
 29996                           
 29997                           ; BSR set to: 2
 29998  018616  8F29               	bsf	(___fldiv@b+2)& (0+255),7,b
 29999  018618  D006               	goto	L21
 30000  01861A                     l18714:
 30001                           
 30002                           ; BSR set to: 2
 30003  01861A  0E00               	movlw	0
 30004  01861C  6F27               	movwf	___fldiv@b& (0+255),b
 30005  01861E  0E00               	movlw	0
 30006  018620  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 30007  018622  0E00               	movlw	0
 30008  018624  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 30009  018626                     L21:
 30010  018626  0E00               	movlw	0
 30011  018628  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30012                           
 30013                           ; BSR set to: 2
 30014  01862A  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 30015  01862C  0B80               	andlw	128
 30016  01862E  1B37               	xorwf	___fldiv@sign& (0+255),f,b
 30017                           
 30018                           ; BSR set to: 2
 30019  018630  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 30020  018632  252E               	addwf	(___fldiv@a+3)& (0+255),w,b
 30021  018634  6F3F               	movwf	___fldiv@aexp& (0+255),b
 30022                           
 30023                           ; BSR set to: 2
 30024  018636  BF2D               	btfsc	(___fldiv@a+2)& (0+255),7,b
 30025                           
 30026                           ; BSR set to: 2
 30027  018638  813F               	bsf	___fldiv@aexp& (0+255),0,b
 30028                           
 30029                           ; BSR set to: 2
 30030  01863A  513F               	movf	___fldiv@aexp& (0+255),w,b
 30031  01863C  B4D8               	btfsc	status,2,c
 30032  01863E  D00D               	goto	l18734
 30033                           
 30034                           ; BSR set to: 2
 30035  018640  293F               	incf	___fldiv@aexp& (0+255),w,b
 30036  018642  A4D8               	btfss	status,2,c
 30037  018644  D008               	goto	l18730
 30038                           
 30039                           ; BSR set to: 2
 30040  018646  0E00               	movlw	0
 30041  018648  6F2B               	movwf	___fldiv@a& (0+255),b
 30042  01864A  0E00               	movlw	0
 30043  01864C  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 30044  01864E  0E00               	movlw	0
 30045  018650  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 30046  018652  0E00               	movlw	0
 30047  018654  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 30048  018656                     l18730:
 30049                           
 30050                           ; BSR set to: 2
 30051  018656  8F2D               	bsf	(___fldiv@a+2)& (0+255),7,b
 30052  018658  D006               	goto	L22
 30053  01865A                     l18734:
 30054                           
 30055                           ; BSR set to: 2
 30056  01865A  0E00               	movlw	0
 30057  01865C  6F2B               	movwf	___fldiv@a& (0+255),b
 30058  01865E  0E00               	movlw	0
 30059  018660  6F2C               	movwf	(___fldiv@a+1)& (0+255),b
 30060  018662  0E00               	movlw	0
 30061  018664  6F2D               	movwf	(___fldiv@a+2)& (0+255),b
 30062  018666                     L22:
 30063  018666  0E00               	movlw	0
 30064  018668  6F2E               	movwf	(___fldiv@a+3)& (0+255),b
 30065                           
 30066                           ; BSR set to: 2
 30067  01866A  512B               	movf	___fldiv@a& (0+255),w,b
 30068  01866C  112C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 30069  01866E  112D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 30070  018670  112E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 30071  018672  A4D8               	btfss	status,2,c
 30072  018674  D017               	goto	l18748
 30073                           
 30074                           ; BSR set to: 2
 30075  018676  0E00               	movlw	0
 30076  018678  6F27               	movwf	___fldiv@b& (0+255),b
 30077  01867A  0E00               	movlw	0
 30078  01867C  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 30079  01867E  0E00               	movlw	0
 30080  018680  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 30081  018682  0E00               	movlw	0
 30082  018684  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30083                           
 30084                           ; BSR set to: 2
 30085  018686  0E80               	movlw	128
 30086  018688  1329               	iorwf	(___fldiv@b+2)& (0+255),f,b
 30087  01868A  0E7F               	movlw	127
 30088  01868C  132A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 30089  01868E                     l18742:
 30090                           
 30091                           ; BSR set to: 2
 30092  01868E  5137               	movf	___fldiv@sign& (0+255),w,b
 30093  018690  132A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 30094                           
 30095                           ; BSR set to: 2
 30096  018692  C227  F227         	movff	___fldiv@b,?___fldiv
 30097  018696  C228  F228         	movff	___fldiv@b+1,?___fldiv+1
 30098  01869A  C229  F229         	movff	___fldiv@b+2,?___fldiv+2
 30099  01869E  C22A  F22A         	movff	___fldiv@b+3,?___fldiv+3
 30100  0186A2  0012               	return	
 30101  0186A4                     l18748:
 30102                           
 30103                           ; BSR set to: 2
 30104  0186A4  513E               	movf	___fldiv@bexp& (0+255),w,b
 30105  0186A6  A4D8               	btfss	status,2,c
 30106  0186A8  D009               	goto	l18756
 30107                           
 30108                           ; BSR set to: 2
 30109                           
 30110                           ; BSR set to: 2
 30111  0186AA  0E00               	movlw	0
 30112  0186AC  6F27               	movwf	?___fldiv& (0+255),b
 30113  0186AE  0E00               	movlw	0
 30114  0186B0  6F28               	movwf	(?___fldiv+1)& (0+255),b
 30115  0186B2  0E00               	movlw	0
 30116  0186B4  6F29               	movwf	(?___fldiv+2)& (0+255),b
 30117  0186B6  0E00               	movlw	0
 30118  0186B8  6F2A               	movwf	(?___fldiv+3)& (0+255),b
 30119  0186BA  0012               	return	
 30120  0186BC                     l18756:
 30121                           
 30122                           ; BSR set to: 2
 30123  0186BC  513F               	movf	___fldiv@aexp& (0+255),w,b
 30124  0186BE  C23E  F22F         	movff	___fldiv@bexp,??___fldiv
 30125  0186C2  6B30               	clrf	(??___fldiv+1)& (0+255),b
 30126  0186C4  5F2F               	subwf	??___fldiv& (0+255),f,b
 30127  0186C6  0E00               	movlw	0
 30128  0186C8  5B30               	subwfb	(??___fldiv+1)& (0+255),f,b
 30129  0186CA  0E7F               	movlw	127
 30130  0186CC  252F               	addwf	??___fldiv& (0+255),w,b
 30131  0186CE  6F38               	movwf	___fldiv@new_exp& (0+255),b
 30132  0186D0  0E00               	movlw	0
 30133  0186D2  2130               	addwfc	(??___fldiv+1)& (0+255),w,b
 30134  0186D4  6F39               	movwf	(___fldiv@new_exp+1)& (0+255),b
 30135                           
 30136                           ; BSR set to: 2
 30137  0186D6  C227  F233         	movff	___fldiv@b,___fldiv@rem
 30138  0186DA  C228  F234         	movff	___fldiv@b+1,___fldiv@rem+1
 30139  0186DE  C229  F235         	movff	___fldiv@b+2,___fldiv@rem+2
 30140  0186E2  C22A  F236         	movff	___fldiv@b+3,___fldiv@rem+3
 30141                           
 30142                           ; BSR set to: 2
 30143  0186E6  0E00               	movlw	0
 30144  0186E8  6F27               	movwf	___fldiv@b& (0+255),b
 30145  0186EA  0E00               	movlw	0
 30146  0186EC  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 30147  0186EE  0E00               	movlw	0
 30148  0186F0  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 30149  0186F2  0E00               	movlw	0
 30150  0186F4  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30151                           
 30152                           ; BSR set to: 2
 30153  0186F6  0E00               	movlw	0
 30154  0186F8  6F3A               	movwf	___fldiv@grs& (0+255),b
 30155  0186FA  0E00               	movlw	0
 30156  0186FC  6F3B               	movwf	(___fldiv@grs+1)& (0+255),b
 30157  0186FE  0E00               	movlw	0
 30158  018700  6F3C               	movwf	(___fldiv@grs+2)& (0+255),b
 30159  018702  0E00               	movlw	0
 30160  018704  6F3D               	movwf	(___fldiv@grs+3)& (0+255),b
 30161                           
 30162                           ; BSR set to: 2
 30163  018706  0E00               	movlw	0
 30164  018708  6F3F               	movwf	___fldiv@aexp& (0+255),b
 30165  01870A  D028               	goto	l3293
 30166  01870C                     l18766:
 30167                           
 30168                           ; BSR set to: 2
 30169  01870C  513F               	movf	___fldiv@aexp& (0+255),w,b
 30170  01870E  B4D8               	btfsc	status,2,c
 30171  018710  D011               	goto	l18774
 30172                           
 30173                           ; BSR set to: 2
 30174  018712  90D8               	bcf	status,0,c
 30175  018714  3733               	rlcf	___fldiv@rem& (0+255),f,b
 30176  018716  3734               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 30177  018718  3735               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 30178  01871A  3736               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 30179  01871C  90D8               	bcf	status,0,c
 30180  01871E  3727               	rlcf	___fldiv@b& (0+255),f,b
 30181  018720  3728               	rlcf	(___fldiv@b+1)& (0+255),f,b
 30182  018722  3729               	rlcf	(___fldiv@b+2)& (0+255),f,b
 30183  018724  372A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 30184                           
 30185                           ; BSR set to: 2
 30186  018726  BF3D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 30187                           
 30188                           ; BSR set to: 2
 30189  018728  8127               	bsf	___fldiv@b& (0+255),0,b
 30190                           
 30191                           ; BSR set to: 2
 30192  01872A  90D8               	bcf	status,0,c
 30193  01872C  373A               	rlcf	___fldiv@grs& (0+255),f,b
 30194  01872E  373B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 30195  018730  373C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 30196  018732  373D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 30197  018734                     l18774:
 30198                           
 30199                           ; BSR set to: 2
 30200  018734  512B               	movf	___fldiv@a& (0+255),w,b
 30201  018736  5D33               	subwf	___fldiv@rem& (0+255),w,b
 30202  018738  512C               	movf	(___fldiv@a+1)& (0+255),w,b
 30203  01873A  5934               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 30204  01873C  512D               	movf	(___fldiv@a+2)& (0+255),w,b
 30205  01873E  5935               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 30206  018740  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 30207  018742  5936               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 30208  018744  A0D8               	btfss	status,0,c
 30209  018746  D009               	goto	l18780
 30210                           
 30211                           ; BSR set to: 2
 30212  018748  8D3D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 30213                           
 30214                           ; BSR set to: 2
 30215  01874A  512B               	movf	___fldiv@a& (0+255),w,b
 30216  01874C  5F33               	subwf	___fldiv@rem& (0+255),f,b
 30217  01874E  512C               	movf	(___fldiv@a+1)& (0+255),w,b
 30218  018750  5B34               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 30219  018752  512D               	movf	(___fldiv@a+2)& (0+255),w,b
 30220  018754  5B35               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 30221  018756  512E               	movf	(___fldiv@a+3)& (0+255),w,b
 30222  018758  5B36               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 30223  01875A                     l18780:
 30224                           
 30225                           ; BSR set to: 2
 30226  01875A  2B3F               	incf	___fldiv@aexp& (0+255),f,b
 30227  01875C                     l3293:
 30228                           
 30229                           ; BSR set to: 2
 30230  01875C  0E19               	movlw	25
 30231  01875E  653F               	cpfsgt	___fldiv@aexp& (0+255),b
 30232  018760  D7D5               	goto	l18766
 30233                           
 30234                           ; BSR set to: 2
 30235  018762  5133               	movf	___fldiv@rem& (0+255),w,b
 30236  018764  1134               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 30237  018766  1135               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 30238  018768  1136               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 30239  01876A  B4D8               	btfsc	status,2,c
 30240  01876C  D011               	goto	l18792
 30241                           
 30242                           ; BSR set to: 2
 30243  01876E  813A               	bsf	___fldiv@grs& (0+255),0,b
 30244  018770  D00F               	goto	l18792
 30245  018772                     l18786:
 30246                           
 30247                           ; BSR set to: 2
 30248  018772  90D8               	bcf	status,0,c
 30249  018774  3727               	rlcf	___fldiv@b& (0+255),f,b
 30250  018776  3728               	rlcf	(___fldiv@b+1)& (0+255),f,b
 30251  018778  3729               	rlcf	(___fldiv@b+2)& (0+255),f,b
 30252  01877A  372A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 30253                           
 30254                           ; BSR set to: 2
 30255  01877C  BF3D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 30256                           
 30257                           ; BSR set to: 2
 30258  01877E  8127               	bsf	___fldiv@b& (0+255),0,b
 30259                           
 30260                           ; BSR set to: 2
 30261  018780  90D8               	bcf	status,0,c
 30262  018782  373A               	rlcf	___fldiv@grs& (0+255),f,b
 30263  018784  373B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 30264  018786  373C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 30265  018788  373D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 30266  01878A  0738               	decf	___fldiv@new_exp& (0+255),f,b
 30267  01878C  A0D8               	btfss	status,0,c
 30268  01878E  0739               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 30269  018790                     l18792:
 30270                           
 30271                           ; BSR set to: 2
 30272  018790  AF29               	btfss	(___fldiv@b+2)& (0+255),7,b
 30273  018792  D7EF               	goto	l18786
 30274                           
 30275                           ; BSR set to: 2
 30276  018794  0E00               	movlw	0
 30277  018796  6F3F               	movwf	___fldiv@aexp& (0+255),b
 30278                           
 30279                           ; BSR set to: 2
 30280  018798  AF3D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 30281  01879A  D017               	goto	l3304
 30282                           
 30283                           ; BSR set to: 2
 30284  01879C  0EFF               	movlw	255
 30285  01879E  153A               	andwf	___fldiv@grs& (0+255),w,b
 30286  0187A0  6F2F               	movwf	??___fldiv& (0+255),b
 30287  0187A2  0EFF               	movlw	255
 30288  0187A4  153B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 30289  0187A6  6F30               	movwf	(??___fldiv+1)& (0+255),b
 30290  0187A8  0EFF               	movlw	255
 30291  0187AA  153C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 30292  0187AC  6F31               	movwf	(??___fldiv+2)& (0+255),b
 30293  0187AE  0E7F               	movlw	127
 30294  0187B0  153D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 30295  0187B2  6F32               	movwf	(??___fldiv+3)& (0+255),b
 30296  0187B4  512F               	movf	??___fldiv& (0+255),w,b
 30297  0187B6  1130               	iorwf	(??___fldiv+1)& (0+255),w,b
 30298  0187B8  1131               	iorwf	(??___fldiv+2)& (0+255),w,b
 30299  0187BA  1132               	iorwf	(??___fldiv+3)& (0+255),w,b
 30300  0187BC  B4D8               	btfsc	status,2,c
 30301  0187BE  D003               	goto	l3305
 30302  0187C0                     u23630:
 30303                           
 30304                           ; BSR set to: 2
 30305  0187C0  0E01               	movlw	1
 30306  0187C2  6F3F               	movwf	___fldiv@aexp& (0+255),b
 30307  0187C4  D002               	goto	l3304
 30308  0187C6                     l3305:
 30309                           
 30310                           ; BSR set to: 2
 30311  0187C6  B127               	btfsc	___fldiv@b& (0+255),0,b
 30312  0187C8  D7FB               	goto	u23630
 30313  0187CA                     l3304:
 30314                           
 30315                           ; BSR set to: 2
 30316  0187CA  513F               	movf	___fldiv@aexp& (0+255),w,b
 30317  0187CC  B4D8               	btfsc	status,2,c
 30318  0187CE  D01F               	goto	l18812
 30319                           
 30320                           ; BSR set to: 2
 30321  0187D0  0E01               	movlw	1
 30322  0187D2  2727               	addwf	___fldiv@b& (0+255),f,b
 30323  0187D4  0E00               	movlw	0
 30324  0187D6  2328               	addwfc	(___fldiv@b+1)& (0+255),f,b
 30325  0187D8  2329               	addwfc	(___fldiv@b+2)& (0+255),f,b
 30326  0187DA  232A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 30327                           
 30328                           ; BSR set to: 2
 30329  0187DC  A12A               	btfss	(___fldiv@b+3)& (0+255),0,b
 30330  0187DE  D017               	goto	l18812
 30331                           
 30332                           ; BSR set to: 2
 30333  0187E0  C227  F22F         	movff	___fldiv@b,??___fldiv
 30334  0187E4  C228  F230         	movff	___fldiv@b+1,??___fldiv+1
 30335  0187E8  C229  F231         	movff	___fldiv@b+2,??___fldiv+2
 30336  0187EC  C22A  F232         	movff	___fldiv@b+3,??___fldiv+3
 30337  0187F0  3532               	rlcf	(??___fldiv+3)& (0+255),w,b
 30338  0187F2  3332               	rrcf	(??___fldiv+3)& (0+255),f,b
 30339  0187F4  3331               	rrcf	(??___fldiv+2)& (0+255),f,b
 30340  0187F6  3330               	rrcf	(??___fldiv+1)& (0+255),f,b
 30341  0187F8  332F               	rrcf	??___fldiv& (0+255),f,b
 30342  0187FA  C22F  F227         	movff	??___fldiv,___fldiv@b
 30343  0187FE  C230  F228         	movff	??___fldiv+1,___fldiv@b+1
 30344  018802  C231  F229         	movff	??___fldiv+2,___fldiv@b+2
 30345  018806  C232  F22A         	movff	??___fldiv+3,___fldiv@b+3
 30346                           
 30347                           ; BSR set to: 2
 30348  01880A  4B38               	infsnz	___fldiv@new_exp& (0+255),f,b
 30349  01880C  2B39               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 30350  01880E                     l18812:
 30351                           
 30352                           ; BSR set to: 2
 30353  01880E  BF39               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 30354  018810  D010               	goto	l18816
 30355  018812  5139               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 30356  018814  E103               	bnz	u23670
 30357  018816  2938               	incf	___fldiv@new_exp& (0+255),w,b
 30358  018818  A0D8               	btfss	status,0,c
 30359  01881A  D00B               	goto	l18816
 30360  01881C                     u23670:
 30361                           
 30362                           ; BSR set to: 2
 30363  01881C  0E00               	movlw	0
 30364  01881E  6F39               	movwf	(___fldiv@new_exp+1)& (0+255),b
 30365  018820  6938               	setf	___fldiv@new_exp& (0+255),b
 30366  018822  0E00               	movlw	0
 30367  018824  6F27               	movwf	___fldiv@b& (0+255),b
 30368  018826  0E00               	movlw	0
 30369  018828  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 30370  01882A  0E00               	movlw	0
 30371  01882C  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 30372  01882E  0E00               	movlw	0
 30373  018830  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30374  018832                     l18816:
 30375                           
 30376                           ; BSR set to: 2
 30377  018832  BF39               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 30378  018834  D005               	goto	u23680
 30379  018836  5139               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 30380  018838  E111               	bnz	l18820
 30381  01883A  0538               	decf	___fldiv@new_exp& (0+255),w,b
 30382  01883C  B0D8               	btfsc	status,0,c
 30383  01883E  D00E               	goto	l18820
 30384  018840                     u23680:
 30385                           
 30386                           ; BSR set to: 2
 30387  018840  0E00               	movlw	0
 30388  018842  6F39               	movwf	(___fldiv@new_exp+1)& (0+255),b
 30389  018844  0E00               	movlw	0
 30390  018846  6F38               	movwf	___fldiv@new_exp& (0+255),b
 30391  018848  0E00               	movlw	0
 30392  01884A  6F27               	movwf	___fldiv@b& (0+255),b
 30393  01884C  0E00               	movlw	0
 30394  01884E  6F28               	movwf	(___fldiv@b+1)& (0+255),b
 30395  018850  0E00               	movlw	0
 30396  018852  6F29               	movwf	(___fldiv@b+2)& (0+255),b
 30397  018854  0E00               	movlw	0
 30398  018856  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30399  018858  0E00               	movlw	0
 30400  01885A  6F37               	movwf	___fldiv@sign& (0+255),b
 30401  01885C                     l18820:
 30402                           
 30403                           ; BSR set to: 2
 30404  01885C  C238  F23E         	movff	___fldiv@new_exp,___fldiv@bexp
 30405                           
 30406                           ; BSR set to: 2
 30407  018860  A13E               	btfss	___fldiv@bexp& (0+255),0,b
 30408  018862  D002               	goto	l18826
 30409                           
 30410                           ; BSR set to: 2
 30411  018864  8F29               	bsf	(___fldiv@b+2)& (0+255),7,b
 30412  018866  D001               	goto	l18828
 30413  018868                     l18826:
 30414                           
 30415                           ; BSR set to: 2
 30416  018868  9F29               	bcf	(___fldiv@b+2)& (0+255),7,b
 30417  01886A                     l18828:
 30418                           
 30419                           ; BSR set to: 2
 30420  01886A  90D8               	bcf	status,0,c
 30421  01886C  313E               	rrcf	___fldiv@bexp& (0+255),w,b
 30422  01886E  6F2A               	movwf	(___fldiv@b+3)& (0+255),b
 30423  018870  D70E               	goto	l18742
 30424  018872                     __end_of___fldiv:
 30425                           	opt callstack 0
 30426                           
 30427 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 30428 ;; Defined at:
 30429 ;;		line 294 in file "oled.c"
 30430 ;; Parameters:    Size  Location     Type
 30431 ;;		None
 30432 ;; Auto vars:     Size  Location     Type
 30433 ;;  char_index      1   38[BANK2 ] unsigned char 
 30434 ;;  char_index      1   37[BANK2 ] unsigned char 
 30435 ;;  char_index      1   36[BANK2 ] unsigned char 
 30436 ;;  char_index      1   35[BANK2 ] unsigned char 
 30437 ;; Return value:  Size  Location     Type
 30438 ;;                  1    wreg      void 
 30439 ;; Registers used:
 30440 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30441 ;; Tracked objects:
 30442 ;;		On entry : 0/0
 30443 ;;		On exit  : 0/0
 30444 ;;		Unchanged: 0/0
 30445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30447 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30449 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30450 ;;Total ram usage:        4 bytes
 30451 ;; Hardware stack levels used:    1
 30452 ;; Hardware stack levels required when called:   16
 30453 ;; This function calls:
 30454 ;;		_OLED_WriteString
 30455 ;;		_OLED_YX
 30456 ;;		_strlen
 30457 ;; This function is called by:
 30458 ;;		_OLED_updateHandler
 30459 ;; This function uses a non-reentrant model
 30460 ;;
 30461                           
 30462                           	psect	text102
 30463  01A0C6                     __ptext102:
 30464                           	opt callstack 0
 30465  01A0C6                     _OLED_UpdateFromRAMBuffer:
 30466                           	opt callstack 13
 30467                           
 30468                           ;oled.c: 298: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line0); char_index < size
      +                          of(OLED_RAM_Buffer.line0) - 1; char_index++) {
 30469                           
 30470                           ; BSR set to: 2
 30471                           ;incstack = 0
 30472  01A0C6  0E00               	movlw	low _OLED_RAM_Buffer
 30473  01A0C8  0102               	movlb	2	; () banked
 30474  01A0CA  6F00               	movwf	strlen@s& (0+255),b
 30475  01A0CC  0E03               	movlw	high _OLED_RAM_Buffer
 30476  01A0CE  6F01               	movwf	(strlen@s+1)& (0+255),b
 30477  01A0D0  EC67  F0E2         	call	_strlen	;wreg free
 30478  01A0D4  0102               	movlb	2	; () banked
 30479  01A0D6  5100               	movf	?_strlen& (0+255),w,b
 30480  01A0D8  6F23               	movwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30481  01A0DA                     l21330:
 30482                           
 30483                           ; BSR set to: 2
 30484  01A0DA  0E0F               	movlw	15
 30485  01A0DC  6523               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index& (0+255),b
 30486  01A0DE  D001               	goto	l21334
 30487  01A0E0  D00A               	goto	l21340
 30488  01A0E2                     l21334:
 30489                           
 30490                           ; BSR set to: 2
 30491                           ;oled.c: 299: OLED_RAM_Buffer.line0[char_index] = ' ';
 30492  01A0E2  0E00               	movlw	low _OLED_RAM_Buffer
 30493  01A0E4  2523               	addwf	OLED_UpdateFromRAMBuffer@char_index& (0+255),w,b
 30494  01A0E6  6ED9               	movwf	fsr2l,c
 30495  01A0E8  6ADA               	clrf	fsr2h,c
 30496  01A0EA  0E03               	movlw	high _OLED_RAM_Buffer
 30497  01A0EC  22DA               	addwfc	fsr2h,f,c
 30498  01A0EE  0E20               	movlw	32
 30499  01A0F0  6EDF               	movwf	indf2,c
 30500                           
 30501                           ; BSR set to: 2
 30502  01A0F2  2B23               	incf	OLED_UpdateFromRAMBuffer@char_index& (0+255),f,b
 30503  01A0F4  D7F2               	goto	l21330
 30504  01A0F6                     l21340:
 30505                           
 30506                           ; BSR set to: 2
 30507                           ;oled.c: 300: };oled.c: 301: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line1); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line1) - 1; char_index++) {
 30508  01A0F6  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30509  01A0F8  6F00               	movwf	strlen@s& (0+255),b
 30510  01A0FA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30511  01A0FC  6F01               	movwf	(strlen@s+1)& (0+255),b
 30512  01A0FE  EC67  F0E2         	call	_strlen	;wreg free
 30513  01A102  0102               	movlb	2	; () banked
 30514  01A104  5100               	movf	?_strlen& (0+255),w,b
 30515  01A106  6F24               	movwf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),b
 30516  01A108                     l21342:
 30517                           
 30518                           ; BSR set to: 2
 30519  01A108  0E0F               	movlw	15
 30520  01A10A  6524               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),b
 30521  01A10C  D001               	goto	l21346
 30522  01A10E  D00A               	goto	l21352
 30523  01A110                     l21346:
 30524                           
 30525                           ; BSR set to: 2
 30526                           ;oled.c: 302: OLED_RAM_Buffer.line1[char_index] = ' ';
 30527  01A110  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30528  01A112  2524               	addwf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),w,b
 30529  01A114  6ED9               	movwf	fsr2l,c
 30530  01A116  6ADA               	clrf	fsr2h,c
 30531  01A118  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30532  01A11A  22DA               	addwfc	fsr2h,f,c
 30533  01A11C  0E20               	movlw	32
 30534  01A11E  6EDF               	movwf	indf2,c
 30535                           
 30536                           ; BSR set to: 2
 30537  01A120  2B24               	incf	OLED_UpdateFromRAMBuffer@char_index_4304& (0+255),f,b
 30538  01A122  D7F2               	goto	l21342
 30539  01A124                     l21352:
 30540                           
 30541                           ; BSR set to: 2
 30542                           ;oled.c: 303: };oled.c: 304: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line2); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line2) - 1; char_index++) {
 30543  01A124  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30544  01A126  6F00               	movwf	strlen@s& (0+255),b
 30545  01A128  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30546  01A12A  6F01               	movwf	(strlen@s+1)& (0+255),b
 30547  01A12C  EC67  F0E2         	call	_strlen	;wreg free
 30548  01A130  0102               	movlb	2	; () banked
 30549  01A132  5100               	movf	?_strlen& (0+255),w,b
 30550  01A134  6F25               	movwf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),b
 30551  01A136                     l21354:
 30552                           
 30553                           ; BSR set to: 2
 30554  01A136  0E0F               	movlw	15
 30555  01A138  6525               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),b
 30556  01A13A  D001               	goto	l21358
 30557  01A13C  D00A               	goto	l21364
 30558  01A13E                     l21358:
 30559                           
 30560                           ; BSR set to: 2
 30561                           ;oled.c: 305: OLED_RAM_Buffer.line2[char_index] = ' ';
 30562  01A13E  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30563  01A140  2525               	addwf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),w,b
 30564  01A142  6ED9               	movwf	fsr2l,c
 30565  01A144  6ADA               	clrf	fsr2h,c
 30566  01A146  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30567  01A148  22DA               	addwfc	fsr2h,f,c
 30568  01A14A  0E20               	movlw	32
 30569  01A14C  6EDF               	movwf	indf2,c
 30570                           
 30571                           ; BSR set to: 2
 30572  01A14E  2B25               	incf	OLED_UpdateFromRAMBuffer@char_index_4305& (0+255),f,b
 30573  01A150  D7F2               	goto	l21354
 30574  01A152                     l21364:
 30575                           
 30576                           ; BSR set to: 2
 30577                           ;oled.c: 306: };oled.c: 307: for (uint8_t char_index = strlen(OLED_RAM_Buffer.line3); ch
      +                          ar_index < sizeof(OLED_RAM_Buffer.line3) - 1; char_index++) {
 30578  01A152  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30579  01A154  6F00               	movwf	strlen@s& (0+255),b
 30580  01A156  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30581  01A158  6F01               	movwf	(strlen@s+1)& (0+255),b
 30582  01A15A  EC67  F0E2         	call	_strlen	;wreg free
 30583  01A15E  0102               	movlb	2	; () banked
 30584  01A160  5100               	movf	?_strlen& (0+255),w,b
 30585  01A162  6F26               	movwf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),b
 30586  01A164                     l21366:
 30587                           
 30588                           ; BSR set to: 2
 30589  01A164  0E0F               	movlw	15
 30590  01A166  6526               	cpfsgt	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),b
 30591  01A168  D001               	goto	l21370
 30592  01A16A  D00A               	goto	l21376
 30593  01A16C                     l21370:
 30594                           
 30595                           ; BSR set to: 2
 30596                           ;oled.c: 308: OLED_RAM_Buffer.line3[char_index] = ' ';
 30597  01A16C  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30598  01A16E  2526               	addwf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),w,b
 30599  01A170  6ED9               	movwf	fsr2l,c
 30600  01A172  6ADA               	clrf	fsr2h,c
 30601  01A174  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30602  01A176  22DA               	addwfc	fsr2h,f,c
 30603  01A178  0E20               	movlw	32
 30604  01A17A  6EDF               	movwf	indf2,c
 30605                           
 30606                           ; BSR set to: 2
 30607  01A17C  2B26               	incf	OLED_UpdateFromRAMBuffer@char_index_4306& (0+255),f,b
 30608  01A17E  D7F2               	goto	l21366
 30609  01A180                     l21376:
 30610                           
 30611                           ; BSR set to: 2
 30612                           ;oled.c: 309: };oled.c: 311: OLED_YX(0,0);
 30613  01A180  0E00               	movlw	0
 30614  01A182  6F14               	movwf	OLED_YX@Column& (0+255),b
 30615  01A184  0E00               	movlw	0
 30616  01A186  EC95  F0DF         	call	_OLED_YX
 30617                           
 30618                           ;oled.c: 312: OLED_WriteString(OLED_RAM_Buffer.line0);
 30619  01A18A  0E00               	movlw	low _OLED_RAM_Buffer
 30620  01A18C  0102               	movlb	2	; () banked
 30621  01A18E  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30622  01A190  0E03               	movlw	high _OLED_RAM_Buffer
 30623  01A192  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30624  01A194  EC0B  F0DD         	call	_OLED_WriteString	;wreg free
 30625                           
 30626                           ;oled.c: 313: OLED_YX(1,0);
 30627  01A198  0E00               	movlw	0
 30628  01A19A  0102               	movlb	2	; () banked
 30629  01A19C  6F14               	movwf	OLED_YX@Column& (0+255),b
 30630  01A19E  0E01               	movlw	1
 30631  01A1A0  EC95  F0DF         	call	_OLED_YX
 30632                           
 30633                           ;oled.c: 314: OLED_WriteString(OLED_RAM_Buffer.line1);
 30634  01A1A4  0E11               	movlw	low (_OLED_RAM_Buffer+17)
 30635  01A1A6  0102               	movlb	2	; () banked
 30636  01A1A8  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30637  01A1AA  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 30638  01A1AC  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30639  01A1AE  EC0B  F0DD         	call	_OLED_WriteString	;wreg free
 30640                           
 30641                           ;oled.c: 315: OLED_YX(2,0);
 30642  01A1B2  0E00               	movlw	0
 30643  01A1B4  0102               	movlb	2	; () banked
 30644  01A1B6  6F14               	movwf	OLED_YX@Column& (0+255),b
 30645  01A1B8  0E02               	movlw	2
 30646  01A1BA  EC95  F0DF         	call	_OLED_YX
 30647                           
 30648                           ;oled.c: 316: OLED_WriteString(OLED_RAM_Buffer.line2);
 30649  01A1BE  0E22               	movlw	low (_OLED_RAM_Buffer+34)
 30650  01A1C0  0102               	movlb	2	; () banked
 30651  01A1C2  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30652  01A1C4  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 30653  01A1C6  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30654  01A1C8  EC0B  F0DD         	call	_OLED_WriteString	;wreg free
 30655                           
 30656                           ;oled.c: 317: OLED_YX(3,0);
 30657  01A1CC  0E00               	movlw	0
 30658  01A1CE  0102               	movlb	2	; () banked
 30659  01A1D0  6F14               	movwf	OLED_YX@Column& (0+255),b
 30660  01A1D2  0E03               	movlw	3
 30661  01A1D4  EC95  F0DF         	call	_OLED_YX
 30662                           
 30663                           ;oled.c: 318: OLED_WriteString(OLED_RAM_Buffer.line3);
 30664  01A1D8  0E33               	movlw	low (_OLED_RAM_Buffer+51)
 30665  01A1DA  0102               	movlb	2	; () banked
 30666  01A1DC  6F21               	movwf	OLED_WriteString@s& (0+255),b
 30667  01A1DE  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 30668  01A1E0  6F22               	movwf	(OLED_WriteString@s+1)& (0+255),b
 30669  01A1E2  EC0B  F0DD         	call	_OLED_WriteString	;wreg free
 30670  01A1E6  0012               	return		;funcret
 30671  01A1E8                     __end_of_OLED_UpdateFromRAMBuffer:
 30672                           	opt callstack 0
 30673                           
 30674 ;; *************** function _strlen *****************
 30675 ;; Defined at:
 30676 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strlen.c"
 30677 ;; Parameters:    Size  Location     Type
 30678 ;;  s               2    0[BANK2 ] PTR const unsigned char 
 30679 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30680 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30681 ;; Auto vars:     Size  Location     Type
 30682 ;;  cp              2    2[BANK2 ] PTR const unsigned char 
 30683 ;;		 -> line(64), OLED_RAM_Buffer.line3(17), OLED_RAM_Buffer.line2(17), OLED_RAM_Buffer.line1(17), 
 30684 ;;		 -> OLED_RAM_Buffer.line0(17), OLED_RAM_Buffer(68), getStringSecondsAsTime@return_string(40), 
 30685 ;; Return value:  Size  Location     Type
 30686 ;;                  2    0[BANK2 ] unsigned int 
 30687 ;; Registers used:
 30688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30689 ;; Tracked objects:
 30690 ;;		On entry : 0/0
 30691 ;;		On exit  : 0/0
 30692 ;;		Unchanged: 0/0
 30693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30694 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30695 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30697 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30698 ;;Total ram usage:        4 bytes
 30699 ;; Hardware stack levels used:    1
 30700 ;; Hardware stack levels required when called:   11
 30701 ;; This function calls:
 30702 ;;		Nothing
 30703 ;; This function is called by:
 30704 ;;		_getStringSecondsAsTime
 30705 ;;		_OLED_UpdateFromRAMBuffer
 30706 ;;		_ringBufferLUT
 30707 ;;		_terminal_ringBufferPull
 30708 ;; This function uses a non-reentrant model
 30709 ;;
 30710                           
 30711                           	psect	text103
 30712  01C4CE                     __ptext103:
 30713                           	opt callstack 0
 30714  01C4CE                     _strlen:
 30715                           	opt callstack 18
 30716                           
 30717                           ;incstack = 0
 30718  01C4CE  C200  F202         	movff	strlen@s,strlen@cp
 30719  01C4D2  C201  F203         	movff	strlen@s+1,strlen@cp+1
 30720  01C4D6  D003               	goto	l18634
 30721  01C4D8                     l18632:
 30722  01C4D8  0102               	movlb	2	; () banked
 30723  01C4DA  4B02               	infsnz	strlen@cp& (0+255),f,b
 30724  01C4DC  2B03               	incf	(strlen@cp+1)& (0+255),f,b
 30725  01C4DE                     l18634:
 30726  01C4DE  C202  FFD9         	movff	strlen@cp,fsr2l
 30727  01C4E2  C203  FFDA         	movff	strlen@cp+1,fsr2h
 30728  01C4E6  50DF               	movf	indf2,w,c
 30729  01C4E8  A4D8               	btfss	status,2,c
 30730  01C4EA  D7F6               	goto	l18632
 30731  01C4EC  0102               	movlb	2	; () banked
 30732  01C4EE  5100               	movf	strlen@s& (0+255),w,b
 30733  01C4F0  5D02               	subwf	strlen@cp& (0+255),w,b
 30734  01C4F2  6F00               	movwf	?_strlen& (0+255),b
 30735  01C4F4  5101               	movf	(strlen@s+1)& (0+255),w,b
 30736  01C4F6  5903               	subwfb	(strlen@cp+1)& (0+255),w,b
 30737  01C4F8  6F01               	movwf	(?_strlen+1)& (0+255),b
 30738                           
 30739                           ; BSR set to: 2
 30740  01C4FA  0012               	return		;funcret
 30741  01C4FC                     __end_of_strlen:
 30742                           	opt callstack 0
 30743                           
 30744 ;; *************** function _OLED_YX *****************
 30745 ;; Defined at:
 30746 ;;		line 204 in file "oled.c"
 30747 ;; Parameters:    Size  Location     Type
 30748 ;;  Row             1    wreg     unsigned char 
 30749 ;;  Column          1   20[BANK2 ] unsigned char 
 30750 ;; Auto vars:     Size  Location     Type
 30751 ;;  Row             1   24[BANK2 ] unsigned char 
 30752 ;; Return value:  Size  Location     Type
 30753 ;;                  1    wreg      void 
 30754 ;; Registers used:
 30755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30756 ;; Tracked objects:
 30757 ;;		On entry : 0/0
 30758 ;;		On exit  : 0/0
 30759 ;;		Unchanged: 0/0
 30760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30761 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30762 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30763 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30764 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30765 ;;Total ram usage:        5 bytes
 30766 ;; Hardware stack levels used:    1
 30767 ;; Hardware stack levels required when called:   15
 30768 ;; This function calls:
 30769 ;;		_OLED_Command
 30770 ;; This function is called by:
 30771 ;;		_OLED_UpdateFromRAMBuffer
 30772 ;; This function uses a non-reentrant model
 30773 ;;
 30774                           
 30775                           	psect	text104
 30776  01BF2A                     __ptext104:
 30777                           	opt callstack 0
 30778  01BF2A                     _OLED_YX:
 30779                           	opt callstack 13
 30780                           
 30781                           ; BSR set to: 2
 30782                           ;incstack = 0
 30783                           ;OLED_YX@Row stored from wreg
 30784  01BF2A  0102               	movlb	2	; () banked
 30785  01BF2C  6F18               	movwf	OLED_YX@Row& (0+255),b
 30786                           
 30787                           ;oled.c: 206: OLED_Command(0xB0 + Row);
 30788  01BF2E  0102               	movlb	2	; () banked
 30789  01BF30  5118               	movf	OLED_YX@Row& (0+255),w,b
 30790  01BF32  0FB0               	addlw	176
 30791  01BF34  ECBD  F0DB         	call	_OLED_Command
 30792                           
 30793                           ;oled.c: 207: OLED_Command(0x00 + (8 * Column & 0x0F));
 30794  01BF38  0102               	movlb	2	; () banked
 30795  01BF3A  5114               	movf	OLED_YX@Column& (0+255),w,b
 30796  01BF3C  0D08               	mullw	8
 30797  01BF3E  50F3               	movf	prodl,w,c
 30798  01BF40  0B0F               	andlw	15
 30799  01BF42  ECBD  F0DB         	call	_OLED_Command
 30800                           
 30801                           ;oled.c: 208: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 30802  01BF46  0102               	movlb	2	; () banked
 30803  01BF48  5114               	movf	OLED_YX@Column& (0+255),w,b
 30804  01BF4A  0D08               	mullw	8
 30805  01BF4C  CFF3 F215          	movff	prodl,??_OLED_YX
 30806  01BF50  CFF4 F216          	movff	prodh,??_OLED_YX+1
 30807  01BF54  0E04               	movlw	4
 30808  01BF56  6F17               	movwf	(??_OLED_YX+2)& (0+255),b
 30809  01BF58                     u25535:
 30810  01BF58  3516               	rlcf	(??_OLED_YX+1)& (0+255),w,b
 30811  01BF5A  3316               	rrcf	(??_OLED_YX+1)& (0+255),f,b
 30812  01BF5C  3315               	rrcf	??_OLED_YX& (0+255),f,b
 30813  01BF5E  2F17               	decfsz	(??_OLED_YX+2)& (0+255),f,b
 30814  01BF60  D7FB               	goto	u25535
 30815  01BF62  5115               	movf	??_OLED_YX& (0+255),w,b
 30816  01BF64  0B0F               	andlw	15
 30817  01BF66  0F10               	addlw	16
 30818  01BF68  ECBD  F0DB         	call	_OLED_Command
 30819  01BF6C  0012               	return		;funcret
 30820  01BF6E                     __end_of_OLED_YX:
 30821                           	opt callstack 0
 30822                           
 30823 ;; *************** function _OLED_WriteString *****************
 30824 ;; Defined at:
 30825 ;;		line 262 in file "oled.c"
 30826 ;; Parameters:    Size  Location     Type
 30827 ;;  s               2   33[BANK2 ] PTR unsigned char 
 30828 ;;		 -> ftoa@buf(17), OLED_RAM_Buffer(68), STR_61(1), STR_60(1), 
 30829 ;;		 -> OLED_WriteInteger@s(20), 
 30830 ;; Auto vars:     Size  Location     Type
 30831 ;;		None
 30832 ;; Return value:  Size  Location     Type
 30833 ;;                  1    wreg      void 
 30834 ;; Registers used:
 30835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30836 ;; Tracked objects:
 30837 ;;		On entry : 0/0
 30838 ;;		On exit  : 0/0
 30839 ;;		Unchanged: 0/0
 30840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30841 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30844 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30845 ;;Total ram usage:        2 bytes
 30846 ;; Hardware stack levels used:    1
 30847 ;; Hardware stack levels required when called:   15
 30848 ;; This function calls:
 30849 ;;		_OLED_PutChar
 30850 ;; This function is called by:
 30851 ;;		_OLED_UpdateFromRAMBuffer
 30852 ;;		_OLED_WriteInteger
 30853 ;;		_OLED_WriteFloat
 30854 ;; This function uses a non-reentrant model
 30855 ;;
 30856                           
 30857                           	psect	text105
 30858  01BA16                     __ptext105:
 30859                           	opt callstack 0
 30860  01BA16                     _OLED_WriteString:
 30861                           	opt callstack 13
 30862                           
 30863                           ;oled.c: 264: while(*s) {
 30864                           
 30865                           ;incstack = 0
 30866  01BA16  D016               	goto	l20184
 30867  01BA18                     l20180:
 30868                           
 30869                           ;oled.c: 266: OLED_PutChar(*s++);
 30870  01BA18  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30871  01BA1C  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30872  01BA20  0E00               	movlw	low (__mediumconst shr (0+16))
 30873  01BA22  6EF8               	movwf	tblptru,c
 30874  01BA24  0E0E               	movlw	(high __ramtop+-1)
 30875  01BA26  64F7               	cpfsgt	tblptrh,c
 30876  01BA28  D003               	bra	u25547
 30877  01BA2A  0008               	tblrd		*
 30878  01BA2C  50F5               	movf	tablat,w,c
 30879  01BA2E  D005               	bra	u25540
 30880  01BA30                     u25547:
 30881  01BA30  CFF6 FFE9          	movff	tblptrl,fsr0l
 30882  01BA34  CFF7 FFEA          	movff	tblptrh,fsr0h
 30883  01BA38  50EF               	movf	indf0,w,c
 30884  01BA3A                     u25540:
 30885  01BA3A  EC83  F0D5         	call	_OLED_PutChar
 30886  01BA3E  0102               	movlb	2	; () banked
 30887  01BA40  4B21               	infsnz	OLED_WriteString@s& (0+255),f,b
 30888  01BA42  2B22               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 30889  01BA44                     l20184:
 30890  01BA44  C221  FFF6         	movff	OLED_WriteString@s,tblptrl
 30891  01BA48  C222  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 30892  01BA4C  0E00               	movlw	low (__mediumconst shr (0+16))
 30893  01BA4E  6EF8               	movwf	tblptru,c
 30894  01BA50  0E0E               	movlw	(high __ramtop+-1)
 30895  01BA52  64F7               	cpfsgt	tblptrh,c
 30896  01BA54  D003               	bra	u25557
 30897  01BA56  0008               	tblrd		*
 30898  01BA58  50F5               	movf	tablat,w,c
 30899  01BA5A  D005               	bra	u25550
 30900  01BA5C                     u25557:
 30901  01BA5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30902  01BA60  CFF7 FFEA          	movff	tblptrh,fsr0h
 30903  01BA64  50EF               	movf	indf0,w,c
 30904  01BA66                     u25550:
 30905  01BA66  0900               	iorlw	0
 30906  01BA68  B4D8               	btfsc	status,2,c
 30907  01BA6A  0012               	return	
 30908  01BA6C  D7D5               	goto	l20180
 30909  01BA6E                     __end_of_OLED_WriteString:
 30910                           	opt callstack 0
 30911                           
 30912 ;; *************** function _OLED_Init *****************
 30913 ;; Defined at:
 30914 ;;		line 174 in file "oled.c"
 30915 ;; Parameters:    Size  Location     Type
 30916 ;;		None
 30917 ;; Auto vars:     Size  Location     Type
 30918 ;;		None
 30919 ;; Return value:  Size  Location     Type
 30920 ;;                  1    wreg      void 
 30921 ;; Registers used:
 30922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30923 ;; Tracked objects:
 30924 ;;		On entry : 0/0
 30925 ;;		On exit  : 0/0
 30926 ;;		Unchanged: 0/0
 30927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30932 ;;Total ram usage:        0 bytes
 30933 ;; Hardware stack levels used:    1
 30934 ;; Hardware stack levels required when called:   15
 30935 ;; This function calls:
 30936 ;;		_OLED_Command
 30937 ;; This function is called by:
 30938 ;;		_main
 30939 ;; This function uses a non-reentrant model
 30940 ;;
 30941                           
 30942                           	psect	text106
 30943  01B116                     __ptext106:
 30944                           	opt callstack 0
 30945  01B116                     _OLED_Init:
 30946                           	opt callstack 15
 30947                           
 30948                           ;oled.c: 176: OLED_Command(0xAE);
 30949                           
 30950                           ;incstack = 0
 30951  01B116  0EAE               	movlw	174
 30952  01B118  ECBD  F0DB         	call	_OLED_Command
 30953                           
 30954                           ;oled.c: 177: OLED_Command(0xD5);
 30955  01B11C  0ED5               	movlw	213
 30956  01B11E  ECBD  F0DB         	call	_OLED_Command
 30957                           
 30958                           ;oled.c: 178: OLED_Command(0x80);
 30959  01B122  0E80               	movlw	128
 30960  01B124  ECBD  F0DB         	call	_OLED_Command
 30961                           
 30962                           ;oled.c: 179: OLED_Command(0xA8);
 30963  01B128  0EA8               	movlw	168
 30964  01B12A  ECBD  F0DB         	call	_OLED_Command
 30965                           
 30966                           ;oled.c: 180: OLED_Command(0x1F);
 30967  01B12E  0E1F               	movlw	31
 30968  01B130  ECBD  F0DB         	call	_OLED_Command
 30969                           
 30970                           ;oled.c: 181: OLED_Command(0xD3);
 30971  01B134  0ED3               	movlw	211
 30972  01B136  ECBD  F0DB         	call	_OLED_Command
 30973                           
 30974                           ;oled.c: 182: OLED_Command(0x0);
 30975  01B13A  0E00               	movlw	0
 30976  01B13C  ECBD  F0DB         	call	_OLED_Command
 30977                           
 30978                           ;oled.c: 183: OLED_Command(0x40 | 0x0);
 30979  01B140  0E40               	movlw	64
 30980  01B142  ECBD  F0DB         	call	_OLED_Command
 30981                           
 30982                           ;oled.c: 184: OLED_Command(0x8D);
 30983  01B146  0E8D               	movlw	141
 30984  01B148  ECBD  F0DB         	call	_OLED_Command
 30985                           
 30986                           ;oled.c: 185: OLED_Command(0xAF);
 30987  01B14C  0EAF               	movlw	175
 30988  01B14E  ECBD  F0DB         	call	_OLED_Command
 30989                           
 30990                           ;oled.c: 186: OLED_Command(0x20);
 30991  01B152  0E20               	movlw	32
 30992  01B154  ECBD  F0DB         	call	_OLED_Command
 30993                           
 30994                           ;oled.c: 187: OLED_Command(0x00);
 30995  01B158  0E00               	movlw	0
 30996  01B15A  ECBD  F0DB         	call	_OLED_Command
 30997                           
 30998                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
 30999  01B15E  0EA1               	movlw	161
 31000  01B160  ECBD  F0DB         	call	_OLED_Command
 31001                           
 31002                           ;oled.c: 189: OLED_Command(0xC8);
 31003  01B164  0EC8               	movlw	200
 31004  01B166  ECBD  F0DB         	call	_OLED_Command
 31005                           
 31006                           ;oled.c: 190: OLED_Command(0xDA);
 31007  01B16A  0EDA               	movlw	218
 31008  01B16C  ECBD  F0DB         	call	_OLED_Command
 31009                           
 31010                           ;oled.c: 191: OLED_Command(0x02);
 31011  01B170  0E02               	movlw	2
 31012  01B172  ECBD  F0DB         	call	_OLED_Command
 31013                           
 31014                           ;oled.c: 192: OLED_Command(0x81);
 31015  01B176  0E81               	movlw	129
 31016  01B178  ECBD  F0DB         	call	_OLED_Command
 31017                           
 31018                           ;oled.c: 193: OLED_Command(0x8F);
 31019  01B17C  0E8F               	movlw	143
 31020  01B17E  ECBD  F0DB         	call	_OLED_Command
 31021                           
 31022                           ;oled.c: 194: OLED_Command(0xD9);
 31023  01B182  0ED9               	movlw	217
 31024  01B184  ECBD  F0DB         	call	_OLED_Command
 31025                           
 31026                           ;oled.c: 195: OLED_Command(0xF1);
 31027  01B188  0EF1               	movlw	241
 31028  01B18A  ECBD  F0DB         	call	_OLED_Command
 31029                           
 31030                           ;oled.c: 196: OLED_Command(0xDB);
 31031  01B18E  0EDB               	movlw	219
 31032  01B190  ECBD  F0DB         	call	_OLED_Command
 31033                           
 31034                           ;oled.c: 197: OLED_Command(0x40);
 31035  01B194  0E40               	movlw	64
 31036  01B196  ECBD  F0DB         	call	_OLED_Command
 31037                           
 31038                           ;oled.c: 198: OLED_Command(0xA4);
 31039  01B19A  0EA4               	movlw	164
 31040  01B19C  ECBD  F0DB         	call	_OLED_Command
 31041                           
 31042                           ;oled.c: 199: OLED_Command(0xA6);
 31043  01B1A0  0EA6               	movlw	166
 31044  01B1A2  ECBD  F0DB         	call	_OLED_Command
 31045                           
 31046                           ;oled.c: 200: OLED_Command(0xAF);
 31047  01B1A6  0EAF               	movlw	175
 31048  01B1A8  ECBD  F0DB         	call	_OLED_Command
 31049  01B1AC  0012               	return		;funcret
 31050  01B1AE                     __end_of_OLED_Init:
 31051                           	opt callstack 0
 31052                           
 31053 ;; *************** function _OLED_Command *****************
 31054 ;; Defined at:
 31055 ;;		line 122 in file "oled.c"
 31056 ;; Parameters:    Size  Location     Type
 31057 ;;  temp            1    wreg     unsigned char 
 31058 ;; Auto vars:     Size  Location     Type
 31059 ;;  temp            1   16[BANK2 ] unsigned char 
 31060 ;;  data_array      2   18[BANK2 ] unsigned char [2]
 31061 ;;  length          1    0        unsigned char 
 31062 ;; Return value:  Size  Location     Type
 31063 ;;                  1    wreg      void 
 31064 ;; Registers used:
 31065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31066 ;; Tracked objects:
 31067 ;;		On entry : 0/0
 31068 ;;		On exit  : 0/0
 31069 ;;		Unchanged: 0/0
 31070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31072 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31074 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31075 ;;Total ram usage:        4 bytes
 31076 ;; Hardware stack levels used:    1
 31077 ;; Hardware stack levels required when called:   14
 31078 ;; This function calls:
 31079 ;;		_I2C2_MasterWrite
 31080 ;; This function is called by:
 31081 ;;		_OLED_Init
 31082 ;;		_OLED_YX
 31083 ;; This function uses a non-reentrant model
 31084 ;;
 31085                           
 31086                           	psect	text107
 31087  01B77A                     __ptext107:
 31088                           	opt callstack 0
 31089  01B77A                     _OLED_Command:
 31090                           	opt callstack 13
 31091                           
 31092                           ;incstack = 0
 31093                           ;OLED_Command@temp stored from wreg
 31094  01B77A  0102               	movlb	2	; () banked
 31095  01B77C  6F10               	movwf	OLED_Command@temp& (0+255),b
 31096                           
 31097                           ;oled.c: 124: uint8_t length;;oled.c: 126: uint8_t data_array[2];;oled.c: 127: data_arra
      +                          y[0] = 0x00;
 31098  01B77E  0E00               	movlw	0
 31099  01B780  0102               	movlb	2	; () banked
 31100  01B782  6F12               	movwf	OLED_Command@data_array& (0+255),b
 31101                           
 31102                           ; BSR set to: 2
 31103                           ;oled.c: 128: data_array[1] = temp;
 31104  01B784  C210  F213         	movff	OLED_Command@temp,OLED_Command@data_array+1
 31105                           
 31106                           ; BSR set to: 2
 31107                           ;oled.c: 133: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 31108                           
 31109                           ; BSR set to: 2
 31110  01B788  0E12               	movlw	low OLED_Command@data_array
 31111  01B78A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31112  01B78C  0E02               	movlw	high OLED_Command@data_array
 31113  01B78E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31114  01B790  0E02               	movlw	2
 31115  01B792  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31116  01B794  0E00               	movlw	0
 31117  01B796  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31118  01B798  0E3C               	movlw	60
 31119  01B79A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31120  01B79C  0EA5               	movlw	low _I2C_STATUS
 31121  01B79E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31122  01B7A0  0E01               	movlw	high _I2C_STATUS
 31123  01B7A2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31124  01B7A4  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31125  01B7A8                     l19516:
 31126  01B7A8  0E02               	movlw	2
 31127  01B7AA  0101               	movlb	1	; () banked
 31128  01B7AC  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31129  01B7AE  B4D8               	btfsc	status,2,c
 31130  01B7B0  D7FB               	goto	l19516
 31131                           
 31132                           ; BSR set to: 1
 31133                           ;oled.c: 137: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 138: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 139: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 140: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 141: I2C_STATUS == I2C2_LOST_STATE ) {
 31134  01B7B2  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31135  01B7B4  B4D8               	btfsc	status,2,c
 31136  01B7B6  D010               	goto	u24660
 31137                           
 31138                           ; BSR set to: 1
 31139  01B7B8  0E03               	movlw	3
 31140  01B7BA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31141  01B7BC  B4D8               	btfsc	status,2,c
 31142  01B7BE  D00C               	goto	u24660
 31143                           
 31144                           ; BSR set to: 1
 31145  01B7C0  0E04               	movlw	4
 31146  01B7C2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31147  01B7C4  B4D8               	btfsc	status,2,c
 31148  01B7C6  D008               	goto	u24660
 31149                           
 31150                           ; BSR set to: 1
 31151  01B7C8  0E05               	movlw	5
 31152  01B7CA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31153  01B7CC  B4D8               	btfsc	status,2,c
 31154  01B7CE  D004               	goto	u24660
 31155                           
 31156                           ; BSR set to: 1
 31157  01B7D0  0E06               	movlw	6
 31158  01B7D2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31159  01B7D4  A4D8               	btfss	status,2,c
 31160  01B7D6  0012               	return	
 31161  01B7D8                     u24660:
 31162                           
 31163                           ; BSR set to: 1
 31164                           ;oled.c: 142: error_handler.I2C_OLED_error_flag = 1;
 31165  01B7D8  0E01               	movlw	1
 31166  01B7DA  0100               	movlb	0	; () banked
 31167  01B7DC  6FBC               	movwf	(_error_handler+3)& (0+255),b
 31168  01B7DE  0012               	return		;funcret
 31169  01B7E0                     __end_of_OLED_Command:
 31170                           	opt callstack 0
 31171                           
 31172 ;; *************** function _OLED_Clear *****************
 31173 ;; Defined at:
 31174 ;;		line 247 in file "oled.c"
 31175 ;; Parameters:    Size  Location     Type
 31176 ;;		None
 31177 ;; Auto vars:     Size  Location     Type
 31178 ;;  col             2   35[BANK2 ] unsigned int 
 31179 ;;  row             2   33[BANK2 ] unsigned int 
 31180 ;; Return value:  Size  Location     Type
 31181 ;;                  1    wreg      void 
 31182 ;; Registers used:
 31183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31184 ;; Tracked objects:
 31185 ;;		On entry : 0/0
 31186 ;;		On exit  : 0/0
 31187 ;;		Unchanged: 0/0
 31188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31190 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31192 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31193 ;;Total ram usage:        4 bytes
 31194 ;; Hardware stack levels used:    1
 31195 ;; Hardware stack levels required when called:   15
 31196 ;; This function calls:
 31197 ;;		_OLED_PutChar
 31198 ;; This function is called by:
 31199 ;;		_main
 31200 ;; This function uses a non-reentrant model
 31201 ;;
 31202                           
 31203                           	psect	text108
 31204  01C172                     __ptext108:
 31205                           	opt callstack 0
 31206  01C172                     _OLED_Clear:
 31207                           	opt callstack 15
 31208                           
 31209                           ;oled.c: 249: for(uint16_t row = 0; row < 8; row++) {
 31210                           
 31211                           ;incstack = 0
 31212  01C172  0E00               	movlw	0
 31213  01C174  0102               	movlb	2	; () banked
 31214  01C176  6F22               	movwf	(OLED_Clear@row+1)& (0+255),b
 31215  01C178  0E00               	movlw	0
 31216  01C17A  6F21               	movwf	OLED_Clear@row& (0+255),b
 31217  01C17C                     l21786:
 31218                           
 31219                           ; BSR set to: 2
 31220                           ;oled.c: 251: for(uint16_t col = 0; col < 16; col++) {
 31221  01C17C  0E00               	movlw	0
 31222  01C17E  6F24               	movwf	(OLED_Clear@col+1)& (0+255),b
 31223  01C180  0E00               	movlw	0
 31224  01C182  6F23               	movwf	OLED_Clear@col& (0+255),b
 31225  01C184                     l21792:
 31226                           
 31227                           ; BSR set to: 2
 31228                           ;oled.c: 253: OLED_PutChar('\0');
 31229  01C184  0E00               	movlw	0
 31230  01C186  EC83  F0D5         	call	_OLED_PutChar
 31231  01C18A  0102               	movlb	2	; () banked
 31232  01C18C  4B23               	infsnz	OLED_Clear@col& (0+255),f,b
 31233  01C18E  2B24               	incf	(OLED_Clear@col+1)& (0+255),f,b
 31234                           
 31235                           ; BSR set to: 2
 31236  01C190  5124               	movf	(OLED_Clear@col+1)& (0+255),w,b
 31237  01C192  E104               	bnz	u27850
 31238  01C194  0E10               	movlw	16
 31239  01C196  5D23               	subwf	OLED_Clear@col& (0+255),w,b
 31240  01C198  A0D8               	btfss	status,0,c
 31241  01C19A  D7F4               	goto	l21792
 31242  01C19C                     u27850:
 31243                           
 31244                           ; BSR set to: 2
 31245  01C19C  4B21               	infsnz	OLED_Clear@row& (0+255),f,b
 31246  01C19E  2B22               	incf	(OLED_Clear@row+1)& (0+255),f,b
 31247                           
 31248                           ; BSR set to: 2
 31249  01C1A0  5122               	movf	(OLED_Clear@row+1)& (0+255),w,b
 31250  01C1A2  E105               	bnz	u27860
 31251  01C1A4  0E08               	movlw	8
 31252  01C1A6  5D21               	subwf	OLED_Clear@row& (0+255),w,b
 31253  01C1A8  B0D8               	btfsc	status,0,c
 31254  01C1AA  0012               	return	
 31255  01C1AC  D7E7               	goto	l21786
 31256  01C1AE                     u27860:
 31257                           
 31258                           ; BSR set to: 2
 31259  01C1AE  0012               	return		;funcret
 31260  01C1B0                     __end_of_OLED_Clear:
 31261                           	opt callstack 0
 31262                           
 31263 ;; *************** function _OLED_PutChar *****************
 31264 ;; Defined at:
 31265 ;;		line 212 in file "oled.c"
 31266 ;; Parameters:    Size  Location     Type
 31267 ;;  ch              1    wreg     unsigned char 
 31268 ;; Auto vars:     Size  Location     Type
 31269 ;;  ch              1   32[BANK2 ] unsigned char 
 31270 ;;  data_array      9   20[BANK2 ] unsigned char [9]
 31271 ;;  input_base      2   29[BANK2 ] PTR const unsigned char 
 31272 ;;		 -> OledFont(768), 
 31273 ;;  length          1    0        unsigned char 
 31274 ;; Return value:  Size  Location     Type
 31275 ;;                  1    wreg      void 
 31276 ;; Registers used:
 31277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31278 ;; Tracked objects:
 31279 ;;		On entry : 0/0
 31280 ;;		On exit  : 0/0
 31281 ;;		Unchanged: 0/0
 31282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31284 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31285 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31286 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31287 ;;Total ram usage:       17 bytes
 31288 ;; Hardware stack levels used:    1
 31289 ;; Hardware stack levels required when called:   14
 31290 ;; This function calls:
 31291 ;;		_I2C2_MasterWrite
 31292 ;;		_memmove
 31293 ;; This function is called by:
 31294 ;;		_OLED_Clear
 31295 ;;		_OLED_WriteString
 31296 ;; This function uses a non-reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text109
 31300  01AB06                     __ptext109:
 31301                           	opt callstack 0
 31302  01AB06                     _OLED_PutChar:
 31303                           	opt callstack 13
 31304                           
 31305                           ; BSR set to: 2
 31306                           ;incstack = 0
 31307                           ;OLED_PutChar@ch stored from wreg
 31308  01AB06  0102               	movlb	2	; () banked
 31309  01AB08  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 31310                           
 31311                           ;oled.c: 214: if((ch < 32) || (ch > 127)) {
 31312  01AB0A  0E1F               	movlw	31
 31313  01AB0C  0102               	movlb	2	; () banked
 31314  01AB0E  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 31315  01AB10  D003               	goto	u24680
 31316                           
 31317                           ; BSR set to: 2
 31318  01AB12  0E7F               	movlw	127
 31319  01AB14  6520               	cpfsgt	OLED_PutChar@ch& (0+255),b
 31320  01AB16  D002               	goto	l1972
 31321  01AB18                     u24680:
 31322                           
 31323                           ; BSR set to: 2
 31324                           ;oled.c: 216: ch = ' ';
 31325  01AB18  0E20               	movlw	32
 31326  01AB1A  6F20               	movwf	OLED_PutChar@ch& (0+255),b
 31327  01AB1C                     l1972:
 31328                           
 31329                           ; BSR set to: 2
 31330                           ;oled.c: 218: };oled.c: 220: uint8_t length;;oled.c: 222: uint8_t data_array[9];;oled.c:
      +                           224: data_array[0] = 0x40;
 31331  01AB1C  0E40               	movlw	64
 31332  01AB1E  6F14               	movwf	OLED_PutChar@data_array& (0+255),b
 31333                           
 31334                           ; BSR set to: 2
 31335                           ;oled.c: 226: const uint8_t *input_base = &OledFont[ch - 32][0];
 31336  01AB20  0E00               	movlw	0
 31337  01AB22  6F10               	movwf	??_OLED_PutChar& (0+255),b
 31338  01AB24  0EFF               	movlw	255
 31339  01AB26  6F11               	movwf	(??_OLED_PutChar+1)& (0+255),b
 31340  01AB28  5120               	movf	OLED_PutChar@ch& (0+255),w,b
 31341  01AB2A  6F12               	movwf	(??_OLED_PutChar+2)& (0+255),b
 31342  01AB2C  6B13               	clrf	(??_OLED_PutChar+3)& (0+255),b
 31343  01AB2E  90D8               	bcf	status,0,c
 31344  01AB30  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 31345  01AB32  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 31346  01AB34  90D8               	bcf	status,0,c
 31347  01AB36  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 31348  01AB38  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 31349  01AB3A  90D8               	bcf	status,0,c
 31350  01AB3C  3712               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 31351  01AB3E  3713               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 31352  01AB40  5110               	movf	??_OLED_PutChar& (0+255),w,b
 31353  01AB42  2712               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 31354  01AB44  5111               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 31355  01AB46  2313               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 31356  01AB48  0E63               	movlw	low _OledFont
 31357  01AB4A  2512               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 31358  01AB4C  6F1D               	movwf	OLED_PutChar@input_base& (0+255),b
 31359  01AB4E  0EE5               	movlw	high _OledFont
 31360  01AB50  2113               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 31361  01AB52  6F1E               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 31362                           
 31363                           ; BSR set to: 2
 31364                           ;oled.c: 228: memmove(data_array + 1, input_base, 8);
 31365  01AB54  0E15               	movlw	low (OLED_PutChar@data_array+1)
 31366  01AB56  6F00               	movwf	memmove@d1& (0+255),b
 31367  01AB58  0E02               	movlw	high (OLED_PutChar@data_array+1)
 31368  01AB5A  6F01               	movwf	(memmove@d1+1)& (0+255),b
 31369  01AB5C  C21D  F202         	movff	OLED_PutChar@input_base,memmove@s1
 31370  01AB60  C21E  F203         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 31371  01AB64  0E00               	movlw	0
 31372  01AB66  6F05               	movwf	(memmove@n+1)& (0+255),b
 31373  01AB68  0E08               	movlw	8
 31374  01AB6A  6F04               	movwf	memmove@n& (0+255),b
 31375  01AB6C  ECA0  F0D6         	call	_memmove	;wreg free
 31376                           
 31377                           ;oled.c: 233: I2C2_MasterWrite(data_array, length, (uint16_t) 0x3C, &I2C_STATUS);
 31378  01AB70  0E14               	movlw	low OLED_PutChar@data_array
 31379  01AB72  0102               	movlb	2	; () banked
 31380  01AB74  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31381  01AB76  0E02               	movlw	high OLED_PutChar@data_array
 31382  01AB78  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31383  01AB7A  0E09               	movlw	9
 31384  01AB7C  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31385  01AB7E  0E00               	movlw	0
 31386  01AB80  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31387  01AB82  0E3C               	movlw	60
 31388  01AB84  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31389  01AB86  0EA5               	movlw	low _I2C_STATUS
 31390  01AB88  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31391  01AB8A  0E01               	movlw	high _I2C_STATUS
 31392  01AB8C  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31393  01AB8E  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31394  01AB92                     l19544:
 31395  01AB92  0E02               	movlw	2
 31396  01AB94  0101               	movlb	1	; () banked
 31397  01AB96  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31398  01AB98  B4D8               	btfsc	status,2,c
 31399  01AB9A  D7FB               	goto	l19544
 31400                           
 31401                           ; BSR set to: 1
 31402                           ;oled.c: 237: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;oled.c: 238: I2C_STATUS == I2C2_ST
      +                          UCK_START ||;oled.c: 239: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;oled.c: 240: I2C_
      +                          STATUS == I2C2_DATA_NO_ACK ||;oled.c: 241: I2C_STATUS == I2C2_LOST_STATE ) {
 31403  01AB9C  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31404  01AB9E  B4D8               	btfsc	status,2,c
 31405  01ABA0  D010               	goto	u24740
 31406                           
 31407                           ; BSR set to: 1
 31408  01ABA2  0E03               	movlw	3
 31409  01ABA4  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31410  01ABA6  B4D8               	btfsc	status,2,c
 31411  01ABA8  D00C               	goto	u24740
 31412                           
 31413                           ; BSR set to: 1
 31414  01ABAA  0E04               	movlw	4
 31415  01ABAC  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31416  01ABAE  B4D8               	btfsc	status,2,c
 31417  01ABB0  D008               	goto	u24740
 31418                           
 31419                           ; BSR set to: 1
 31420  01ABB2  0E05               	movlw	5
 31421  01ABB4  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31422  01ABB6  B4D8               	btfsc	status,2,c
 31423  01ABB8  D004               	goto	u24740
 31424                           
 31425                           ; BSR set to: 1
 31426  01ABBA  0E06               	movlw	6
 31427  01ABBC  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31428  01ABBE  A4D8               	btfss	status,2,c
 31429  01ABC0  0012               	return	
 31430  01ABC2                     u24740:
 31431                           
 31432                           ; BSR set to: 1
 31433                           ;oled.c: 242: error_handler.I2C_OLED_error_flag = 1;
 31434  01ABC2  0E01               	movlw	1
 31435  01ABC4  0100               	movlb	0	; () banked
 31436  01ABC6  6FBC               	movwf	(_error_handler+3)& (0+255),b
 31437  01ABC8  0012               	return		;funcret
 31438  01ABCA                     __end_of_OLED_PutChar:
 31439                           	opt callstack 0
 31440                           
 31441 ;; *************** function _memmove *****************
 31442 ;; Defined at:
 31443 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memmove.c"
 31444 ;; Parameters:    Size  Location     Type
 31445 ;;  d1              2    0[BANK2 ] PTR void 
 31446 ;;		 -> OLED_PutChar@data_array(9), 
 31447 ;;  s1              2    2[BANK2 ] PTR const void 
 31448 ;;		 -> OledFont(768), 
 31449 ;;  n               2    4[BANK2 ] unsigned int 
 31450 ;; Auto vars:     Size  Location     Type
 31451 ;;  s               2   10[BANK2 ] PTR const unsigned char 
 31452 ;;		 -> OledFont(768), 
 31453 ;;  d               2    8[BANK2 ] PTR unsigned char 
 31454 ;;		 -> OLED_PutChar@data_array(9), 
 31455 ;; Return value:  Size  Location     Type
 31456 ;;                  2    0[BANK2 ] PTR void 
 31457 ;; Registers used:
 31458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31459 ;; Tracked objects:
 31460 ;;		On entry : 0/0
 31461 ;;		On exit  : 0/0
 31462 ;;		Unchanged: 0/0
 31463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31464 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31465 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31466 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31467 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31468 ;;Total ram usage:       12 bytes
 31469 ;; Hardware stack levels used:    1
 31470 ;; Hardware stack levels required when called:   11
 31471 ;; This function calls:
 31472 ;;		Nothing
 31473 ;; This function is called by:
 31474 ;;		_OLED_PutChar
 31475 ;; This function uses a non-reentrant model
 31476 ;;
 31477                           
 31478                           	psect	text110
 31479  01AD40                     __ptext110:
 31480                           	opt callstack 0
 31481  01AD40                     _memmove:
 31482                           	opt callstack 15
 31483                           
 31484                           ;incstack = 0
 31485  01AD40  C202  F20A         	movff	memmove@s1,memmove@s
 31486  01AD44  C203  F20B         	movff	memmove@s1+1,memmove@s+1
 31487  01AD48  C200  F208         	movff	memmove@d1,memmove@d
 31488  01AD4C  C201  F209         	movff	memmove@d1+1,memmove@d+1
 31489  01AD50  0102               	movlb	2	; () banked
 31490  01AD52  5108               	movf	memmove@d& (0+255),w,b
 31491  01AD54  5D0A               	subwf	memmove@s& (0+255),w,b
 31492  01AD56  5109               	movf	(memmove@d+1)& (0+255),w,b
 31493  01AD58  590B               	subwfb	(memmove@s+1)& (0+255),w,b
 31494  01AD5A  B0D8               	btfsc	status,0,c
 31495  01AD5C  D02F               	goto	l18668
 31496                           
 31497                           ; BSR set to: 2
 31498  01AD5E  5104               	movf	memmove@n& (0+255),w,b
 31499  01AD60  250A               	addwf	memmove@s& (0+255),w,b
 31500  01AD62  6F06               	movwf	??_memmove& (0+255),b
 31501  01AD64  5105               	movf	(memmove@n+1)& (0+255),w,b
 31502  01AD66  210B               	addwfc	(memmove@s+1)& (0+255),w,b
 31503  01AD68  6F07               	movwf	(??_memmove+1)& (0+255),b
 31504  01AD6A  5106               	movf	??_memmove& (0+255),w,b
 31505  01AD6C  5D08               	subwf	memmove@d& (0+255),w,b
 31506  01AD6E  5107               	movf	(??_memmove+1)& (0+255),w,b
 31507  01AD70  5909               	subwfb	(memmove@d+1)& (0+255),w,b
 31508  01AD72  B0D8               	btfsc	status,0,c
 31509  01AD74  D023               	goto	l18668
 31510                           
 31511                           ; BSR set to: 2
 31512  01AD76  5104               	movf	memmove@n& (0+255),w,b
 31513  01AD78  270A               	addwf	memmove@s& (0+255),f,b
 31514  01AD7A  5105               	movf	(memmove@n+1)& (0+255),w,b
 31515  01AD7C  230B               	addwfc	(memmove@s+1)& (0+255),f,b
 31516  01AD7E  5104               	movf	memmove@n& (0+255),w,b
 31517  01AD80  2708               	addwf	memmove@d& (0+255),f,b
 31518  01AD82  5105               	movf	(memmove@n+1)& (0+255),w,b
 31519  01AD84  2309               	addwfc	(memmove@d+1)& (0+255),f,b
 31520  01AD86                     l18664:
 31521                           
 31522                           ; BSR set to: 2
 31523  01AD86  070A               	decf	memmove@s& (0+255),f,b
 31524  01AD88  A0D8               	btfss	status,0,c
 31525  01AD8A  070B               	decf	(memmove@s+1)& (0+255),f,b
 31526  01AD8C  C20A  FFF6         	movff	memmove@s,tblptrl
 31527  01AD90  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31528  01AD94                     	if	0	;tblptru may be non-zero
 31529  01AD94                     	endif
 31530  01AD94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31531  01AD94  0E00               	movlw	low (__mediumconst shr (0+16))
 31532  01AD96  6EF8               	movwf	tblptru,c
 31533  01AD98                     	endif
 31534  01AD98  0708               	decf	memmove@d& (0+255),f,b
 31535  01AD9A  A0D8               	btfss	status,0,c
 31536  01AD9C  0709               	decf	(memmove@d+1)& (0+255),f,b
 31537  01AD9E  C208  FFD9         	movff	memmove@d,fsr2l
 31538  01ADA2  C209  FFDA         	movff	memmove@d+1,fsr2h
 31539  01ADA6  0008               	tblrd		*
 31540  01ADA8  CFF5 FFDF          	movff	tablat,indf2
 31541                           
 31542                           ; BSR set to: 2
 31543  01ADAC  0704               	decf	memmove@n& (0+255),f,b
 31544  01ADAE  A0D8               	btfss	status,0,c
 31545  01ADB0  0705               	decf	(memmove@n+1)& (0+255),f,b
 31546  01ADB2  5104               	movf	memmove@n& (0+255),w,b
 31547  01ADB4  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31548  01ADB6  B4D8               	btfsc	status,2,c
 31549  01ADB8  0012               	return	
 31550  01ADBA  D7E5               	goto	l18664
 31551  01ADBC                     l18668:
 31552                           
 31553                           ; BSR set to: 2
 31554  01ADBC  5104               	movf	memmove@n& (0+255),w,b
 31555  01ADBE  1105               	iorwf	(memmove@n+1)& (0+255),w,b
 31556  01ADC0  B4D8               	btfsc	status,2,c
 31557  01ADC2  0012               	return	
 31558                           
 31559                           ; BSR set to: 2
 31560  01ADC4  C20A  FFF6         	movff	memmove@s,tblptrl
 31561  01ADC8  C20B  FFF7         	movff	memmove@s+1,tblptrh
 31562  01ADCC                     	if	0	;tblptru may be non-zero
 31563  01ADCC                     	endif
 31564  01ADCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31565  01ADCC  0E00               	movlw	low (__mediumconst shr (0+16))
 31566  01ADCE  6EF8               	movwf	tblptru,c
 31567  01ADD0                     	endif
 31568  01ADD0  C208  FFD9         	movff	memmove@d,fsr2l
 31569  01ADD4  C209  FFDA         	movff	memmove@d+1,fsr2h
 31570  01ADD8  0008               	tblrd		*
 31571  01ADDA  CFF5 FFDF          	movff	tablat,indf2
 31572                           
 31573                           ; BSR set to: 2
 31574  01ADDE  4B0A               	infsnz	memmove@s& (0+255),f,b
 31575  01ADE0  2B0B               	incf	(memmove@s+1)& (0+255),f,b
 31576                           
 31577                           ; BSR set to: 2
 31578  01ADE2  4B08               	infsnz	memmove@d& (0+255),f,b
 31579  01ADE4  2B09               	incf	(memmove@d+1)& (0+255),f,b
 31580                           
 31581                           ; BSR set to: 2
 31582  01ADE6  0704               	decf	memmove@n& (0+255),f,b
 31583  01ADE8  A0D8               	btfss	status,0,c
 31584  01ADEA  0705               	decf	(memmove@n+1)& (0+255),f,b
 31585  01ADEC  D7E7               	goto	l18668
 31586  01ADEE                     __end_of_memmove:
 31587                           	opt callstack 0
 31588                           
 31589 ;; *************** function _LM73TempSensorInitialize *****************
 31590 ;; Defined at:
 31591 ;;		line 13 in file "LM73_I2C.c"
 31592 ;; Parameters:    Size  Location     Type
 31593 ;;		None
 31594 ;; Auto vars:     Size  Location     Type
 31595 ;;  output_data_    2   16[BANK2 ] unsigned char [2]
 31596 ;;  length          1    0        unsigned char 
 31597 ;; Return value:  Size  Location     Type
 31598 ;;                  1    wreg      void 
 31599 ;; Registers used:
 31600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31601 ;; Tracked objects:
 31602 ;;		On entry : 0/0
 31603 ;;		On exit  : 0/0
 31604 ;;		Unchanged: 0/0
 31605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31607 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31609 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31610 ;;Total ram usage:        3 bytes
 31611 ;; Hardware stack levels used:    1
 31612 ;; Hardware stack levels required when called:   14
 31613 ;; This function calls:
 31614 ;;		_I2C2_MasterWrite
 31615 ;; This function is called by:
 31616 ;;		_main
 31617 ;; This function uses a non-reentrant model
 31618 ;;
 31619                           
 31620                           	psect	text111
 31621  01927E                     __ptext111:
 31622                           	opt callstack 0
 31623  01927E                     _LM73TempSensorInitialize:
 31624                           	opt callstack 16
 31625                           
 31626                           ;LM73_I2C.c: 16: PIE0bits.INT1IE = 0;
 31627                           
 31628                           ; BSR set to: 2
 31629                           ;incstack = 0
 31630  01927E  010E               	movlb	14	; () banked
 31631  019280  93C2               	bcf	194,1,b	;volatile
 31632                           
 31633                           ;LM73_I2C.c: 17: PIE0bits.INT2IE = 0;
 31634  019282  95C2               	bcf	194,2,b	;volatile
 31635  019284                     l22298:
 31636  019284  0E02               	movlw	2
 31637  019286  0101               	movlb	1	; () banked
 31638  019288  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31639  01928A  B4D8               	btfsc	status,2,c
 31640  01928C  D7FB               	goto	l22298
 31641                           
 31642                           ; BSR set to: 1
 31643                           ;LM73_I2C.c: 22: uint8_t length;;LM73_I2C.c: 23: uint8_t output_data_array[2];;LM73_I2C.
      +                          c: 24: output_data_array[0] = 0x01;
 31644  01928E  0E01               	movlw	1
 31645  019290  0102               	movlb	2	; () banked
 31646  019292  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31647                           
 31648                           ;LM73_I2C.c: 25: output_data_array[1] = 0b01000000;
 31649  019294  0E40               	movlw	64
 31650  019296  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31651                           
 31652                           ; BSR set to: 2
 31653                           ;LM73_I2C.c: 27: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31654  019298  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31655  01929A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31656  01929C  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31657  01929E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31658  0192A0  0E02               	movlw	2
 31659  0192A2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31660  0192A4  0E00               	movlw	0
 31661  0192A6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31662  0192A8  0E4D               	movlw	77
 31663  0192AA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31664  0192AC  0EA5               	movlw	low _I2C_STATUS
 31665  0192AE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31666  0192B0  0E01               	movlw	high _I2C_STATUS
 31667  0192B2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31668  0192B4  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31669  0192B8                     l22304:
 31670  0192B8  0E02               	movlw	2
 31671  0192BA  0101               	movlb	1	; () banked
 31672  0192BC  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31673  0192BE  B4D8               	btfsc	status,2,c
 31674  0192C0  D7FB               	goto	l22304
 31675                           
 31676                           ; BSR set to: 1
 31677                           ;LM73_I2C.c: 29: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 30: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 31: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 32: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 33: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31678  0192C2  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31679  0192C4  B4D8               	btfsc	status,2,c
 31680  0192C6  D010               	goto	u28090
 31681                           
 31682                           ; BSR set to: 1
 31683  0192C8  0E03               	movlw	3
 31684  0192CA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31685  0192CC  B4D8               	btfsc	status,2,c
 31686  0192CE  D00C               	goto	u28090
 31687                           
 31688                           ; BSR set to: 1
 31689  0192D0  0E04               	movlw	4
 31690  0192D2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31691  0192D4  B4D8               	btfsc	status,2,c
 31692  0192D6  D008               	goto	u28090
 31693                           
 31694                           ; BSR set to: 1
 31695  0192D8  0E05               	movlw	5
 31696  0192DA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31697  0192DC  B4D8               	btfsc	status,2,c
 31698  0192DE  D004               	goto	u28090
 31699                           
 31700                           ; BSR set to: 1
 31701  0192E0  0E06               	movlw	6
 31702  0192E2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31703  0192E4  A4D8               	btfss	status,2,c
 31704  0192E6  D003               	goto	l22318
 31705  0192E8                     u28090:
 31706                           
 31707                           ; BSR set to: 1
 31708                           ;LM73_I2C.c: 34: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31709  0192E8  0E01               	movlw	1
 31710  0192EA  0100               	movlb	0	; () banked
 31711  0192EC  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31712  0192EE                     l22318:
 31713                           
 31714                           ;LM73_I2C.c: 35: };LM73_I2C.c: 38: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31715  0192EE  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31716  0192F0  0102               	movlb	2	; () banked
 31717  0192F2  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31718  0192F4  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31719  0192F6  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31720  0192F8  0E02               	movlw	2
 31721  0192FA  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31722  0192FC  0E00               	movlw	0
 31723  0192FE  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31724  019300  0E4C               	movlw	76
 31725  019302  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31726  019304  0EA5               	movlw	low _I2C_STATUS
 31727  019306  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31728  019308  0E01               	movlw	high _I2C_STATUS
 31729  01930A  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31730  01930C  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31731  019310                     l22320:
 31732  019310  0E02               	movlw	2
 31733  019312  0101               	movlb	1	; () banked
 31734  019314  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31735  019316  B4D8               	btfsc	status,2,c
 31736  019318  D7FB               	goto	l22320
 31737                           
 31738                           ; BSR set to: 1
 31739                           ;LM73_I2C.c: 40: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 41: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 42: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 43: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 44: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31740  01931A  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31741  01931C  B4D8               	btfsc	status,2,c
 31742  01931E  D010               	goto	u28150
 31743                           
 31744                           ; BSR set to: 1
 31745  019320  0E03               	movlw	3
 31746  019322  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31747  019324  B4D8               	btfsc	status,2,c
 31748  019326  D00C               	goto	u28150
 31749                           
 31750                           ; BSR set to: 1
 31751  019328  0E04               	movlw	4
 31752  01932A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31753  01932C  B4D8               	btfsc	status,2,c
 31754  01932E  D008               	goto	u28150
 31755                           
 31756                           ; BSR set to: 1
 31757  019330  0E05               	movlw	5
 31758  019332  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31759  019334  B4D8               	btfsc	status,2,c
 31760  019336  D004               	goto	u28150
 31761                           
 31762                           ; BSR set to: 1
 31763  019338  0E06               	movlw	6
 31764  01933A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31765  01933C  A4D8               	btfss	status,2,c
 31766  01933E  D003               	goto	l22334
 31767  019340                     u28150:
 31768                           
 31769                           ; BSR set to: 1
 31770                           ;LM73_I2C.c: 45: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31771  019340  0E01               	movlw	1
 31772  019342  0100               	movlb	0	; () banked
 31773  019344  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31774  019346                     l22334:
 31775                           
 31776                           ;LM73_I2C.c: 46: };LM73_I2C.c: 49: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31777  019346  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31778  019348  0102               	movlb	2	; () banked
 31779  01934A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31780  01934C  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31781  01934E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31782  019350  0E02               	movlw	2
 31783  019352  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31784  019354  0E00               	movlw	0
 31785  019356  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31786  019358  0E4E               	movlw	78
 31787  01935A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31788  01935C  0EA5               	movlw	low _I2C_STATUS
 31789  01935E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31790  019360  0E01               	movlw	high _I2C_STATUS
 31791  019362  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31792  019364  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31793  019368                     l22336:
 31794  019368  0E02               	movlw	2
 31795  01936A  0101               	movlb	1	; () banked
 31796  01936C  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31797  01936E  B4D8               	btfsc	status,2,c
 31798  019370  D7FB               	goto	l22336
 31799                           
 31800                           ; BSR set to: 1
 31801                           ;LM73_I2C.c: 51: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 52: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 53: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 54: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 55: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31802  019372  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31803  019374  B4D8               	btfsc	status,2,c
 31804  019376  D010               	goto	u28210
 31805                           
 31806                           ; BSR set to: 1
 31807  019378  0E03               	movlw	3
 31808  01937A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31809  01937C  B4D8               	btfsc	status,2,c
 31810  01937E  D00C               	goto	u28210
 31811                           
 31812                           ; BSR set to: 1
 31813  019380  0E04               	movlw	4
 31814  019382  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31815  019384  B4D8               	btfsc	status,2,c
 31816  019386  D008               	goto	u28210
 31817                           
 31818                           ; BSR set to: 1
 31819  019388  0E05               	movlw	5
 31820  01938A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31821  01938C  B4D8               	btfsc	status,2,c
 31822  01938E  D004               	goto	u28210
 31823                           
 31824                           ; BSR set to: 1
 31825  019390  0E06               	movlw	6
 31826  019392  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31827  019394  A4D8               	btfss	status,2,c
 31828  019396  D003               	goto	l1392
 31829  019398                     u28210:
 31830                           
 31831                           ; BSR set to: 1
 31832                           ;LM73_I2C.c: 56: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 31833  019398  0E01               	movlw	1
 31834  01939A  0100               	movlb	0	; () banked
 31835  01939C  6FBF               	movwf	(_error_handler+6)& (0+255),b
 31836  01939E                     l1392:
 31837                           
 31838                           ;LM73_I2C.c: 57: };LM73_I2C.c: 60: output_data_array[0] = 0x04;
 31839  01939E  0E04               	movlw	4
 31840  0193A0  0102               	movlb	2	; () banked
 31841  0193A2  6F10               	movwf	LM73TempSensorInitialize@output_data_array& (0+255),b
 31842                           
 31843                           ;LM73_I2C.c: 61: output_data_array[1] = 0b11100000;
 31844  0193A4  0EE0               	movlw	224
 31845  0193A6  6F11               	movwf	(LM73TempSensorInitialize@output_data_array+1)& (0+255),b
 31846                           
 31847                           ; BSR set to: 2
 31848                           ;LM73_I2C.c: 63: I2C2_MasterWrite(output_data_array, length, 0x4D, &I2C_STATUS);
 31849  0193A8  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31850  0193AA  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31851  0193AC  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31852  0193AE  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31853  0193B0  0E02               	movlw	2
 31854  0193B2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31855  0193B4  0E00               	movlw	0
 31856  0193B6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31857  0193B8  0E4D               	movlw	77
 31858  0193BA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31859  0193BC  0EA5               	movlw	low _I2C_STATUS
 31860  0193BE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31861  0193C0  0E01               	movlw	high _I2C_STATUS
 31862  0193C2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31863  0193C4  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31864  0193C8                     l22352:
 31865  0193C8  0E02               	movlw	2
 31866  0193CA  0101               	movlb	1	; () banked
 31867  0193CC  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31868  0193CE  B4D8               	btfsc	status,2,c
 31869  0193D0  D7FB               	goto	l22352
 31870                           
 31871                           ; BSR set to: 1
 31872                           ;LM73_I2C.c: 65: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 66: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 67: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 68: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 69: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31873  0193D2  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31874  0193D4  B4D8               	btfsc	status,2,c
 31875  0193D6  D010               	goto	u28270
 31876                           
 31877                           ; BSR set to: 1
 31878  0193D8  0E03               	movlw	3
 31879  0193DA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31880  0193DC  B4D8               	btfsc	status,2,c
 31881  0193DE  D00C               	goto	u28270
 31882                           
 31883                           ; BSR set to: 1
 31884  0193E0  0E04               	movlw	4
 31885  0193E2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31886  0193E4  B4D8               	btfsc	status,2,c
 31887  0193E6  D008               	goto	u28270
 31888                           
 31889                           ; BSR set to: 1
 31890  0193E8  0E05               	movlw	5
 31891  0193EA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31892  0193EC  B4D8               	btfsc	status,2,c
 31893  0193EE  D004               	goto	u28270
 31894                           
 31895                           ; BSR set to: 1
 31896  0193F0  0E06               	movlw	6
 31897  0193F2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31898  0193F4  A4D8               	btfss	status,2,c
 31899  0193F6  D003               	goto	l22366
 31900  0193F8                     u28270:
 31901                           
 31902                           ; BSR set to: 1
 31903                           ;LM73_I2C.c: 70: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 31904  0193F8  0E01               	movlw	1
 31905  0193FA  0100               	movlb	0	; () banked
 31906  0193FC  6FBD               	movwf	(_error_handler+4)& (0+255),b
 31907  0193FE                     l22366:
 31908                           
 31909                           ;LM73_I2C.c: 71: };LM73_I2C.c: 74: I2C2_MasterWrite(output_data_array, length, 0x4C, &I2
      +                          C_STATUS);
 31910  0193FE  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31911  019400  0102               	movlb	2	; () banked
 31912  019402  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31913  019404  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31914  019406  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31915  019408  0E02               	movlw	2
 31916  01940A  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31917  01940C  0E00               	movlw	0
 31918  01940E  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31919  019410  0E4C               	movlw	76
 31920  019412  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31921  019414  0EA5               	movlw	low _I2C_STATUS
 31922  019416  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31923  019418  0E01               	movlw	high _I2C_STATUS
 31924  01941A  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31925  01941C  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31926  019420                     l22368:
 31927  019420  0E02               	movlw	2
 31928  019422  0101               	movlb	1	; () banked
 31929  019424  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31930  019426  B4D8               	btfsc	status,2,c
 31931  019428  D7FB               	goto	l22368
 31932                           
 31933                           ; BSR set to: 1
 31934                           ;LM73_I2C.c: 76: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 77: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 78: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 79: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 80: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31935  01942A  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31936  01942C  B4D8               	btfsc	status,2,c
 31937  01942E  D010               	goto	u28330
 31938                           
 31939                           ; BSR set to: 1
 31940  019430  0E03               	movlw	3
 31941  019432  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31942  019434  B4D8               	btfsc	status,2,c
 31943  019436  D00C               	goto	u28330
 31944                           
 31945                           ; BSR set to: 1
 31946  019438  0E04               	movlw	4
 31947  01943A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31948  01943C  B4D8               	btfsc	status,2,c
 31949  01943E  D008               	goto	u28330
 31950                           
 31951                           ; BSR set to: 1
 31952  019440  0E05               	movlw	5
 31953  019442  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31954  019444  B4D8               	btfsc	status,2,c
 31955  019446  D004               	goto	u28330
 31956                           
 31957                           ; BSR set to: 1
 31958  019448  0E06               	movlw	6
 31959  01944A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31960  01944C  A4D8               	btfss	status,2,c
 31961  01944E  D003               	goto	l22382
 31962  019450                     u28330:
 31963                           
 31964                           ; BSR set to: 1
 31965                           ;LM73_I2C.c: 81: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 31966  019450  0E01               	movlw	1
 31967  019452  0100               	movlb	0	; () banked
 31968  019454  6FBE               	movwf	(_error_handler+5)& (0+255),b
 31969  019456                     l22382:
 31970                           
 31971                           ;LM73_I2C.c: 82: };LM73_I2C.c: 85: I2C2_MasterWrite(output_data_array, length, 0x4E, &I2
      +                          C_STATUS);
 31972  019456  0E10               	movlw	low LM73TempSensorInitialize@output_data_array
 31973  019458  0102               	movlb	2	; () banked
 31974  01945A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 31975  01945C  0E02               	movlw	high LM73TempSensorInitialize@output_data_array
 31976  01945E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 31977  019460  0E02               	movlw	2
 31978  019462  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 31979  019464  0E00               	movlw	0
 31980  019466  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 31981  019468  0E4E               	movlw	78
 31982  01946A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 31983  01946C  0EA5               	movlw	low _I2C_STATUS
 31984  01946E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 31985  019470  0E01               	movlw	high _I2C_STATUS
 31986  019472  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 31987  019474  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 31988  019478                     l22384:
 31989  019478  0E02               	movlw	2
 31990  01947A  0101               	movlb	1	; () banked
 31991  01947C  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 31992  01947E  B4D8               	btfsc	status,2,c
 31993  019480  D7FB               	goto	l22384
 31994                           
 31995                           ; BSR set to: 1
 31996                           ;LM73_I2C.c: 87: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 88: I2C_STATUS == I
      +                          2C2_STUCK_START ||;LM73_I2C.c: 89: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_I2C
      +                          .c: 90: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 91: I2C_STATUS == I2C2_LOST_STATE 
      +                          ) {
 31997  019482  05A5               	decf	_I2C_STATUS& (0+255),w,b
 31998  019484  B4D8               	btfsc	status,2,c
 31999  019486  D010               	goto	u28390
 32000                           
 32001                           ; BSR set to: 1
 32002  019488  0E03               	movlw	3
 32003  01948A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32004  01948C  B4D8               	btfsc	status,2,c
 32005  01948E  D00C               	goto	u28390
 32006                           
 32007                           ; BSR set to: 1
 32008  019490  0E04               	movlw	4
 32009  019492  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32010  019494  B4D8               	btfsc	status,2,c
 32011  019496  D008               	goto	u28390
 32012                           
 32013                           ; BSR set to: 1
 32014  019498  0E05               	movlw	5
 32015  01949A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32016  01949C  B4D8               	btfsc	status,2,c
 32017  01949E  D004               	goto	u28390
 32018                           
 32019                           ; BSR set to: 1
 32020  0194A0  0E06               	movlw	6
 32021  0194A2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32022  0194A4  A4D8               	btfss	status,2,c
 32023  0194A6  D003               	goto	l22398
 32024  0194A8                     u28390:
 32025                           
 32026                           ; BSR set to: 1
 32027                           ;LM73_I2C.c: 92: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32028  0194A8  0E01               	movlw	1
 32029  0194AA  0100               	movlb	0	; () banked
 32030  0194AC  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32031  0194AE                     l22398:
 32032                           
 32033                           ;LM73_I2C.c: 93: };LM73_I2C.c: 96: PIE0bits.INT1IE = 1;
 32034  0194AE  010E               	movlb	14	; () banked
 32035  0194B0  83C2               	bsf	194,1,b	;volatile
 32036                           
 32037                           ; BSR set to: 14
 32038                           ;LM73_I2C.c: 97: PIE0bits.INT2IE = 1;
 32039  0194B2  85C2               	bsf	194,2,b	;volatile
 32040                           
 32041                           ; BSR set to: 14
 32042  0194B4  0012               	return		;funcret
 32043  0194B6                     __end_of_LM73TempSensorInitialize:
 32044                           	opt callstack 0
 32045                           
 32046 ;; *************** function _LM73AcquisitionHandler *****************
 32047 ;; Defined at:
 32048 ;;		line 102 in file "LM73_I2C.c"
 32049 ;; Parameters:    Size  Location     Type
 32050 ;;		None
 32051 ;; Auto vars:     Size  Location     Type
 32052 ;;		None
 32053 ;; Return value:  Size  Location     Type
 32054 ;;                  1    wreg      void 
 32055 ;; Registers used:
 32056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32057 ;; Tracked objects:
 32058 ;;		On entry : 0/0
 32059 ;;		On exit  : 0/0
 32060 ;;		Unchanged: 0/0
 32061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32066 ;;Total ram usage:        0 bytes
 32067 ;; Hardware stack levels used:    1
 32068 ;; Hardware stack levels required when called:   14
 32069 ;; This function calls:
 32070 ;;		_I2C2_MasterRead
 32071 ;;		_I2C2_MasterWrite
 32072 ;;		_LM73Convert
 32073 ;; This function is called by:
 32074 ;;		_main
 32075 ;; This function uses a non-reentrant model
 32076 ;;
 32077                           
 32078                           	psect	text112
 32079  0194B6                     __ptext112:
 32080                           	opt callstack 0
 32081  0194B6                     _LM73AcquisitionHandler:
 32082                           	opt callstack 16
 32083                           
 32084                           ;LM73_I2C.c: 105: PIE0bits.INT1IE = 0;
 32085                           
 32086                           ; BSR set to: 14
 32087                           ;incstack = 0
 32088  0194B6  010E               	movlb	14	; () banked
 32089  0194B8  93C2               	bcf	194,1,b	;volatile
 32090                           
 32091                           ;LM73_I2C.c: 106: PIE0bits.INT2IE = 0;
 32092  0194BA  95C2               	bcf	194,2,b	;volatile
 32093  0194BC                     l22432:
 32094  0194BC  0E02               	movlw	2
 32095  0194BE  0101               	movlb	1	; () banked
 32096  0194C0  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32097  0194C2  B4D8               	btfsc	status,2,c
 32098  0194C4  D7FB               	goto	l22432
 32099                           
 32100                           ; BSR set to: 1
 32101                           ;LM73_I2C.c: 112: I2C2_MasterWrite(0x00, 1, 0x4D, &I2C_STATUS);
 32102  0194C6  0E00               	movlw	0
 32103  0194C8  0102               	movlb	2	; () banked
 32104  0194CA  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 32105  0194CC  0E00               	movlw	0
 32106  0194CE  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 32107  0194D0  0E01               	movlw	1
 32108  0194D2  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 32109  0194D4  0E00               	movlw	0
 32110  0194D6  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 32111  0194D8  0E4D               	movlw	77
 32112  0194DA  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 32113  0194DC  0EA5               	movlw	low _I2C_STATUS
 32114  0194DE  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 32115  0194E0  0E01               	movlw	high _I2C_STATUS
 32116  0194E2  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 32117  0194E4  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 32118  0194E8                     l22436:
 32119  0194E8  0E02               	movlw	2
 32120  0194EA  0101               	movlb	1	; () banked
 32121  0194EC  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32122  0194EE  B4D8               	btfsc	status,2,c
 32123  0194F0  D7FB               	goto	l22436
 32124                           
 32125                           ; BSR set to: 1
 32126                           ;LM73_I2C.c: 114: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 115: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 116: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 117: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 118: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32127  0194F2  05A5               	decf	_I2C_STATUS& (0+255),w,b
 32128  0194F4  B4D8               	btfsc	status,2,c
 32129  0194F6  D010               	goto	u28500
 32130                           
 32131                           ; BSR set to: 1
 32132  0194F8  0E03               	movlw	3
 32133  0194FA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32134  0194FC  B4D8               	btfsc	status,2,c
 32135  0194FE  D00C               	goto	u28500
 32136                           
 32137                           ; BSR set to: 1
 32138  019500  0E04               	movlw	4
 32139  019502  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32140  019504  B4D8               	btfsc	status,2,c
 32141  019506  D008               	goto	u28500
 32142                           
 32143                           ; BSR set to: 1
 32144  019508  0E05               	movlw	5
 32145  01950A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32146  01950C  B4D8               	btfsc	status,2,c
 32147  01950E  D004               	goto	u28500
 32148                           
 32149                           ; BSR set to: 1
 32150  019510  0E06               	movlw	6
 32151  019512  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32152  019514  A4D8               	btfss	status,2,c
 32153  019516  D003               	goto	l22450
 32154  019518                     u28500:
 32155                           
 32156                           ; BSR set to: 1
 32157                           ;LM73_I2C.c: 119: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 32158  019518  0E01               	movlw	1
 32159  01951A  0100               	movlb	0	; () banked
 32160  01951C  6FBD               	movwf	(_error_handler+4)& (0+255),b
 32161  01951E                     l22450:
 32162                           
 32163                           ;LM73_I2C.c: 120: };LM73_I2C.c: 122: I2C2_MasterRead(LM73_temp_results.QI_data_raw, 2, 0
      +                          x4D, &I2C_STATUS);
 32164  01951E  0EE7               	movlw	low (_LM73_temp_results+12)
 32165  019520  0102               	movlb	2	; () banked
 32166  019522  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32167  019524  0E02               	movlw	high (_LM73_temp_results+12)
 32168  019526  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32169  019528  0E02               	movlw	2
 32170  01952A  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32171  01952C  0E00               	movlw	0
 32172  01952E  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32173  019530  0E4D               	movlw	77
 32174  019532  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32175  019534  0EA5               	movlw	low _I2C_STATUS
 32176  019536  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32177  019538  0E01               	movlw	high _I2C_STATUS
 32178  01953A  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32179  01953C  EC53  F0DE         	call	_I2C2_MasterRead	;wreg free
 32180  019540                     l22452:
 32181  019540  0E02               	movlw	2
 32182  019542  0101               	movlb	1	; () banked
 32183  019544  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32184  019546  B4D8               	btfsc	status,2,c
 32185  019548  D7FB               	goto	l22452
 32186                           
 32187                           ; BSR set to: 1
 32188                           ;LM73_I2C.c: 124: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 125: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 126: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 127: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 128: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32189  01954A  05A5               	decf	_I2C_STATUS& (0+255),w,b
 32190  01954C  B4D8               	btfsc	status,2,c
 32191  01954E  D010               	goto	u28560
 32192                           
 32193                           ; BSR set to: 1
 32194  019550  0E03               	movlw	3
 32195  019552  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32196  019554  B4D8               	btfsc	status,2,c
 32197  019556  D00C               	goto	u28560
 32198                           
 32199                           ; BSR set to: 1
 32200  019558  0E04               	movlw	4
 32201  01955A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32202  01955C  B4D8               	btfsc	status,2,c
 32203  01955E  D008               	goto	u28560
 32204                           
 32205                           ; BSR set to: 1
 32206  019560  0E05               	movlw	5
 32207  019562  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32208  019564  B4D8               	btfsc	status,2,c
 32209  019566  D004               	goto	u28560
 32210                           
 32211                           ; BSR set to: 1
 32212  019568  0E06               	movlw	6
 32213  01956A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32214  01956C  A4D8               	btfss	status,2,c
 32215  01956E  D003               	goto	l22466
 32216  019570                     u28560:
 32217                           
 32218                           ; BSR set to: 1
 32219                           ;LM73_I2C.c: 129: error_handler.I2C_QI_Temp_Sense_error_flag = 1;
 32220  019570  0E01               	movlw	1
 32221  019572  0100               	movlb	0	; () banked
 32222  019574  6FBD               	movwf	(_error_handler+4)& (0+255),b
 32223  019576                     l22466:
 32224                           
 32225                           ;LM73_I2C.c: 130: };LM73_I2C.c: 134: I2C2_MasterWrite(0x00, 1, 0x4C, &I2C_STATUS);
 32226  019576  0E00               	movlw	0
 32227  019578  0102               	movlb	2	; () banked
 32228  01957A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 32229  01957C  0E00               	movlw	0
 32230  01957E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 32231  019580  0E01               	movlw	1
 32232  019582  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 32233  019584  0E00               	movlw	0
 32234  019586  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 32235  019588  0E4C               	movlw	76
 32236  01958A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 32237  01958C  0EA5               	movlw	low _I2C_STATUS
 32238  01958E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 32239  019590  0E01               	movlw	high _I2C_STATUS
 32240  019592  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 32241  019594  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 32242  019598                     l22468:
 32243  019598  0E02               	movlw	2
 32244  01959A  0101               	movlb	1	; () banked
 32245  01959C  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32246  01959E  B4D8               	btfsc	status,2,c
 32247  0195A0  D7FB               	goto	l22468
 32248                           
 32249                           ; BSR set to: 1
 32250                           ;LM73_I2C.c: 136: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 137: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 138: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 139: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 140: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32251  0195A2  05A5               	decf	_I2C_STATUS& (0+255),w,b
 32252  0195A4  B4D8               	btfsc	status,2,c
 32253  0195A6  D010               	goto	u28620
 32254                           
 32255                           ; BSR set to: 1
 32256  0195A8  0E03               	movlw	3
 32257  0195AA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32258  0195AC  B4D8               	btfsc	status,2,c
 32259  0195AE  D00C               	goto	u28620
 32260                           
 32261                           ; BSR set to: 1
 32262  0195B0  0E04               	movlw	4
 32263  0195B2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32264  0195B4  B4D8               	btfsc	status,2,c
 32265  0195B6  D008               	goto	u28620
 32266                           
 32267                           ; BSR set to: 1
 32268  0195B8  0E05               	movlw	5
 32269  0195BA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32270  0195BC  B4D8               	btfsc	status,2,c
 32271  0195BE  D004               	goto	u28620
 32272                           
 32273                           ; BSR set to: 1
 32274  0195C0  0E06               	movlw	6
 32275  0195C2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32276  0195C4  A4D8               	btfss	status,2,c
 32277  0195C6  D003               	goto	l22482
 32278  0195C8                     u28620:
 32279                           
 32280                           ; BSR set to: 1
 32281                           ;LM73_I2C.c: 141: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 32282  0195C8  0E01               	movlw	1
 32283  0195CA  0100               	movlb	0	; () banked
 32284  0195CC  6FBE               	movwf	(_error_handler+5)& (0+255),b
 32285  0195CE                     l22482:
 32286                           
 32287                           ;LM73_I2C.c: 142: };LM73_I2C.c: 144: I2C2_MasterRead(LM73_temp_results.POS5_data_raw, 2,
      +                           0x4C, &I2C_STATUS);
 32288  0195CE  0EE9               	movlw	low (_LM73_temp_results+14)
 32289  0195D0  0102               	movlb	2	; () banked
 32290  0195D2  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32291  0195D4  0E02               	movlw	high (_LM73_temp_results+14)
 32292  0195D6  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32293  0195D8  0E02               	movlw	2
 32294  0195DA  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32295  0195DC  0E00               	movlw	0
 32296  0195DE  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32297  0195E0  0E4C               	movlw	76
 32298  0195E2  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32299  0195E4  0EA5               	movlw	low _I2C_STATUS
 32300  0195E6  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32301  0195E8  0E01               	movlw	high _I2C_STATUS
 32302  0195EA  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32303  0195EC  EC53  F0DE         	call	_I2C2_MasterRead	;wreg free
 32304  0195F0                     l22484:
 32305  0195F0  0E02               	movlw	2
 32306  0195F2  0101               	movlb	1	; () banked
 32307  0195F4  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32308  0195F6  B4D8               	btfsc	status,2,c
 32309  0195F8  D7FB               	goto	l22484
 32310                           
 32311                           ; BSR set to: 1
 32312                           ;LM73_I2C.c: 146: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 147: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 148: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 149: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 150: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32313  0195FA  05A5               	decf	_I2C_STATUS& (0+255),w,b
 32314  0195FC  B4D8               	btfsc	status,2,c
 32315  0195FE  D010               	goto	u28680
 32316                           
 32317                           ; BSR set to: 1
 32318  019600  0E03               	movlw	3
 32319  019602  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32320  019604  B4D8               	btfsc	status,2,c
 32321  019606  D00C               	goto	u28680
 32322                           
 32323                           ; BSR set to: 1
 32324  019608  0E04               	movlw	4
 32325  01960A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32326  01960C  B4D8               	btfsc	status,2,c
 32327  01960E  D008               	goto	u28680
 32328                           
 32329                           ; BSR set to: 1
 32330  019610  0E05               	movlw	5
 32331  019612  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32332  019614  B4D8               	btfsc	status,2,c
 32333  019616  D004               	goto	u28680
 32334                           
 32335                           ; BSR set to: 1
 32336  019618  0E06               	movlw	6
 32337  01961A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32338  01961C  A4D8               	btfss	status,2,c
 32339  01961E  D003               	goto	l22498
 32340  019620                     u28680:
 32341                           
 32342                           ; BSR set to: 1
 32343                           ;LM73_I2C.c: 151: error_handler.I2C_POS5_Temp_Sense_error_flag = 1;
 32344  019620  0E01               	movlw	1
 32345  019622  0100               	movlb	0	; () banked
 32346  019624  6FBE               	movwf	(_error_handler+5)& (0+255),b
 32347  019626                     l22498:
 32348                           
 32349                           ;LM73_I2C.c: 152: };LM73_I2C.c: 156: I2C2_MasterWrite(0x00, 1, 0x4E, &I2C_STATUS);
 32350  019626  0E00               	movlw	0
 32351  019628  0102               	movlb	2	; () banked
 32352  01962A  6F09               	movwf	I2C2_MasterWrite@pdata& (0+255),b
 32353  01962C  0E00               	movlw	0
 32354  01962E  6F0A               	movwf	(I2C2_MasterWrite@pdata+1)& (0+255),b
 32355  019630  0E01               	movlw	1
 32356  019632  6F0B               	movwf	I2C2_MasterWrite@length& (0+255),b
 32357  019634  0E00               	movlw	0
 32358  019636  6F0D               	movwf	(I2C2_MasterWrite@address+1)& (0+255),b
 32359  019638  0E4E               	movlw	78
 32360  01963A  6F0C               	movwf	I2C2_MasterWrite@address& (0+255),b
 32361  01963C  0EA5               	movlw	low _I2C_STATUS
 32362  01963E  6F0E               	movwf	I2C2_MasterWrite@pflag& (0+255),b
 32363  019640  0E01               	movlw	high _I2C_STATUS
 32364  019642  6F0F               	movwf	(I2C2_MasterWrite@pflag+1)& (0+255),b
 32365  019644  EC2B  F0DE         	call	_I2C2_MasterWrite	;wreg free
 32366  019648                     l22500:
 32367  019648  0E02               	movlw	2
 32368  01964A  0101               	movlb	1	; () banked
 32369  01964C  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32370  01964E  B4D8               	btfsc	status,2,c
 32371  019650  D7FB               	goto	l22500
 32372                           
 32373                           ; BSR set to: 1
 32374                           ;LM73_I2C.c: 158: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 159: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 160: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 161: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 162: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32375  019652  05A5               	decf	_I2C_STATUS& (0+255),w,b
 32376  019654  B4D8               	btfsc	status,2,c
 32377  019656  D010               	goto	u28740
 32378                           
 32379                           ; BSR set to: 1
 32380  019658  0E03               	movlw	3
 32381  01965A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32382  01965C  B4D8               	btfsc	status,2,c
 32383  01965E  D00C               	goto	u28740
 32384                           
 32385                           ; BSR set to: 1
 32386  019660  0E04               	movlw	4
 32387  019662  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32388  019664  B4D8               	btfsc	status,2,c
 32389  019666  D008               	goto	u28740
 32390                           
 32391                           ; BSR set to: 1
 32392  019668  0E05               	movlw	5
 32393  01966A  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32394  01966C  B4D8               	btfsc	status,2,c
 32395  01966E  D004               	goto	u28740
 32396                           
 32397                           ; BSR set to: 1
 32398  019670  0E06               	movlw	6
 32399  019672  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32400  019674  A4D8               	btfss	status,2,c
 32401  019676  D003               	goto	l22514
 32402  019678                     u28740:
 32403                           
 32404                           ; BSR set to: 1
 32405                           ;LM73_I2C.c: 163: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32406  019678  0E01               	movlw	1
 32407  01967A  0100               	movlb	0	; () banked
 32408  01967C  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32409  01967E                     l22514:
 32410                           
 32411                           ;LM73_I2C.c: 164: };LM73_I2C.c: 166: I2C2_MasterRead(LM73_temp_results.Ambient_data_raw,
      +                           2, 0x4E, &I2C_STATUS);
 32412  01967E  0EEB               	movlw	low (_LM73_temp_results+16)
 32413  019680  0102               	movlb	2	; () banked
 32414  019682  6F09               	movwf	I2C2_MasterRead@pdata& (0+255),b
 32415  019684  0E02               	movlw	high (_LM73_temp_results+16)
 32416  019686  6F0A               	movwf	(I2C2_MasterRead@pdata+1)& (0+255),b
 32417  019688  0E02               	movlw	2
 32418  01968A  6F0B               	movwf	I2C2_MasterRead@length& (0+255),b
 32419  01968C  0E00               	movlw	0
 32420  01968E  6F0D               	movwf	(I2C2_MasterRead@address+1)& (0+255),b
 32421  019690  0E4E               	movlw	78
 32422  019692  6F0C               	movwf	I2C2_MasterRead@address& (0+255),b
 32423  019694  0EA5               	movlw	low _I2C_STATUS
 32424  019696  6F0E               	movwf	I2C2_MasterRead@pflag& (0+255),b
 32425  019698  0E01               	movlw	high _I2C_STATUS
 32426  01969A  6F0F               	movwf	(I2C2_MasterRead@pflag+1)& (0+255),b
 32427  01969C  EC53  F0DE         	call	_I2C2_MasterRead	;wreg free
 32428  0196A0                     l22516:
 32429  0196A0  0E02               	movlw	2
 32430  0196A2  0101               	movlb	1	; () banked
 32431  0196A4  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32432  0196A6  B4D8               	btfsc	status,2,c
 32433  0196A8  D7FB               	goto	l22516
 32434                           
 32435                           ; BSR set to: 1
 32436                           ;LM73_I2C.c: 168: if ( I2C_STATUS == I2C2_MESSAGE_FAIL ||;LM73_I2C.c: 169: I2C_STATUS ==
      +                           I2C2_STUCK_START ||;LM73_I2C.c: 170: I2C_STATUS == I2C2_MESSAGE_ADDRESS_NO_ACK ||;LM73_
      +                          I2C.c: 171: I2C_STATUS == I2C2_DATA_NO_ACK ||;LM73_I2C.c: 172: I2C_STATUS == I2C2_LOST_S
      +                          TATE ) {
 32437  0196AA  05A5               	decf	_I2C_STATUS& (0+255),w,b
 32438  0196AC  B4D8               	btfsc	status,2,c
 32439  0196AE  D010               	goto	u28800
 32440                           
 32441                           ; BSR set to: 1
 32442  0196B0  0E03               	movlw	3
 32443  0196B2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32444  0196B4  B4D8               	btfsc	status,2,c
 32445  0196B6  D00C               	goto	u28800
 32446                           
 32447                           ; BSR set to: 1
 32448  0196B8  0E04               	movlw	4
 32449  0196BA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32450  0196BC  B4D8               	btfsc	status,2,c
 32451  0196BE  D008               	goto	u28800
 32452                           
 32453                           ; BSR set to: 1
 32454  0196C0  0E05               	movlw	5
 32455  0196C2  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32456  0196C4  B4D8               	btfsc	status,2,c
 32457  0196C6  D004               	goto	u28800
 32458                           
 32459                           ; BSR set to: 1
 32460  0196C8  0E06               	movlw	6
 32461  0196CA  19A5               	xorwf	_I2C_STATUS& (0+255),w,b
 32462  0196CC  A4D8               	btfss	status,2,c
 32463  0196CE  D003               	goto	l22530
 32464  0196D0                     u28800:
 32465                           
 32466                           ; BSR set to: 1
 32467                           ;LM73_I2C.c: 173: error_handler.I2C_Ambient_Temp_Sense_error_flag = 1;
 32468  0196D0  0E01               	movlw	1
 32469  0196D2  0100               	movlb	0	; () banked
 32470  0196D4  6FBF               	movwf	(_error_handler+6)& (0+255),b
 32471  0196D6                     l22530:
 32472                           
 32473                           ;LM73_I2C.c: 174: };LM73_I2C.c: 177: LM73Convert();
 32474  0196D6  ECC2  F0C6         	call	_LM73Convert	;wreg free
 32475                           
 32476                           ;LM73_I2C.c: 179: LM73_start_flag = 0;
 32477  0196DA  0E00               	movlw	0
 32478  0196DC  0102               	movlb	2	; () banked
 32479  0196DE  6FD8               	movwf	_LM73_start_flag& (0+255),b
 32480                           
 32481                           ; BSR set to: 2
 32482  0196E0  0012               	return		;funcret
 32483  0196E2                     __end_of_LM73AcquisitionHandler:
 32484                           	opt callstack 0
 32485                           
 32486 ;; *************** function _LM73Convert *****************
 32487 ;; Defined at:
 32488 ;;		line 184 in file "LM73_I2C.c"
 32489 ;; Parameters:    Size  Location     Type
 32490 ;;		None
 32491 ;; Auto vars:     Size  Location     Type
 32492 ;;  Ambient_Conv    2   83[BANK2 ] unsigned int 
 32493 ;;  POS5_Conv       2   81[BANK2 ] unsigned int 
 32494 ;;  QI_Conv         2   79[BANK2 ] unsigned int 
 32495 ;; Return value:  Size  Location     Type
 32496 ;;                  1    wreg      void 
 32497 ;; Registers used:
 32498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32499 ;; Tracked objects:
 32500 ;;		On entry : 0/0
 32501 ;;		On exit  : 0/0
 32502 ;;		Unchanged: 0/0
 32503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32505 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32506 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32507 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32508 ;;Total ram usage:        9 bytes
 32509 ;; Hardware stack levels used:    1
 32510 ;; Hardware stack levels required when called:   12
 32511 ;; This function calls:
 32512 ;;		___flmul
 32513 ;;		___xxtofl
 32514 ;; This function is called by:
 32515 ;;		_LM73AcquisitionHandler
 32516 ;; This function uses a non-reentrant model
 32517 ;;
 32518                           
 32519                           	psect	text113
 32520  018D84                     __ptext113:
 32521                           	opt callstack 0
 32522  018D84                     _LM73Convert:
 32523                           	opt callstack 17
 32524                           
 32525                           ;LM73_I2C.c: 186: uint16_t QI_Conv, POS5_Conv, Ambient_Conv;;LM73_I2C.c: 189: QI_Conv = 
      +                          LM73_temp_results.QI_data_raw[0] << 6 | LM73_temp_results.QI_data_raw[1] >> 2;
 32526                           
 32527                           ; BSR set to: 2
 32528                           ;incstack = 0
 32529  018D84  0102               	movlb	2	; () banked
 32530  018D86  51E7               	movf	(_LM73_temp_results+12)& (0+255),w,b
 32531  018D88  6F4C               	movwf	??_LM73Convert& (0+255),b
 32532  018D8A  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32533  018D8C  0E06               	movlw	6
 32534  018D8E                     u27085:
 32535  018D8E  90D8               	bcf	status,0,c
 32536  018D90  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32537  018D92  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32538  018D94  2EE8               	decfsz	wreg,f,c
 32539  018D96  D7FB               	goto	u27085
 32540  018D98  C2E8  F24E         	movff	_LM73_temp_results+13,??_LM73Convert+2
 32541  018D9C  90D8               	bcf	status,0,c
 32542  018D9E  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32543  018DA0  90D8               	bcf	status,0,c
 32544  018DA2  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32545  018DA4  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32546  018DA6  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32547  018DA8  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32548  018DAA  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32549  018DAC  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32550                           
 32551                           ;LM73_I2C.c: 193: if ((LM73_temp_results.QI_data_raw[0] >> 6) == 1) {
 32552  018DAE  45E7               	rlncf	(_LM73_temp_results+12)& (0+255),w,b
 32553  018DB0  46E8               	rlncf	wreg,f,c
 32554  018DB2  0B03               	andlw	3
 32555  018DB4  06E8               	decf	wreg,f,c
 32556  018DB6  A4D8               	btfss	status,2,c
 32557  018DB8  D025               	goto	l21054
 32558                           
 32559                           ; BSR set to: 2
 32560                           ;LM73_I2C.c: 194: QI_Conv = ~(QI_Conv);
 32561  018DBA  1F4F               	comf	LM73Convert@QI_Conv& (0+255),f,b
 32562  018DBC  1F50               	comf	(LM73Convert@QI_Conv+1)& (0+255),f,b
 32563                           
 32564                           ; BSR set to: 2
 32565                           ;LM73_I2C.c: 196: QI_Conv = QI_Conv & 0x1FFF;
 32566  018DBE  0EFF               	movlw	255
 32567  018DC0  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32568  018DC2  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32569  018DC4  0E1F               	movlw	31
 32570  018DC6  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32571  018DC8  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32572                           
 32573                           ; BSR set to: 2
 32574                           ;LM73_I2C.c: 197: LM73_temp_results.QI_temp_result = -0.03125 * QI_Conv;
 32575  018DCA  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32576  018DCE  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32577  018DD2  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32578  018DD4  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32579  018DD6  0E00               	movlw	0
 32580  018DD8  EC7F  F0CE         	call	___xxtofl
 32581  018DDC  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32582  018DE0  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32583  018DE4  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32584  018DE8  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32585  018DEC  0E00               	movlw	0
 32586  018DEE  0102               	movlb	2	; () banked
 32587  018DF0  6F12               	movwf	___flmul@a& (0+255),b
 32588  018DF2  0E00               	movlw	0
 32589  018DF4  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32590  018DF6  0E00               	movlw	0
 32591  018DF8  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32592  018DFA  0EBD               	movlw	189
 32593  018DFC  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32594  018DFE  EC40  F0B5         	call	___flmul	;wreg free
 32595  018E02  D022               	goto	L23
 32596  018E04                     l21054:
 32597                           
 32598                           ; BSR set to: 2
 32599                           ;LM73_I2C.c: 200: else {;LM73_I2C.c: 202: QI_Conv = QI_Conv & 0x1FFF;
 32600  018E04  0EFF               	movlw	255
 32601  018E06  154F               	andwf	LM73Convert@QI_Conv& (0+255),w,b
 32602  018E08  6F4F               	movwf	LM73Convert@QI_Conv& (0+255),b
 32603  018E0A  0E1F               	movlw	31
 32604  018E0C  1550               	andwf	(LM73Convert@QI_Conv+1)& (0+255),w,b
 32605  018E0E  6F50               	movwf	(LM73Convert@QI_Conv+1)& (0+255),b
 32606                           
 32607                           ; BSR set to: 2
 32608                           ;LM73_I2C.c: 203: LM73_temp_results.QI_temp_result = 0.03125 * QI_Conv;
 32609  018E10  C24F  F23E         	movff	LM73Convert@QI_Conv,___xxtofl@val
 32610  018E14  C250  F23F         	movff	LM73Convert@QI_Conv+1,___xxtofl@val+1
 32611  018E18  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32612  018E1A  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32613  018E1C  0E00               	movlw	0
 32614  018E1E  EC7F  F0CE         	call	___xxtofl
 32615  018E22  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32616  018E26  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32617  018E2A  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32618  018E2E  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32619  018E32  0E00               	movlw	0
 32620  018E34  0102               	movlb	2	; () banked
 32621  018E36  6F12               	movwf	___flmul@a& (0+255),b
 32622  018E38  0E00               	movlw	0
 32623  018E3A  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32624  018E3C  0E00               	movlw	0
 32625  018E3E  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32626  018E40  0E3D               	movlw	61
 32627  018E42  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32628  018E44  EC40  F0B5         	call	___flmul	;wreg free
 32629  018E48                     L23:
 32630  018E48  C20E  F2DB         	movff	?___flmul,_LM73_temp_results
 32631  018E4C  C20F  F2DC         	movff	?___flmul+1,_LM73_temp_results+1
 32632  018E50  C210  F2DD         	movff	?___flmul+2,_LM73_temp_results+2
 32633  018E54  C211  F2DE         	movff	?___flmul+3,_LM73_temp_results+3
 32634                           
 32635                           ;LM73_I2C.c: 204: };LM73_I2C.c: 207: POS5_Conv = LM73_temp_results.POS5_data_raw[0] << 6
      +                           | LM73_temp_results.POS5_data_raw[1] >> 2;
 32636  018E58  0102               	movlb	2	; () banked
 32637  018E5A  51E9               	movf	(_LM73_temp_results+14)& (0+255),w,b
 32638  018E5C  6F4C               	movwf	??_LM73Convert& (0+255),b
 32639  018E5E  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32640  018E60  0E06               	movlw	6
 32641  018E62                     u27105:
 32642  018E62  90D8               	bcf	status,0,c
 32643  018E64  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32644  018E66  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32645  018E68  2EE8               	decfsz	wreg,f,c
 32646  018E6A  D7FB               	goto	u27105
 32647  018E6C  C2EA  F24E         	movff	_LM73_temp_results+15,??_LM73Convert+2
 32648  018E70  90D8               	bcf	status,0,c
 32649  018E72  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32650  018E74  90D8               	bcf	status,0,c
 32651  018E76  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32652  018E78  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32653  018E7A  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32654  018E7C  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32655  018E7E  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32656  018E80  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32657                           
 32658                           ; BSR set to: 2
 32659                           ;LM73_I2C.c: 211: if ((LM73_temp_results.POS5_data_raw[0] >> 6) == 1) {
 32660  018E82  45E9               	rlncf	(_LM73_temp_results+14)& (0+255),w,b
 32661  018E84  46E8               	rlncf	wreg,f,c
 32662  018E86  0B03               	andlw	3
 32663  018E88  06E8               	decf	wreg,f,c
 32664  018E8A  A4D8               	btfss	status,2,c
 32665  018E8C  D025               	goto	l21068
 32666                           
 32667                           ; BSR set to: 2
 32668                           ;LM73_I2C.c: 212: POS5_Conv = ~(POS5_Conv);
 32669  018E8E  1F51               	comf	LM73Convert@POS5_Conv& (0+255),f,b
 32670  018E90  1F52               	comf	(LM73Convert@POS5_Conv+1)& (0+255),f,b
 32671                           
 32672                           ; BSR set to: 2
 32673                           ;LM73_I2C.c: 214: POS5_Conv = POS5_Conv & 0x1FFF;
 32674  018E92  0EFF               	movlw	255
 32675  018E94  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32676  018E96  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32677  018E98  0E1F               	movlw	31
 32678  018E9A  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32679  018E9C  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32680                           
 32681                           ; BSR set to: 2
 32682                           ;LM73_I2C.c: 215: LM73_temp_results.POS5_temp_result = -0.03125 * POS5_Conv;
 32683  018E9E  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32684  018EA2  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32685  018EA6  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32686  018EA8  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32687  018EAA  0E00               	movlw	0
 32688  018EAC  EC7F  F0CE         	call	___xxtofl
 32689  018EB0  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32690  018EB4  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32691  018EB8  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32692  018EBC  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32693  018EC0  0E00               	movlw	0
 32694  018EC2  0102               	movlb	2	; () banked
 32695  018EC4  6F12               	movwf	___flmul@a& (0+255),b
 32696  018EC6  0E00               	movlw	0
 32697  018EC8  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32698  018ECA  0E00               	movlw	0
 32699  018ECC  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32700  018ECE  0EBD               	movlw	189
 32701  018ED0  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32702  018ED2  EC40  F0B5         	call	___flmul	;wreg free
 32703  018ED6  D022               	goto	L24
 32704  018ED8                     l21068:
 32705                           
 32706                           ; BSR set to: 2
 32707                           ;LM73_I2C.c: 218: else {;LM73_I2C.c: 220: POS5_Conv = POS5_Conv & 0x1FFF;
 32708  018ED8  0EFF               	movlw	255
 32709  018EDA  1551               	andwf	LM73Convert@POS5_Conv& (0+255),w,b
 32710  018EDC  6F51               	movwf	LM73Convert@POS5_Conv& (0+255),b
 32711  018EDE  0E1F               	movlw	31
 32712  018EE0  1552               	andwf	(LM73Convert@POS5_Conv+1)& (0+255),w,b
 32713  018EE2  6F52               	movwf	(LM73Convert@POS5_Conv+1)& (0+255),b
 32714                           
 32715                           ; BSR set to: 2
 32716                           ;LM73_I2C.c: 221: LM73_temp_results.POS5_temp_result = 0.03125 * POS5_Conv;
 32717  018EE4  C251  F23E         	movff	LM73Convert@POS5_Conv,___xxtofl@val
 32718  018EE8  C252  F23F         	movff	LM73Convert@POS5_Conv+1,___xxtofl@val+1
 32719  018EEC  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32720  018EEE  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32721  018EF0  0E00               	movlw	0
 32722  018EF2  EC7F  F0CE         	call	___xxtofl
 32723  018EF6  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32724  018EFA  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32725  018EFE  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32726  018F02  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32727  018F06  0E00               	movlw	0
 32728  018F08  0102               	movlb	2	; () banked
 32729  018F0A  6F12               	movwf	___flmul@a& (0+255),b
 32730  018F0C  0E00               	movlw	0
 32731  018F0E  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32732  018F10  0E00               	movlw	0
 32733  018F12  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32734  018F14  0E3D               	movlw	61
 32735  018F16  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32736  018F18  EC40  F0B5         	call	___flmul	;wreg free
 32737  018F1C                     L24:
 32738  018F1C  C20E  F2DF         	movff	?___flmul,_LM73_temp_results+4
 32739  018F20  C20F  F2E0         	movff	?___flmul+1,_LM73_temp_results+5
 32740  018F24  C210  F2E1         	movff	?___flmul+2,_LM73_temp_results+6
 32741  018F28  C211  F2E2         	movff	?___flmul+3,_LM73_temp_results+7
 32742                           
 32743                           ;LM73_I2C.c: 222: };LM73_I2C.c: 225: Ambient_Conv = LM73_temp_results.Ambient_data_raw[0
      +                          ] << 6 | LM73_temp_results.Ambient_data_raw[1] >> 2;
 32744  018F2C  0102               	movlb	2	; () banked
 32745  018F2E  51EB               	movf	(_LM73_temp_results+16)& (0+255),w,b
 32746  018F30  6F4C               	movwf	??_LM73Convert& (0+255),b
 32747  018F32  6B4D               	clrf	(??_LM73Convert+1)& (0+255),b
 32748  018F34  0E06               	movlw	6
 32749  018F36                     u27125:
 32750  018F36  90D8               	bcf	status,0,c
 32751  018F38  374C               	rlcf	??_LM73Convert& (0+255),f,b
 32752  018F3A  374D               	rlcf	(??_LM73Convert+1)& (0+255),f,b
 32753  018F3C  2EE8               	decfsz	wreg,f,c
 32754  018F3E  D7FB               	goto	u27125
 32755  018F40  C2EC  F24E         	movff	_LM73_temp_results+17,??_LM73Convert+2
 32756  018F44  90D8               	bcf	status,0,c
 32757  018F46  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32758  018F48  90D8               	bcf	status,0,c
 32759  018F4A  334E               	rrcf	(??_LM73Convert+2)& (0+255),f,b
 32760  018F4C  514E               	movf	(??_LM73Convert+2)& (0+255),w,b
 32761  018F4E  114C               	iorwf	??_LM73Convert& (0+255),w,b
 32762  018F50  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32763  018F52  514D               	movf	(??_LM73Convert+1)& (0+255),w,b
 32764  018F54  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32765                           
 32766                           ; BSR set to: 2
 32767                           ;LM73_I2C.c: 229: if ((LM73_temp_results.Ambient_data_raw[0] >> 6) == 1) {
 32768  018F56  45EB               	rlncf	(_LM73_temp_results+16)& (0+255),w,b
 32769  018F58  46E8               	rlncf	wreg,f,c
 32770  018F5A  0B03               	andlw	3
 32771  018F5C  06E8               	decf	wreg,f,c
 32772  018F5E  A4D8               	btfss	status,2,c
 32773  018F60  D025               	goto	l21082
 32774                           
 32775                           ; BSR set to: 2
 32776                           ;LM73_I2C.c: 230: Ambient_Conv = ~(Ambient_Conv);
 32777  018F62  1F53               	comf	LM73Convert@Ambient_Conv& (0+255),f,b
 32778  018F64  1F54               	comf	(LM73Convert@Ambient_Conv+1)& (0+255),f,b
 32779                           
 32780                           ; BSR set to: 2
 32781                           ;LM73_I2C.c: 232: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32782  018F66  0EFF               	movlw	255
 32783  018F68  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32784  018F6A  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32785  018F6C  0E1F               	movlw	31
 32786  018F6E  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32787  018F70  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32788                           
 32789                           ; BSR set to: 2
 32790                           ;LM73_I2C.c: 233: LM73_temp_results.Ambient_temp_result = -0.03125 * Ambient_Conv;
 32791  018F72  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32792  018F76  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32793  018F7A  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32794  018F7C  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32795  018F7E  0E00               	movlw	0
 32796  018F80  EC7F  F0CE         	call	___xxtofl
 32797  018F84  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32798  018F88  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32799  018F8C  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32800  018F90  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32801  018F94  0E00               	movlw	0
 32802  018F96  0102               	movlb	2	; () banked
 32803  018F98  6F12               	movwf	___flmul@a& (0+255),b
 32804  018F9A  0E00               	movlw	0
 32805  018F9C  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32806  018F9E  0E00               	movlw	0
 32807  018FA0  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32808  018FA2  0EBD               	movlw	189
 32809  018FA4  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32810  018FA6  EC40  F0B5         	call	___flmul	;wreg free
 32811  018FAA  D022               	goto	L25
 32812  018FAC                     l21082:
 32813                           
 32814                           ; BSR set to: 2
 32815                           ;LM73_I2C.c: 236: else {;LM73_I2C.c: 238: Ambient_Conv = Ambient_Conv & 0x1FFF;
 32816  018FAC  0EFF               	movlw	255
 32817  018FAE  1553               	andwf	LM73Convert@Ambient_Conv& (0+255),w,b
 32818  018FB0  6F53               	movwf	LM73Convert@Ambient_Conv& (0+255),b
 32819  018FB2  0E1F               	movlw	31
 32820  018FB4  1554               	andwf	(LM73Convert@Ambient_Conv+1)& (0+255),w,b
 32821  018FB6  6F54               	movwf	(LM73Convert@Ambient_Conv+1)& (0+255),b
 32822                           
 32823                           ; BSR set to: 2
 32824                           ;LM73_I2C.c: 239: LM73_temp_results.Ambient_temp_result = 0.03125 * Ambient_Conv;
 32825  018FB8  C253  F23E         	movff	LM73Convert@Ambient_Conv,___xxtofl@val
 32826  018FBC  C254  F23F         	movff	LM73Convert@Ambient_Conv+1,___xxtofl@val+1
 32827  018FC0  6B40               	clrf	(___xxtofl@val+2)& (0+255),b
 32828  018FC2  6B41               	clrf	(___xxtofl@val+3)& (0+255),b
 32829  018FC4  0E00               	movlw	0
 32830  018FC6  EC7F  F0CE         	call	___xxtofl
 32831  018FCA  C23E  F20E         	movff	?___xxtofl,___flmul@b
 32832  018FCE  C23F  F20F         	movff	?___xxtofl+1,___flmul@b+1
 32833  018FD2  C240  F210         	movff	?___xxtofl+2,___flmul@b+2
 32834  018FD6  C241  F211         	movff	?___xxtofl+3,___flmul@b+3
 32835  018FDA  0E00               	movlw	0
 32836  018FDC  0102               	movlb	2	; () banked
 32837  018FDE  6F12               	movwf	___flmul@a& (0+255),b
 32838  018FE0  0E00               	movlw	0
 32839  018FE2  6F13               	movwf	(___flmul@a+1)& (0+255),b
 32840  018FE4  0E00               	movlw	0
 32841  018FE6  6F14               	movwf	(___flmul@a+2)& (0+255),b
 32842  018FE8  0E3D               	movlw	61
 32843  018FEA  6F15               	movwf	(___flmul@a+3)& (0+255),b
 32844  018FEC  EC40  F0B5         	call	___flmul	;wreg free
 32845  018FF0                     L25:
 32846  018FF0  C20E  F2E3         	movff	?___flmul,_LM73_temp_results+8
 32847  018FF4  C20F  F2E4         	movff	?___flmul+1,_LM73_temp_results+9
 32848  018FF8  C210  F2E5         	movff	?___flmul+2,_LM73_temp_results+10
 32849  018FFC  C211  F2E6         	movff	?___flmul+3,_LM73_temp_results+11
 32850                           
 32851                           ;LM73_I2C.c: 240: };LM73_I2C.c: 243: PIE0bits.INT1IE = 1;
 32852  019000  010E               	movlb	14	; () banked
 32853  019002  83C2               	bsf	194,1,b	;volatile
 32854                           
 32855                           ; BSR set to: 14
 32856                           ;LM73_I2C.c: 244: PIE0bits.INT2IE = 1;
 32857  019004  85C2               	bsf	194,2,b	;volatile
 32858                           
 32859                           ; BSR set to: 14
 32860  019006  0012               	return		;funcret
 32861  019008                     __end_of_LM73Convert:
 32862                           	opt callstack 0
 32863                           
 32864 ;; *************** function ___xxtofl *****************
 32865 ;; Defined at:
 32866 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 32867 ;; Parameters:    Size  Location     Type
 32868 ;;  sign            1    wreg     unsigned char 
 32869 ;;  val             4   62[BANK2 ] long 
 32870 ;; Auto vars:     Size  Location     Type
 32871 ;;  sign            1   70[BANK2 ] unsigned char 
 32872 ;;  arg             4   72[BANK2 ] unsigned long 
 32873 ;;  exp             1   71[BANK2 ] unsigned char 
 32874 ;; Return value:  Size  Location     Type
 32875 ;;                  4   62[BANK2 ] unsigned char 
 32876 ;; Registers used:
 32877 ;;		wreg, status,2, status,0
 32878 ;; Tracked objects:
 32879 ;;		On entry : 0/0
 32880 ;;		On exit  : 0/0
 32881 ;;		Unchanged: 0/0
 32882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32883 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32884 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32885 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32886 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32887 ;;Total ram usage:       14 bytes
 32888 ;; Hardware stack levels used:    1
 32889 ;; Hardware stack levels required when called:   11
 32890 ;; This function calls:
 32891 ;;		Nothing
 32892 ;; This function is called by:
 32893 ;;		_LM73Convert
 32894 ;;		_floatToEngineeringFormat
 32895 ;;		__doprnt
 32896 ;;		_ftoa
 32897 ;; This function uses a non-reentrant model
 32898 ;;
 32899                           
 32900                           	psect	text114
 32901  019CFE                     __ptext114:
 32902                           	opt callstack 0
 32903  019CFE                     ___xxtofl:
 32904                           	opt callstack 14
 32905                           
 32906                           ; BSR set to: 14
 32907                           ;incstack = 0
 32908                           ;___xxtofl@sign stored from wreg
 32909  019CFE  0102               	movlb	2	; () banked
 32910  019D00  6F46               	movwf	___xxtofl@sign& (0+255),b
 32911  019D02  0102               	movlb	2	; () banked
 32912  019D04  5146               	movf	___xxtofl@sign& (0+255),w,b
 32913  019D06  A4D8               	btfss	status,2,c
 32914                           
 32915                           ; BSR set to: 2
 32916  019D08  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32917  019D0A  D01A               	goto	l3364
 32918                           
 32919                           ; BSR set to: 2
 32920  019D0C  C23E  F242         	movff	___xxtofl@val,??___xxtofl
 32921  019D10  C23F  F243         	movff	___xxtofl@val+1,??___xxtofl+1
 32922  019D14  C240  F244         	movff	___xxtofl@val+2,??___xxtofl+2
 32923  019D18  C241  F245         	movff	___xxtofl@val+3,??___xxtofl+3
 32924  019D1C  1F42               	comf	??___xxtofl& (0+255),f,b
 32925  019D1E  1F43               	comf	(??___xxtofl+1)& (0+255),f,b
 32926  019D20  1F44               	comf	(??___xxtofl+2)& (0+255),f,b
 32927  019D22  1F45               	comf	(??___xxtofl+3)& (0+255),f,b
 32928  019D24  2B42               	incf	??___xxtofl& (0+255),f,b
 32929  019D26  0E00               	movlw	0
 32930  019D28  2343               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32931  019D2A  2344               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32932  019D2C  2345               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32933  019D2E  C242  F248         	movff	??___xxtofl,___xxtofl@arg
 32934  019D32  C243  F249         	movff	??___xxtofl+1,___xxtofl@arg+1
 32935  019D36  C244  F24A         	movff	??___xxtofl+2,___xxtofl@arg+2
 32936  019D3A  C245  F24B         	movff	??___xxtofl+3,___xxtofl@arg+3
 32937  019D3E  D008               	goto	l17942
 32938  019D40                     l3364:
 32939                           
 32940                           ; BSR set to: 2
 32941  019D40  C23E  F248         	movff	___xxtofl@val,___xxtofl@arg
 32942  019D44  C23F  F249         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32943  019D48  C240  F24A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32944  019D4C  C241  F24B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32945  019D50                     l17942:
 32946                           
 32947                           ; BSR set to: 2
 32948  019D50  513E               	movf	___xxtofl@val& (0+255),w,b
 32949  019D52  113F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32950  019D54  1140               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32951  019D56  1141               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32952  019D58  A4D8               	btfss	status,2,c
 32953  019D5A  D009               	goto	l17948
 32954                           
 32955                           ; BSR set to: 2
 32956  019D5C  0E00               	movlw	0
 32957  019D5E  6F3E               	movwf	?___xxtofl& (0+255),b
 32958  019D60  0E00               	movlw	0
 32959  019D62  6F3F               	movwf	(?___xxtofl+1)& (0+255),b
 32960  019D64  0E00               	movlw	0
 32961  019D66  6F40               	movwf	(?___xxtofl+2)& (0+255),b
 32962  019D68  0E00               	movlw	0
 32963  019D6A  6F41               	movwf	(?___xxtofl+3)& (0+255),b
 32964  019D6C  0012               	return	
 32965  019D6E                     l17948:
 32966                           
 32967                           ; BSR set to: 2
 32968  019D6E  0E96               	movlw	150
 32969  019D70  6F47               	movwf	___xxtofl@exp& (0+255),b
 32970  019D72  D006               	goto	l17952
 32971  019D74                     l17950:
 32972                           
 32973                           ; BSR set to: 2
 32974  019D74  2B47               	incf	___xxtofl@exp& (0+255),f,b
 32975  019D76  90D8               	bcf	status,0,c
 32976  019D78  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32977  019D7A  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32978  019D7C  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32979  019D7E  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 32980  019D80                     l17952:
 32981                           
 32982                           ; BSR set to: 2
 32983  019D80  0E00               	movlw	0
 32984  019D82  1548               	andwf	___xxtofl@arg& (0+255),w,b
 32985  019D84  6F42               	movwf	??___xxtofl& (0+255),b
 32986  019D86  0E00               	movlw	0
 32987  019D88  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32988  019D8A  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 32989  019D8C  0E00               	movlw	0
 32990  019D8E  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32991  019D90  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 32992  019D92  0EFE               	movlw	254
 32993  019D94  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32994  019D96  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 32995  019D98  5142               	movf	??___xxtofl& (0+255),w,b
 32996  019D9A  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32997  019D9C  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32998  019D9E  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32999  019DA0  B4D8               	btfsc	status,2,c
 33000  019DA2  D00D               	goto	l3371
 33001  019DA4  D7E7               	goto	l17950
 33002  019DA6                     l17954:
 33003                           
 33004                           ; BSR set to: 2
 33005  019DA6  2B47               	incf	___xxtofl@exp& (0+255),f,b
 33006                           
 33007                           ; BSR set to: 2
 33008  019DA8  0E01               	movlw	1
 33009  019DAA  2748               	addwf	___xxtofl@arg& (0+255),f,b
 33010  019DAC  0E00               	movlw	0
 33011  019DAE  2349               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 33012  019DB0  234A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 33013  019DB2  234B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 33014                           
 33015                           ; BSR set to: 2
 33016  019DB4  90D8               	bcf	status,0,c
 33017  019DB6  334B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 33018  019DB8  334A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 33019  019DBA  3349               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 33020  019DBC  3348               	rrcf	___xxtofl@arg& (0+255),f,b
 33021  019DBE                     l3371:
 33022                           
 33023                           ; BSR set to: 2
 33024  019DBE  0E00               	movlw	0
 33025  019DC0  1548               	andwf	___xxtofl@arg& (0+255),w,b
 33026  019DC2  6F42               	movwf	??___xxtofl& (0+255),b
 33027  019DC4  0E00               	movlw	0
 33028  019DC6  1549               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 33029  019DC8  6F43               	movwf	(??___xxtofl+1)& (0+255),b
 33030  019DCA  0E00               	movlw	0
 33031  019DCC  154A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 33032  019DCE  6F44               	movwf	(??___xxtofl+2)& (0+255),b
 33033  019DD0  0EFF               	movlw	255
 33034  019DD2  154B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 33035  019DD4  6F45               	movwf	(??___xxtofl+3)& (0+255),b
 33036  019DD6  5142               	movf	??___xxtofl& (0+255),w,b
 33037  019DD8  1143               	iorwf	(??___xxtofl+1)& (0+255),w,b
 33038  019DDA  1144               	iorwf	(??___xxtofl+2)& (0+255),w,b
 33039  019DDC  1145               	iorwf	(??___xxtofl+3)& (0+255),w,b
 33040  019DDE  B4D8               	btfsc	status,2,c
 33041  019DE0  D007               	goto	l17962
 33042  019DE2  D7E1               	goto	l17954
 33043  019DE4                     l17960:
 33044                           
 33045                           ; BSR set to: 2
 33046  019DE4  0747               	decf	___xxtofl@exp& (0+255),f,b
 33047  019DE6  90D8               	bcf	status,0,c
 33048  019DE8  3748               	rlcf	___xxtofl@arg& (0+255),f,b
 33049  019DEA  3749               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 33050  019DEC  374A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 33051  019DEE  374B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 33052  019DF0                     l17962:
 33053                           
 33054                           ; BSR set to: 2
 33055  019DF0  BF4A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 33056  019DF2  D003               	goto	u21850
 33057                           
 33058                           ; BSR set to: 2
 33059  019DF4  0E02               	movlw	2
 33060  019DF6  6147               	cpfslt	___xxtofl@exp& (0+255),b
 33061  019DF8  D7F5               	goto	l17960
 33062  019DFA                     u21850:
 33063                           
 33064                           ; BSR set to: 2
 33065  019DFA  A147               	btfss	___xxtofl@exp& (0+255),0,b
 33066                           
 33067                           ; BSR set to: 2
 33068  019DFC  9F4A               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 33069                           
 33070                           ; BSR set to: 2
 33071  019DFE  90D8               	bcf	status,0,c
 33072  019E00  3347               	rrcf	___xxtofl@exp& (0+255),f,b
 33073                           
 33074                           ; BSR set to: 2
 33075  019E02  C247  F242         	movff	___xxtofl@exp,??___xxtofl
 33076  019E06  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 33077  019E08  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 33078  019E0A  6B45               	clrf	(??___xxtofl+3)& (0+255),b
 33079  019E0C  C242  F245         	movff	??___xxtofl,??___xxtofl+3
 33080  019E10  6B44               	clrf	(??___xxtofl+2)& (0+255),b
 33081  019E12  6B43               	clrf	(??___xxtofl+1)& (0+255),b
 33082  019E14  6B42               	clrf	??___xxtofl& (0+255),b
 33083  019E16  5142               	movf	??___xxtofl& (0+255),w,b
 33084  019E18  1348               	iorwf	___xxtofl@arg& (0+255),f,b
 33085  019E1A  5143               	movf	(??___xxtofl+1)& (0+255),w,b
 33086  019E1C  1349               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 33087  019E1E  5144               	movf	(??___xxtofl+2)& (0+255),w,b
 33088  019E20  134A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 33089  019E22  5145               	movf	(??___xxtofl+3)& (0+255),w,b
 33090  019E24  134B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 33091                           
 33092                           ; BSR set to: 2
 33093  019E26  5146               	movf	___xxtofl@sign& (0+255),w,b
 33094  019E28  A4D8               	btfss	status,2,c
 33095                           
 33096                           ; BSR set to: 2
 33097  019E2A  AF41               	btfss	(___xxtofl@val+3)& (0+255),7,b
 33098  019E2C  D001               	goto	l17978
 33099                           
 33100                           ; BSR set to: 2
 33101  019E2E  8F4B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 33102  019E30                     l17978:
 33103                           
 33104                           ; BSR set to: 2
 33105  019E30  C248  F23E         	movff	___xxtofl@arg,?___xxtofl
 33106  019E34  C249  F23F         	movff	___xxtofl@arg+1,?___xxtofl+1
 33107  019E38  C24A  F240         	movff	___xxtofl@arg+2,?___xxtofl+2
 33108  019E3C  C24B  F241         	movff	___xxtofl@arg+3,?___xxtofl+3
 33109                           
 33110                           ; BSR set to: 2
 33111  019E40  0012               	return		;funcret
 33112  019E42                     __end_of___xxtofl:
 33113                           	opt callstack 0
 33114                           
 33115 ;; *************** function ___flmul *****************
 33116 ;; Defined at:
 33117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 33118 ;; Parameters:    Size  Location     Type
 33119 ;;  b               4   14[BANK2 ] unsigned char 
 33120 ;;  a               4   18[BANK2 ] unsigned char 
 33121 ;; Auto vars:     Size  Location     Type
 33122 ;;  prod            4   33[BANK2 ] struct .
 33123 ;;  grs             4   28[BANK2 ] unsigned long 
 33124 ;;  temp            2   37[BANK2 ] struct .
 33125 ;;  bexp            1   32[BANK2 ] unsigned char 
 33126 ;;  aexp            1   27[BANK2 ] unsigned char 
 33127 ;;  sign            1   26[BANK2 ] unsigned char 
 33128 ;; Return value:  Size  Location     Type
 33129 ;;                  4   14[BANK2 ] unsigned char 
 33130 ;; Registers used:
 33131 ;;		wreg, status,2, status,0, prodl, prodh
 33132 ;; Tracked objects:
 33133 ;;		On entry : 0/0
 33134 ;;		On exit  : 0/0
 33135 ;;		Unchanged: 0/0
 33136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33137 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33138 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33139 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33140 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33141 ;;Total ram usage:       25 bytes
 33142 ;; Hardware stack levels used:    1
 33143 ;; Hardware stack levels required when called:   11
 33144 ;; This function calls:
 33145 ;;		Nothing
 33146 ;; This function is called by:
 33147 ;;		_LM73Convert
 33148 ;;		_floatToEngineeringFormat
 33149 ;;		_fround
 33150 ;;		_scale
 33151 ;;		__doprnt
 33152 ;;		_ftoa
 33153 ;; This function uses a non-reentrant model
 33154 ;;
 33155                           
 33156                           	psect	text115
 33157  016A80                     __ptext115:
 33158                           	opt callstack 0
 33159  016A80                     ___flmul:
 33160                           	opt callstack 13
 33161                           
 33162                           ; BSR set to: 2
 33163                           ;incstack = 0
 33164  016A80  0102               	movlb	2	; () banked
 33165  016A82  5111               	movf	(___flmul@b+3)& (0+255),w,b
 33166  016A84  0B80               	andlw	128
 33167  016A86  6F1A               	movwf	___flmul@sign& (0+255),b
 33168  016A88  5111               	movf	(___flmul@b+3)& (0+255),w,b
 33169  016A8A  2511               	addwf	(___flmul@b+3)& (0+255),w,b
 33170  016A8C  6F20               	movwf	___flmul@bexp& (0+255),b
 33171                           
 33172                           ; BSR set to: 2
 33173  016A8E  BF10               	btfsc	(___flmul@b+2)& (0+255),7,b
 33174                           
 33175                           ; BSR set to: 2
 33176  016A90  8120               	bsf	___flmul@bexp& (0+255),0,b
 33177                           
 33178                           ; BSR set to: 2
 33179  016A92  5120               	movf	___flmul@bexp& (0+255),w,b
 33180  016A94  B4D8               	btfsc	status,2,c
 33181  016A96  D00D               	goto	l17372
 33182                           
 33183                           ; BSR set to: 2
 33184  016A98  2920               	incf	___flmul@bexp& (0+255),w,b
 33185  016A9A  A4D8               	btfss	status,2,c
 33186  016A9C  D008               	goto	l17370
 33187                           
 33188                           ; BSR set to: 2
 33189  016A9E  0E00               	movlw	0
 33190  016AA0  6F0E               	movwf	___flmul@b& (0+255),b
 33191  016AA2  0E00               	movlw	0
 33192  016AA4  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 33193  016AA6  0E00               	movlw	0
 33194  016AA8  6F10               	movwf	(___flmul@b+2)& (0+255),b
 33195  016AAA  0E00               	movlw	0
 33196  016AAC  6F11               	movwf	(___flmul@b+3)& (0+255),b
 33197  016AAE                     l17370:
 33198                           
 33199                           ; BSR set to: 2
 33200  016AAE  8F10               	bsf	(___flmul@b+2)& (0+255),7,b
 33201  016AB0  D008               	goto	l17374
 33202  016AB2                     l17372:
 33203                           
 33204                           ; BSR set to: 2
 33205  016AB2  0E00               	movlw	0
 33206  016AB4  6F0E               	movwf	___flmul@b& (0+255),b
 33207  016AB6  0E00               	movlw	0
 33208  016AB8  6F0F               	movwf	(___flmul@b+1)& (0+255),b
 33209  016ABA  0E00               	movlw	0
 33210  016ABC  6F10               	movwf	(___flmul@b+2)& (0+255),b
 33211  016ABE  0E00               	movlw	0
 33212  016AC0  6F11               	movwf	(___flmul@b+3)& (0+255),b
 33213  016AC2                     l17374:
 33214                           
 33215                           ; BSR set to: 2
 33216  016AC2  5115               	movf	(___flmul@a+3)& (0+255),w,b
 33217  016AC4  0B80               	andlw	128
 33218  016AC6  1B1A               	xorwf	___flmul@sign& (0+255),f,b
 33219                           
 33220                           ; BSR set to: 2
 33221  016AC8  5115               	movf	(___flmul@a+3)& (0+255),w,b
 33222  016ACA  2515               	addwf	(___flmul@a+3)& (0+255),w,b
 33223  016ACC  6F1B               	movwf	___flmul@aexp& (0+255),b
 33224                           
 33225                           ; BSR set to: 2
 33226  016ACE  BF14               	btfsc	(___flmul@a+2)& (0+255),7,b
 33227                           
 33228                           ; BSR set to: 2
 33229  016AD0  811B               	bsf	___flmul@aexp& (0+255),0,b
 33230                           
 33231                           ; BSR set to: 2
 33232  016AD2  511B               	movf	___flmul@aexp& (0+255),w,b
 33233  016AD4  B4D8               	btfsc	status,2,c
 33234  016AD6  D00D               	goto	l17390
 33235                           
 33236                           ; BSR set to: 2
 33237  016AD8  291B               	incf	___flmul@aexp& (0+255),w,b
 33238  016ADA  A4D8               	btfss	status,2,c
 33239  016ADC  D008               	goto	l17388
 33240                           
 33241                           ; BSR set to: 2
 33242  016ADE  0E00               	movlw	0
 33243  016AE0  6F12               	movwf	___flmul@a& (0+255),b
 33244  016AE2  0E00               	movlw	0
 33245  016AE4  6F13               	movwf	(___flmul@a+1)& (0+255),b
 33246  016AE6  0E00               	movlw	0
 33247  016AE8  6F14               	movwf	(___flmul@a+2)& (0+255),b
 33248  016AEA  0E00               	movlw	0
 33249  016AEC  6F15               	movwf	(___flmul@a+3)& (0+255),b
 33250  016AEE                     l17388:
 33251                           
 33252                           ; BSR set to: 2
 33253  016AEE  8F14               	bsf	(___flmul@a+2)& (0+255),7,b
 33254  016AF0  D008               	goto	l3323
 33255  016AF2                     l17390:
 33256                           
 33257                           ; BSR set to: 2
 33258  016AF2  0E00               	movlw	0
 33259  016AF4  6F12               	movwf	___flmul@a& (0+255),b
 33260  016AF6  0E00               	movlw	0
 33261  016AF8  6F13               	movwf	(___flmul@a+1)& (0+255),b
 33262  016AFA  0E00               	movlw	0
 33263  016AFC  6F14               	movwf	(___flmul@a+2)& (0+255),b
 33264  016AFE  0E00               	movlw	0
 33265  016B00  6F15               	movwf	(___flmul@a+3)& (0+255),b
 33266  016B02                     l3323:
 33267                           
 33268                           ; BSR set to: 2
 33269  016B02  511B               	movf	___flmul@aexp& (0+255),w,b
 33270  016B04  B4D8               	btfsc	status,2,c
 33271  016B06  D003               	goto	u21010
 33272                           
 33273                           ; BSR set to: 2
 33274  016B08  5120               	movf	___flmul@bexp& (0+255),w,b
 33275  016B0A  A4D8               	btfss	status,2,c
 33276  016B0C  D009               	goto	l17398
 33277  016B0E                     u21010:
 33278                           
 33279                           ; BSR set to: 2
 33280  016B0E  0E00               	movlw	0
 33281  016B10  6F0E               	movwf	?___flmul& (0+255),b
 33282  016B12  0E00               	movlw	0
 33283  016B14  6F0F               	movwf	(?___flmul+1)& (0+255),b
 33284  016B16  0E00               	movlw	0
 33285  016B18  6F10               	movwf	(?___flmul+2)& (0+255),b
 33286  016B1A  0E00               	movlw	0
 33287  016B1C  6F11               	movwf	(?___flmul+3)& (0+255),b
 33288  016B1E  0012               	return	
 33289  016B20                     l17398:
 33290                           
 33291                           ; BSR set to: 2
 33292  016B20  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33293  016B22  030E               	mulwf	___flmul@b& (0+255),b
 33294  016B24  CFF3 F225          	movff	prodl,___flmul@temp
 33295  016B28  CFF4 F226          	movff	prodh,___flmul@temp+1
 33296                           
 33297                           ; BSR set to: 2
 33298  016B2C  5125               	movf	___flmul@temp& (0+255),w,b
 33299  016B2E  6F1C               	movwf	___flmul@grs& (0+255),b
 33300  016B30  6B1D               	clrf	(___flmul@grs+1)& (0+255),b
 33301  016B32  6B1E               	clrf	(___flmul@grs+2)& (0+255),b
 33302  016B34  6B1F               	clrf	(___flmul@grs+3)& (0+255),b
 33303                           
 33304                           ; BSR set to: 2
 33305  016B36  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33306  016B38  6F21               	movwf	___flmul@prod& (0+255),b
 33307  016B3A  6B22               	clrf	(___flmul@prod+1)& (0+255),b
 33308  016B3C  6B23               	clrf	(___flmul@prod+2)& (0+255),b
 33309  016B3E  6B24               	clrf	(___flmul@prod+3)& (0+255),b
 33310  016B40  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33311  016B42  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33312  016B44  CFF3 F225          	movff	prodl,___flmul@temp
 33313  016B48  CFF4 F226          	movff	prodh,___flmul@temp+1
 33314                           
 33315                           ; BSR set to: 2
 33316  016B4C  5125               	movf	___flmul@temp& (0+255),w,b
 33317  016B4E  271C               	addwf	___flmul@grs& (0+255),f,b
 33318  016B50  0E00               	movlw	0
 33319  016B52  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33320  016B54  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33321  016B56  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33322                           
 33323                           ; BSR set to: 2
 33324  016B58  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33325  016B5A  2721               	addwf	___flmul@prod& (0+255),f,b
 33326  016B5C  0E00               	movlw	0
 33327  016B5E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33328  016B60  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33329  016B62  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33330  016B64  5112               	movf	___flmul@a& (0+255),w,b
 33331  016B66  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33332  016B68  CFF3 F225          	movff	prodl,___flmul@temp
 33333  016B6C  CFF4 F226          	movff	prodh,___flmul@temp+1
 33334                           
 33335                           ; BSR set to: 2
 33336  016B70  5125               	movf	___flmul@temp& (0+255),w,b
 33337  016B72  271C               	addwf	___flmul@grs& (0+255),f,b
 33338  016B74  0E00               	movlw	0
 33339  016B76  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33340  016B78  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33341  016B7A  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33342                           
 33343                           ; BSR set to: 2
 33344  016B7C  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33345  016B7E  2721               	addwf	___flmul@prod& (0+255),f,b
 33346  016B80  0E00               	movlw	0
 33347  016B82  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33348  016B84  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33349  016B86  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33350                           
 33351                           ; BSR set to: 2
 33352  016B88  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33353  016B8C  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33354  016B90  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33355  016B94  6B1C               	clrf	___flmul@grs& (0+255),b
 33356                           
 33357                           ; BSR set to: 2
 33358  016B96  5112               	movf	___flmul@a& (0+255),w,b
 33359  016B98  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33360  016B9A  CFF3 F225          	movff	prodl,___flmul@temp
 33361  016B9E  CFF4 F226          	movff	prodh,___flmul@temp+1
 33362                           
 33363                           ; BSR set to: 2
 33364  016BA2  5125               	movf	___flmul@temp& (0+255),w,b
 33365  016BA4  271C               	addwf	___flmul@grs& (0+255),f,b
 33366  016BA6  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33367  016BA8  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33368  016BAA  0E00               	movlw	0
 33369  016BAC  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33370  016BAE  0E00               	movlw	0
 33371  016BB0  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33372                           
 33373                           ; BSR set to: 2
 33374  016BB2  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33375  016BB4  030E               	mulwf	___flmul@b& (0+255),b
 33376  016BB6  CFF3 F225          	movff	prodl,___flmul@temp
 33377  016BBA  CFF4 F226          	movff	prodh,___flmul@temp+1
 33378                           
 33379                           ; BSR set to: 2
 33380  016BBE  5125               	movf	___flmul@temp& (0+255),w,b
 33381  016BC0  271C               	addwf	___flmul@grs& (0+255),f,b
 33382  016BC2  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33383  016BC4  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33384  016BC6  0E00               	movlw	0
 33385  016BC8  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33386  016BCA  0E00               	movlw	0
 33387  016BCC  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33388                           
 33389                           ; BSR set to: 2
 33390  016BCE  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33391  016BD2  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33392  016BD6  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33393  016BDA  6B1C               	clrf	___flmul@grs& (0+255),b
 33394  016BDC  5112               	movf	___flmul@a& (0+255),w,b
 33395  016BDE  030E               	mulwf	___flmul@b& (0+255),b
 33396  016BE0  CFF3 F225          	movff	prodl,___flmul@temp
 33397  016BE4  CFF4 F226          	movff	prodh,___flmul@temp+1
 33398                           
 33399                           ; BSR set to: 2
 33400  016BE8  5125               	movf	___flmul@temp& (0+255),w,b
 33401  016BEA  271C               	addwf	___flmul@grs& (0+255),f,b
 33402  016BEC  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33403  016BEE  231D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 33404  016BF0  0E00               	movlw	0
 33405  016BF2  231E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 33406  016BF4  0E00               	movlw	0
 33407  016BF6  231F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 33408                           
 33409                           ; BSR set to: 2
 33410  016BF8  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33411  016BFA  030F               	mulwf	(___flmul@b+1)& (0+255),b
 33412  016BFC  CFF3 F225          	movff	prodl,___flmul@temp
 33413  016C00  CFF4 F226          	movff	prodh,___flmul@temp+1
 33414  016C04  5125               	movf	___flmul@temp& (0+255),w,b
 33415  016C06  2721               	addwf	___flmul@prod& (0+255),f,b
 33416  016C08  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33417  016C0A  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33418  016C0C  0E00               	movlw	0
 33419  016C0E  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33420  016C10  0E00               	movlw	0
 33421  016C12  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33422                           
 33423                           ; BSR set to: 2
 33424  016C14  5113               	movf	(___flmul@a+1)& (0+255),w,b
 33425  016C16  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33426  016C18  CFF3 F225          	movff	prodl,___flmul@temp
 33427  016C1C  CFF4 F226          	movff	prodh,___flmul@temp+1
 33428                           
 33429                           ; BSR set to: 2
 33430  016C20  5125               	movf	___flmul@temp& (0+255),w,b
 33431  016C22  2721               	addwf	___flmul@prod& (0+255),f,b
 33432  016C24  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33433  016C26  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33434  016C28  0E00               	movlw	0
 33435  016C2A  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33436  016C2C  0E00               	movlw	0
 33437  016C2E  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33438  016C30  5114               	movf	(___flmul@a+2)& (0+255),w,b
 33439  016C32  0310               	mulwf	(___flmul@b+2)& (0+255),b
 33440  016C34  CFF3 F225          	movff	prodl,___flmul@temp
 33441  016C38  CFF4 F226          	movff	prodh,___flmul@temp+1
 33442                           
 33443                           ; BSR set to: 2
 33444  016C3C  5125               	movf	___flmul@temp& (0+255),w,b
 33445  016C3E  6F16               	movwf	??___flmul& (0+255),b
 33446  016C40  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33447  016C42  6F17               	movwf	(??___flmul+1)& (0+255),b
 33448  016C44  6B18               	clrf	(??___flmul+2)& (0+255),b
 33449  016C46  6B19               	clrf	(??___flmul+3)& (0+255),b
 33450  016C48  C218  F219         	movff	??___flmul+2,??___flmul+3
 33451  016C4C  C217  F218         	movff	??___flmul+1,??___flmul+2
 33452  016C50  C216  F217         	movff	??___flmul,??___flmul+1
 33453  016C54  6B16               	clrf	??___flmul& (0+255),b
 33454  016C56  5116               	movf	??___flmul& (0+255),w,b
 33455  016C58  2721               	addwf	___flmul@prod& (0+255),f,b
 33456  016C5A  5117               	movf	(??___flmul+1)& (0+255),w,b
 33457  016C5C  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33458  016C5E  5118               	movf	(??___flmul+2)& (0+255),w,b
 33459  016C60  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33460  016C62  5119               	movf	(??___flmul+3)& (0+255),w,b
 33461  016C64  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33462                           
 33463                           ; BSR set to: 2
 33464  016C66  C21C  F216         	movff	___flmul@grs,??___flmul
 33465  016C6A  C21D  F217         	movff	___flmul@grs+1,??___flmul+1
 33466  016C6E  C21E  F218         	movff	___flmul@grs+2,??___flmul+2
 33467  016C72  C21F  F219         	movff	___flmul@grs+3,??___flmul+3
 33468  016C76  0E19               	movlw	25
 33469  016C78  D005               	goto	u21020
 33470  016C7A                     u21025:
 33471  016C7A  90D8               	bcf	status,0,c
 33472  016C7C  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33473  016C7E  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33474  016C80  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33475  016C82  3316               	rrcf	??___flmul& (0+255),f,b
 33476  016C84                     u21020:
 33477  016C84  2EE8               	decfsz	wreg,f,c
 33478  016C86  D7F9               	goto	u21025
 33479  016C88  5116               	movf	??___flmul& (0+255),w,b
 33480  016C8A  2721               	addwf	___flmul@prod& (0+255),f,b
 33481  016C8C  5117               	movf	(??___flmul+1)& (0+255),w,b
 33482  016C8E  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33483  016C90  5118               	movf	(??___flmul+2)& (0+255),w,b
 33484  016C92  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33485  016C94  5119               	movf	(??___flmul+3)& (0+255),w,b
 33486  016C96  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33487                           
 33488                           ; BSR set to: 2
 33489  016C98  C21E  F21F         	movff	___flmul@grs+2,___flmul@grs+3
 33490  016C9C  C21D  F21E         	movff	___flmul@grs+1,___flmul@grs+2
 33491  016CA0  C21C  F21D         	movff	___flmul@grs,___flmul@grs+1
 33492  016CA4  6B1C               	clrf	___flmul@grs& (0+255),b
 33493                           
 33494                           ; BSR set to: 2
 33495  016CA6  511B               	movf	___flmul@aexp& (0+255),w,b
 33496  016CA8  C220  F216         	movff	___flmul@bexp,??___flmul
 33497  016CAC  6B17               	clrf	(??___flmul+1)& (0+255),b
 33498  016CAE  2716               	addwf	??___flmul& (0+255),f,b
 33499  016CB0  0E00               	movlw	0
 33500  016CB2  2317               	addwfc	(??___flmul+1)& (0+255),f,b
 33501  016CB4  0E82               	movlw	130
 33502  016CB6  2516               	addwf	??___flmul& (0+255),w,b
 33503  016CB8  6F25               	movwf	___flmul@temp& (0+255),b
 33504  016CBA  0EFF               	movlw	255
 33505  016CBC  2117               	addwfc	(??___flmul+1)& (0+255),w,b
 33506  016CBE  6F26               	movwf	(___flmul@temp+1)& (0+255),b
 33507  016CC0  D00F               	goto	l17446
 33508  016CC2                     l17440:
 33509                           
 33510                           ; BSR set to: 2
 33511  016CC2  90D8               	bcf	status,0,c
 33512  016CC4  3721               	rlcf	___flmul@prod& (0+255),f,b
 33513  016CC6  3722               	rlcf	(___flmul@prod+1)& (0+255),f,b
 33514  016CC8  3723               	rlcf	(___flmul@prod+2)& (0+255),f,b
 33515  016CCA  3724               	rlcf	(___flmul@prod+3)& (0+255),f,b
 33516                           
 33517                           ; BSR set to: 2
 33518  016CCC  BF1F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 33519                           
 33520                           ; BSR set to: 2
 33521  016CCE  8121               	bsf	___flmul@prod& (0+255),0,b
 33522                           
 33523                           ; BSR set to: 2
 33524  016CD0  90D8               	bcf	status,0,c
 33525  016CD2  371C               	rlcf	___flmul@grs& (0+255),f,b
 33526  016CD4  371D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 33527  016CD6  371E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 33528  016CD8  371F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 33529  016CDA  0725               	decf	___flmul@temp& (0+255),f,b
 33530  016CDC  A0D8               	btfss	status,0,c
 33531  016CDE  0726               	decf	(___flmul@temp+1)& (0+255),f,b
 33532  016CE0                     l17446:
 33533                           
 33534                           ; BSR set to: 2
 33535  016CE0  AF23               	btfss	(___flmul@prod+2)& (0+255),7,b
 33536  016CE2  D7EF               	goto	l17440
 33537                           
 33538                           ; BSR set to: 2
 33539  016CE4  0E00               	movlw	0
 33540  016CE6  6F1B               	movwf	___flmul@aexp& (0+255),b
 33541                           
 33542                           ; BSR set to: 2
 33543  016CE8  AF1F               	btfss	(___flmul@grs+3)& (0+255),7,b
 33544  016CEA  D017               	goto	l3332
 33545                           
 33546                           ; BSR set to: 2
 33547  016CEC  0EFF               	movlw	255
 33548  016CEE  151C               	andwf	___flmul@grs& (0+255),w,b
 33549  016CF0  6F16               	movwf	??___flmul& (0+255),b
 33550  016CF2  0EFF               	movlw	255
 33551  016CF4  151D               	andwf	(___flmul@grs+1)& (0+255),w,b
 33552  016CF6  6F17               	movwf	(??___flmul+1)& (0+255),b
 33553  016CF8  0EFF               	movlw	255
 33554  016CFA  151E               	andwf	(___flmul@grs+2)& (0+255),w,b
 33555  016CFC  6F18               	movwf	(??___flmul+2)& (0+255),b
 33556  016CFE  0E7F               	movlw	127
 33557  016D00  151F               	andwf	(___flmul@grs+3)& (0+255),w,b
 33558  016D02  6F19               	movwf	(??___flmul+3)& (0+255),b
 33559  016D04  5116               	movf	??___flmul& (0+255),w,b
 33560  016D06  1117               	iorwf	(??___flmul+1)& (0+255),w,b
 33561  016D08  1118               	iorwf	(??___flmul+2)& (0+255),w,b
 33562  016D0A  1119               	iorwf	(??___flmul+3)& (0+255),w,b
 33563  016D0C  B4D8               	btfsc	status,2,c
 33564  016D0E  D003               	goto	l3333
 33565  016D10                     u21060:
 33566                           
 33567                           ; BSR set to: 2
 33568  016D10  0E01               	movlw	1
 33569  016D12  6F1B               	movwf	___flmul@aexp& (0+255),b
 33570  016D14  D002               	goto	l3332
 33571  016D16                     l3333:
 33572                           
 33573                           ; BSR set to: 2
 33574  016D16  B121               	btfsc	___flmul@prod& (0+255),0,b
 33575  016D18  D7FB               	goto	u21060
 33576  016D1A                     l3332:
 33577                           
 33578                           ; BSR set to: 2
 33579  016D1A  511B               	movf	___flmul@aexp& (0+255),w,b
 33580  016D1C  B4D8               	btfsc	status,2,c
 33581  016D1E  D01F               	goto	l17466
 33582                           
 33583                           ; BSR set to: 2
 33584  016D20  0E01               	movlw	1
 33585  016D22  2721               	addwf	___flmul@prod& (0+255),f,b
 33586  016D24  0E00               	movlw	0
 33587  016D26  2322               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33588  016D28  2323               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33589  016D2A  2324               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33590                           
 33591                           ; BSR set to: 2
 33592  016D2C  A124               	btfss	(___flmul@prod+3)& (0+255),0,b
 33593  016D2E  D017               	goto	l17466
 33594                           
 33595                           ; BSR set to: 2
 33596  016D30  C221  F216         	movff	___flmul@prod,??___flmul
 33597  016D34  C222  F217         	movff	___flmul@prod+1,??___flmul+1
 33598  016D38  C223  F218         	movff	___flmul@prod+2,??___flmul+2
 33599  016D3C  C224  F219         	movff	___flmul@prod+3,??___flmul+3
 33600  016D40  3519               	rlcf	(??___flmul+3)& (0+255),w,b
 33601  016D42  3319               	rrcf	(??___flmul+3)& (0+255),f,b
 33602  016D44  3318               	rrcf	(??___flmul+2)& (0+255),f,b
 33603  016D46  3317               	rrcf	(??___flmul+1)& (0+255),f,b
 33604  016D48  3316               	rrcf	??___flmul& (0+255),f,b
 33605  016D4A  C216  F221         	movff	??___flmul,___flmul@prod
 33606  016D4E  C217  F222         	movff	??___flmul+1,___flmul@prod+1
 33607  016D52  C218  F223         	movff	??___flmul+2,___flmul@prod+2
 33608  016D56  C219  F224         	movff	??___flmul+3,___flmul@prod+3
 33609                           
 33610                           ; BSR set to: 2
 33611  016D5A  4B25               	infsnz	___flmul@temp& (0+255),f,b
 33612  016D5C  2B26               	incf	(___flmul@temp+1)& (0+255),f,b
 33613  016D5E                     l17466:
 33614                           
 33615                           ; BSR set to: 2
 33616  016D5E  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33617  016D60  D00D               	goto	l17470
 33618  016D62  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33619  016D64  E103               	bnz	u21100
 33620  016D66  2925               	incf	___flmul@temp& (0+255),w,b
 33621  016D68  A0D8               	btfss	status,0,c
 33622  016D6A  D008               	goto	l17470
 33623  016D6C                     u21100:
 33624                           
 33625                           ; BSR set to: 2
 33626  016D6C  0E00               	movlw	0
 33627  016D6E  6F21               	movwf	___flmul@prod& (0+255),b
 33628  016D70  0E00               	movlw	0
 33629  016D72  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33630  016D74  0E80               	movlw	128
 33631  016D76  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33632  016D78  0E7F               	movlw	127
 33633  016D7A  D020               	goto	L26
 33634  016D7C                     l17470:
 33635                           
 33636                           ; BSR set to: 2
 33637  016D7C  BF26               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33638  016D7E  D005               	goto	u21110
 33639  016D80  5126               	movf	(___flmul@temp+1)& (0+255),w,b
 33640  016D82  E10E               	bnz	l3340
 33641  016D84  0525               	decf	___flmul@temp& (0+255),w,b
 33642  016D86  B0D8               	btfsc	status,0,c
 33643  016D88  D00B               	goto	l3340
 33644  016D8A                     u21110:
 33645                           
 33646                           ; BSR set to: 2
 33647  016D8A  0E00               	movlw	0
 33648  016D8C  6F21               	movwf	___flmul@prod& (0+255),b
 33649  016D8E  0E00               	movlw	0
 33650  016D90  6F22               	movwf	(___flmul@prod+1)& (0+255),b
 33651  016D92  0E00               	movlw	0
 33652  016D94  6F23               	movwf	(___flmul@prod+2)& (0+255),b
 33653  016D96  0E00               	movlw	0
 33654  016D98  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33655  016D9A  0E00               	movlw	0
 33656  016D9C  6F1A               	movwf	___flmul@sign& (0+255),b
 33657  016D9E  D00F               	goto	l17482
 33658  016DA0                     l3340:
 33659                           
 33660                           ; BSR set to: 2
 33661  016DA0  C225  F220         	movff	___flmul@temp,___flmul@bexp
 33662                           
 33663                           ; BSR set to: 2
 33664  016DA4  0EFF               	movlw	255
 33665  016DA6  1721               	andwf	___flmul@prod& (0+255),f,b
 33666  016DA8  0EFF               	movlw	255
 33667  016DAA  1722               	andwf	(___flmul@prod+1)& (0+255),f,b
 33668  016DAC  0E7F               	movlw	127
 33669  016DAE  1723               	andwf	(___flmul@prod+2)& (0+255),f,b
 33670  016DB0  0E00               	movlw	0
 33671  016DB2  1724               	andwf	(___flmul@prod+3)& (0+255),f,b
 33672                           
 33673                           ; BSR set to: 2
 33674  016DB4  B120               	btfsc	___flmul@bexp& (0+255),0,b
 33675                           
 33676                           ; BSR set to: 2
 33677  016DB6  8F23               	bsf	(___flmul@prod+2)& (0+255),7,b
 33678                           
 33679                           ; BSR set to: 2
 33680  016DB8  90D8               	bcf	status,0,c
 33681  016DBA  3120               	rrcf	___flmul@bexp& (0+255),w,b
 33682  016DBC                     L26:
 33683  016DBC  6F24               	movwf	(___flmul@prod+3)& (0+255),b
 33684  016DBE                     l17482:
 33685                           
 33686                           ; BSR set to: 2
 33687  016DBE  511A               	movf	___flmul@sign& (0+255),w,b
 33688  016DC0  1324               	iorwf	(___flmul@prod+3)& (0+255),f,b
 33689                           
 33690                           ; BSR set to: 2
 33691  016DC2  C221  F20E         	movff	___flmul@prod,?___flmul
 33692  016DC6  C222  F20F         	movff	___flmul@prod+1,?___flmul+1
 33693  016DCA  C223  F210         	movff	___flmul@prod+2,?___flmul+2
 33694  016DCE  C224  F211         	movff	___flmul@prod+3,?___flmul+3
 33695                           
 33696                           ; BSR set to: 2
 33697  016DD2  0012               	return		;funcret
 33698  016DD4                     __end_of___flmul:
 33699                           	opt callstack 0
 33700                           
 33701 ;; *************** function _I2C2_MasterWrite *****************
 33702 ;; Defined at:
 33703 ;;		line 601 in file "mcc_generated_files/i2c2.c"
 33704 ;; Parameters:    Size  Location     Type
 33705 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33706 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33707 ;;		 -> NULL(0), 
 33708 ;;  length          1   11[BANK2 ] unsigned char 
 33709 ;;  address         2   12[BANK2 ] unsigned int 
 33710 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33711 ;;		 -> I2C_STATUS(1), 
 33712 ;; Auto vars:     Size  Location     Type
 33713 ;;		None
 33714 ;; Return value:  Size  Location     Type
 33715 ;;                  1    wreg      void 
 33716 ;; Registers used:
 33717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33718 ;; Tracked objects:
 33719 ;;		On entry : 0/0
 33720 ;;		On exit  : 0/0
 33721 ;;		Unchanged: 0/0
 33722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33723 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33726 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33727 ;;Total ram usage:        7 bytes
 33728 ;; Hardware stack levels used:    1
 33729 ;; Hardware stack levels required when called:   13
 33730 ;; This function calls:
 33731 ;;		_I2C2_MasterTRBInsert
 33732 ;;		_I2C2_MasterWriteTRBBuild
 33733 ;; This function is called by:
 33734 ;;		_LM73TempSensorInitialize
 33735 ;;		_LM73AcquisitionHandler
 33736 ;;		_OLED_Command
 33737 ;;		_OLED_PutChar
 33738 ;;		_OLED_Data
 33739 ;; This function uses a non-reentrant model
 33740 ;;
 33741                           
 33742                           	psect	text116
 33743  01BC56                     __ptext116:
 33744                           	opt callstack 0
 33745  01BC56                     _I2C2_MasterWrite:
 33746                           	opt callstack 13
 33747                           
 33748                           ;i2c2.c: 607: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 610: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33749                           
 33750                           ; BSR set to: 2
 33751                           ;incstack = 0
 33752  01BC56  0101               	movlb	1	; () banked
 33753  01BC58  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33754  01BC5A  D01E               	goto	l18590
 33755                           
 33756                           ; BSR set to: 1
 33757                           ;i2c2.c: 611: {;i2c2.c: 612: I2C2_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 33758  01BC5C  0E9B               	movlw	low I2C2_MasterWrite@trBlock
 33759  01BC5E  0102               	movlb	2	; () banked
 33760  01BC60  6F00               	movwf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),b
 33761  01BC62  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33762  01BC64  6F01               	movwf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 33763  01BC66  C209  F202         	movff	I2C2_MasterWrite@pdata,I2C2_MasterWriteTRBBuild@pdata
 33764  01BC6A  C20A  F203         	movff	I2C2_MasterWrite@pdata+1,I2C2_MasterWriteTRBBuild@pdata+1
 33765  01BC6E  C20B  F204         	movff	I2C2_MasterWrite@length,I2C2_MasterWriteTRBBuild@length
 33766  01BC72  C20C  F205         	movff	I2C2_MasterWrite@address,I2C2_MasterWriteTRBBuild@address
 33767  01BC76  C20D  F206         	movff	I2C2_MasterWrite@address+1,I2C2_MasterWriteTRBBuild@address+1
 33768  01BC7A  EC2E  F0DF         	call	_I2C2_MasterWriteTRBBuild	;wreg free
 33769                           
 33770                           ;i2c2.c: 613: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33771  01BC7E  0E9B               	movlw	low I2C2_MasterWrite@trBlock
 33772  01BC80  0102               	movlb	2	; () banked
 33773  01BC82  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33774  01BC84  0E01               	movlw	high I2C2_MasterWrite@trBlock
 33775  01BC86  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33776  01BC88  C20E  F202         	movff	I2C2_MasterWrite@pflag,I2C2_MasterTRBInsert@pflag
 33777  01BC8C  C20F  F203         	movff	I2C2_MasterWrite@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33778  01BC90  0E01               	movlw	1
 33779  01BC92  EC9E  F0D7         	call	_I2C2_MasterTRBInsert
 33780                           
 33781                           ;i2c2.c: 614: }
 33782  01BC96  0012               	return	
 33783  01BC98                     l18590:
 33784                           
 33785                           ; BSR set to: 1
 33786                           ;i2c2.c: 615: else;i2c2.c: 616: {;i2c2.c: 617: *pflag = I2C2_MESSAGE_FAIL;
 33787  01BC98  C20E  FFD9         	movff	I2C2_MasterWrite@pflag,fsr2l
 33788  01BC9C  C20F  FFDA         	movff	I2C2_MasterWrite@pflag+1,fsr2h
 33789  01BCA0  0E01               	movlw	1
 33790  01BCA2  6EDF               	movwf	indf2,c
 33791  01BCA4  0012               	return		;funcret
 33792  01BCA6                     __end_of_I2C2_MasterWrite:
 33793                           	opt callstack 0
 33794                           
 33795 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
 33796 ;; Defined at:
 33797 ;;		line 722 in file "mcc_generated_files/i2c2.c"
 33798 ;; Parameters:    Size  Location     Type
 33799 ;;  ptrb            2    0[BANK2 ] PTR struct .
 33800 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 33801 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 33802 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), LM73TempSensorInitialize@output
      +_data_array(2), 
 33803 ;;		 -> NULL(0), 
 33804 ;;  length          1    4[BANK2 ] unsigned char 
 33805 ;;  address         2    5[BANK2 ] unsigned int 
 33806 ;; Auto vars:     Size  Location     Type
 33807 ;;		None
 33808 ;; Return value:  Size  Location     Type
 33809 ;;                  1    wreg      void 
 33810 ;; Registers used:
 33811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33812 ;; Tracked objects:
 33813 ;;		On entry : 0/0
 33814 ;;		On exit  : 0/0
 33815 ;;		Unchanged: 0/0
 33816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33817 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33819 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33820 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33821 ;;Total ram usage:        9 bytes
 33822 ;; Hardware stack levels used:    1
 33823 ;; Hardware stack levels required when called:   11
 33824 ;; This function calls:
 33825 ;;		Nothing
 33826 ;; This function is called by:
 33827 ;;		_I2C2_MasterWrite
 33828 ;; This function uses a non-reentrant model
 33829 ;;
 33830                           
 33831                           	psect	text117
 33832  01BE5C                     __ptext117:
 33833                           	opt callstack 0
 33834  01BE5C                     _I2C2_MasterWriteTRBBuild:
 33835                           	opt callstack 14
 33836                           
 33837                           ;i2c2.c: 728: ptrb->address = address << 1;
 33838                           
 33839                           ;incstack = 0
 33840  01BE5C  C205  F207         	movff	I2C2_MasterWriteTRBBuild@address,??_I2C2_MasterWriteTRBBuild
 33841  01BE60  C206  F208         	movff	I2C2_MasterWriteTRBBuild@address+1,??_I2C2_MasterWriteTRBBuild+1
 33842  01BE64  90D8               	bcf	status,0,c
 33843  01BE66  0102               	movlb	2	; () banked
 33844  01BE68  3707               	rlcf	??_I2C2_MasterWriteTRBBuild& (0+255),f,b
 33845  01BE6A  3708               	rlcf	(??_I2C2_MasterWriteTRBBuild+1)& (0+255),f,b
 33846  01BE6C  C200  FFD9         	movff	I2C2_MasterWriteTRBBuild@ptrb,fsr2l
 33847  01BE70  C201  FFDA         	movff	I2C2_MasterWriteTRBBuild@ptrb+1,fsr2h
 33848  01BE74  C207  FFDE         	movff	??_I2C2_MasterWriteTRBBuild,postinc2
 33849  01BE78  C208  FFDD         	movff	??_I2C2_MasterWriteTRBBuild+1,postdec2
 33850                           
 33851                           ; BSR set to: 2
 33852                           ;i2c2.c: 729: ptrb->length = length;
 33853  01BE7C  EE20 F002          	lfsr	2,2
 33854  01BE80  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33855  01BE82  26D9               	addwf	fsr2l,f,c
 33856  01BE84  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33857  01BE86  22DA               	addwfc	fsr2h,f,c
 33858  01BE88  C204  FFDF         	movff	I2C2_MasterWriteTRBBuild@length,indf2
 33859                           
 33860                           ; BSR set to: 2
 33861                           ;i2c2.c: 730: ptrb->pbuffer = pdata;
 33862  01BE8C  EE20 F003          	lfsr	2,3
 33863  01BE90  5100               	movf	I2C2_MasterWriteTRBBuild@ptrb& (0+255),w,b
 33864  01BE92  26D9               	addwf	fsr2l,f,c
 33865  01BE94  5101               	movf	(I2C2_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 33866  01BE96  22DA               	addwfc	fsr2h,f,c
 33867  01BE98  C202  FFDE         	movff	I2C2_MasterWriteTRBBuild@pdata,postinc2
 33868  01BE9C  C203  FFDD         	movff	I2C2_MasterWriteTRBBuild@pdata+1,postdec2
 33869                           
 33870                           ; BSR set to: 2
 33871  01BEA0  0012               	return		;funcret
 33872  01BEA2                     __end_of_I2C2_MasterWriteTRBBuild:
 33873                           	opt callstack 0
 33874                           
 33875 ;; *************** function _I2C2_MasterRead *****************
 33876 ;; Defined at:
 33877 ;;		line 622 in file "mcc_generated_files/i2c2.c"
 33878 ;; Parameters:    Size  Location     Type
 33879 ;;  pdata           2    9[BANK2 ] PTR unsigned char 
 33880 ;;		 -> LM73_temp_results(18), 
 33881 ;;  length          1   11[BANK2 ] unsigned char 
 33882 ;;  address         2   12[BANK2 ] unsigned int 
 33883 ;;  pflag           2   14[BANK2 ] PTR enum E9433
 33884 ;;		 -> I2C_STATUS(1), 
 33885 ;; Auto vars:     Size  Location     Type
 33886 ;;		None
 33887 ;; Return value:  Size  Location     Type
 33888 ;;                  1    wreg      void 
 33889 ;; Registers used:
 33890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33891 ;; Tracked objects:
 33892 ;;		On entry : 0/0
 33893 ;;		On exit  : 0/0
 33894 ;;		Unchanged: 0/0
 33895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33896 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33899 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33900 ;;Total ram usage:        7 bytes
 33901 ;; Hardware stack levels used:    1
 33902 ;; Hardware stack levels required when called:   13
 33903 ;; This function calls:
 33904 ;;		_I2C2_MasterReadTRBBuild
 33905 ;;		_I2C2_MasterTRBInsert
 33906 ;; This function is called by:
 33907 ;;		_LM73AcquisitionHandler
 33908 ;; This function uses a non-reentrant model
 33909 ;;
 33910                           
 33911                           	psect	text118
 33912  01BCA6                     __ptext118:
 33913                           	opt callstack 0
 33914  01BCA6                     _I2C2_MasterRead:
 33915                           	opt callstack 16
 33916                           
 33917                           ;i2c2.c: 628: static I2C2_TRANSACTION_REQUEST_BLOCK trBlock;;i2c2.c: 632: if (i2c2_objec
      +                          t.trStatus.s.full != 1)
 33918                           
 33919                           ; BSR set to: 2
 33920                           ;incstack = 0
 33921  01BCA6  0101               	movlb	1	; () banked
 33922  01BCA8  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 33923  01BCAA  D01E               	goto	l21030
 33924                           
 33925                           ; BSR set to: 1
 33926                           ;i2c2.c: 633: {;i2c2.c: 634: I2C2_MasterReadTRBBuild(&trBlock, pdata, length, address);
 33927  01BCAC  0E96               	movlw	low I2C2_MasterRead@trBlock
 33928  01BCAE  0102               	movlb	2	; () banked
 33929  01BCB0  6F00               	movwf	I2C2_MasterReadTRBBuild@ptrb& (0+255),b
 33930  01BCB2  0E01               	movlw	high I2C2_MasterRead@trBlock
 33931  01BCB4  6F01               	movwf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),b
 33932  01BCB6  C209  F202         	movff	I2C2_MasterRead@pdata,I2C2_MasterReadTRBBuild@pdata
 33933  01BCBA  C20A  F203         	movff	I2C2_MasterRead@pdata+1,I2C2_MasterReadTRBBuild@pdata+1
 33934  01BCBE  C20B  F204         	movff	I2C2_MasterRead@length,I2C2_MasterReadTRBBuild@length
 33935  01BCC2  C20C  F205         	movff	I2C2_MasterRead@address,I2C2_MasterReadTRBBuild@address
 33936  01BCC6  C20D  F206         	movff	I2C2_MasterRead@address+1,I2C2_MasterReadTRBBuild@address+1
 33937  01BCCA  EC61  F0DD         	call	_I2C2_MasterReadTRBBuild	;wreg free
 33938                           
 33939                           ;i2c2.c: 635: I2C2_MasterTRBInsert(1, &trBlock, pflag);
 33940  01BCCE  0E96               	movlw	low I2C2_MasterRead@trBlock
 33941  01BCD0  0102               	movlb	2	; () banked
 33942  01BCD2  6F00               	movwf	I2C2_MasterTRBInsert@ptrb_list& (0+255),b
 33943  01BCD4  0E01               	movlw	high I2C2_MasterRead@trBlock
 33944  01BCD6  6F01               	movwf	(I2C2_MasterTRBInsert@ptrb_list+1)& (0+255),b
 33945  01BCD8  C20E  F202         	movff	I2C2_MasterRead@pflag,I2C2_MasterTRBInsert@pflag
 33946  01BCDC  C20F  F203         	movff	I2C2_MasterRead@pflag+1,I2C2_MasterTRBInsert@pflag+1
 33947  01BCE0  0E01               	movlw	1
 33948  01BCE2  EC9E  F0D7         	call	_I2C2_MasterTRBInsert
 33949                           
 33950                           ;i2c2.c: 636: }
 33951  01BCE6  0012               	return	
 33952  01BCE8                     l21030:
 33953                           
 33954                           ; BSR set to: 1
 33955                           ;i2c2.c: 637: else;i2c2.c: 638: {;i2c2.c: 639: *pflag = I2C2_MESSAGE_FAIL;
 33956  01BCE8  C20E  FFD9         	movff	I2C2_MasterRead@pflag,fsr2l
 33957  01BCEC  C20F  FFDA         	movff	I2C2_MasterRead@pflag+1,fsr2h
 33958  01BCF0  0E01               	movlw	1
 33959  01BCF2  6EDF               	movwf	indf2,c
 33960  01BCF4  0012               	return		;funcret
 33961  01BCF6                     __end_of_I2C2_MasterRead:
 33962                           	opt callstack 0
 33963                           
 33964 ;; *************** function _I2C2_MasterTRBInsert *****************
 33965 ;; Defined at:
 33966 ;;		line 655 in file "mcc_generated_files/i2c2.c"
 33967 ;; Parameters:    Size  Location     Type
 33968 ;;  count           1    wreg     unsigned char 
 33969 ;;  ptrb_list       2    0[BANK2 ] PTR struct .
 33970 ;;		 -> I2C2_MasterRead@trBlock(5), I2C2_MasterWrite@trBlock(5), 
 33971 ;;  pflag           2    2[BANK2 ] PTR enum E9433
 33972 ;;		 -> I2C_STATUS(1), 
 33973 ;; Auto vars:     Size  Location     Type
 33974 ;;  count           1    5[BANK2 ] unsigned char 
 33975 ;; Return value:  Size  Location     Type
 33976 ;;                  1    wreg      void 
 33977 ;; Registers used:
 33978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33979 ;; Tracked objects:
 33980 ;;		On entry : 0/0
 33981 ;;		On exit  : 0/0
 33982 ;;		Unchanged: 0/0
 33983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33984 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33985 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33986 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33987 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;Total ram usage:        6 bytes
 33989 ;; Hardware stack levels used:    1
 33990 ;; Hardware stack levels required when called:   12
 33991 ;; This function calls:
 33992 ;;		_I2C2_WaitForLastPacketToComplete
 33993 ;; This function is called by:
 33994 ;;		_I2C2_MasterWrite
 33995 ;;		_I2C2_MasterRead
 33996 ;; This function uses a non-reentrant model
 33997 ;;
 33998                           
 33999                           	psect	text119
 34000  01AF3C                     __ptext119:
 34001                           	opt callstack 0
 34002  01AF3C                     _I2C2_MasterTRBInsert:
 34003                           	opt callstack 13
 34004                           
 34005                           ;incstack = 0
 34006                           ;I2C2_MasterTRBInsert@count stored from wreg
 34007  01AF3C  0102               	movlb	2	; () banked
 34008  01AF3E  6F05               	movwf	I2C2_MasterTRBInsert@count& (0+255),b
 34009                           
 34010                           ;i2c2.c: 662: if (i2c2_object.trStatus.s.full != 1)
 34011  01AF40  0101               	movlb	1	; () banked
 34012  01AF42  B165               	btfsc	(_i2c2_object+4)& (0+255),0,b
 34013  01AF44  D039               	goto	l18008
 34014                           
 34015                           ; BSR set to: 1
 34016                           ;i2c2.c: 663: {;i2c2.c: 664: *pflag = I2C2_MESSAGE_PENDING;
 34017  01AF46  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 34018  01AF4A  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 34019  01AF4E  0E02               	movlw	2
 34020  01AF50  6EDF               	movwf	indf2,c
 34021                           
 34022                           ; BSR set to: 1
 34023                           ;i2c2.c: 666: i2c2_object.pTrTail->ptrb_list = ptrb_list;
 34024  01AF52  EE20 F001          	lfsr	2,1
 34025  01AF56  5161               	movf	_i2c2_object& (0+255),w,b
 34026  01AF58  26D9               	addwf	fsr2l,f,c
 34027  01AF5A  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 34028  01AF5C  22DA               	addwfc	fsr2h,f,c
 34029  01AF5E  C200  FFDE         	movff	I2C2_MasterTRBInsert@ptrb_list,postinc2
 34030  01AF62  C201  FFDD         	movff	I2C2_MasterTRBInsert@ptrb_list+1,postdec2
 34031                           
 34032                           ; BSR set to: 1
 34033                           ;i2c2.c: 667: i2c2_object.pTrTail->count = count;
 34034  01AF66  C161  FFD9         	movff	_i2c2_object,fsr2l
 34035  01AF6A  C162  FFDA         	movff	_i2c2_object+1,fsr2h
 34036  01AF6E  C205  FFDF         	movff	I2C2_MasterTRBInsert@count,indf2
 34037                           
 34038                           ; BSR set to: 1
 34039                           ;i2c2.c: 668: i2c2_object.pTrTail->pTrFlag = pflag;
 34040  01AF72  EE20 F003          	lfsr	2,3
 34041  01AF76  5161               	movf	_i2c2_object& (0+255),w,b
 34042  01AF78  26D9               	addwf	fsr2l,f,c
 34043  01AF7A  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 34044  01AF7C  22DA               	addwfc	fsr2h,f,c
 34045  01AF7E  C202  FFDE         	movff	I2C2_MasterTRBInsert@pflag,postinc2
 34046  01AF82  C203  FFDD         	movff	I2C2_MasterTRBInsert@pflag+1,postdec2
 34047                           
 34048                           ; BSR set to: 1
 34049                           ;i2c2.c: 669: i2c2_object.pTrTail++;
 34050  01AF86  0E05               	movlw	5
 34051  01AF88  2761               	addwf	_i2c2_object& (0+255),f,b
 34052  01AF8A  0E00               	movlw	0
 34053  01AF8C  2362               	addwfc	(_i2c2_object+1)& (0+255),f,b
 34054                           
 34055                           ; BSR set to: 1
 34056                           ;i2c2.c: 672: if (i2c2_object.pTrTail == (i2c2_tr_queue + 1))
 34057  01AF8E  0EA5               	movlw	low (_i2c2_tr_queue+5)
 34058  01AF90  1961               	xorwf	_i2c2_object& (0+255),w,b
 34059  01AF92  E108               	bnz	l18004
 34060  01AF94  0E01               	movlw	high (_i2c2_tr_queue+5)
 34061  01AF96  1962               	xorwf	(_i2c2_object+1)& (0+255),w,b
 34062  01AF98  A4D8               	btfss	status,2,c
 34063  01AF9A  D004               	goto	l18004
 34064                           
 34065                           ; BSR set to: 1
 34066                           ;i2c2.c: 673: {;i2c2.c: 675: i2c2_object.pTrTail = i2c2_tr_queue;
 34067  01AF9C  0EA0               	movlw	low _i2c2_tr_queue
 34068  01AF9E  6F61               	movwf	_i2c2_object& (0+255),b
 34069  01AFA0  0E01               	movlw	high _i2c2_tr_queue
 34070  01AFA2  6F62               	movwf	(_i2c2_object+1)& (0+255),b
 34071  01AFA4                     l18004:
 34072                           
 34073                           ; BSR set to: 1
 34074                           ;i2c2.c: 676: };i2c2.c: 680: i2c2_object.trStatus.s.empty = 0;
 34075  01AFA4  9365               	bcf	(_i2c2_object+4)& (0+255),1,b
 34076                           
 34077                           ;i2c2.c: 683: if (i2c2_object.pTrHead == i2c2_object.pTrTail)
 34078  01AFA6  5161               	movf	_i2c2_object& (0+255),w,b
 34079  01AFA8  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 34080  01AFAA  E10C               	bnz	l18010
 34081  01AFAC  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 34082  01AFAE  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 34083  01AFB0  A4D8               	btfss	status,2,c
 34084  01AFB2  D008               	goto	l18010
 34085                           
 34086                           ; BSR set to: 1
 34087                           ;i2c2.c: 684: {;i2c2.c: 686: i2c2_object.trStatus.s.full = 1;
 34088  01AFB4  8165               	bsf	(_i2c2_object+4)& (0+255),0,b
 34089  01AFB6  D006               	goto	l18010
 34090  01AFB8                     l18008:
 34091                           
 34092                           ; BSR set to: 1
 34093                           ;i2c2.c: 690: else;i2c2.c: 691: {;i2c2.c: 692: *pflag = I2C2_MESSAGE_FAIL;
 34094  01AFB8  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 34095  01AFBC  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 34096  01AFC0  0E01               	movlw	1
 34097  01AFC2  6EDF               	movwf	indf2,c
 34098  01AFC4                     l18010:
 34099                           
 34100                           ; BSR set to: 1
 34101                           ;i2c2.c: 693: };i2c2.c: 696: if (*pflag == I2C2_MESSAGE_PENDING)
 34102  01AFC4  C202  FFD9         	movff	I2C2_MasterTRBInsert@pflag,fsr2l
 34103  01AFC8  C203  FFDA         	movff	I2C2_MasterTRBInsert@pflag+1,fsr2h
 34104  01AFCC  0E02               	movlw	2
 34105  01AFCE  18DE               	xorwf	postinc2,w,c
 34106  01AFD0  A4D8               	btfss	status,2,c
 34107  01AFD2  0012               	return	
 34108                           
 34109                           ; BSR set to: 1
 34110                           ;i2c2.c: 697: {;i2c2.c: 698: I2C2_WaitForLastPacketToComplete();
 34111  01AFD4  ECE2  F0E5         	call	_I2C2_WaitForLastPacketToComplete	;wreg free
 34112                           
 34113                           ;i2c2.c: 703: PIR3bits.SSP2IF = 1;
 34114  01AFD8  010E               	movlb	14	; () banked
 34115  01AFDA  85CD               	bsf	205,2,b	;volatile
 34116  01AFDC  0012               	return		;funcret
 34117  01AFDE                     __end_of_I2C2_MasterTRBInsert:
 34118                           	opt callstack 0
 34119                           
 34120 ;; *************** function _I2C2_WaitForLastPacketToComplete *****************
 34121 ;; Defined at:
 34122 ;;		line 645 in file "mcc_generated_files/i2c2.c"
 34123 ;; Parameters:    Size  Location     Type
 34124 ;;		None
 34125 ;; Auto vars:     Size  Location     Type
 34126 ;;		None
 34127 ;; Return value:  Size  Location     Type
 34128 ;;                  1    wreg      void 
 34129 ;; Registers used:
 34130 ;;		wreg, status,2
 34131 ;; Tracked objects:
 34132 ;;		On entry : 0/0
 34133 ;;		On exit  : 0/0
 34134 ;;		Unchanged: 0/0
 34135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34140 ;;Total ram usage:        0 bytes
 34141 ;; Hardware stack levels used:    1
 34142 ;; Hardware stack levels required when called:   11
 34143 ;; This function calls:
 34144 ;;		Nothing
 34145 ;; This function is called by:
 34146 ;;		_I2C2_MasterTRBInsert
 34147 ;; This function uses a non-reentrant model
 34148 ;;
 34149                           
 34150                           	psect	text120
 34151  01CBC4                     __ptext120:
 34152                           	opt callstack 0
 34153  01CBC4                     _I2C2_WaitForLastPacketToComplete:
 34154                           	opt callstack 13
 34155                           
 34156                           ;i2c2.c: 647: while(i2c2_state != S_MASTER_IDLE)
 34157                           
 34158                           ;incstack = 0
 34159  01CBC4  0100               	movlb	0	; () banked
 34160  01CBC6  51DB               	movf	_i2c2_state& (0+255),w,b
 34161  01CBC8  B4D8               	btfsc	status,2,c
 34162  01CBCA  0012               	return	
 34163  01CBCC  D7FB               	goto	_I2C2_WaitForLastPacketToComplete
 34164  01CBCE                     __end_of_I2C2_WaitForLastPacketToComplete:
 34165                           	opt callstack 0
 34166                           
 34167 ;; *************** function _I2C2_MasterReadTRBBuild *****************
 34168 ;; Defined at:
 34169 ;;		line 709 in file "mcc_generated_files/i2c2.c"
 34170 ;; Parameters:    Size  Location     Type
 34171 ;;  ptrb            2    0[BANK2 ] PTR struct .
 34172 ;;		 -> I2C2_MasterRead@trBlock(5), 
 34173 ;;  pdata           2    2[BANK2 ] PTR unsigned char 
 34174 ;;		 -> LM73_temp_results(18), 
 34175 ;;  length          1    4[BANK2 ] unsigned char 
 34176 ;;  address         2    5[BANK2 ] unsigned int 
 34177 ;; Auto vars:     Size  Location     Type
 34178 ;;		None
 34179 ;; Return value:  Size  Location     Type
 34180 ;;                  1    wreg      void 
 34181 ;; Registers used:
 34182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34183 ;; Tracked objects:
 34184 ;;		On entry : 0/0
 34185 ;;		On exit  : 0/0
 34186 ;;		Unchanged: 0/0
 34187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34188 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34190 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34191 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34192 ;;Total ram usage:        9 bytes
 34193 ;; Hardware stack levels used:    1
 34194 ;; Hardware stack levels required when called:   11
 34195 ;; This function calls:
 34196 ;;		Nothing
 34197 ;; This function is called by:
 34198 ;;		_I2C2_MasterRead
 34199 ;; This function uses a non-reentrant model
 34200 ;;
 34201                           
 34202                           	psect	text121
 34203  01BAC2                     __ptext121:
 34204                           	opt callstack 0
 34205  01BAC2                     _I2C2_MasterReadTRBBuild:
 34206                           	opt callstack 17
 34207                           
 34208                           ;i2c2.c: 715: ptrb->address = address << 1;
 34209                           
 34210                           ; BSR set to: 0
 34211                           ;incstack = 0
 34212  01BAC2  C205  F207         	movff	I2C2_MasterReadTRBBuild@address,??_I2C2_MasterReadTRBBuild
 34213  01BAC6  C206  F208         	movff	I2C2_MasterReadTRBBuild@address+1,??_I2C2_MasterReadTRBBuild+1
 34214  01BACA  90D8               	bcf	status,0,c
 34215  01BACC  0102               	movlb	2	; () banked
 34216  01BACE  3707               	rlcf	??_I2C2_MasterReadTRBBuild& (0+255),f,b
 34217  01BAD0  3708               	rlcf	(??_I2C2_MasterReadTRBBuild+1)& (0+255),f,b
 34218  01BAD2  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 34219  01BAD6  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 34220  01BADA  C207  FFDE         	movff	??_I2C2_MasterReadTRBBuild,postinc2
 34221  01BADE  C208  FFDD         	movff	??_I2C2_MasterReadTRBBuild+1,postdec2
 34222                           
 34223                           ; BSR set to: 2
 34224                           ;i2c2.c: 717: ptrb->address |= 0x01;
 34225  01BAE2  C200  FFD9         	movff	I2C2_MasterReadTRBBuild@ptrb,fsr2l
 34226  01BAE6  C201  FFDA         	movff	I2C2_MasterReadTRBBuild@ptrb+1,fsr2h
 34227  01BAEA  0E00               	movlw	0
 34228  01BAEC  80DB               	bsf	plusw2,0,c
 34229                           
 34230                           ; BSR set to: 2
 34231                           ;i2c2.c: 718: ptrb->length = length;
 34232  01BAEE  EE20 F002          	lfsr	2,2
 34233  01BAF2  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 34234  01BAF4  26D9               	addwf	fsr2l,f,c
 34235  01BAF6  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 34236  01BAF8  22DA               	addwfc	fsr2h,f,c
 34237  01BAFA  C204  FFDF         	movff	I2C2_MasterReadTRBBuild@length,indf2
 34238                           
 34239                           ; BSR set to: 2
 34240                           ;i2c2.c: 719: ptrb->pbuffer = pdata;
 34241  01BAFE  EE20 F003          	lfsr	2,3
 34242  01BB02  5100               	movf	I2C2_MasterReadTRBBuild@ptrb& (0+255),w,b
 34243  01BB04  26D9               	addwf	fsr2l,f,c
 34244  01BB06  5101               	movf	(I2C2_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
 34245  01BB08  22DA               	addwfc	fsr2h,f,c
 34246  01BB0A  C202  FFDE         	movff	I2C2_MasterReadTRBBuild@pdata,postinc2
 34247  01BB0E  C203  FFDD         	movff	I2C2_MasterReadTRBBuild@pdata+1,postdec2
 34248                           
 34249                           ; BSR set to: 2
 34250  01BB12  0012               	return		;funcret
 34251  01BB14                     __end_of_I2C2_MasterReadTRBBuild:
 34252                           	opt callstack 0
 34253                           
 34254 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 34255 ;; Defined at:
 34256 ;;		line 142 in file "mcc_generated_files/interrupt_manager.c"
 34257 ;; Parameters:    Size  Location     Type
 34258 ;;		None
 34259 ;; Auto vars:     Size  Location     Type
 34260 ;;		None
 34261 ;; Return value:  Size  Location     Type
 34262 ;;                  1    wreg      void 
 34263 ;; Registers used:
 34264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34265 ;; Tracked objects:
 34266 ;;		On entry : 0/0
 34267 ;;		On exit  : 0/0
 34268 ;;		Unchanged: 0/0
 34269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34272 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34273 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34274 ;;Total ram usage:        9 bytes
 34275 ;; Hardware stack levels used:    1
 34276 ;; Hardware stack levels required when called:   10
 34277 ;; This function calls:
 34278 ;;		_CCP2_CaptureISR
 34279 ;;		_I2C2_BusCollisionISR
 34280 ;;		_I2C2_ISR
 34281 ;;		_TMR2_ISR
 34282 ;;		_TMR3_ISR
 34283 ;; This function is called by:
 34284 ;;		Interrupt level 1
 34285 ;; This function uses a non-reentrant model
 34286 ;;
 34287                           
 34288                           	psect	intcodelo
 34289  000018                     __pintcodelo:
 34290                           	opt callstack 0
 34291  000018                     _INTERRUPT_InterruptManagerLow:
 34292                           	opt callstack 12
 34293                           
 34294                           ; BSR set to: 2
 34295                           ;incstack = 0
 34296  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 34297  00001A  CFD8 F158          	movff	status,??_INTERRUPT_InterruptManagerLow
 34298  00001E  CFE8 F159          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 34299  000022  CFE0 F15A          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 34300  000026  CFFA F15B          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 34301  00002A  CFFB F15C          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 34302  00002E  CFD9 F15D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 34303  000032  CFDA F15E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 34304  000036  CFF3 F15F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
 34305  00003A  CFF4 F160          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
 34306                           
 34307                           ;interrupt_manager.c: 145: if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 34308  00003E  010E               	movlb	14	; () banked
 34309  000040  B3C6               	btfsc	198,1,b	;volatile
 34310                           
 34311                           ; BSR set to: 14
 34312  000042  A3CE               	btfss	206,1,b	;volatile
 34313  000044  D003               	goto	i1l245
 34314                           
 34315                           ; BSR set to: 14
 34316                           ;interrupt_manager.c: 146: {;interrupt_manager.c: 147: TMR2_ISR();
 34317  000046  EC11  F0E3         	call	_TMR2_ISR	;wreg free
 34318                           
 34319                           ;interrupt_manager.c: 148: }
 34320  00004A  D017               	goto	i1l250
 34321  00004C                     i1l245:
 34322                           
 34323                           ; BSR set to: 14
 34324                           ;interrupt_manager.c: 149: else if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
 34325  00004C  B7C5               	btfsc	197,3,b	;volatile
 34326                           
 34327                           ; BSR set to: 14
 34328  00004E  A7CD               	btfss	205,3,b	;volatile
 34329  000050  D003               	goto	i1l247
 34330                           
 34331                           ; BSR set to: 14
 34332                           ;interrupt_manager.c: 150: {;interrupt_manager.c: 151: I2C2_BusCollisionISR();
 34333  000052  ECD1  F0E5         	call	_I2C2_BusCollisionISR	;wreg free
 34334                           
 34335                           ;interrupt_manager.c: 152: }
 34336  000056  D011               	goto	i1l250
 34337  000058                     i1l247:
 34338                           
 34339                           ; BSR set to: 14
 34340                           ;interrupt_manager.c: 153: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
 34341  000058  B5C5               	btfsc	197,2,b	;volatile
 34342                           
 34343                           ; BSR set to: 14
 34344  00005A  A5CD               	btfss	205,2,b	;volatile
 34345  00005C  D003               	goto	i1l249
 34346                           
 34347                           ; BSR set to: 14
 34348                           ;interrupt_manager.c: 154: {;interrupt_manager.c: 155: I2C2_ISR();
 34349  00005E  EC04  F0C8         	call	_I2C2_ISR	;wreg free
 34350                           
 34351                           ;interrupt_manager.c: 156: }
 34352  000062  D00B               	goto	i1l250
 34353  000064                     i1l249:
 34354                           
 34355                           ; BSR set to: 14
 34356                           ;interrupt_manager.c: 157: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 34357  000064  B5C6               	btfsc	198,2,b	;volatile
 34358                           
 34359                           ; BSR set to: 14
 34360  000066  A5CE               	btfss	206,2,b	;volatile
 34361  000068  D003               	goto	i1l251
 34362                           
 34363                           ; BSR set to: 14
 34364                           ;interrupt_manager.c: 158: {;interrupt_manager.c: 159: TMR3_ISR();
 34365  00006A  ECA1  F0E1         	call	_TMR3_ISR	;wreg free
 34366                           
 34367                           ;interrupt_manager.c: 160: }
 34368  00006E  D005               	goto	i1l250
 34369  000070                     i1l251:
 34370                           
 34371                           ; BSR set to: 14
 34372                           ;interrupt_manager.c: 161: else if(PIE6bits.CCP2IE == 1 && PIR6bits.CCP2IF == 1)
 34373  000070  B3C8               	btfsc	200,1,b	;volatile
 34374                           
 34375                           ; BSR set to: 14
 34376  000072  A3D0               	btfss	208,1,b	;volatile
 34377  000074  D002               	goto	i1l250
 34378                           
 34379                           ; BSR set to: 14
 34380                           ;interrupt_manager.c: 162: {;interrupt_manager.c: 163: CCP2_CaptureISR();
 34381  000076  ECA5  F0E4         	call	_CCP2_CaptureISR	;wreg free
 34382  00007A                     i1l250:
 34383                           
 34384                           ; BSR set to: 14
 34385  00007A  C160  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
 34386  00007E  C15F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
 34387  000082  C15E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 34388  000086  C15D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 34389  00008A  C15C  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 34390  00008E  C15B  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 34391  000092  C15A  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 34392  000096  C159  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 34393  00009A  C158  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 34394  00009E  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 34395  0000A0  0010               	retfie	
 34396  0000A2                     __end_of_INTERRUPT_InterruptManagerLow:
 34397                           	opt callstack 0
 34398                           
 34399 ;; *************** function _TMR3_ISR *****************
 34400 ;; Defined at:
 34401 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 34402 ;; Parameters:    Size  Location     Type
 34403 ;;		None
 34404 ;; Auto vars:     Size  Location     Type
 34405 ;;		None
 34406 ;; Return value:  Size  Location     Type
 34407 ;;                  1    wreg      void 
 34408 ;; Registers used:
 34409 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34410 ;; Tracked objects:
 34411 ;;		On entry : 0/0
 34412 ;;		On exit  : 0/0
 34413 ;;		Unchanged: 0/0
 34414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34419 ;;Total ram usage:        0 bytes
 34420 ;; Hardware stack levels used:    1
 34421 ;; Hardware stack levels required when called:    9
 34422 ;; This function calls:
 34423 ;;		Absolute function
 34424 ;;		_QIIdleChargedTimerHandler
 34425 ;;		_TMR3_DefaultInterruptHandler
 34426 ;;		i1_TMR3_WriteTimer
 34427 ;; This function is called by:
 34428 ;;		_INTERRUPT_InterruptManagerLow
 34429 ;; This function uses a non-reentrant model
 34430 ;;
 34431                           
 34432                           	psect	text123
 34433  01C342                     __ptext123:
 34434                           	opt callstack 0
 34435  01C342                     _TMR3_ISR:
 34436                           	opt callstack 12
 34437                           
 34438                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 34439                           
 34440                           ;incstack = 0
 34441  01C342  010E               	movlb	14	; () banked
 34442  01C344  95CE               	bcf	206,2,b	;volatile
 34443                           
 34444                           ; BSR set to: 14
 34445                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 34446  01C346  C18D  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34447  01C34A  C18E  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34448  01C34E  EC19  F0E4         	call	i1_TMR3_WriteTimer	;wreg free
 34449                           
 34450                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 34451  01C352  0101               	movlb	1	; () banked
 34452  01C354  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34453  01C356  1172               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34454  01C358  1173               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34455  01C35A  B4D8               	btfsc	status,2,c
 34456  01C35C  0012               	return	
 34457                           
 34458                           ; BSR set to: 1
 34459                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 34460  01C35E  D801               	call	i1u1900_28
 34461  01C360  0012               	return	
 34462  01C362                     i1u1900_28:
 34463  01C362  0005               	push	
 34464  01C364  6EFA               	movwf	pclath,c
 34465  01C366  5171               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34466  01C368  6EFD               	movwf	tosl,c
 34467  01C36A  5172               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34468  01C36C  6EFE               	movwf	tosh,c
 34469  01C36E  5173               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34470  01C370  6EFF               	movwf	tosu,c
 34471  01C372  50FA               	movf	pclath,w,c
 34472  01C374  0012               	return		;indir
 34473  01C376                     __end_of_TMR3_ISR:
 34474                           	opt callstack 0
 34475                           
 34476 ;; *************** function _QIIdleChargedTimerHandler *****************
 34477 ;; Defined at:
 34478 ;;		line 98 in file "NXQ_charge_state.c"
 34479 ;; Parameters:    Size  Location     Type
 34480 ;;		None
 34481 ;; Auto vars:     Size  Location     Type
 34482 ;;		None
 34483 ;; Return value:  Size  Location     Type
 34484 ;;                  1    wreg      void 
 34485 ;; Registers used:
 34486 ;;		wreg, status,2, cstack
 34487 ;; Tracked objects:
 34488 ;;		On entry : 0/0
 34489 ;;		On exit  : 0/0
 34490 ;;		Unchanged: 0/0
 34491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34496 ;;Total ram usage:        0 bytes
 34497 ;; Hardware stack levels used:    1
 34498 ;; Hardware stack levels required when called:    8
 34499 ;; This function calls:
 34500 ;;		i1_TMR3_Reload
 34501 ;;		i1_TMR3_StopTimer
 34502 ;; This function is called by:
 34503 ;;		_main
 34504 ;;		_TMR3_ISR
 34505 ;; This function uses a non-reentrant model
 34506 ;;
 34507                           
 34508                           	psect	text124
 34509  01C812                     __ptext124:
 34510                           	opt callstack 0
 34511  01C812                     _QIIdleChargedTimerHandler:
 34512                           	opt callstack 12
 34513                           
 34514                           ;NXQ_charge_state.c: 100: if (PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0) {
 34515                           
 34516                           ;incstack = 0
 34517  01C812  A48E               	btfss	3982,2,c	;volatile
 34518  01C814  B68E               	btfsc	3982,3,c	;volatile
 34519  01C816  D002               	goto	i1l1515
 34520                           
 34521                           ;NXQ_charge_state.c: 102: nxq_charge_state = QI_Idle;
 34522  01C818  0E00               	movlw	0
 34523  01C81A  D004               	goto	L27
 34524  01C81C                     i1l1515:
 34525                           
 34526                           ;NXQ_charge_state.c: 106: else if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1) {
 34527  01C81C  B48E               	btfsc	3982,2,c	;volatile
 34528  01C81E  A68E               	btfss	3982,3,c	;volatile
 34529  01C820  D003               	goto	i1l15318
 34530                           
 34531                           ;NXQ_charge_state.c: 108: nxq_charge_state = QI_Fully_Charged;
 34532  01C822  0E02               	movlw	2
 34533  01C824                     L27:
 34534  01C824  0101               	movlb	1	; () banked
 34535  01C826  6F8F               	movwf	_nxq_charge_state& (0+255),b
 34536  01C828                     i1l15318:
 34537                           
 34538                           ;NXQ_charge_state.c: 110: };NXQ_charge_state.c: 112: TMR3_StopTimer();
 34539  01C828  EC0C  F0E6         	call	i1_TMR3_StopTimer	;wreg free
 34540                           
 34541                           ;NXQ_charge_state.c: 113: TMR3_Reload();
 34542  01C82C  ECA9  F0E5         	call	i1_TMR3_Reload	;wreg free
 34543  01C830  0012               	return		;funcret
 34544  01C832                     __end_of_QIIdleChargedTimerHandler:
 34545                           	opt callstack 0
 34546                           
 34547 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34548 ;; Defined at:
 34549 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 34550 ;; Parameters:    Size  Location     Type
 34551 ;;		None
 34552 ;; Auto vars:     Size  Location     Type
 34553 ;;		None
 34554 ;; Return value:  Size  Location     Type
 34555 ;;                  1    wreg      void 
 34556 ;; Registers used:
 34557 ;;		None
 34558 ;; Tracked objects:
 34559 ;;		On entry : 0/0
 34560 ;;		On exit  : 0/0
 34561 ;;		Unchanged: 0/0
 34562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34567 ;;Total ram usage:        0 bytes
 34568 ;; Hardware stack levels used:    1
 34569 ;; Hardware stack levels required when called:    6
 34570 ;; This function calls:
 34571 ;;		Nothing
 34572 ;; This function is called by:
 34573 ;;		_TMR3_Initialize
 34574 ;;		_TMR3_ISR
 34575 ;; This function uses a non-reentrant model
 34576 ;;
 34577                           
 34578                           	psect	text125
 34579  01CC3A                     __ptext125:
 34580                           	opt callstack 0
 34581  01CC3A                     _TMR3_DefaultInterruptHandler:
 34582                           	opt callstack 14
 34583                           
 34584                           ;incstack = 0
 34585  01CC3A  0012               	return		;funcret
 34586  01CC3C                     __end_of_TMR3_DefaultInterruptHandler:
 34587                           	opt callstack 0
 34588                           
 34589 ;; *************** function i1_TMR3_StopTimer *****************
 34590 ;; Defined at:
 34591 ;;		line 105 in file "mcc_generated_files/tmr3.c"
 34592 ;; Parameters:    Size  Location     Type
 34593 ;;		None
 34594 ;; Auto vars:     Size  Location     Type
 34595 ;;		None
 34596 ;; Return value:  Size  Location     Type
 34597 ;;                  1    wreg      void 
 34598 ;; Registers used:
 34599 ;;		None
 34600 ;; Tracked objects:
 34601 ;;		On entry : 0/0
 34602 ;;		On exit  : 0/0
 34603 ;;		Unchanged: 0/0
 34604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34609 ;;Total ram usage:        0 bytes
 34610 ;; Hardware stack levels used:    1
 34611 ;; Hardware stack levels required when called:    6
 34612 ;; This function calls:
 34613 ;;		Nothing
 34614 ;; This function is called by:
 34615 ;;		_QIIdleChargedTimerHandler
 34616 ;; This function uses a non-reentrant model
 34617 ;;
 34618                           
 34619                           	psect	text126
 34620  01CC18                     __ptext126:
 34621                           	opt callstack 0
 34622  01CC18                     i1_TMR3_StopTimer:
 34623                           	opt callstack 13
 34624                           
 34625                           ;tmr3.c: 108: T3CONbits.TMR3ON = 0;
 34626                           
 34627                           ;incstack = 0
 34628  01CC18  90C9               	bcf	4041,0,c	;volatile
 34629  01CC1A  0012               	return		;funcret
 34630  01CC1C                     __end_ofi1_TMR3_StopTimer:
 34631                           	opt callstack 0
 34632                           
 34633 ;; *************** function i1_TMR3_Reload *****************
 34634 ;; Defined at:
 34635 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 34636 ;; Parameters:    Size  Location     Type
 34637 ;;		None
 34638 ;; Auto vars:     Size  Location     Type
 34639 ;;		None
 34640 ;; Return value:  Size  Location     Type
 34641 ;;                  1    wreg      void 
 34642 ;; Registers used:
 34643 ;;		wreg, status,2, cstack
 34644 ;; Tracked objects:
 34645 ;;		On entry : 0/0
 34646 ;;		On exit  : 0/0
 34647 ;;		Unchanged: 0/0
 34648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34653 ;;Total ram usage:        0 bytes
 34654 ;; Hardware stack levels used:    1
 34655 ;; Hardware stack levels required when called:    7
 34656 ;; This function calls:
 34657 ;;		i1_TMR3_WriteTimer
 34658 ;; This function is called by:
 34659 ;;		_QIIdleChargedTimerHandler
 34660 ;; This function uses a non-reentrant model
 34661 ;;
 34662                           
 34663                           	psect	text127
 34664  01CB52                     __ptext127:
 34665                           	opt callstack 0
 34666  01CB52                     i1_TMR3_Reload:
 34667                           	opt callstack 12
 34668                           
 34669                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 34670                           
 34671                           ;incstack = 0
 34672  01CB52  C18D  F100         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
 34673  01CB56  C18E  F101         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
 34674  01CB5A  EC19  F0E4         	call	i1_TMR3_WriteTimer	;wreg free
 34675  01CB5E  0012               	return		;funcret
 34676  01CB60                     __end_ofi1_TMR3_Reload:
 34677                           	opt callstack 0
 34678                           
 34679 ;; *************** function i1_TMR3_WriteTimer *****************
 34680 ;; Defined at:
 34681 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 34682 ;; Parameters:    Size  Location     Type
 34683 ;;  timerVal        2    0[BANK1 ] unsigned int 
 34684 ;; Auto vars:     Size  Location     Type
 34685 ;;		None
 34686 ;; Return value:  Size  Location     Type
 34687 ;;                  1    wreg      void 
 34688 ;; Registers used:
 34689 ;;		wreg, status,2
 34690 ;; Tracked objects:
 34691 ;;		On entry : 0/0
 34692 ;;		On exit  : 0/0
 34693 ;;		Unchanged: 0/0
 34694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34695 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34698 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34699 ;;Total ram usage:        2 bytes
 34700 ;; Hardware stack levels used:    1
 34701 ;; Hardware stack levels required when called:    6
 34702 ;; This function calls:
 34703 ;;		Nothing
 34704 ;; This function is called by:
 34705 ;;		_TMR3_ISR
 34706 ;;		i1_TMR3_Reload
 34707 ;; This function uses a non-reentrant model
 34708 ;;
 34709                           
 34710                           	psect	text128
 34711  01C832                     __ptext128:
 34712                           	opt callstack 0
 34713  01C832                     i1_TMR3_WriteTimer:
 34714                           	opt callstack 14
 34715                           
 34716                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 34717                           
 34718                           ;incstack = 0
 34719  01C832  A4C9               	btfss	4041,2,c	;volatile
 34720  01C834  D008               	goto	i1l13034
 34721                           
 34722                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 34723  01C836  90C9               	bcf	4041,0,c	;volatile
 34724                           
 34725                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 34726  01C838  0101               	movlb	1	; () banked
 34727  01C83A  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34728  01C83C  6EC8               	movwf	4040,c	;volatile
 34729                           
 34730                           ; BSR set to: 1
 34731                           ;tmr3.c: 136: TMR3L = timerVal;
 34732  01C83E  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34733                           
 34734                           ; BSR set to: 1
 34735                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 34736  01C842  80C9               	bsf	4041,0,c	;volatile
 34737                           
 34738                           ;tmr3.c: 140: }
 34739  01C844  0012               	return	
 34740  01C846                     i1l13034:
 34741                           
 34742                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 34743  01C846  0101               	movlb	1	; () banked
 34744  01C848  5101               	movf	(i1TMR3_WriteTimer@timerVal+1)& (0+255),w,b
 34745  01C84A  6EC8               	movwf	4040,c	;volatile
 34746                           
 34747                           ; BSR set to: 1
 34748                           ;tmr3.c: 145: TMR3L = timerVal;
 34749  01C84C  C100  FFC7         	movff	i1TMR3_WriteTimer@timerVal,4039	;volatile
 34750                           
 34751                           ; BSR set to: 1
 34752  01C850  0012               	return		;funcret
 34753  01C852                     __end_ofi1_TMR3_WriteTimer:
 34754                           	opt callstack 0
 34755                           
 34756 ;; *************** function _TMR2_ISR *****************
 34757 ;; Defined at:
 34758 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 34759 ;; Parameters:    Size  Location     Type
 34760 ;;		None
 34761 ;; Auto vars:     Size  Location     Type
 34762 ;;		None
 34763 ;; Return value:  Size  Location     Type
 34764 ;;                  1    wreg      void 
 34765 ;; Registers used:
 34766 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34767 ;; Tracked objects:
 34768 ;;		On entry : 0/0
 34769 ;;		On exit  : 0/0
 34770 ;;		Unchanged: 0/0
 34771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34776 ;;Total ram usage:        0 bytes
 34777 ;; Hardware stack levels used:    1
 34778 ;; Hardware stack levels required when called:    9
 34779 ;; This function calls:
 34780 ;;		Absolute function
 34781 ;;		_ADC_acquisitionTimerHandler
 34782 ;;		_TMR2_DefaultInterruptHandler
 34783 ;; This function is called by:
 34784 ;;		_INTERRUPT_InterruptManagerLow
 34785 ;; This function uses a non-reentrant model
 34786 ;;
 34787                           
 34788                           	psect	text129
 34789  01C622                     __ptext129:
 34790                           	opt callstack 0
 34791  01C622                     _TMR2_ISR:
 34792                           	opt callstack 12
 34793                           
 34794                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 34795                           
 34796                           ; BSR set to: 1
 34797                           ;incstack = 0
 34798  01C622  010E               	movlb	14	; () banked
 34799  01C624  93CE               	bcf	206,1,b	;volatile
 34800                           
 34801                           ; BSR set to: 14
 34802                           ;tmr2.c: 171: if(TMR2_InterruptHandler)
 34803  01C626  0101               	movlb	1	; () banked
 34804  01C628  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34805  01C62A  1175               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34806  01C62C  1176               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34807  01C62E  B4D8               	btfsc	status,2,c
 34808  01C630  0012               	return	
 34809                           
 34810                           ; BSR set to: 1
 34811                           ;tmr2.c: 172: {;tmr2.c: 173: TMR2_InterruptHandler();
 34812  01C632  D801               	call	i1u1885_28
 34813  01C634  0012               	return	
 34814  01C636                     i1u1885_28:
 34815  01C636  0005               	push	
 34816  01C638  6EFA               	movwf	pclath,c
 34817  01C63A  5174               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34818  01C63C  6EFD               	movwf	tosl,c
 34819  01C63E  5175               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34820  01C640  6EFE               	movwf	tosh,c
 34821  01C642  5176               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 34822  01C644  6EFF               	movwf	tosu,c
 34823  01C646  50FA               	movf	pclath,w,c
 34824  01C648  0012               	return		;indir
 34825  01C64A                     __end_of_TMR2_ISR:
 34826                           	opt callstack 0
 34827                           
 34828 ;; *************** function _ADC_acquisitionTimerHandler *****************
 34829 ;; Defined at:
 34830 ;;		line 135 in file "adc_postprocessing.c"
 34831 ;; Parameters:    Size  Location     Type
 34832 ;;		None
 34833 ;; Auto vars:     Size  Location     Type
 34834 ;;		None
 34835 ;; Return value:  Size  Location     Type
 34836 ;;                  1    wreg      void 
 34837 ;; Registers used:
 34838 ;;		wreg, status,2, cstack
 34839 ;; Tracked objects:
 34840 ;;		On entry : 0/0
 34841 ;;		On exit  : 0/0
 34842 ;;		Unchanged: 0/0
 34843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;Total ram usage:        0 bytes
 34849 ;; Hardware stack levels used:    1
 34850 ;; Hardware stack levels required when called:    8
 34851 ;; This function calls:
 34852 ;;		_ADCC_ClearAccumulator
 34853 ;;		_ADCC_DischargeSampleCapacitor
 34854 ;;		_ADCC_StartConversion
 34855 ;;		_TMR2_StopTimer
 34856 ;; This function is called by:
 34857 ;;		_main
 34858 ;;		_TMR2_ISR
 34859 ;; This function uses a non-reentrant model
 34860 ;;
 34861                           
 34862                           	psect	text130
 34863  01C916                     __ptext130:
 34864                           	opt callstack 0
 34865  01C916                     _ADC_acquisitionTimerHandler:
 34866                           	opt callstack 12
 34867                           
 34868                           ;adc_postprocessing.c: 139: TMR2_StopTimer();
 34869                           
 34870                           ;incstack = 0
 34871  01C916  ECFD  F0E5         	call	_TMR2_StopTimer	;wreg free
 34872                           
 34873                           ;adc_postprocessing.c: 140: TMR2 = 0;
 34874  01C91A  0E00               	movlw	0
 34875  01C91C  6EBB               	movwf	4027,c	;volatile
 34876                           
 34877                           ;adc_postprocessing.c: 143: ADCC_DischargeSampleCapacitor();
 34878  01C91E  ECF6  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34879                           
 34880                           ;adc_postprocessing.c: 146: ADCC_ClearAccumulator();
 34881  01C922  EC00  F0E6         	call	_ADCC_ClearAccumulator	;wreg free
 34882                           
 34883                           ;adc_postprocessing.c: 149: ADCC_StartConversion(next_adc_channel);
 34884  01C926  0100               	movlb	0	; () banked
 34885  01C928  51FC               	movf	_next_adc_channel& (0+255),w,b
 34886  01C92A  ECB0  F0E5         	call	_ADCC_StartConversion
 34887  01C92E  0012               	return		;funcret
 34888  01C930                     __end_of_ADC_acquisitionTimerHandler:
 34889                           	opt callstack 0
 34890                           
 34891 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34892 ;; Defined at:
 34893 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 34894 ;; Parameters:    Size  Location     Type
 34895 ;;		None
 34896 ;; Auto vars:     Size  Location     Type
 34897 ;;		None
 34898 ;; Return value:  Size  Location     Type
 34899 ;;                  1    wreg      void 
 34900 ;; Registers used:
 34901 ;;		None
 34902 ;; Tracked objects:
 34903 ;;		On entry : 0/0
 34904 ;;		On exit  : 0/0
 34905 ;;		Unchanged: 0/0
 34906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34911 ;;Total ram usage:        0 bytes
 34912 ;; Hardware stack levels used:    1
 34913 ;; Hardware stack levels required when called:    6
 34914 ;; This function calls:
 34915 ;;		Nothing
 34916 ;; This function is called by:
 34917 ;;		_TMR2_Initialize
 34918 ;;		_TMR2_ISR
 34919 ;; This function uses a non-reentrant model
 34920 ;;
 34921                           
 34922                           	psect	text131
 34923  01CC3C                     __ptext131:
 34924                           	opt callstack 0
 34925  01CC3C                     _TMR2_DefaultInterruptHandler:
 34926                           	opt callstack 14
 34927                           
 34928                           ;incstack = 0
 34929  01CC3C  0012               	return		;funcret
 34930  01CC3E                     __end_of_TMR2_DefaultInterruptHandler:
 34931                           	opt callstack 0
 34932                           
 34933 ;; *************** function _TMR2_StopTimer *****************
 34934 ;; Defined at:
 34935 ;;		line 125 in file "mcc_generated_files/tmr2.c"
 34936 ;; Parameters:    Size  Location     Type
 34937 ;;		None
 34938 ;; Auto vars:     Size  Location     Type
 34939 ;;		None
 34940 ;; Return value:  Size  Location     Type
 34941 ;;                  1    wreg      void 
 34942 ;; Registers used:
 34943 ;;		cstack
 34944 ;; Tracked objects:
 34945 ;;		On entry : 0/0
 34946 ;;		On exit  : 0/0
 34947 ;;		Unchanged: 0/0
 34948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;Total ram usage:        0 bytes
 34954 ;; Hardware stack levels used:    1
 34955 ;; Hardware stack levels required when called:    7
 34956 ;; This function calls:
 34957 ;;		_TMR2_Stop
 34958 ;; This function is called by:
 34959 ;;		_ADC_acquisitionTimerHandler
 34960 ;; This function uses a non-reentrant model
 34961 ;;
 34962                           
 34963                           	psect	text132
 34964  01CBFA                     __ptext132:
 34965                           	opt callstack 0
 34966  01CBFA                     _TMR2_StopTimer:
 34967                           	opt callstack 12
 34968                           
 34969                           ;tmr2.c: 127: TMR2_Stop();
 34970                           
 34971                           ;incstack = 0
 34972  01CBFA  EC0E  F0E6         	call	_TMR2_Stop	;wreg free
 34973  01CBFE  0012               	return		;funcret
 34974  01CC00                     __end_of_TMR2_StopTimer:
 34975                           	opt callstack 0
 34976                           
 34977 ;; *************** function _TMR2_Stop *****************
 34978 ;; Defined at:
 34979 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 34980 ;; Parameters:    Size  Location     Type
 34981 ;;		None
 34982 ;; Auto vars:     Size  Location     Type
 34983 ;;		None
 34984 ;; Return value:  Size  Location     Type
 34985 ;;                  1    wreg      void 
 34986 ;; Registers used:
 34987 ;;		None
 34988 ;; Tracked objects:
 34989 ;;		On entry : 0/0
 34990 ;;		On exit  : 0/0
 34991 ;;		Unchanged: 0/0
 34992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34997 ;;Total ram usage:        0 bytes
 34998 ;; Hardware stack levels used:    1
 34999 ;; Hardware stack levels required when called:    6
 35000 ;; This function calls:
 35001 ;;		Nothing
 35002 ;; This function is called by:
 35003 ;;		_TMR2_StopTimer
 35004 ;; This function uses a non-reentrant model
 35005 ;;
 35006                           
 35007                           	psect	text133
 35008  01CC1C                     __ptext133:
 35009                           	opt callstack 0
 35010  01CC1C                     _TMR2_Stop:
 35011                           	opt callstack 12
 35012                           
 35013                           ;tmr2.c: 122: T2CONbits.TMR2ON = 0;
 35014                           
 35015                           ;incstack = 0
 35016  01CC1C  9EBD               	bcf	4029,7,c	;volatile
 35017  01CC1E  0012               	return		;funcret
 35018  01CC20                     __end_of_TMR2_Stop:
 35019                           	opt callstack 0
 35020                           
 35021 ;; *************** function _ADCC_StartConversion *****************
 35022 ;; Defined at:
 35023 ;;		line 112 in file "mcc_generated_files/adcc.c"
 35024 ;; Parameters:    Size  Location     Type
 35025 ;;  channel         1    wreg     enum E9432
 35026 ;; Auto vars:     Size  Location     Type
 35027 ;;  channel         1    0[BANK1 ] enum E9432
 35028 ;; Return value:  Size  Location     Type
 35029 ;;                  1    wreg      void 
 35030 ;; Registers used:
 35031 ;;		wreg
 35032 ;; Tracked objects:
 35033 ;;		On entry : 0/0
 35034 ;;		On exit  : 0/0
 35035 ;;		Unchanged: 0/0
 35036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35038 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35040 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35041 ;;Total ram usage:        1 bytes
 35042 ;; Hardware stack levels used:    1
 35043 ;; Hardware stack levels required when called:    6
 35044 ;; This function calls:
 35045 ;;		Nothing
 35046 ;; This function is called by:
 35047 ;;		_ADC_acquisitionTimerHandler
 35048 ;; This function uses a non-reentrant model
 35049 ;;
 35050                           
 35051                           	psect	text134
 35052  01CB60                     __ptext134:
 35053                           	opt callstack 0
 35054  01CB60                     _ADCC_StartConversion:
 35055                           	opt callstack 13
 35056                           
 35057                           ;incstack = 0
 35058                           ;ADCC_StartConversion@channel stored from wreg
 35059  01CB60  0101               	movlb	1	; () banked
 35060  01CB62  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 35061                           
 35062                           ;adcc.c: 115: ADPCH = channel;
 35063  01CB64  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 35064                           
 35065                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 35066  01CB68  8E60               	bsf	3936,7,c	;volatile
 35067                           
 35068                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 35069  01CB6A  8060               	bsf	3936,0,c	;volatile
 35070  01CB6C  0012               	return		;funcret
 35071  01CB6E                     __end_of_ADCC_StartConversion:
 35072                           	opt callstack 0
 35073                           
 35074 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 35075 ;; Defined at:
 35076 ;;		line 174 in file "mcc_generated_files/adcc.c"
 35077 ;; Parameters:    Size  Location     Type
 35078 ;;		None
 35079 ;; Auto vars:     Size  Location     Type
 35080 ;;		None
 35081 ;; Return value:  Size  Location     Type
 35082 ;;                  1    wreg      void 
 35083 ;; Registers used:
 35084 ;;		wreg, status,2
 35085 ;; Tracked objects:
 35086 ;;		On entry : 0/0
 35087 ;;		On exit  : 0/0
 35088 ;;		Unchanged: 0/0
 35089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35094 ;;Total ram usage:        0 bytes
 35095 ;; Hardware stack levels used:    1
 35096 ;; Hardware stack levels required when called:    6
 35097 ;; This function calls:
 35098 ;;		Nothing
 35099 ;; This function is called by:
 35100 ;;		_ADC_acquisitionTimerHandler
 35101 ;; This function uses a non-reentrant model
 35102 ;;
 35103                           
 35104                           	psect	text135
 35105  01CBEC                     __ptext135:
 35106                           	opt callstack 0
 35107  01CBEC                     _ADCC_DischargeSampleCapacitor:
 35108                           	opt callstack 13
 35109                           
 35110                           ;adcc.c: 177: ADPCH = 0x3c;
 35111                           
 35112                           ;incstack = 0
 35113  01CBEC  0E3C               	movlw	60
 35114  01CBEE  010F               	movlb	15	; () banked
 35115  01CBF0  6F5F               	movwf	95,b	;volatile
 35116                           
 35117                           ; BSR set to: 15
 35118  01CBF2  0012               	return		;funcret
 35119  01CBF4                     __end_of_ADCC_DischargeSampleCapacitor:
 35120                           	opt callstack 0
 35121                           
 35122 ;; *************** function _ADCC_ClearAccumulator *****************
 35123 ;; Defined at:
 35124 ;;		line 204 in file "mcc_generated_files/adcc.c"
 35125 ;; Parameters:    Size  Location     Type
 35126 ;;		None
 35127 ;; Auto vars:     Size  Location     Type
 35128 ;;		None
 35129 ;; Return value:  Size  Location     Type
 35130 ;;                  1    wreg      void 
 35131 ;; Registers used:
 35132 ;;		None
 35133 ;; Tracked objects:
 35134 ;;		On entry : 0/0
 35135 ;;		On exit  : 0/0
 35136 ;;		Unchanged: 0/0
 35137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35142 ;;Total ram usage:        0 bytes
 35143 ;; Hardware stack levels used:    1
 35144 ;; Hardware stack levels required when called:    6
 35145 ;; This function calls:
 35146 ;;		Nothing
 35147 ;; This function is called by:
 35148 ;;		_ADC_acquisitionTimerHandler
 35149 ;; This function uses a non-reentrant model
 35150 ;;
 35151                           
 35152                           	psect	text136
 35153  01CC00                     __ptext136:
 35154                           	opt callstack 0
 35155  01CC00                     _ADCC_ClearAccumulator:
 35156                           	opt callstack 13
 35157                           
 35158                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 35159                           
 35160                           ; BSR set to: 15
 35161                           ;incstack = 0
 35162  01CC00  010F               	movlb	15	; () banked
 35163  01CC02  875A               	bsf	90,3,b	;volatile
 35164                           
 35165                           ; BSR set to: 15
 35166  01CC04  0012               	return		;funcret
 35167  01CC06                     __end_of_ADCC_ClearAccumulator:
 35168                           	opt callstack 0
 35169                           
 35170 ;; *************** function _I2C2_ISR *****************
 35171 ;; Defined at:
 35172 ;;		line 236 in file "mcc_generated_files/i2c2.c"
 35173 ;; Parameters:    Size  Location     Type
 35174 ;;		None
 35175 ;; Auto vars:     Size  Location     Type
 35176 ;;		None
 35177 ;; Return value:  Size  Location     Type
 35178 ;;                  1    wreg      void 
 35179 ;; Registers used:
 35180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35181 ;; Tracked objects:
 35182 ;;		On entry : 0/0
 35183 ;;		On exit  : 0/0
 35184 ;;		Unchanged: 0/0
 35185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35188 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35189 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35190 ;;Total ram usage:        2 bytes
 35191 ;; Hardware stack levels used:    1
 35192 ;; Hardware stack levels required when called:    7
 35193 ;; This function calls:
 35194 ;;		_I2C2_FunctionComplete
 35195 ;;		_I2C2_Stop
 35196 ;; This function is called by:
 35197 ;;		_INTERRUPT_InterruptManagerLow
 35198 ;; This function uses a non-reentrant model
 35199 ;;
 35200                           
 35201                           	psect	text137
 35202  019008                     __ptext137:
 35203                           	opt callstack 0
 35204  019008                     _I2C2_ISR:
 35205                           	opt callstack 14
 35206                           
 35207                           ;i2c2.c: 239: static uint8_t *pi2c_buf_ptr;;i2c2.c: 240: static uint16_t i2c_address = 0
      +                          ;;i2c2.c: 241: static uint8_t i2c_bytes_left = 0;;i2c2.c: 242: static uint8_t i2c_10bit_
      +                          address_restart = 0;;i2c2.c: 244: PIR3bits.SSP2IF = 0;
 35208                           
 35209                           ; BSR set to: 15
 35210                           ;incstack = 0
 35211  019008  010E               	movlb	14	; () banked
 35212  01900A  95CD               	bcf	205,2,b	;volatile
 35213                           
 35214                           ;i2c2.c: 248: if(SSP2CON1bits.WCOL)
 35215  01900C  AF96               	btfss	150,7,b	;volatile
 35216  01900E  D113               	goto	i1l21680
 35217                           
 35218                           ; BSR set to: 14
 35219                           ;i2c2.c: 249: {;i2c2.c: 251: SSP2CON1bits.WCOL = 0;
 35220  019010  9F96               	bcf	150,7,b	;volatile
 35221                           
 35222                           ; BSR set to: 14
 35223                           ;i2c2.c: 252: i2c2_state = S_MASTER_IDLE;
 35224  019012  0E00               	movlw	0
 35225  019014  0100               	movlb	0	; () banked
 35226  019016  6FDB               	movwf	_i2c2_state& (0+255),b
 35227                           
 35228                           ; BSR set to: 0
 35229                           ;i2c2.c: 253: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
 35230  019018  EE20 F003          	lfsr	2,3
 35231  01901C  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35232  01901E  26D9               	addwf	fsr2l,f,c
 35233  019020  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35234  019022  22DA               	addwfc	fsr2h,f,c
 35235  019024  CFDE F103          	movff	postinc2,??_I2C2_ISR
 35236  019028  CFDD F104          	movff	postdec2,??_I2C2_ISR+1
 35237  01902C  C103  FFD9         	movff	??_I2C2_ISR,fsr2l
 35238  019030  C104  FFDA         	movff	??_I2C2_ISR+1,fsr2h
 35239  019034  0E01               	movlw	1
 35240  019036  6EDF               	movwf	indf2,c
 35241                           
 35242                           ; BSR set to: 0
 35243                           ;i2c2.c: 256: p_i2c2_current = (0);
 35244  019038  0E00               	movlw	0
 35245  01903A  6FD1               	movwf	_p_i2c2_current& (0+255),b
 35246  01903C  0E00               	movlw	0
 35247  01903E  6FD2               	movwf	(_p_i2c2_current+1)& (0+255),b
 35248  019040  0012               	return	
 35249  019042                     i1l937:
 35250                           
 35251                           ; BSR set to: 0
 35252                           ;i2c2.c: 266: if(i2c2_object.trStatus.s.empty != 1)
 35253  019042  0101               	movlb	1	; () banked
 35254  019044  B365               	btfsc	(_i2c2_object+4)& (0+255),1,b
 35255  019046  0012               	return	
 35256                           
 35257                           ; BSR set to: 1
 35258                           ;i2c2.c: 267: {;i2c2.c: 269: p_i2c2_current = i2c2_object.pTrHead;
 35259  019048  C163  F0D1         	movff	_i2c2_object+2,_p_i2c2_current
 35260  01904C  C164  F0D2         	movff	_i2c2_object+3,_p_i2c2_current+1
 35261                           
 35262                           ; BSR set to: 1
 35263                           ;i2c2.c: 270: i2c2_trb_count = i2c2_object.pTrHead->count;
 35264  019050  C163  FFD9         	movff	_i2c2_object+2,fsr2l
 35265  019054  C164  FFDA         	movff	_i2c2_object+3,fsr2h
 35266  019058  50DF               	movf	indf2,w,c
 35267  01905A  0100               	movlb	0	; () banked
 35268  01905C  6FDA               	movwf	_i2c2_trb_count& (0+255),b
 35269                           
 35270                           ; BSR set to: 0
 35271                           ;i2c2.c: 271: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
 35272  01905E  0101               	movlb	1	; () banked
 35273  019060  EE20 F001          	lfsr	2,1
 35274  019064  5163               	movf	(_i2c2_object+2)& (0+255),w,b
 35275  019066  26D9               	addwf	fsr2l,f,c
 35276  019068  5164               	movf	(_i2c2_object+3)& (0+255),w,b
 35277  01906A  22DA               	addwfc	fsr2h,f,c
 35278  01906C  CFDE F0D3          	movff	postinc2,_p_i2c2_trb_current
 35279  019070  CFDD F0D4          	movff	postdec2,_p_i2c2_trb_current+1
 35280                           
 35281                           ; BSR set to: 1
 35282                           ;i2c2.c: 273: i2c2_object.pTrHead++;
 35283  019074  0E05               	movlw	5
 35284  019076  2763               	addwf	(_i2c2_object+2)& (0+255),f,b
 35285  019078  0E00               	movlw	0
 35286  01907A  2364               	addwfc	(_i2c2_object+3)& (0+255),f,b
 35287                           
 35288                           ; BSR set to: 1
 35289                           ;i2c2.c: 276: if(i2c2_object.pTrHead == (i2c2_tr_queue + 1))
 35290  01907C  0EA5               	movlw	low (_i2c2_tr_queue+5)
 35291  01907E  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 35292  019080  E108               	bnz	i1l21572
 35293  019082  0E01               	movlw	high (_i2c2_tr_queue+5)
 35294  019084  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 35295  019086  A4D8               	btfss	status,2,c
 35296  019088  D004               	goto	i1l21572
 35297                           
 35298                           ; BSR set to: 1
 35299                           ;i2c2.c: 277: {;i2c2.c: 279: i2c2_object.pTrHead = i2c2_tr_queue;
 35300  01908A  0EA0               	movlw	low _i2c2_tr_queue
 35301  01908C  6F63               	movwf	(_i2c2_object+2)& (0+255),b
 35302  01908E  0E01               	movlw	high _i2c2_tr_queue
 35303  019090  6F64               	movwf	(_i2c2_object+3)& (0+255),b
 35304  019092                     i1l21572:
 35305                           
 35306                           ; BSR set to: 1
 35307                           ;i2c2.c: 280: };i2c2.c: 284: i2c2_object.trStatus.s.full = 0;
 35308  019092  9165               	bcf	(_i2c2_object+4)& (0+255),0,b
 35309                           
 35310                           ;i2c2.c: 287: if(i2c2_object.pTrHead == i2c2_object.pTrTail)
 35311  019094  5161               	movf	_i2c2_object& (0+255),w,b
 35312  019096  1963               	xorwf	(_i2c2_object+2)& (0+255),w,b
 35313  019098  E104               	bnz	i1l940
 35314  01909A  5162               	movf	(_i2c2_object+1)& (0+255),w,b
 35315  01909C  1964               	xorwf	(_i2c2_object+3)& (0+255),w,b
 35316  01909E  B4D8               	btfsc	status,2,c
 35317                           
 35318                           ; BSR set to: 1
 35319                           ;i2c2.c: 288: {;i2c2.c: 290: i2c2_object.trStatus.s.empty = 1;
 35320  0190A0  8365               	bsf	(_i2c2_object+4)& (0+255),1,b
 35321  0190A2                     i1l940:
 35322                           
 35323                           ; BSR set to: 1
 35324                           ;i2c2.c: 291: };i2c2.c: 294: SSP2CON2bits.SEN = 1;
 35325  0190A2  010E               	movlb	14	; () banked
 35326  0190A4  8197               	bsf	151,0,b	;volatile
 35327  0190A6                     i1l21576:
 35328                           
 35329                           ;i2c2.c: 297: i2c2_state = S_MASTER_SEND_ADDR;
 35330  0190A6  0E02               	movlw	2
 35331  0190A8  0100               	movlb	0	; () banked
 35332  0190AA  6FDB               	movwf	_i2c2_state& (0+255),b
 35333  0190AC  0012               	return	
 35334  0190AE                     i1l943:
 35335                           
 35336                           ; BSR set to: 0
 35337                           ;i2c2.c: 316: if(SSP2CON2bits.ACKSTAT)
 35338  0190AE  010E               	movlb	14	; () banked
 35339  0190B0  AD97               	btfss	151,6,b	;volatile
 35340  0190B2  D006               	goto	i1l21584
 35341                           
 35342                           ; BSR set to: 14
 35343                           ;i2c2.c: 317: {;i2c2.c: 318: i2c2_object.i2cErrors++;
 35344  0190B4  0101               	movlb	1	; () banked
 35345  0190B6  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35346                           
 35347                           ; BSR set to: 1
 35348                           ;i2c2.c: 319: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35349  0190B8  0E04               	movlw	4
 35350  0190BA  ECB7  F0DF         	call	_I2C2_Stop
 35351                           
 35352                           ;i2c2.c: 320: }
 35353  0190BE  0012               	return	
 35354  0190C0                     i1l21584:
 35355                           
 35356                           ; BSR set to: 14
 35357                           ;i2c2.c: 321: else;i2c2.c: 322: {;i2c2.c: 324: SSP2BUF = (i2c_address >> 1) & 0x00FF;
 35358  0190C0  90D8               	bcf	status,0,c
 35359  0190C2  0100               	movlb	0	; () banked
 35360  0190C4  31FA               	rrcf	(I2C2_ISR@i2c_address+1)& (0+255),w,b
 35361  0190C6  0101               	movlb	1	; () banked
 35362  0190C8  6F04               	movwf	(??_I2C2_ISR+1)& (0+255),b
 35363  0190CA  0100               	movlb	0	; () banked
 35364  0190CC  31F9               	rrcf	I2C2_ISR@i2c_address& (0+255),w,b
 35365  0190CE  0101               	movlb	1	; () banked
 35366  0190D0  6F03               	movwf	??_I2C2_ISR& (0+255),b
 35367  0190D2  5103               	movf	??_I2C2_ISR& (0+255),w,b
 35368  0190D4  010E               	movlb	14	; () banked
 35369  0190D6  6F92               	movwf	146,b	;volatile
 35370                           
 35371                           ; BSR set to: 14
 35372                           ;i2c2.c: 327: if(i2c_address & 0x01)
 35373  0190D8  0100               	movlb	0	; () banked
 35374  0190DA  A1F9               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35375  0190DC  D003               	goto	i1l21590
 35376                           
 35377                           ; BSR set to: 0
 35378                           ;i2c2.c: 328: {;i2c2.c: 331: i2c2_state = S_MASTER_10BIT_RESTART;
 35379  0190DE  0E0B               	movlw	11
 35380  0190E0  6FDB               	movwf	_i2c2_state& (0+255),b
 35381                           
 35382                           ;i2c2.c: 332: }
 35383  0190E2  0012               	return	
 35384  0190E4                     i1l21590:
 35385                           
 35386                           ; BSR set to: 0
 35387                           ;i2c2.c: 333: else;i2c2.c: 334: {;i2c2.c: 336: i2c2_state = S_MASTER_SEND_DATA;
 35388  0190E4  0E03               	movlw	3
 35389  0190E6  6FDB               	movwf	_i2c2_state& (0+255),b
 35390  0190E8  0012               	return	
 35391  0190EA                     i1l948:
 35392                           
 35393                           ; BSR set to: 0
 35394                           ;i2c2.c: 344: if(SSP2CON2bits.ACKSTAT)
 35395  0190EA  010E               	movlb	14	; () banked
 35396  0190EC  AD97               	btfss	151,6,b	;volatile
 35397  0190EE  D006               	goto	i1l949
 35398                           
 35399                           ; BSR set to: 14
 35400                           ;i2c2.c: 345: {;i2c2.c: 346: i2c2_object.i2cErrors++;
 35401  0190F0  0101               	movlb	1	; () banked
 35402  0190F2  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35403                           
 35404                           ; BSR set to: 1
 35405                           ;i2c2.c: 347: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35406  0190F4  0E04               	movlw	4
 35407  0190F6  ECB7  F0DF         	call	_I2C2_Stop
 35408                           
 35409                           ;i2c2.c: 348: }
 35410  0190FA  0012               	return	
 35411  0190FC                     i1l949:
 35412                           
 35413                           ; BSR set to: 14
 35414                           ;i2c2.c: 349: else;i2c2.c: 350: {;i2c2.c: 353: SSP2CON2bits.RSEN = 1;
 35415  0190FC  8397               	bsf	151,1,b	;volatile
 35416                           
 35417                           ; BSR set to: 14
 35418                           ;i2c2.c: 357: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 35419  0190FE  C0F9  F103         	movff	I2C2_ISR@i2c_address,??_I2C2_ISR
 35420  019102  C0FA  F104         	movff	I2C2_ISR@i2c_address+1,??_I2C2_ISR+1
 35421  019106  C104  F103         	movff	??_I2C2_ISR+1,??_I2C2_ISR
 35422  01910A  0101               	movlb	1	; () banked
 35423  01910C  6B04               	clrf	(??_I2C2_ISR+1)& (0+255),b
 35424  01910E  0E06               	movlw	6
 35425  019110  1703               	andwf	??_I2C2_ISR& (0+255),f,b
 35426  019112  0E00               	movlw	0
 35427  019114  1704               	andwf	(??_I2C2_ISR+1)& (0+255),f,b
 35428  019116  0EF0               	movlw	240
 35429  019118  1103               	iorwf	??_I2C2_ISR& (0+255),w,b
 35430  01911A  0100               	movlb	0	; () banked
 35431  01911C  6FF9               	movwf	I2C2_ISR@i2c_address& (0+255),b
 35432  01911E  0101               	movlb	1	; () banked
 35433  019120  5104               	movf	(??_I2C2_ISR+1)& (0+255),w,b
 35434  019122  0100               	movlb	0	; () banked
 35435  019124  6FFA               	movwf	(I2C2_ISR@i2c_address+1)& (0+255),b
 35436                           
 35437                           ; BSR set to: 0
 35438                           ;i2c2.c: 360: i2c_address |= 0x0001;
 35439  019126  81F9               	bsf	I2C2_ISR@i2c_address& (0+255),0,b
 35440                           
 35441                           ; BSR set to: 0
 35442                           ;i2c2.c: 363: i2c_10bit_address_restart = 1;
 35443  019128  0E01               	movlw	1
 35444  01912A  6FD8               	movwf	I2C2_ISR@i2c_10bit_address_restart& (0+255),b
 35445  01912C  D7BC               	goto	i1l21576
 35446  01912E                     i1l21604:
 35447                           
 35448                           ; BSR set to: 0
 35449                           ;i2c2.c: 384: if(i2c_10bit_address_restart != 1)
 35450  01912E  05D8               	decf	I2C2_ISR@i2c_10bit_address_restart& (0+255),w,b
 35451  019130  B4D8               	btfsc	status,2,c
 35452  019132  D01A               	goto	i1l953
 35453                           
 35454                           ; BSR set to: 0
 35455                           ;i2c2.c: 385: {;i2c2.c: 387: i2c_address = p_i2c2_trb_current->address;
 35456  019134  C0D3  FFD9         	movff	_p_i2c2_trb_current,fsr2l
 35457  019138  C0D4  FFDA         	movff	_p_i2c2_trb_current+1,fsr2h
 35458  01913C  CFDE F0F9          	movff	postinc2,I2C2_ISR@i2c_address
 35459  019140  CFDD F0FA          	movff	postdec2,I2C2_ISR@i2c_address+1
 35460                           
 35461                           ; BSR set to: 0
 35462                           ;i2c2.c: 388: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
 35463  019144  EE20 F003          	lfsr	2,3
 35464  019148  51D3               	movf	_p_i2c2_trb_current& (0+255),w,b
 35465  01914A  26D9               	addwf	fsr2l,f,c
 35466  01914C  51D4               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35467  01914E  22DA               	addwfc	fsr2h,f,c
 35468  019150  CFDE F0CF          	movff	postinc2,I2C2_ISR@pi2c_buf_ptr
 35469  019154  CFDD F0D0          	movff	postdec2,I2C2_ISR@pi2c_buf_ptr+1
 35470                           
 35471                           ; BSR set to: 0
 35472                           ;i2c2.c: 389: i2c_bytes_left = p_i2c2_trb_current->length;
 35473  019158  EE20 F002          	lfsr	2,2
 35474  01915C  51D3               	movf	_p_i2c2_trb_current& (0+255),w,b
 35475  01915E  26D9               	addwf	fsr2l,f,c
 35476  019160  51D4               	movf	(_p_i2c2_trb_current+1)& (0+255),w,b
 35477  019162  22DA               	addwfc	fsr2h,f,c
 35478  019164  50DF               	movf	indf2,w,c
 35479  019166  6FD9               	movwf	I2C2_ISR@i2c_bytes_left& (0+255),b
 35480  019168                     i1l953:
 35481                           
 35482                           ; BSR set to: 0
 35483                           ;i2c2.c: 412: else;i2c2.c: 413: {;i2c2.c: 415: SSP2BUF = i2c_address;
 35484  019168  C0F9  FE92         	movff	I2C2_ISR@i2c_address,3730	;volatile
 35485                           
 35486                           ;i2c2.c: 416: if(i2c_address & 0x01)
 35487  01916C  A1F9               	btfss	I2C2_ISR@i2c_address& (0+255),0,b
 35488  01916E  D7BA               	goto	i1l21590
 35489                           
 35490                           ; BSR set to: 0
 35491                           ;i2c2.c: 417: {;i2c2.c: 419: i2c2_state = S_MASTER_ACK_ADDR;
 35492  019170  0E05               	movlw	5
 35493  019172  6FDB               	movwf	_i2c2_state& (0+255),b
 35494                           
 35495                           ;i2c2.c: 420: }
 35496  019174  0012               	return	
 35497  019176                     i1l959:
 35498                           
 35499                           ; BSR set to: 0
 35500                           ;i2c2.c: 432: if(SSP2CON2bits.ACKSTAT)
 35501  019176  010E               	movlb	14	; () banked
 35502  019178  AD97               	btfss	151,6,b	;volatile
 35503  01917A  D008               	goto	i1l21632
 35504                           
 35505                           ; BSR set to: 14
 35506                           ;i2c2.c: 433: {;i2c2.c: 435: i2c2_object.i2cErrors++;
 35507  01917C  0101               	movlb	1	; () banked
 35508  01917E  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35509                           
 35510                           ; BSR set to: 1
 35511                           ;i2c2.c: 438: SSP2CON2bits.ACKSTAT = 0;
 35512  019180  010E               	movlb	14	; () banked
 35513  019182  9D97               	bcf	151,6,b	;volatile
 35514                           
 35515                           ; BSR set to: 14
 35516                           ;i2c2.c: 441: I2C2_Stop(I2C2_DATA_NO_ACK);
 35517  019184  0E05               	movlw	5
 35518  019186  ECB7  F0DF         	call	_I2C2_Stop
 35519                           
 35520                           ;i2c2.c: 443: }
 35521  01918A  0012               	return	
 35522  01918C                     i1l21632:
 35523                           
 35524                           ; BSR set to: 14
 35525                           ;i2c2.c: 444: else;i2c2.c: 445: {;i2c2.c: 447: if(i2c_bytes_left-- == 0U)
 35526  01918C  0100               	movlb	0	; () banked
 35527  01918E  07D9               	decf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35528  019190  29D9               	incf	I2C2_ISR@i2c_bytes_left& (0+255),w,b
 35529  019192  A4D8               	btfss	status,2,c
 35530  019194  D00D               	goto	i1l21642
 35531                           
 35532                           ; BSR set to: 0
 35533                           ;i2c2.c: 448: {;i2c2.c: 452: p_i2c2_trb_current++;
 35534  019196  0E05               	movlw	5
 35535  019198  27D3               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35536  01919A  0E00               	movlw	0
 35537  01919C  23D4               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35538                           
 35539                           ; BSR set to: 0
 35540                           ;i2c2.c: 455: if(--i2c2_trb_count == 0)
 35541  01919E  2FDA               	decfsz	_i2c2_trb_count& (0+255),f,b
 35542  0191A0  D004               	goto	i1l963
 35543                           
 35544                           ; BSR set to: 0
 35545                           ;i2c2.c: 456: {;i2c2.c: 457: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35546  0191A2  0E00               	movlw	0
 35547  0191A4  ECB7  F0DF         	call	_I2C2_Stop
 35548                           
 35549                           ;i2c2.c: 458: }
 35550  0191A8  0012               	return	
 35551  0191AA                     i1l963:
 35552                           
 35553                           ; BSR set to: 0
 35554                           ;i2c2.c: 459: else;i2c2.c: 460: {;i2c2.c: 467: SSP2CON2bits.RSEN = 1;
 35555  0191AA  010E               	movlb	14	; () banked
 35556  0191AC  8397               	bsf	151,1,b	;volatile
 35557  0191AE  D77B               	goto	i1l21576
 35558  0191B0                     i1l21642:
 35559                           
 35560                           ; BSR set to: 0
 35561                           ;i2c2.c: 474: else;i2c2.c: 475: {;i2c2.c: 477: SSP2BUF = *pi2c_buf_ptr++;
 35562  0191B0  C0CF  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35563  0191B4  C0D0  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35564  0191B8  50DF               	movf	indf2,w,c
 35565  0191BA  010E               	movlb	14	; () banked
 35566  0191BC  6F92               	movwf	146,b	;volatile
 35567                           
 35568                           ; BSR set to: 14
 35569  0191BE  0100               	movlb	0	; () banked
 35570  0191C0  4BCF               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35571  0191C2  2BD0               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35572  0191C4  0012               	return	
 35573  0191C6                     i1l966:
 35574                           
 35575                           ; BSR set to: 0
 35576                           ;i2c2.c: 485: if(SSP2CON2bits.ACKSTAT)
 35577  0191C6  010E               	movlb	14	; () banked
 35578  0191C8  AD97               	btfss	151,6,b	;volatile
 35579  0191CA  D008               	goto	i1l967
 35580                           
 35581                           ; BSR set to: 14
 35582                           ;i2c2.c: 486: {;i2c2.c: 489: i2c2_object.i2cErrors++;
 35583  0191CC  0101               	movlb	1	; () banked
 35584  0191CE  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35585                           
 35586                           ; BSR set to: 1
 35587                           ;i2c2.c: 492: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
 35588  0191D0  0E04               	movlw	4
 35589  0191D2  ECB7  F0DF         	call	_I2C2_Stop
 35590                           
 35591                           ;i2c2.c: 495: SSP2CON2bits.ACKSTAT = 0;
 35592  0191D6  010E               	movlb	14	; () banked
 35593  0191D8  9D97               	bcf	151,6,b	;volatile
 35594                           
 35595                           ;i2c2.c: 496: }
 35596  0191DA  0012               	return	
 35597  0191DC                     i1l967:
 35598                           
 35599                           ; BSR set to: 14
 35600                           ;i2c2.c: 497: else;i2c2.c: 498: {;i2c2.c: 499: SSP2CON2bits.RCEN = 1;
 35601  0191DC  8797               	bsf	151,3,b	;volatile
 35602                           
 35603                           ; BSR set to: 14
 35604                           ;i2c2.c: 500: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35605  0191DE  0E08               	movlw	8
 35606  0191E0  0100               	movlb	0	; () banked
 35607  0191E2  6FDB               	movwf	_i2c2_state& (0+255),b
 35608  0191E4  0012               	return	
 35609  0191E6                     i1l21654:
 35610                           
 35611                           ; BSR set to: 0
 35612                           ;i2c2.c: 509: i2c2_state = S_MASTER_ACK_RCV_DATA;
 35613  0191E6  0E08               	movlw	8
 35614  0191E8  6FDB               	movwf	_i2c2_state& (0+255),b
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;i2c2.c: 512: SSP2CON2bits.RCEN = 1;
 35618  0191EA  010E               	movlb	14	; () banked
 35619  0191EC  8797               	bsf	151,3,b	;volatile
 35620                           
 35621                           ;i2c2.c: 514: break;
 35622  0191EE  0012               	return	
 35623  0191F0                     i1l21658:
 35624                           
 35625                           ; BSR set to: 0
 35626                           ;i2c2.c: 519: *pi2c_buf_ptr++ = SSP2BUF;
 35627  0191F0  C0CF  FFD9         	movff	I2C2_ISR@pi2c_buf_ptr,fsr2l
 35628  0191F4  C0D0  FFDA         	movff	I2C2_ISR@pi2c_buf_ptr+1,fsr2h
 35629  0191F8  CE92 FFDF          	movff	3730,indf2	;volatile
 35630                           
 35631                           ; BSR set to: 0
 35632  0191FC  4BCF               	infsnz	I2C2_ISR@pi2c_buf_ptr& (0+255),f,b
 35633  0191FE  2BD0               	incf	(I2C2_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 35634                           
 35635                           ; BSR set to: 0
 35636                           ;i2c2.c: 522: if(--i2c_bytes_left)
 35637  019200  0E01               	movlw	1
 35638  019202  5FD9               	subwf	I2C2_ISR@i2c_bytes_left& (0+255),f,b
 35639  019204  B4D8               	btfsc	status,2,c
 35640  019206  D006               	goto	i1l971
 35641                           
 35642                           ; BSR set to: 0
 35643                           ;i2c2.c: 523: {;i2c2.c: 529: SSP2CON2bits.ACKDT = 0;
 35644  019208  010E               	movlb	14	; () banked
 35645  01920A  9B97               	bcf	151,5,b	;volatile
 35646                           
 35647                           ; BSR set to: 14
 35648                           ;i2c2.c: 532: i2c2_state = S_MASTER_RCV_DATA;
 35649  01920C  0E06               	movlw	6
 35650  01920E  0100               	movlb	0	; () banked
 35651  019210  6FDB               	movwf	_i2c2_state& (0+255),b
 35652                           
 35653                           ;i2c2.c: 533: }
 35654  019212  D004               	goto	i1l21670
 35655  019214                     i1l971:
 35656                           
 35657                           ; BSR set to: 0
 35658                           ;i2c2.c: 534: else;i2c2.c: 535: {;i2c2.c: 539: SSP2CON2bits.ACKDT = 1;
 35659  019214  010E               	movlb	14	; () banked
 35660  019216  8B97               	bsf	151,5,b	;volatile
 35661                           
 35662                           ; BSR set to: 14
 35663                           ;i2c2.c: 541: I2C2_FunctionComplete();
 35664  019218  EC98  F0E4         	call	_I2C2_FunctionComplete	;wreg free
 35665  01921C                     i1l21670:
 35666                           
 35667                           ;i2c2.c: 542: };i2c2.c: 545: SSP2CON2bits.ACKEN = 1;
 35668  01921C  010E               	movlb	14	; () banked
 35669  01921E  8997               	bsf	151,4,b	;volatile
 35670                           
 35671                           ;i2c2.c: 546: break;
 35672  019220  0012               	return	
 35673  019222                     i1l21672:
 35674                           
 35675                           ; BSR set to: 0
 35676                           ;i2c2.c: 549: case S_MASTER_SEND_STOP:;i2c2.c: 552: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 35677  019222  0E00               	movlw	0
 35678  019224  ECB7  F0DF         	call	_I2C2_Stop
 35679                           
 35680                           ;i2c2.c: 553: break;
 35681  019228  0012               	return	
 35682  01922A                     i1l21674:
 35683                           
 35684                           ; BSR set to: 0
 35685                           ;i2c2.c: 559: i2c2_object.i2cErrors++;
 35686  01922A  0101               	movlb	1	; () banked
 35687  01922C  2B67               	incf	(_i2c2_object+6)& (0+255),f,b
 35688                           
 35689                           ; BSR set to: 1
 35690                           ;i2c2.c: 560: I2C2_Stop(I2C2_LOST_STATE);
 35691  01922E  0E06               	movlw	6
 35692  019230  ECB7  F0DF         	call	_I2C2_Stop
 35693                           
 35694                           ;i2c2.c: 561: break;
 35695  019234  0012               	return	
 35696  019236                     i1l21680:
 35697                           
 35698                           ; BSR set to: 14
 35699  019236  0100               	movlb	0	; () banked
 35700  019238  51DB               	movf	_i2c2_state& (0+255),w,b
 35701                           
 35702                           ; Switch size 1, requested type "simple"
 35703                           ; Number of cases is 11, Range of values is 0 to 11
 35704                           ; switch strategies available:
 35705                           ; Name         Instructions Cycles
 35706                           ; simple_byte           34    18 (average)
 35707                           ;	Chosen strategy is simple_byte
 35708  01923A  0A00               	xorlw	0	; case 0
 35709  01923C  B4D8               	btfsc	status,2,c
 35710  01923E  D701               	goto	i1l937
 35711  019240  0A01               	xorlw	1	; case 1
 35712  019242  B4D8               	btfsc	status,2,c
 35713  019244  D7B2               	goto	i1l963
 35714  019246  0A03               	xorlw	3	; case 2
 35715  019248  B4D8               	btfsc	status,2,c
 35716  01924A  D771               	goto	i1l21604
 35717  01924C  0A01               	xorlw	1	; case 3
 35718  01924E  B4D8               	btfsc	status,2,c
 35719  019250  D792               	goto	i1l959
 35720  019252  0A07               	xorlw	7	; case 4
 35721  019254  B4D8               	btfsc	status,2,c
 35722  019256  D7E5               	goto	i1l21672
 35723  019258  0A01               	xorlw	1	; case 5
 35724  01925A  B4D8               	btfsc	status,2,c
 35725  01925C  D7B4               	goto	i1l966
 35726  01925E  0A03               	xorlw	3	; case 6
 35727  019260  B4D8               	btfsc	status,2,c
 35728  019262  D7C1               	goto	i1l21654
 35729  019264  0A01               	xorlw	1	; case 7
 35730  019266  B4D8               	btfsc	status,2,c
 35731  019268  D7DC               	goto	i1l21672
 35732  01926A  0A0F               	xorlw	15	; case 8
 35733  01926C  B4D8               	btfsc	status,2,c
 35734  01926E  D7C0               	goto	i1l21658
 35735  019270  0A02               	xorlw	2	; case 10
 35736  019272  B4D8               	btfsc	status,2,c
 35737  019274  D71C               	goto	i1l943
 35738  019276  0A01               	xorlw	1	; case 11
 35739  019278  B4D8               	btfsc	status,2,c
 35740  01927A  D737               	goto	i1l948
 35741  01927C  D7D6               	goto	i1l21674
 35742  01927E                     __end_of_I2C2_ISR:
 35743                           	opt callstack 0
 35744                           
 35745 ;; *************** function _I2C2_Stop *****************
 35746 ;; Defined at:
 35747 ;;		line 584 in file "mcc_generated_files/i2c2.c"
 35748 ;; Parameters:    Size  Location     Type
 35749 ;;  completion_c    1    wreg     enum E9433
 35750 ;; Auto vars:     Size  Location     Type
 35751 ;;  completion_c    1    2[BANK1 ] enum E9433
 35752 ;; Return value:  Size  Location     Type
 35753 ;;                  1    wreg      void 
 35754 ;; Registers used:
 35755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35756 ;; Tracked objects:
 35757 ;;		On entry : 0/0
 35758 ;;		On exit  : 0/0
 35759 ;;		Unchanged: 0/0
 35760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35762 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35763 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35764 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35765 ;;Total ram usage:        3 bytes
 35766 ;; Hardware stack levels used:    1
 35767 ;; Hardware stack levels required when called:    6
 35768 ;; This function calls:
 35769 ;;		Nothing
 35770 ;; This function is called by:
 35771 ;;		_I2C2_ISR
 35772 ;; This function uses a non-reentrant model
 35773 ;;
 35774                           
 35775                           	psect	text138
 35776  01BF6E                     __ptext138:
 35777                           	opt callstack 0
 35778  01BF6E                     _I2C2_Stop:
 35779                           	opt callstack 14
 35780                           
 35781                           ;incstack = 0
 35782                           ;I2C2_Stop@completion_code stored from wreg
 35783  01BF6E  0101               	movlb	1	; () banked
 35784  01BF70  6F02               	movwf	I2C2_Stop@completion_code& (0+255),b
 35785                           
 35786                           ;i2c2.c: 587: SSP2CON2bits.PEN = 1;
 35787  01BF72  010E               	movlb	14	; () banked
 35788  01BF74  8597               	bsf	151,2,b	;volatile
 35789                           
 35790                           ; BSR set to: 14
 35791                           ;i2c2.c: 590: if (p_i2c2_current->pTrFlag != (0))
 35792  01BF76  0100               	movlb	0	; () banked
 35793  01BF78  EE20 F003          	lfsr	2,3
 35794  01BF7C  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35795  01BF7E  26D9               	addwf	fsr2l,f,c
 35796  01BF80  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35797  01BF82  22DA               	addwfc	fsr2h,f,c
 35798  01BF84  50DE               	movf	postinc2,w,c
 35799  01BF86  10DE               	iorwf	postinc2,w,c
 35800  01BF88  B4D8               	btfsc	status,2,c
 35801  01BF8A  D010               	goto	i1l21016
 35802                           
 35803                           ; BSR set to: 0
 35804                           ;i2c2.c: 591: {;i2c2.c: 593: *(p_i2c2_current->pTrFlag) = completion_code;
 35805  01BF8C  EE20 F003          	lfsr	2,3
 35806  01BF90  51D1               	movf	_p_i2c2_current& (0+255),w,b
 35807  01BF92  26D9               	addwf	fsr2l,f,c
 35808  01BF94  51D2               	movf	(_p_i2c2_current+1)& (0+255),w,b
 35809  01BF96  22DA               	addwfc	fsr2h,f,c
 35810  01BF98  CFDE F100          	movff	postinc2,??_I2C2_Stop
 35811  01BF9C  CFDD F101          	movff	postdec2,??_I2C2_Stop+1
 35812  01BFA0  C100  FFD9         	movff	??_I2C2_Stop,fsr2l
 35813  01BFA4  C101  FFDA         	movff	??_I2C2_Stop+1,fsr2h
 35814  01BFA8  C102  FFDF         	movff	I2C2_Stop@completion_code,indf2
 35815  01BFAC                     i1l21016:
 35816                           
 35817                           ; BSR set to: 0
 35818                           ;i2c2.c: 594: };i2c2.c: 597: i2c2_state = S_MASTER_IDLE;
 35819  01BFAC  0E00               	movlw	0
 35820  01BFAE  6FDB               	movwf	_i2c2_state& (0+255),b
 35821                           
 35822                           ; BSR set to: 0
 35823  01BFB0  0012               	return		;funcret
 35824  01BFB2                     __end_of_I2C2_Stop:
 35825                           	opt callstack 0
 35826                           
 35827 ;; *************** function _I2C2_FunctionComplete *****************
 35828 ;; Defined at:
 35829 ;;		line 566 in file "mcc_generated_files/i2c2.c"
 35830 ;; Parameters:    Size  Location     Type
 35831 ;;		None
 35832 ;; Auto vars:     Size  Location     Type
 35833 ;;		None
 35834 ;; Return value:  Size  Location     Type
 35835 ;;                  1    wreg      void 
 35836 ;; Registers used:
 35837 ;;		wreg, status,2, status,0
 35838 ;; Tracked objects:
 35839 ;;		On entry : 0/0
 35840 ;;		On exit  : 0/0
 35841 ;;		Unchanged: 0/0
 35842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35847 ;;Total ram usage:        0 bytes
 35848 ;; Hardware stack levels used:    1
 35849 ;; Hardware stack levels required when called:    6
 35850 ;; This function calls:
 35851 ;;		Nothing
 35852 ;; This function is called by:
 35853 ;;		_I2C2_ISR
 35854 ;; This function uses a non-reentrant model
 35855 ;;
 35856                           
 35857                           	psect	text139
 35858  01C930                     __ptext139:
 35859                           	opt callstack 0
 35860  01C930                     _I2C2_FunctionComplete:
 35861                           	opt callstack 14
 35862                           
 35863                           ;i2c2.c: 570: p_i2c2_trb_current++;
 35864                           
 35865                           ; BSR set to: 0
 35866                           ;incstack = 0
 35867  01C930  0E05               	movlw	5
 35868  01C932  0100               	movlb	0	; () banked
 35869  01C934  27D3               	addwf	_p_i2c2_trb_current& (0+255),f,b
 35870  01C936  0E00               	movlw	0
 35871  01C938  23D4               	addwfc	(_p_i2c2_trb_current+1)& (0+255),f,b
 35872                           
 35873                           ; BSR set to: 0
 35874                           ;i2c2.c: 573: if(--i2c2_trb_count == 0)
 35875  01C93A  2FDA               	decfsz	_i2c2_trb_count& (0+255),f,b
 35876  01C93C  D003               	goto	i1l21024
 35877                           
 35878                           ; BSR set to: 0
 35879                           ;i2c2.c: 574: {;i2c2.c: 575: i2c2_state = S_MASTER_SEND_STOP;
 35880  01C93E  0E04               	movlw	4
 35881  01C940  6FDB               	movwf	_i2c2_state& (0+255),b
 35882                           
 35883                           ;i2c2.c: 576: }
 35884  01C942  0012               	return	
 35885  01C944                     i1l21024:
 35886                           
 35887                           ; BSR set to: 0
 35888                           ;i2c2.c: 577: else;i2c2.c: 578: {;i2c2.c: 579: i2c2_state = S_MASTER_RESTART;
 35889  01C944  0E01               	movlw	1
 35890  01C946  6FDB               	movwf	_i2c2_state& (0+255),b
 35891                           
 35892                           ; BSR set to: 0
 35893  01C948  0012               	return		;funcret
 35894  01C94A                     __end_of_I2C2_FunctionComplete:
 35895                           	opt callstack 0
 35896                           
 35897 ;; *************** function _I2C2_BusCollisionISR *****************
 35898 ;; Defined at:
 35899 ;;		line 743 in file "mcc_generated_files/i2c2.c"
 35900 ;; Parameters:    Size  Location     Type
 35901 ;;		None
 35902 ;; Auto vars:     Size  Location     Type
 35903 ;;		None
 35904 ;; Return value:  Size  Location     Type
 35905 ;;                  1    wreg      void 
 35906 ;; Registers used:
 35907 ;;		wreg, status,2
 35908 ;; Tracked objects:
 35909 ;;		On entry : 0/0
 35910 ;;		On exit  : 0/0
 35911 ;;		Unchanged: 0/0
 35912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35917 ;;Total ram usage:        0 bytes
 35918 ;; Hardware stack levels used:    1
 35919 ;; Hardware stack levels required when called:    6
 35920 ;; This function calls:
 35921 ;;		Nothing
 35922 ;; This function is called by:
 35923 ;;		_INTERRUPT_InterruptManagerLow
 35924 ;; This function uses a non-reentrant model
 35925 ;;
 35926                           
 35927                           	psect	text140
 35928  01CBA2                     __ptext140:
 35929                           	opt callstack 0
 35930  01CBA2                     _I2C2_BusCollisionISR:
 35931                           	opt callstack 15
 35932                           
 35933                           ;i2c2.c: 746: PIR3bits.BCL2IF = 0;
 35934                           
 35935                           ; BSR set to: 0
 35936                           ;incstack = 0
 35937  01CBA2  010E               	movlb	14	; () banked
 35938  01CBA4  97CD               	bcf	205,3,b	;volatile
 35939                           
 35940                           ; BSR set to: 14
 35941                           ;i2c2.c: 747: error_handler.I2C_General_error_flag = 1;
 35942  01CBA6  0E01               	movlw	1
 35943  01CBA8  0100               	movlb	0	; () banked
 35944  01CBAA  6FBB               	movwf	(_error_handler+2)& (0+255),b
 35945                           
 35946                           ; BSR set to: 0
 35947  01CBAC  0012               	return		;funcret
 35948  01CBAE                     __end_of_I2C2_BusCollisionISR:
 35949                           	opt callstack 0
 35950                           
 35951 ;; *************** function _CCP2_CaptureISR *****************
 35952 ;; Defined at:
 35953 ;;		line 89 in file "mcc_generated_files/ccp2.c"
 35954 ;; Parameters:    Size  Location     Type
 35955 ;;		None
 35956 ;; Auto vars:     Size  Location     Type
 35957 ;;  module          2   86[BANK1 ] struct CCPR2Reg_tag
 35958 ;; Return value:  Size  Location     Type
 35959 ;;                  1    wreg      void 
 35960 ;; Registers used:
 35961 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35962 ;; Tracked objects:
 35963 ;;		On entry : 0/0
 35964 ;;		On exit  : 0/0
 35965 ;;		Unchanged: 0/0
 35966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35968 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35970 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35971 ;;Total ram usage:        2 bytes
 35972 ;; Hardware stack levels used:    1
 35973 ;; Hardware stack levels required when called:    9
 35974 ;; This function calls:
 35975 ;;		_CCP2_CallBack
 35976 ;; This function is called by:
 35977 ;;		_INTERRUPT_InterruptManagerLow
 35978 ;; This function uses a non-reentrant model
 35979 ;;
 35980                           
 35981                           	psect	text141
 35982  01C94A                     __ptext141:
 35983                           	opt callstack 0
 35984  01C94A                     _CCP2_CaptureISR:
 35985                           	opt callstack 12
 35986                           
 35987                           ;ccp2.c: 92: CCP2_PERIOD_REG_T module;;ccp2.c: 95: PIR6bits.CCP2IF = 0;
 35988                           
 35989                           ; BSR set to: 0
 35990                           ;incstack = 0
 35991  01C94A  010E               	movlb	14	; () banked
 35992  01C94C  93D0               	bcf	208,1,b	;volatile
 35993                           
 35994                           ;ccp2.c: 98: module.ccpr2l = CCPR2L;
 35995  01C94E  CFA6 F156          	movff	4006,CCP2_CaptureISR@module	;volatile
 35996                           
 35997                           ;ccp2.c: 99: module.ccpr2h = CCPR2H;
 35998  01C952  CFA7 F157          	movff	4007,CCP2_CaptureISR@module+1	;volatile
 35999                           
 36000                           ; BSR set to: 14
 36001                           ;ccp2.c: 102: CCP2_CallBack(module.ccpr2_16Bit);
 36002  01C956  C156  F154         	movff	CCP2_CaptureISR@module,CCP2_CallBack@capturedValue
 36003  01C95A  C157  F155         	movff	CCP2_CaptureISR@module+1,CCP2_CallBack@capturedValue+1
 36004  01C95E  EC3C  F0E0         	call	_CCP2_CallBack	;wreg free
 36005  01C962  0012               	return		;funcret
 36006  01C964                     __end_of_CCP2_CaptureISR:
 36007                           	opt callstack 0
 36008                           
 36009 ;; *************** function _CCP2_CallBack *****************
 36010 ;; Defined at:
 36011 ;;		line 105 in file "mcc_generated_files/ccp2.c"
 36012 ;; Parameters:    Size  Location     Type
 36013 ;;  capturedValu    2   84[BANK1 ] unsigned int 
 36014 ;; Auto vars:     Size  Location     Type
 36015 ;;		None
 36016 ;; Return value:  Size  Location     Type
 36017 ;;                  1    wreg      void 
 36018 ;; Registers used:
 36019 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 36020 ;; Tracked objects:
 36021 ;;		On entry : 0/0
 36022 ;;		On exit  : 0/0
 36023 ;;		Unchanged: 0/0
 36024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36025 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36028 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36029 ;;Total ram usage:        2 bytes
 36030 ;; Hardware stack levels used:    1
 36031 ;; Hardware stack levels required when called:    8
 36032 ;; This function calls:
 36033 ;;		_freqMeasConvert
 36034 ;; This function is called by:
 36035 ;;		_CCP2_CaptureISR
 36036 ;; This function uses a non-reentrant model
 36037 ;;
 36038                           
 36039                           	psect	text142
 36040  01C078                     __ptext142:
 36041                           	opt callstack 0
 36042  01C078                     _CCP2_CallBack:
 36043                           	opt callstack 12
 36044                           
 36045                           ;ccp2.c: 108: switch (QI_current_edge) {
 36046                           
 36047                           ;incstack = 0
 36048  01C078  D016               	goto	i1l15212
 36049  01C07A                     i1l15202:
 36050                           
 36051                           ; BSR set to: 1
 36052                           ;ccp2.c: 113: TMR5H = 0;
 36053  01C07A  0E00               	movlw	0
 36054  01C07C  6EC2               	movwf	4034,c	;volatile
 36055                           
 36056                           ;ccp2.c: 114: TMR5L = 0;
 36057  01C07E  0E00               	movlw	0
 36058  01C080  6EC1               	movwf	4033,c	;volatile
 36059                           
 36060                           ; BSR set to: 1
 36061                           ;ccp2.c: 115: T5CONbits.ON = 1;
 36062  01C082  80C3               	bsf	4035,0,c	;volatile
 36063                           
 36064                           ;ccp2.c: 118: QI_current_edge = qi_period_rising_2;
 36065  01C084  0E01               	movlw	1
 36066  01C086  6F90               	movwf	_QI_current_edge& (0+255),b
 36067                           
 36068                           ;ccp2.c: 120: break;
 36069  01C088  0012               	return	
 36070  01C08A                     i1l1069:
 36071                           
 36072                           ; BSR set to: 1
 36073                           ;ccp2.c: 125: T5CONbits.ON = 0;
 36074  01C08A  90C3               	bcf	4035,0,c	;volatile
 36075                           
 36076                           ;ccp2.c: 128: freq_meas_results.QI_Freq_Meas_Raw = capturedValue;
 36077  01C08C  C154  F16C         	movff	CCP2_CallBack@capturedValue,_freq_meas_results+4
 36078  01C090  C155  F16D         	movff	CCP2_CallBack@capturedValue+1,_freq_meas_results+5
 36079                           
 36080                           ; BSR set to: 1
 36081                           ;ccp2.c: 131: TMR5H = 0;
 36082  01C094  0E00               	movlw	0
 36083  01C096  6EC2               	movwf	4034,c	;volatile
 36084                           
 36085                           ;ccp2.c: 132: TMR5L = 0;
 36086  01C098  0E00               	movlw	0
 36087  01C09A  6EC1               	movwf	4033,c	;volatile
 36088                           
 36089                           ;ccp2.c: 134: QI_current_edge = qi_period_rising_1;
 36090  01C09C  0E00               	movlw	0
 36091  01C09E  6F90               	movwf	_QI_current_edge& (0+255),b
 36092                           
 36093                           ; BSR set to: 1
 36094                           ;ccp2.c: 137: freqMeasConvert();
 36095  01C0A0  EC1E  F0D5         	call	_freqMeasConvert	;wreg free
 36096                           
 36097                           ;ccp2.c: 139: break;
 36098  01C0A4  0012               	return	
 36099  01C0A6                     i1l15212:
 36100  01C0A6  0101               	movlb	1	; () banked
 36101  01C0A8  5190               	movf	_QI_current_edge& (0+255),w,b
 36102                           
 36103                           ; Switch size 1, requested type "simple"
 36104                           ; Number of cases is 2, Range of values is 0 to 1
 36105                           ; switch strategies available:
 36106                           ; Name         Instructions Cycles
 36107                           ; simple_byte            7     4 (average)
 36108                           ;	Chosen strategy is simple_byte
 36109  01C0AA  0A00               	xorlw	0	; case 0
 36110  01C0AC  B4D8               	btfsc	status,2,c
 36111  01C0AE  D7E5               	goto	i1l15202
 36112  01C0B0  0A01               	xorlw	1	; case 1
 36113  01C0B2  A4D8               	btfss	status,2,c
 36114  01C0B4  0012               	return	
 36115  01C0B6  D7E9               	goto	i1l1069
 36116  01C0B8                     __end_of_CCP2_CallBack:
 36117                           	opt callstack 0
 36118                           
 36119 ;; *************** function _freqMeasConvert *****************
 36120 ;; Defined at:
 36121 ;;		line 16 in file "freq_meas.c"
 36122 ;; Parameters:    Size  Location     Type
 36123 ;;		None
 36124 ;; Auto vars:     Size  Location     Type
 36125 ;;  qi_period       4   80[BANK1 ] void 
 36126 ;; Return value:  Size  Location     Type
 36127 ;;                  1    wreg      void 
 36128 ;; Registers used:
 36129 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 36130 ;; Tracked objects:
 36131 ;;		On entry : 0/0
 36132 ;;		On exit  : 0/0
 36133 ;;		Unchanged: 0/0
 36134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36136 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36138 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36139 ;;Total ram usage:        4 bytes
 36140 ;; Hardware stack levels used:    1
 36141 ;; Hardware stack levels required when called:    7
 36142 ;; This function calls:
 36143 ;;		i1___fladd
 36144 ;;		i1___fldiv
 36145 ;;		i1___flmul
 36146 ;;		i1___xxtofl
 36147 ;; This function is called by:
 36148 ;;		_CCP2_CallBack
 36149 ;; This function uses a non-reentrant model
 36150 ;;
 36151                           
 36152                           	psect	text143
 36153  01AA3C                     __ptext143:
 36154                           	opt callstack 0
 36155  01AA3C                     _freqMeasConvert:
 36156                           	opt callstack 12
 36157                           
 36158                           ;freq_meas.c: 19: double qi_period = ((((float) freq_meas_results.QI_Freq_Meas_Raw + 1) 
      +                          / 16.0) * 0.00000063);
 36159                           
 36160                           ;incstack = 0
 36161  01AA3C  0E00               	movlw	0
 36162  01AA3E  0101               	movlb	1	; () banked
 36163  01AA40  6F22               	movwf	i1___fldiv@a& (0+255),b
 36164  01AA42  0E00               	movlw	0
 36165  01AA44  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 36166  01AA46  0E80               	movlw	128
 36167  01AA48  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 36168  01AA4A  0E41               	movlw	65
 36169  01AA4C  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 36170  01AA4E  0E00               	movlw	0
 36171  01AA50  6F12               	movwf	i1___fladd@a& (0+255),b
 36172  01AA52  0E00               	movlw	0
 36173  01AA54  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 36174  01AA56  0E80               	movlw	128
 36175  01AA58  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 36176  01AA5A  0E3F               	movlw	63
 36177  01AA5C  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 36178  01AA5E  C16C  F100         	movff	_freq_meas_results+4,i1___xxtofl@val
 36179  01AA62  C16D  F101         	movff	_freq_meas_results+5,i1___xxtofl@val+1
 36180  01AA66  6B02               	clrf	(i1___xxtofl@val+2)& (0+255),b
 36181  01AA68  6B03               	clrf	(i1___xxtofl@val+3)& (0+255),b
 36182  01AA6A  0E00               	movlw	0
 36183  01AA6C  EC21  F0CF         	call	i1___xxtofl
 36184  01AA70  C100  F10E         	movff	?i1___xxtofl,i1___fladd@b
 36185  01AA74  C101  F10F         	movff	?i1___xxtofl+1,i1___fladd@b+1
 36186  01AA78  C102  F110         	movff	?i1___xxtofl+2,i1___fladd@b+2
 36187  01AA7C  C103  F111         	movff	?i1___xxtofl+3,i1___fladd@b+3
 36188  01AA80  ECC4  F0BB         	call	i1___fladd	;wreg free
 36189  01AA84  C10E  F11E         	movff	?i1___fladd,i1___fldiv@b
 36190  01AA88  C10F  F11F         	movff	?i1___fladd+1,i1___fldiv@b+1
 36191  01AA8C  C110  F120         	movff	?i1___fladd+2,i1___fldiv@b+2
 36192  01AA90  C111  F121         	movff	?i1___fladd+3,i1___fldiv@b+3
 36193  01AA94  EC39  F0C4         	call	i1___fldiv	;wreg free
 36194  01AA98  C11E  F137         	movff	?i1___fldiv,i1___flmul@b
 36195  01AA9C  C11F  F138         	movff	?i1___fldiv+1,i1___flmul@b+1
 36196  01AAA0  C120  F139         	movff	?i1___fldiv+2,i1___flmul@b+2
 36197  01AAA4  C121  F13A         	movff	?i1___fldiv+3,i1___flmul@b+3
 36198  01AAA8  0E45               	movlw	69
 36199  01AAAA  0101               	movlb	1	; () banked
 36200  01AAAC  6F3B               	movwf	i1___flmul@a& (0+255),b
 36201  01AAAE  0E1D               	movlw	29
 36202  01AAB0  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36203  01AAB2  0E29               	movlw	41
 36204  01AAB4  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36205  01AAB6  0E35               	movlw	53
 36206  01AAB8  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36207  01AABA  ECEA  F0B6         	call	i1___flmul	;wreg free
 36208  01AABE  C137  F150         	movff	?i1___flmul,freqMeasConvert@qi_period
 36209  01AAC2  C138  F151         	movff	?i1___flmul+1,freqMeasConvert@qi_period+1
 36210  01AAC6  C139  F152         	movff	?i1___flmul+2,freqMeasConvert@qi_period+2
 36211  01AACA  C13A  F153         	movff	?i1___flmul+3,freqMeasConvert@qi_period+3
 36212                           
 36213                           ;freq_meas.c: 20: freq_meas_results.QI_Freq_Meas = 1.0 / qi_period;
 36214  01AACE  0E00               	movlw	0
 36215  01AAD0  0101               	movlb	1	; () banked
 36216  01AAD2  6F1E               	movwf	i1___fldiv@b& (0+255),b
 36217  01AAD4  0E00               	movlw	0
 36218  01AAD6  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 36219  01AAD8  0E80               	movlw	128
 36220  01AADA  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 36221  01AADC  0E3F               	movlw	63
 36222  01AADE  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 36223  01AAE0  C150  F122         	movff	freqMeasConvert@qi_period,i1___fldiv@a
 36224  01AAE4  C151  F123         	movff	freqMeasConvert@qi_period+1,i1___fldiv@a+1
 36225  01AAE8  C152  F124         	movff	freqMeasConvert@qi_period+2,i1___fldiv@a+2
 36226  01AAEC  C153  F125         	movff	freqMeasConvert@qi_period+3,i1___fldiv@a+3
 36227  01AAF0  EC39  F0C4         	call	i1___fldiv	;wreg free
 36228  01AAF4  C11E  F168         	movff	?i1___fldiv,_freq_meas_results
 36229  01AAF8  C11F  F169         	movff	?i1___fldiv+1,_freq_meas_results+1
 36230  01AAFC  C120  F16A         	movff	?i1___fldiv+2,_freq_meas_results+2
 36231  01AB00  C121  F16B         	movff	?i1___fldiv+3,_freq_meas_results+3
 36232  01AB04  0012               	return		;funcret
 36233  01AB06                     __end_of_freqMeasConvert:
 36234                           	opt callstack 0
 36235                           
 36236 ;; *************** function i1___xxtofl *****************
 36237 ;; Defined at:
 36238 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 36239 ;; Parameters:    Size  Location     Type
 36240 ;;  sign            1    wreg     unsigned char 
 36241 ;;  val             4    0[BANK1 ] long 
 36242 ;; Auto vars:     Size  Location     Type
 36243 ;;  sign            1    8[BANK1 ] unsigned char 
 36244 ;;  __xxtofl        4   10[BANK1 ] unsigned long 
 36245 ;;  __xxtofl        1    9[BANK1 ] unsigned char 
 36246 ;; Return value:  Size  Location     Type
 36247 ;;                  4    0[BANK1 ] unsigned char 
 36248 ;; Registers used:
 36249 ;;		wreg, status,2, status,0
 36250 ;; Tracked objects:
 36251 ;;		On entry : 0/0
 36252 ;;		On exit  : 0/0
 36253 ;;		Unchanged: 0/0
 36254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36255 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36256 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36257 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36258 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36259 ;;Total ram usage:       14 bytes
 36260 ;; Hardware stack levels used:    1
 36261 ;; Hardware stack levels required when called:    6
 36262 ;; This function calls:
 36263 ;;		Nothing
 36264 ;; This function is called by:
 36265 ;;		_freqMeasConvert
 36266 ;; This function uses a non-reentrant model
 36267 ;;
 36268                           
 36269                           	psect	text144
 36270  019E42                     __ptext144:
 36271                           	opt callstack 0
 36272  019E42                     i1___xxtofl:
 36273                           	opt callstack 12
 36274                           
 36275                           ;incstack = 0
 36276                           ;i1___xxtofl@sign stored from wreg
 36277  019E42  0101               	movlb	1	; () banked
 36278  019E44  6F08               	movwf	i1___xxtofl@sign& (0+255),b
 36279  019E46  0101               	movlb	1	; () banked
 36280  019E48  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 36281  019E4A  A4D8               	btfss	status,2,c
 36282                           
 36283                           ; BSR set to: 1
 36284  019E4C  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36285  019E4E  D01A               	goto	i1l3364
 36286                           
 36287                           ; BSR set to: 1
 36288  019E50  C100  F104         	movff	i1___xxtofl@val,??i1___xxtofl
 36289  019E54  C101  F105         	movff	i1___xxtofl@val+1,??i1___xxtofl+1
 36290  019E58  C102  F106         	movff	i1___xxtofl@val+2,??i1___xxtofl+2
 36291  019E5C  C103  F107         	movff	i1___xxtofl@val+3,??i1___xxtofl+3
 36292  019E60  1F04               	comf	??i1___xxtofl& (0+255),f,b
 36293  019E62  1F05               	comf	(??i1___xxtofl+1)& (0+255),f,b
 36294  019E64  1F06               	comf	(??i1___xxtofl+2)& (0+255),f,b
 36295  019E66  1F07               	comf	(??i1___xxtofl+3)& (0+255),f,b
 36296  019E68  2B04               	incf	??i1___xxtofl& (0+255),f,b
 36297  019E6A  0E00               	movlw	0
 36298  019E6C  2305               	addwfc	(??i1___xxtofl+1)& (0+255),f,b
 36299  019E6E  2306               	addwfc	(??i1___xxtofl+2)& (0+255),f,b
 36300  019E70  2307               	addwfc	(??i1___xxtofl+3)& (0+255),f,b
 36301  019E72  C104  F10A         	movff	??i1___xxtofl,i1___xxtofl@arg
 36302  019E76  C105  F10B         	movff	??i1___xxtofl+1,i1___xxtofl@arg+1
 36303  019E7A  C106  F10C         	movff	??i1___xxtofl+2,i1___xxtofl@arg+2
 36304  019E7E  C107  F10D         	movff	??i1___xxtofl+3,i1___xxtofl@arg+3
 36305  019E82  D008               	goto	i1l13830
 36306  019E84                     i1l3364:
 36307                           
 36308                           ; BSR set to: 1
 36309  019E84  C100  F10A         	movff	i1___xxtofl@val,i1___xxtofl@arg
 36310  019E88  C101  F10B         	movff	i1___xxtofl@val+1,i1___xxtofl@arg+1
 36311  019E8C  C102  F10C         	movff	i1___xxtofl@val+2,i1___xxtofl@arg+2
 36312  019E90  C103  F10D         	movff	i1___xxtofl@val+3,i1___xxtofl@arg+3
 36313  019E94                     i1l13830:
 36314                           
 36315                           ; BSR set to: 1
 36316  019E94  5100               	movf	i1___xxtofl@val& (0+255),w,b
 36317  019E96  1101               	iorwf	(i1___xxtofl@val+1)& (0+255),w,b
 36318  019E98  1102               	iorwf	(i1___xxtofl@val+2)& (0+255),w,b
 36319  019E9A  1103               	iorwf	(i1___xxtofl@val+3)& (0+255),w,b
 36320  019E9C  A4D8               	btfss	status,2,c
 36321  019E9E  D009               	goto	i1l13836
 36322                           
 36323                           ; BSR set to: 1
 36324  019EA0  0E00               	movlw	0
 36325  019EA2  6F00               	movwf	?i1___xxtofl& (0+255),b
 36326  019EA4  0E00               	movlw	0
 36327  019EA6  6F01               	movwf	(?i1___xxtofl+1)& (0+255),b
 36328  019EA8  0E00               	movlw	0
 36329  019EAA  6F02               	movwf	(?i1___xxtofl+2)& (0+255),b
 36330  019EAC  0E00               	movlw	0
 36331  019EAE  6F03               	movwf	(?i1___xxtofl+3)& (0+255),b
 36332  019EB0  0012               	return	
 36333  019EB2                     i1l13836:
 36334                           
 36335                           ; BSR set to: 1
 36336  019EB2  0E96               	movlw	150
 36337  019EB4  6F09               	movwf	i1___xxtofl@exp& (0+255),b
 36338  019EB6  D006               	goto	i1l13840
 36339  019EB8                     i1l13838:
 36340                           
 36341                           ; BSR set to: 1
 36342  019EB8  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36343  019EBA  90D8               	bcf	status,0,c
 36344  019EBC  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36345  019EBE  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36346  019EC0  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36347  019EC2  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36348  019EC4                     i1l13840:
 36349                           
 36350                           ; BSR set to: 1
 36351  019EC4  0E00               	movlw	0
 36352  019EC6  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36353  019EC8  6F04               	movwf	??i1___xxtofl& (0+255),b
 36354  019ECA  0E00               	movlw	0
 36355  019ECC  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36356  019ECE  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36357  019ED0  0E00               	movlw	0
 36358  019ED2  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36359  019ED4  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36360  019ED6  0EFE               	movlw	254
 36361  019ED8  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36362  019EDA  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36363  019EDC  5104               	movf	??i1___xxtofl& (0+255),w,b
 36364  019EDE  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36365  019EE0  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36366  019EE2  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36367  019EE4  B4D8               	btfsc	status,2,c
 36368  019EE6  D00D               	goto	i1l3371
 36369  019EE8  D7E7               	goto	i1l13838
 36370  019EEA                     i1l13842:
 36371                           
 36372                           ; BSR set to: 1
 36373  019EEA  2B09               	incf	i1___xxtofl@exp& (0+255),f,b
 36374                           
 36375                           ; BSR set to: 1
 36376  019EEC  0E01               	movlw	1
 36377  019EEE  270A               	addwf	i1___xxtofl@arg& (0+255),f,b
 36378  019EF0  0E00               	movlw	0
 36379  019EF2  230B               	addwfc	(i1___xxtofl@arg+1)& (0+255),f,b
 36380  019EF4  230C               	addwfc	(i1___xxtofl@arg+2)& (0+255),f,b
 36381  019EF6  230D               	addwfc	(i1___xxtofl@arg+3)& (0+255),f,b
 36382                           
 36383                           ; BSR set to: 1
 36384  019EF8  90D8               	bcf	status,0,c
 36385  019EFA  330D               	rrcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36386  019EFC  330C               	rrcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36387  019EFE  330B               	rrcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36388  019F00  330A               	rrcf	i1___xxtofl@arg& (0+255),f,b
 36389  019F02                     i1l3371:
 36390                           
 36391                           ; BSR set to: 1
 36392  019F02  0E00               	movlw	0
 36393  019F04  150A               	andwf	i1___xxtofl@arg& (0+255),w,b
 36394  019F06  6F04               	movwf	??i1___xxtofl& (0+255),b
 36395  019F08  0E00               	movlw	0
 36396  019F0A  150B               	andwf	(i1___xxtofl@arg+1)& (0+255),w,b
 36397  019F0C  6F05               	movwf	(??i1___xxtofl+1)& (0+255),b
 36398  019F0E  0E00               	movlw	0
 36399  019F10  150C               	andwf	(i1___xxtofl@arg+2)& (0+255),w,b
 36400  019F12  6F06               	movwf	(??i1___xxtofl+2)& (0+255),b
 36401  019F14  0EFF               	movlw	255
 36402  019F16  150D               	andwf	(i1___xxtofl@arg+3)& (0+255),w,b
 36403  019F18  6F07               	movwf	(??i1___xxtofl+3)& (0+255),b
 36404  019F1A  5104               	movf	??i1___xxtofl& (0+255),w,b
 36405  019F1C  1105               	iorwf	(??i1___xxtofl+1)& (0+255),w,b
 36406  019F1E  1106               	iorwf	(??i1___xxtofl+2)& (0+255),w,b
 36407  019F20  1107               	iorwf	(??i1___xxtofl+3)& (0+255),w,b
 36408  019F22  B4D8               	btfsc	status,2,c
 36409  019F24  D007               	goto	i1l13850
 36410  019F26  D7E1               	goto	i1l13842
 36411  019F28                     i1l13848:
 36412                           
 36413                           ; BSR set to: 1
 36414  019F28  0709               	decf	i1___xxtofl@exp& (0+255),f,b
 36415  019F2A  90D8               	bcf	status,0,c
 36416  019F2C  370A               	rlcf	i1___xxtofl@arg& (0+255),f,b
 36417  019F2E  370B               	rlcf	(i1___xxtofl@arg+1)& (0+255),f,b
 36418  019F30  370C               	rlcf	(i1___xxtofl@arg+2)& (0+255),f,b
 36419  019F32  370D               	rlcf	(i1___xxtofl@arg+3)& (0+255),f,b
 36420  019F34                     i1l13850:
 36421                           
 36422                           ; BSR set to: 1
 36423  019F34  BF0C               	btfsc	(i1___xxtofl@arg+2)& (0+255),7,b
 36424  019F36  D003               	goto	i1u1597_20
 36425                           
 36426                           ; BSR set to: 1
 36427  019F38  0E02               	movlw	2
 36428  019F3A  6109               	cpfslt	i1___xxtofl@exp& (0+255),b
 36429  019F3C  D7F5               	goto	i1l13848
 36430  019F3E                     i1u1597_20:
 36431                           
 36432                           ; BSR set to: 1
 36433  019F3E  A109               	btfss	i1___xxtofl@exp& (0+255),0,b
 36434                           
 36435                           ; BSR set to: 1
 36436  019F40  9F0C               	bcf	(i1___xxtofl@arg+2)& (0+255),7,b
 36437                           
 36438                           ; BSR set to: 1
 36439  019F42  90D8               	bcf	status,0,c
 36440  019F44  3309               	rrcf	i1___xxtofl@exp& (0+255),f,b
 36441                           
 36442                           ; BSR set to: 1
 36443  019F46  C109  F104         	movff	i1___xxtofl@exp,??i1___xxtofl
 36444  019F4A  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36445  019F4C  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36446  019F4E  6B07               	clrf	(??i1___xxtofl+3)& (0+255),b
 36447  019F50  C104  F107         	movff	??i1___xxtofl,??i1___xxtofl+3
 36448  019F54  6B06               	clrf	(??i1___xxtofl+2)& (0+255),b
 36449  019F56  6B05               	clrf	(??i1___xxtofl+1)& (0+255),b
 36450  019F58  6B04               	clrf	??i1___xxtofl& (0+255),b
 36451  019F5A  5104               	movf	??i1___xxtofl& (0+255),w,b
 36452  019F5C  130A               	iorwf	i1___xxtofl@arg& (0+255),f,b
 36453  019F5E  5105               	movf	(??i1___xxtofl+1)& (0+255),w,b
 36454  019F60  130B               	iorwf	(i1___xxtofl@arg+1)& (0+255),f,b
 36455  019F62  5106               	movf	(??i1___xxtofl+2)& (0+255),w,b
 36456  019F64  130C               	iorwf	(i1___xxtofl@arg+2)& (0+255),f,b
 36457  019F66  5107               	movf	(??i1___xxtofl+3)& (0+255),w,b
 36458  019F68  130D               	iorwf	(i1___xxtofl@arg+3)& (0+255),f,b
 36459                           
 36460                           ; BSR set to: 1
 36461  019F6A  5108               	movf	i1___xxtofl@sign& (0+255),w,b
 36462  019F6C  A4D8               	btfss	status,2,c
 36463                           
 36464                           ; BSR set to: 1
 36465  019F6E  AF03               	btfss	(i1___xxtofl@val+3)& (0+255),7,b
 36466  019F70  D001               	goto	i1l13866
 36467                           
 36468                           ; BSR set to: 1
 36469  019F72  8F0D               	bsf	(i1___xxtofl@arg+3)& (0+255),7,b
 36470  019F74                     i1l13866:
 36471                           
 36472                           ; BSR set to: 1
 36473  019F74  C10A  F100         	movff	i1___xxtofl@arg,?i1___xxtofl
 36474  019F78  C10B  F101         	movff	i1___xxtofl@arg+1,?i1___xxtofl+1
 36475  019F7C  C10C  F102         	movff	i1___xxtofl@arg+2,?i1___xxtofl+2
 36476  019F80  C10D  F103         	movff	i1___xxtofl@arg+3,?i1___xxtofl+3
 36477                           
 36478                           ; BSR set to: 1
 36479  019F84  0012               	return		;funcret
 36480  019F86                     __end_ofi1___xxtofl:
 36481                           	opt callstack 0
 36482                           
 36483 ;; *************** function i1___flmul *****************
 36484 ;; Defined at:
 36485 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 36486 ;; Parameters:    Size  Location     Type
 36487 ;;  b               4   55[BANK1 ] unsigned char 
 36488 ;;  a               4   59[BANK1 ] unsigned char 
 36489 ;; Auto vars:     Size  Location     Type
 36490 ;;  __flmul         4   74[BANK1 ] struct .
 36491 ;;  __flmul         4   68[BANK1 ] unsigned long 
 36492 ;;  __flmul         2   78[BANK1 ] struct .
 36493 ;;  __flmul         1   73[BANK1 ] unsigned char 
 36494 ;;  __flmul         1   72[BANK1 ] unsigned char 
 36495 ;;  __flmul         1   67[BANK1 ] unsigned char 
 36496 ;; Return value:  Size  Location     Type
 36497 ;;                  4   55[BANK1 ] unsigned char 
 36498 ;; Registers used:
 36499 ;;		wreg, status,2, status,0, prodl, prodh
 36500 ;; Tracked objects:
 36501 ;;		On entry : 0/0
 36502 ;;		On exit  : 0/0
 36503 ;;		Unchanged: 0/0
 36504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36505 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36506 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36507 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36508 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36509 ;;Total ram usage:       25 bytes
 36510 ;; Hardware stack levels used:    1
 36511 ;; Hardware stack levels required when called:    6
 36512 ;; This function calls:
 36513 ;;		Nothing
 36514 ;; This function is called by:
 36515 ;;		_freqMeasConvert
 36516 ;; This function uses a non-reentrant model
 36517 ;;
 36518                           
 36519                           	psect	text145
 36520  016DD4                     __ptext145:
 36521                           	opt callstack 0
 36522  016DD4                     i1___flmul:
 36523                           	opt callstack 12
 36524                           
 36525                           ; BSR set to: 1
 36526                           ;incstack = 0
 36527  016DD4  0101               	movlb	1	; () banked
 36528  016DD6  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36529  016DD8  0B80               	andlw	128
 36530  016DDA  6F43               	movwf	i1___flmul@sign& (0+255),b
 36531  016DDC  513A               	movf	(i1___flmul@b+3)& (0+255),w,b
 36532  016DDE  253A               	addwf	(i1___flmul@b+3)& (0+255),w,b
 36533  016DE0  6F49               	movwf	i1___flmul@bexp& (0+255),b
 36534                           
 36535                           ; BSR set to: 1
 36536  016DE2  BF39               	btfsc	(i1___flmul@b+2)& (0+255),7,b
 36537                           
 36538                           ; BSR set to: 1
 36539  016DE4  8149               	bsf	i1___flmul@bexp& (0+255),0,b
 36540                           
 36541                           ; BSR set to: 1
 36542  016DE6  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36543  016DE8  B4D8               	btfsc	status,2,c
 36544  016DEA  D00D               	goto	i1l13708
 36545                           
 36546                           ; BSR set to: 1
 36547  016DEC  2949               	incf	i1___flmul@bexp& (0+255),w,b
 36548  016DEE  A4D8               	btfss	status,2,c
 36549  016DF0  D008               	goto	i1l13706
 36550                           
 36551                           ; BSR set to: 1
 36552  016DF2  0E00               	movlw	0
 36553  016DF4  6F37               	movwf	i1___flmul@b& (0+255),b
 36554  016DF6  0E00               	movlw	0
 36555  016DF8  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36556  016DFA  0E00               	movlw	0
 36557  016DFC  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36558  016DFE  0E00               	movlw	0
 36559  016E00  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36560  016E02                     i1l13706:
 36561                           
 36562                           ; BSR set to: 1
 36563  016E02  8F39               	bsf	(i1___flmul@b+2)& (0+255),7,b
 36564  016E04  D008               	goto	i1l13710
 36565  016E06                     i1l13708:
 36566                           
 36567                           ; BSR set to: 1
 36568  016E06  0E00               	movlw	0
 36569  016E08  6F37               	movwf	i1___flmul@b& (0+255),b
 36570  016E0A  0E00               	movlw	0
 36571  016E0C  6F38               	movwf	(i1___flmul@b+1)& (0+255),b
 36572  016E0E  0E00               	movlw	0
 36573  016E10  6F39               	movwf	(i1___flmul@b+2)& (0+255),b
 36574  016E12  0E00               	movlw	0
 36575  016E14  6F3A               	movwf	(i1___flmul@b+3)& (0+255),b
 36576  016E16                     i1l13710:
 36577                           
 36578                           ; BSR set to: 1
 36579  016E16  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36580  016E18  0B80               	andlw	128
 36581  016E1A  1B43               	xorwf	i1___flmul@sign& (0+255),f,b
 36582                           
 36583                           ; BSR set to: 1
 36584  016E1C  513E               	movf	(i1___flmul@a+3)& (0+255),w,b
 36585  016E1E  253E               	addwf	(i1___flmul@a+3)& (0+255),w,b
 36586  016E20  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36587                           
 36588                           ; BSR set to: 1
 36589  016E22  BF3D               	btfsc	(i1___flmul@a+2)& (0+255),7,b
 36590                           
 36591                           ; BSR set to: 1
 36592  016E24  8148               	bsf	i1___flmul@aexp& (0+255),0,b
 36593                           
 36594                           ; BSR set to: 1
 36595  016E26  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36596  016E28  B4D8               	btfsc	status,2,c
 36597  016E2A  D00D               	goto	i1l13726
 36598                           
 36599                           ; BSR set to: 1
 36600  016E2C  2948               	incf	i1___flmul@aexp& (0+255),w,b
 36601  016E2E  A4D8               	btfss	status,2,c
 36602  016E30  D008               	goto	i1l13724
 36603                           
 36604                           ; BSR set to: 1
 36605  016E32  0E00               	movlw	0
 36606  016E34  6F3B               	movwf	i1___flmul@a& (0+255),b
 36607  016E36  0E00               	movlw	0
 36608  016E38  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36609  016E3A  0E00               	movlw	0
 36610  016E3C  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36611  016E3E  0E00               	movlw	0
 36612  016E40  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36613  016E42                     i1l13724:
 36614                           
 36615                           ; BSR set to: 1
 36616  016E42  8F3D               	bsf	(i1___flmul@a+2)& (0+255),7,b
 36617  016E44  D008               	goto	i1l3323
 36618  016E46                     i1l13726:
 36619                           
 36620                           ; BSR set to: 1
 36621  016E46  0E00               	movlw	0
 36622  016E48  6F3B               	movwf	i1___flmul@a& (0+255),b
 36623  016E4A  0E00               	movlw	0
 36624  016E4C  6F3C               	movwf	(i1___flmul@a+1)& (0+255),b
 36625  016E4E  0E00               	movlw	0
 36626  016E50  6F3D               	movwf	(i1___flmul@a+2)& (0+255),b
 36627  016E52  0E00               	movlw	0
 36628  016E54  6F3E               	movwf	(i1___flmul@a+3)& (0+255),b
 36629  016E56                     i1l3323:
 36630                           
 36631                           ; BSR set to: 1
 36632  016E56  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36633  016E58  B4D8               	btfsc	status,2,c
 36634  016E5A  D003               	goto	i1u1579_20
 36635                           
 36636                           ; BSR set to: 1
 36637  016E5C  5149               	movf	i1___flmul@bexp& (0+255),w,b
 36638  016E5E  A4D8               	btfss	status,2,c
 36639  016E60  D009               	goto	i1l13734
 36640  016E62                     i1u1579_20:
 36641                           
 36642                           ; BSR set to: 1
 36643  016E62  0E00               	movlw	0
 36644  016E64  6F37               	movwf	?i1___flmul& (0+255),b
 36645  016E66  0E00               	movlw	0
 36646  016E68  6F38               	movwf	(?i1___flmul+1)& (0+255),b
 36647  016E6A  0E00               	movlw	0
 36648  016E6C  6F39               	movwf	(?i1___flmul+2)& (0+255),b
 36649  016E6E  0E00               	movlw	0
 36650  016E70  6F3A               	movwf	(?i1___flmul+3)& (0+255),b
 36651  016E72  0012               	return	
 36652  016E74                     i1l13734:
 36653                           
 36654                           ; BSR set to: 1
 36655  016E74  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36656  016E76  0337               	mulwf	i1___flmul@b& (0+255),b
 36657  016E78  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36658  016E7C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36659                           
 36660                           ; BSR set to: 1
 36661  016E80  514E               	movf	i1___flmul@temp& (0+255),w,b
 36662  016E82  6F44               	movwf	i1___flmul@grs& (0+255),b
 36663  016E84  6B45               	clrf	(i1___flmul@grs+1)& (0+255),b
 36664  016E86  6B46               	clrf	(i1___flmul@grs+2)& (0+255),b
 36665  016E88  6B47               	clrf	(i1___flmul@grs+3)& (0+255),b
 36666                           
 36667                           ; BSR set to: 1
 36668  016E8A  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36669  016E8C  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36670  016E8E  6B4B               	clrf	(i1___flmul@prod+1)& (0+255),b
 36671  016E90  6B4C               	clrf	(i1___flmul@prod+2)& (0+255),b
 36672  016E92  6B4D               	clrf	(i1___flmul@prod+3)& (0+255),b
 36673  016E94  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36674  016E96  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36675  016E98  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36676  016E9C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36677                           
 36678                           ; BSR set to: 1
 36679  016EA0  514E               	movf	i1___flmul@temp& (0+255),w,b
 36680  016EA2  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36681  016EA4  0E00               	movlw	0
 36682  016EA6  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36683  016EA8  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36684  016EAA  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36685                           
 36686                           ; BSR set to: 1
 36687  016EAC  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36688  016EAE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36689  016EB0  0E00               	movlw	0
 36690  016EB2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36691  016EB4  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36692  016EB6  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36693  016EB8  513B               	movf	i1___flmul@a& (0+255),w,b
 36694  016EBA  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36695  016EBC  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36696  016EC0  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36697                           
 36698                           ; BSR set to: 1
 36699  016EC4  514E               	movf	i1___flmul@temp& (0+255),w,b
 36700  016EC6  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36701  016EC8  0E00               	movlw	0
 36702  016ECA  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36703  016ECC  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36704  016ECE  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36705                           
 36706                           ; BSR set to: 1
 36707  016ED0  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36708  016ED2  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36709  016ED4  0E00               	movlw	0
 36710  016ED6  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36711  016ED8  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36712  016EDA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36713                           
 36714                           ; BSR set to: 1
 36715  016EDC  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36716  016EE0  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36717  016EE4  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36718  016EE8  6B44               	clrf	i1___flmul@grs& (0+255),b
 36719                           
 36720                           ; BSR set to: 1
 36721  016EEA  513B               	movf	i1___flmul@a& (0+255),w,b
 36722  016EEC  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36723  016EEE  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36724  016EF2  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36725                           
 36726                           ; BSR set to: 1
 36727  016EF6  514E               	movf	i1___flmul@temp& (0+255),w,b
 36728  016EF8  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36729  016EFA  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36730  016EFC  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36731  016EFE  0E00               	movlw	0
 36732  016F00  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36733  016F02  0E00               	movlw	0
 36734  016F04  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36735                           
 36736                           ; BSR set to: 1
 36737  016F06  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36738  016F08  0337               	mulwf	i1___flmul@b& (0+255),b
 36739  016F0A  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36740  016F0E  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36741                           
 36742                           ; BSR set to: 1
 36743  016F12  514E               	movf	i1___flmul@temp& (0+255),w,b
 36744  016F14  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36745  016F16  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36746  016F18  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36747  016F1A  0E00               	movlw	0
 36748  016F1C  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36749  016F1E  0E00               	movlw	0
 36750  016F20  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36751                           
 36752                           ; BSR set to: 1
 36753  016F22  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36754  016F26  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36755  016F2A  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36756  016F2E  6B44               	clrf	i1___flmul@grs& (0+255),b
 36757  016F30  513B               	movf	i1___flmul@a& (0+255),w,b
 36758  016F32  0337               	mulwf	i1___flmul@b& (0+255),b
 36759  016F34  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36760  016F38  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36761                           
 36762                           ; BSR set to: 1
 36763  016F3C  514E               	movf	i1___flmul@temp& (0+255),w,b
 36764  016F3E  2744               	addwf	i1___flmul@grs& (0+255),f,b
 36765  016F40  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36766  016F42  2345               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 36767  016F44  0E00               	movlw	0
 36768  016F46  2346               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 36769  016F48  0E00               	movlw	0
 36770  016F4A  2347               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 36771                           
 36772                           ; BSR set to: 1
 36773  016F4C  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36774  016F4E  0338               	mulwf	(i1___flmul@b+1)& (0+255),b
 36775  016F50  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36776  016F54  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36777  016F58  514E               	movf	i1___flmul@temp& (0+255),w,b
 36778  016F5A  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36779  016F5C  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36780  016F5E  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36781  016F60  0E00               	movlw	0
 36782  016F62  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36783  016F64  0E00               	movlw	0
 36784  016F66  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36785                           
 36786                           ; BSR set to: 1
 36787  016F68  513C               	movf	(i1___flmul@a+1)& (0+255),w,b
 36788  016F6A  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36789  016F6C  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36790  016F70  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36791                           
 36792                           ; BSR set to: 1
 36793  016F74  514E               	movf	i1___flmul@temp& (0+255),w,b
 36794  016F76  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36795  016F78  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36796  016F7A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36797  016F7C  0E00               	movlw	0
 36798  016F7E  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36799  016F80  0E00               	movlw	0
 36800  016F82  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36801  016F84  513D               	movf	(i1___flmul@a+2)& (0+255),w,b
 36802  016F86  0339               	mulwf	(i1___flmul@b+2)& (0+255),b
 36803  016F88  CFF3 F14E          	movff	prodl,i1___flmul@temp
 36804  016F8C  CFF4 F14F          	movff	prodh,i1___flmul@temp+1
 36805                           
 36806                           ; BSR set to: 1
 36807  016F90  514E               	movf	i1___flmul@temp& (0+255),w,b
 36808  016F92  6F3F               	movwf	??i1___flmul& (0+255),b
 36809  016F94  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36810  016F96  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36811  016F98  6B41               	clrf	(??i1___flmul+2)& (0+255),b
 36812  016F9A  6B42               	clrf	(??i1___flmul+3)& (0+255),b
 36813  016F9C  C141  F142         	movff	??i1___flmul+2,??i1___flmul+3
 36814  016FA0  C140  F141         	movff	??i1___flmul+1,??i1___flmul+2
 36815  016FA4  C13F  F140         	movff	??i1___flmul,??i1___flmul+1
 36816  016FA8  6B3F               	clrf	??i1___flmul& (0+255),b
 36817  016FAA  513F               	movf	??i1___flmul& (0+255),w,b
 36818  016FAC  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36819  016FAE  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36820  016FB0  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36821  016FB2  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36822  016FB4  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36823  016FB6  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36824  016FB8  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36825                           
 36826                           ; BSR set to: 1
 36827  016FBA  C144  F13F         	movff	i1___flmul@grs,??i1___flmul
 36828  016FBE  C145  F140         	movff	i1___flmul@grs+1,??i1___flmul+1
 36829  016FC2  C146  F141         	movff	i1___flmul@grs+2,??i1___flmul+2
 36830  016FC6  C147  F142         	movff	i1___flmul@grs+3,??i1___flmul+3
 36831  016FCA  0E19               	movlw	25
 36832  016FCC  D005               	goto	i1u1580_20
 36833  016FCE                     i1u1580_25:
 36834  016FCE  90D8               	bcf	status,0,c
 36835  016FD0  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36836  016FD2  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36837  016FD4  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36838  016FD6  333F               	rrcf	??i1___flmul& (0+255),f,b
 36839  016FD8                     i1u1580_20:
 36840  016FD8  2EE8               	decfsz	wreg,f,c
 36841  016FDA  D7F9               	goto	i1u1580_25
 36842  016FDC  513F               	movf	??i1___flmul& (0+255),w,b
 36843  016FDE  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36844  016FE0  5140               	movf	(??i1___flmul+1)& (0+255),w,b
 36845  016FE2  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36846  016FE4  5141               	movf	(??i1___flmul+2)& (0+255),w,b
 36847  016FE6  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36848  016FE8  5142               	movf	(??i1___flmul+3)& (0+255),w,b
 36849  016FEA  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36850                           
 36851                           ; BSR set to: 1
 36852  016FEC  C146  F147         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 36853  016FF0  C145  F146         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 36854  016FF4  C144  F145         	movff	i1___flmul@grs,i1___flmul@grs+1
 36855  016FF8  6B44               	clrf	i1___flmul@grs& (0+255),b
 36856                           
 36857                           ; BSR set to: 1
 36858  016FFA  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36859  016FFC  C149  F13F         	movff	i1___flmul@bexp,??i1___flmul
 36860  017000  6B40               	clrf	(??i1___flmul+1)& (0+255),b
 36861  017002  273F               	addwf	??i1___flmul& (0+255),f,b
 36862  017004  0E00               	movlw	0
 36863  017006  2340               	addwfc	(??i1___flmul+1)& (0+255),f,b
 36864  017008  0E82               	movlw	130
 36865  01700A  253F               	addwf	??i1___flmul& (0+255),w,b
 36866  01700C  6F4E               	movwf	i1___flmul@temp& (0+255),b
 36867  01700E  0EFF               	movlw	255
 36868  017010  2140               	addwfc	(??i1___flmul+1)& (0+255),w,b
 36869  017012  6F4F               	movwf	(i1___flmul@temp+1)& (0+255),b
 36870  017014  D00F               	goto	i1l13782
 36871  017016                     i1l13776:
 36872                           
 36873                           ; BSR set to: 1
 36874  017016  90D8               	bcf	status,0,c
 36875  017018  374A               	rlcf	i1___flmul@prod& (0+255),f,b
 36876  01701A  374B               	rlcf	(i1___flmul@prod+1)& (0+255),f,b
 36877  01701C  374C               	rlcf	(i1___flmul@prod+2)& (0+255),f,b
 36878  01701E  374D               	rlcf	(i1___flmul@prod+3)& (0+255),f,b
 36879                           
 36880                           ; BSR set to: 1
 36881  017020  BF47               	btfsc	(i1___flmul@grs+3)& (0+255),7,b
 36882                           
 36883                           ; BSR set to: 1
 36884  017022  814A               	bsf	i1___flmul@prod& (0+255),0,b
 36885                           
 36886                           ; BSR set to: 1
 36887  017024  90D8               	bcf	status,0,c
 36888  017026  3744               	rlcf	i1___flmul@grs& (0+255),f,b
 36889  017028  3745               	rlcf	(i1___flmul@grs+1)& (0+255),f,b
 36890  01702A  3746               	rlcf	(i1___flmul@grs+2)& (0+255),f,b
 36891  01702C  3747               	rlcf	(i1___flmul@grs+3)& (0+255),f,b
 36892  01702E  074E               	decf	i1___flmul@temp& (0+255),f,b
 36893  017030  A0D8               	btfss	status,0,c
 36894  017032  074F               	decf	(i1___flmul@temp+1)& (0+255),f,b
 36895  017034                     i1l13782:
 36896                           
 36897                           ; BSR set to: 1
 36898  017034  AF4C               	btfss	(i1___flmul@prod+2)& (0+255),7,b
 36899  017036  D7EF               	goto	i1l13776
 36900                           
 36901                           ; BSR set to: 1
 36902  017038  0E00               	movlw	0
 36903  01703A  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36904                           
 36905                           ; BSR set to: 1
 36906  01703C  AF47               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 36907  01703E  D017               	goto	i1l3332
 36908                           
 36909                           ; BSR set to: 1
 36910  017040  0EFF               	movlw	255
 36911  017042  1544               	andwf	i1___flmul@grs& (0+255),w,b
 36912  017044  6F3F               	movwf	??i1___flmul& (0+255),b
 36913  017046  0EFF               	movlw	255
 36914  017048  1545               	andwf	(i1___flmul@grs+1)& (0+255),w,b
 36915  01704A  6F40               	movwf	(??i1___flmul+1)& (0+255),b
 36916  01704C  0EFF               	movlw	255
 36917  01704E  1546               	andwf	(i1___flmul@grs+2)& (0+255),w,b
 36918  017050  6F41               	movwf	(??i1___flmul+2)& (0+255),b
 36919  017052  0E7F               	movlw	127
 36920  017054  1547               	andwf	(i1___flmul@grs+3)& (0+255),w,b
 36921  017056  6F42               	movwf	(??i1___flmul+3)& (0+255),b
 36922  017058  513F               	movf	??i1___flmul& (0+255),w,b
 36923  01705A  1140               	iorwf	(??i1___flmul+1)& (0+255),w,b
 36924  01705C  1141               	iorwf	(??i1___flmul+2)& (0+255),w,b
 36925  01705E  1142               	iorwf	(??i1___flmul+3)& (0+255),w,b
 36926  017060  B4D8               	btfsc	status,2,c
 36927  017062  D003               	goto	i1l3333
 36928  017064                     i1u1584_20:
 36929                           
 36930                           ; BSR set to: 1
 36931  017064  0E01               	movlw	1
 36932  017066  6F48               	movwf	i1___flmul@aexp& (0+255),b
 36933  017068  D002               	goto	i1l3332
 36934  01706A                     i1l3333:
 36935                           
 36936                           ; BSR set to: 1
 36937  01706A  B14A               	btfsc	i1___flmul@prod& (0+255),0,b
 36938  01706C  D7FB               	goto	i1u1584_20
 36939  01706E                     i1l3332:
 36940                           
 36941                           ; BSR set to: 1
 36942  01706E  5148               	movf	i1___flmul@aexp& (0+255),w,b
 36943  017070  B4D8               	btfsc	status,2,c
 36944  017072  D01F               	goto	i1l13802
 36945                           
 36946                           ; BSR set to: 1
 36947  017074  0E01               	movlw	1
 36948  017076  274A               	addwf	i1___flmul@prod& (0+255),f,b
 36949  017078  0E00               	movlw	0
 36950  01707A  234B               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 36951  01707C  234C               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 36952  01707E  234D               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 36953                           
 36954                           ; BSR set to: 1
 36955  017080  A14D               	btfss	(i1___flmul@prod+3)& (0+255),0,b
 36956  017082  D017               	goto	i1l13802
 36957                           
 36958                           ; BSR set to: 1
 36959  017084  C14A  F13F         	movff	i1___flmul@prod,??i1___flmul
 36960  017088  C14B  F140         	movff	i1___flmul@prod+1,??i1___flmul+1
 36961  01708C  C14C  F141         	movff	i1___flmul@prod+2,??i1___flmul+2
 36962  017090  C14D  F142         	movff	i1___flmul@prod+3,??i1___flmul+3
 36963  017094  3542               	rlcf	(??i1___flmul+3)& (0+255),w,b
 36964  017096  3342               	rrcf	(??i1___flmul+3)& (0+255),f,b
 36965  017098  3341               	rrcf	(??i1___flmul+2)& (0+255),f,b
 36966  01709A  3340               	rrcf	(??i1___flmul+1)& (0+255),f,b
 36967  01709C  333F               	rrcf	??i1___flmul& (0+255),f,b
 36968  01709E  C13F  F14A         	movff	??i1___flmul,i1___flmul@prod
 36969  0170A2  C140  F14B         	movff	??i1___flmul+1,i1___flmul@prod+1
 36970  0170A6  C141  F14C         	movff	??i1___flmul+2,i1___flmul@prod+2
 36971  0170AA  C142  F14D         	movff	??i1___flmul+3,i1___flmul@prod+3
 36972                           
 36973                           ; BSR set to: 1
 36974  0170AE  4B4E               	infsnz	i1___flmul@temp& (0+255),f,b
 36975  0170B0  2B4F               	incf	(i1___flmul@temp+1)& (0+255),f,b
 36976  0170B2                     i1l13802:
 36977                           
 36978                           ; BSR set to: 1
 36979  0170B2  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 36980  0170B4  D00D               	goto	i1l13806
 36981  0170B6  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 36982  0170B8  E103               	bnz	i1u1588_20
 36983  0170BA  294E               	incf	i1___flmul@temp& (0+255),w,b
 36984  0170BC  A0D8               	btfss	status,0,c
 36985  0170BE  D008               	goto	i1l13806
 36986  0170C0                     i1u1588_20:
 36987                           
 36988                           ; BSR set to: 1
 36989  0170C0  0E00               	movlw	0
 36990  0170C2  6F4A               	movwf	i1___flmul@prod& (0+255),b
 36991  0170C4  0E00               	movlw	0
 36992  0170C6  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 36993  0170C8  0E80               	movlw	128
 36994  0170CA  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 36995  0170CC  0E7F               	movlw	127
 36996  0170CE  D020               	goto	L28
 36997  0170D0                     i1l13806:
 36998                           
 36999                           ; BSR set to: 1
 37000  0170D0  BF4F               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 37001  0170D2  D005               	goto	i1u1589_20
 37002  0170D4  514F               	movf	(i1___flmul@temp+1)& (0+255),w,b
 37003  0170D6  E10E               	bnz	i1l3340
 37004  0170D8  054E               	decf	i1___flmul@temp& (0+255),w,b
 37005  0170DA  B0D8               	btfsc	status,0,c
 37006  0170DC  D00B               	goto	i1l3340
 37007  0170DE                     i1u1589_20:
 37008                           
 37009                           ; BSR set to: 1
 37010  0170DE  0E00               	movlw	0
 37011  0170E0  6F4A               	movwf	i1___flmul@prod& (0+255),b
 37012  0170E2  0E00               	movlw	0
 37013  0170E4  6F4B               	movwf	(i1___flmul@prod+1)& (0+255),b
 37014  0170E6  0E00               	movlw	0
 37015  0170E8  6F4C               	movwf	(i1___flmul@prod+2)& (0+255),b
 37016  0170EA  0E00               	movlw	0
 37017  0170EC  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 37018  0170EE  0E00               	movlw	0
 37019  0170F0  6F43               	movwf	i1___flmul@sign& (0+255),b
 37020  0170F2  D00F               	goto	i1l13818
 37021  0170F4                     i1l3340:
 37022                           
 37023                           ; BSR set to: 1
 37024  0170F4  C14E  F149         	movff	i1___flmul@temp,i1___flmul@bexp
 37025                           
 37026                           ; BSR set to: 1
 37027  0170F8  0EFF               	movlw	255
 37028  0170FA  174A               	andwf	i1___flmul@prod& (0+255),f,b
 37029  0170FC  0EFF               	movlw	255
 37030  0170FE  174B               	andwf	(i1___flmul@prod+1)& (0+255),f,b
 37031  017100  0E7F               	movlw	127
 37032  017102  174C               	andwf	(i1___flmul@prod+2)& (0+255),f,b
 37033  017104  0E00               	movlw	0
 37034  017106  174D               	andwf	(i1___flmul@prod+3)& (0+255),f,b
 37035                           
 37036                           ; BSR set to: 1
 37037  017108  B149               	btfsc	i1___flmul@bexp& (0+255),0,b
 37038                           
 37039                           ; BSR set to: 1
 37040  01710A  8F4C               	bsf	(i1___flmul@prod+2)& (0+255),7,b
 37041                           
 37042                           ; BSR set to: 1
 37043  01710C  90D8               	bcf	status,0,c
 37044  01710E  3149               	rrcf	i1___flmul@bexp& (0+255),w,b
 37045  017110                     L28:
 37046  017110  6F4D               	movwf	(i1___flmul@prod+3)& (0+255),b
 37047  017112                     i1l13818:
 37048                           
 37049                           ; BSR set to: 1
 37050  017112  5143               	movf	i1___flmul@sign& (0+255),w,b
 37051  017114  134D               	iorwf	(i1___flmul@prod+3)& (0+255),f,b
 37052                           
 37053                           ; BSR set to: 1
 37054  017116  C14A  F137         	movff	i1___flmul@prod,?i1___flmul
 37055  01711A  C14B  F138         	movff	i1___flmul@prod+1,?i1___flmul+1
 37056  01711E  C14C  F139         	movff	i1___flmul@prod+2,?i1___flmul+2
 37057  017122  C14D  F13A         	movff	i1___flmul@prod+3,?i1___flmul+3
 37058                           
 37059                           ; BSR set to: 1
 37060  017126  0012               	return		;funcret
 37061  017128                     __end_ofi1___flmul:
 37062                           	opt callstack 0
 37063                           
 37064 ;; *************** function i1___fldiv *****************
 37065 ;; Defined at:
 37066 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 37067 ;; Parameters:    Size  Location     Type
 37068 ;;  b               4   30[BANK1 ] unsigned char 
 37069 ;;  a               4   34[BANK1 ] unsigned char 
 37070 ;; Auto vars:     Size  Location     Type
 37071 ;;  __fldiv         4   49[BANK1 ] unsigned long 
 37072 ;;  __fldiv         4   42[BANK1 ] unsigned long 
 37073 ;;  __fldiv         2   47[BANK1 ] int 
 37074 ;;  __fldiv         1   54[BANK1 ] unsigned char 
 37075 ;;  __fldiv         1   53[BANK1 ] unsigned char 
 37076 ;;  __fldiv         1   46[BANK1 ] unsigned char 
 37077 ;; Return value:  Size  Location     Type
 37078 ;;                  4   30[BANK1 ] unsigned char 
 37079 ;; Registers used:
 37080 ;;		wreg, status,2, status,0
 37081 ;; Tracked objects:
 37082 ;;		On entry : 0/0
 37083 ;;		On exit  : 0/0
 37084 ;;		Unchanged: 0/0
 37085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37086 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37087 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37088 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37089 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37090 ;;Total ram usage:       25 bytes
 37091 ;; Hardware stack levels used:    1
 37092 ;; Hardware stack levels required when called:    6
 37093 ;; This function calls:
 37094 ;;		Nothing
 37095 ;; This function is called by:
 37096 ;;		_freqMeasConvert
 37097 ;; This function uses a non-reentrant model
 37098 ;;
 37099                           
 37100                           	psect	text146
 37101  018872                     __ptext146:
 37102                           	opt callstack 0
 37103  018872                     i1___fldiv:
 37104                           	opt callstack 12
 37105                           
 37106                           ; BSR set to: 1
 37107                           ;incstack = 0
 37108  018872  0101               	movlb	1	; () banked
 37109  018874  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 37110  018876  0B80               	andlw	128
 37111  018878  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 37112  01887A  5121               	movf	(i1___fldiv@b+3)& (0+255),w,b
 37113  01887C  2521               	addwf	(i1___fldiv@b+3)& (0+255),w,b
 37114  01887E  6F35               	movwf	i1___fldiv@bexp& (0+255),b
 37115                           
 37116                           ; BSR set to: 1
 37117  018880  BF20               	btfsc	(i1___fldiv@b+2)& (0+255),7,b
 37118                           
 37119                           ; BSR set to: 1
 37120  018882  8135               	bsf	i1___fldiv@bexp& (0+255),0,b
 37121                           
 37122                           ; BSR set to: 1
 37123  018884  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 37124  018886  B4D8               	btfsc	status,2,c
 37125  018888  D00D               	goto	i1l13572
 37126                           
 37127                           ; BSR set to: 1
 37128  01888A  2935               	incf	i1___fldiv@bexp& (0+255),w,b
 37129  01888C  A4D8               	btfss	status,2,c
 37130  01888E  D008               	goto	i1l13568
 37131                           
 37132                           ; BSR set to: 1
 37133  018890  0E00               	movlw	0
 37134  018892  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37135  018894  0E00               	movlw	0
 37136  018896  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37137  018898  0E00               	movlw	0
 37138  01889A  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37139  01889C  0E00               	movlw	0
 37140  01889E  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37141  0188A0                     i1l13568:
 37142                           
 37143                           ; BSR set to: 1
 37144  0188A0  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 37145  0188A2  D006               	goto	L29
 37146  0188A4                     i1l13572:
 37147                           
 37148                           ; BSR set to: 1
 37149  0188A4  0E00               	movlw	0
 37150  0188A6  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37151  0188A8  0E00               	movlw	0
 37152  0188AA  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37153  0188AC  0E00               	movlw	0
 37154  0188AE  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37155  0188B0                     L29:
 37156  0188B0  0E00               	movlw	0
 37157  0188B2  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37158                           
 37159                           ; BSR set to: 1
 37160  0188B4  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37161  0188B6  0B80               	andlw	128
 37162  0188B8  1B2E               	xorwf	i1___fldiv@sign& (0+255),f,b
 37163                           
 37164                           ; BSR set to: 1
 37165  0188BA  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37166  0188BC  2525               	addwf	(i1___fldiv@a+3)& (0+255),w,b
 37167  0188BE  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37168                           
 37169                           ; BSR set to: 1
 37170  0188C0  BF24               	btfsc	(i1___fldiv@a+2)& (0+255),7,b
 37171                           
 37172                           ; BSR set to: 1
 37173  0188C2  8136               	bsf	i1___fldiv@aexp& (0+255),0,b
 37174                           
 37175                           ; BSR set to: 1
 37176  0188C4  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37177  0188C6  B4D8               	btfsc	status,2,c
 37178  0188C8  D00D               	goto	i1l13592
 37179                           
 37180                           ; BSR set to: 1
 37181  0188CA  2936               	incf	i1___fldiv@aexp& (0+255),w,b
 37182  0188CC  A4D8               	btfss	status,2,c
 37183  0188CE  D008               	goto	i1l13588
 37184                           
 37185                           ; BSR set to: 1
 37186  0188D0  0E00               	movlw	0
 37187  0188D2  6F22               	movwf	i1___fldiv@a& (0+255),b
 37188  0188D4  0E00               	movlw	0
 37189  0188D6  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 37190  0188D8  0E00               	movlw	0
 37191  0188DA  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 37192  0188DC  0E00               	movlw	0
 37193  0188DE  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 37194  0188E0                     i1l13588:
 37195                           
 37196                           ; BSR set to: 1
 37197  0188E0  8F24               	bsf	(i1___fldiv@a+2)& (0+255),7,b
 37198  0188E2  D006               	goto	L30
 37199  0188E4                     i1l13592:
 37200                           
 37201                           ; BSR set to: 1
 37202  0188E4  0E00               	movlw	0
 37203  0188E6  6F22               	movwf	i1___fldiv@a& (0+255),b
 37204  0188E8  0E00               	movlw	0
 37205  0188EA  6F23               	movwf	(i1___fldiv@a+1)& (0+255),b
 37206  0188EC  0E00               	movlw	0
 37207  0188EE  6F24               	movwf	(i1___fldiv@a+2)& (0+255),b
 37208  0188F0                     L30:
 37209  0188F0  0E00               	movlw	0
 37210  0188F2  6F25               	movwf	(i1___fldiv@a+3)& (0+255),b
 37211                           
 37212                           ; BSR set to: 1
 37213  0188F4  5122               	movf	i1___fldiv@a& (0+255),w,b
 37214  0188F6  1123               	iorwf	(i1___fldiv@a+1)& (0+255),w,b
 37215  0188F8  1124               	iorwf	(i1___fldiv@a+2)& (0+255),w,b
 37216  0188FA  1125               	iorwf	(i1___fldiv@a+3)& (0+255),w,b
 37217  0188FC  A4D8               	btfss	status,2,c
 37218  0188FE  D017               	goto	i1l13606
 37219                           
 37220                           ; BSR set to: 1
 37221  018900  0E00               	movlw	0
 37222  018902  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37223  018904  0E00               	movlw	0
 37224  018906  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37225  018908  0E00               	movlw	0
 37226  01890A  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37227  01890C  0E00               	movlw	0
 37228  01890E  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37229                           
 37230                           ; BSR set to: 1
 37231  018910  0E80               	movlw	128
 37232  018912  1320               	iorwf	(i1___fldiv@b+2)& (0+255),f,b
 37233  018914  0E7F               	movlw	127
 37234  018916  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 37235  018918                     i1l13600:
 37236                           
 37237                           ; BSR set to: 1
 37238  018918  512E               	movf	i1___fldiv@sign& (0+255),w,b
 37239  01891A  1321               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 37240                           
 37241                           ; BSR set to: 1
 37242  01891C  C11E  F11E         	movff	i1___fldiv@b,?i1___fldiv
 37243  018920  C11F  F11F         	movff	i1___fldiv@b+1,?i1___fldiv+1
 37244  018924  C120  F120         	movff	i1___fldiv@b+2,?i1___fldiv+2
 37245  018928  C121  F121         	movff	i1___fldiv@b+3,?i1___fldiv+3
 37246  01892C  0012               	return	
 37247  01892E                     i1l13606:
 37248                           
 37249                           ; BSR set to: 1
 37250  01892E  5135               	movf	i1___fldiv@bexp& (0+255),w,b
 37251  018930  A4D8               	btfss	status,2,c
 37252  018932  D009               	goto	i1l13614
 37253                           
 37254                           ; BSR set to: 1
 37255                           
 37256                           ; BSR set to: 1
 37257  018934  0E00               	movlw	0
 37258  018936  6F1E               	movwf	?i1___fldiv& (0+255),b
 37259  018938  0E00               	movlw	0
 37260  01893A  6F1F               	movwf	(?i1___fldiv+1)& (0+255),b
 37261  01893C  0E00               	movlw	0
 37262  01893E  6F20               	movwf	(?i1___fldiv+2)& (0+255),b
 37263  018940  0E00               	movlw	0
 37264  018942  6F21               	movwf	(?i1___fldiv+3)& (0+255),b
 37265  018944  0012               	return	
 37266  018946                     i1l13614:
 37267                           
 37268                           ; BSR set to: 1
 37269  018946  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37270  018948  C135  F126         	movff	i1___fldiv@bexp,??i1___fldiv
 37271  01894C  6B27               	clrf	(??i1___fldiv+1)& (0+255),b
 37272  01894E  5F26               	subwf	??i1___fldiv& (0+255),f,b
 37273  018950  0E00               	movlw	0
 37274  018952  5B27               	subwfb	(??i1___fldiv+1)& (0+255),f,b
 37275  018954  0E7F               	movlw	127
 37276  018956  2526               	addwf	??i1___fldiv& (0+255),w,b
 37277  018958  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 37278  01895A  0E00               	movlw	0
 37279  01895C  2127               	addwfc	(??i1___fldiv+1)& (0+255),w,b
 37280  01895E  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37281                           
 37282                           ; BSR set to: 1
 37283  018960  C11E  F12A         	movff	i1___fldiv@b,i1___fldiv@rem
 37284  018964  C11F  F12B         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 37285  018968  C120  F12C         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 37286  01896C  C121  F12D         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 37287                           
 37288                           ; BSR set to: 1
 37289  018970  0E00               	movlw	0
 37290  018972  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37291  018974  0E00               	movlw	0
 37292  018976  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37293  018978  0E00               	movlw	0
 37294  01897A  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37295  01897C  0E00               	movlw	0
 37296  01897E  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37297                           
 37298                           ; BSR set to: 1
 37299  018980  0E00               	movlw	0
 37300  018982  6F31               	movwf	i1___fldiv@grs& (0+255),b
 37301  018984  0E00               	movlw	0
 37302  018986  6F32               	movwf	(i1___fldiv@grs+1)& (0+255),b
 37303  018988  0E00               	movlw	0
 37304  01898A  6F33               	movwf	(i1___fldiv@grs+2)& (0+255),b
 37305  01898C  0E00               	movlw	0
 37306  01898E  6F34               	movwf	(i1___fldiv@grs+3)& (0+255),b
 37307                           
 37308                           ; BSR set to: 1
 37309  018990  0E00               	movlw	0
 37310  018992  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37311  018994  D028               	goto	i1l3293
 37312  018996                     i1l13624:
 37313                           
 37314                           ; BSR set to: 1
 37315  018996  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37316  018998  B4D8               	btfsc	status,2,c
 37317  01899A  D011               	goto	i1l13632
 37318                           
 37319                           ; BSR set to: 1
 37320  01899C  90D8               	bcf	status,0,c
 37321  01899E  372A               	rlcf	i1___fldiv@rem& (0+255),f,b
 37322  0189A0  372B               	rlcf	(i1___fldiv@rem+1)& (0+255),f,b
 37323  0189A2  372C               	rlcf	(i1___fldiv@rem+2)& (0+255),f,b
 37324  0189A4  372D               	rlcf	(i1___fldiv@rem+3)& (0+255),f,b
 37325  0189A6  90D8               	bcf	status,0,c
 37326  0189A8  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37327  0189AA  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37328  0189AC  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37329  0189AE  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37330                           
 37331                           ; BSR set to: 1
 37332  0189B0  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37333                           
 37334                           ; BSR set to: 1
 37335  0189B2  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37336                           
 37337                           ; BSR set to: 1
 37338  0189B4  90D8               	bcf	status,0,c
 37339  0189B6  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37340  0189B8  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37341  0189BA  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37342  0189BC  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37343  0189BE                     i1l13632:
 37344                           
 37345                           ; BSR set to: 1
 37346  0189BE  5122               	movf	i1___fldiv@a& (0+255),w,b
 37347  0189C0  5D2A               	subwf	i1___fldiv@rem& (0+255),w,b
 37348  0189C2  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 37349  0189C4  592B               	subwfb	(i1___fldiv@rem+1)& (0+255),w,b
 37350  0189C6  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 37351  0189C8  592C               	subwfb	(i1___fldiv@rem+2)& (0+255),w,b
 37352  0189CA  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37353  0189CC  592D               	subwfb	(i1___fldiv@rem+3)& (0+255),w,b
 37354  0189CE  A0D8               	btfss	status,0,c
 37355  0189D0  D009               	goto	i1l13638
 37356                           
 37357                           ; BSR set to: 1
 37358  0189D2  8D34               	bsf	(i1___fldiv@grs+3)& (0+255),6,b
 37359                           
 37360                           ; BSR set to: 1
 37361  0189D4  5122               	movf	i1___fldiv@a& (0+255),w,b
 37362  0189D6  5F2A               	subwf	i1___fldiv@rem& (0+255),f,b
 37363  0189D8  5123               	movf	(i1___fldiv@a+1)& (0+255),w,b
 37364  0189DA  5B2B               	subwfb	(i1___fldiv@rem+1)& (0+255),f,b
 37365  0189DC  5124               	movf	(i1___fldiv@a+2)& (0+255),w,b
 37366  0189DE  5B2C               	subwfb	(i1___fldiv@rem+2)& (0+255),f,b
 37367  0189E0  5125               	movf	(i1___fldiv@a+3)& (0+255),w,b
 37368  0189E2  5B2D               	subwfb	(i1___fldiv@rem+3)& (0+255),f,b
 37369  0189E4                     i1l13638:
 37370                           
 37371                           ; BSR set to: 1
 37372  0189E4  2B36               	incf	i1___fldiv@aexp& (0+255),f,b
 37373  0189E6                     i1l3293:
 37374                           
 37375                           ; BSR set to: 1
 37376  0189E6  0E19               	movlw	25
 37377  0189E8  6536               	cpfsgt	i1___fldiv@aexp& (0+255),b
 37378  0189EA  D7D5               	goto	i1l13624
 37379                           
 37380                           ; BSR set to: 1
 37381  0189EC  512A               	movf	i1___fldiv@rem& (0+255),w,b
 37382  0189EE  112B               	iorwf	(i1___fldiv@rem+1)& (0+255),w,b
 37383  0189F0  112C               	iorwf	(i1___fldiv@rem+2)& (0+255),w,b
 37384  0189F2  112D               	iorwf	(i1___fldiv@rem+3)& (0+255),w,b
 37385  0189F4  B4D8               	btfsc	status,2,c
 37386  0189F6  D011               	goto	i1l13650
 37387                           
 37388                           ; BSR set to: 1
 37389  0189F8  8131               	bsf	i1___fldiv@grs& (0+255),0,b
 37390  0189FA  D00F               	goto	i1l13650
 37391  0189FC                     i1l13644:
 37392                           
 37393                           ; BSR set to: 1
 37394  0189FC  90D8               	bcf	status,0,c
 37395  0189FE  371E               	rlcf	i1___fldiv@b& (0+255),f,b
 37396  018A00  371F               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 37397  018A02  3720               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 37398  018A04  3721               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 37399                           
 37400                           ; BSR set to: 1
 37401  018A06  BF34               	btfsc	(i1___fldiv@grs+3)& (0+255),7,b
 37402                           
 37403                           ; BSR set to: 1
 37404  018A08  811E               	bsf	i1___fldiv@b& (0+255),0,b
 37405                           
 37406                           ; BSR set to: 1
 37407  018A0A  90D8               	bcf	status,0,c
 37408  018A0C  3731               	rlcf	i1___fldiv@grs& (0+255),f,b
 37409  018A0E  3732               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 37410  018A10  3733               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 37411  018A12  3734               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 37412  018A14  072F               	decf	i1___fldiv@new_exp& (0+255),f,b
 37413  018A16  A0D8               	btfss	status,0,c
 37414  018A18  0730               	decf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37415  018A1A                     i1l13650:
 37416                           
 37417                           ; BSR set to: 1
 37418  018A1A  AF20               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 37419  018A1C  D7EF               	goto	i1l13644
 37420                           
 37421                           ; BSR set to: 1
 37422  018A1E  0E00               	movlw	0
 37423  018A20  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37424                           
 37425                           ; BSR set to: 1
 37426  018A22  AF34               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 37427  018A24  D017               	goto	i1l3304
 37428                           
 37429                           ; BSR set to: 1
 37430  018A26  0EFF               	movlw	255
 37431  018A28  1531               	andwf	i1___fldiv@grs& (0+255),w,b
 37432  018A2A  6F26               	movwf	??i1___fldiv& (0+255),b
 37433  018A2C  0EFF               	movlw	255
 37434  018A2E  1532               	andwf	(i1___fldiv@grs+1)& (0+255),w,b
 37435  018A30  6F27               	movwf	(??i1___fldiv+1)& (0+255),b
 37436  018A32  0EFF               	movlw	255
 37437  018A34  1533               	andwf	(i1___fldiv@grs+2)& (0+255),w,b
 37438  018A36  6F28               	movwf	(??i1___fldiv+2)& (0+255),b
 37439  018A38  0E7F               	movlw	127
 37440  018A3A  1534               	andwf	(i1___fldiv@grs+3)& (0+255),w,b
 37441  018A3C  6F29               	movwf	(??i1___fldiv+3)& (0+255),b
 37442  018A3E  5126               	movf	??i1___fldiv& (0+255),w,b
 37443  018A40  1127               	iorwf	(??i1___fldiv+1)& (0+255),w,b
 37444  018A42  1128               	iorwf	(??i1___fldiv+2)& (0+255),w,b
 37445  018A44  1129               	iorwf	(??i1___fldiv+3)& (0+255),w,b
 37446  018A46  B4D8               	btfsc	status,2,c
 37447  018A48  D003               	goto	i1l3305
 37448  018A4A                     i1u1565_20:
 37449                           
 37450                           ; BSR set to: 1
 37451  018A4A  0E01               	movlw	1
 37452  018A4C  6F36               	movwf	i1___fldiv@aexp& (0+255),b
 37453  018A4E  D002               	goto	i1l3304
 37454  018A50                     i1l3305:
 37455                           
 37456                           ; BSR set to: 1
 37457  018A50  B11E               	btfsc	i1___fldiv@b& (0+255),0,b
 37458  018A52  D7FB               	goto	i1u1565_20
 37459  018A54                     i1l3304:
 37460                           
 37461                           ; BSR set to: 1
 37462  018A54  5136               	movf	i1___fldiv@aexp& (0+255),w,b
 37463  018A56  B4D8               	btfsc	status,2,c
 37464  018A58  D01F               	goto	i1l13670
 37465                           
 37466                           ; BSR set to: 1
 37467  018A5A  0E01               	movlw	1
 37468  018A5C  271E               	addwf	i1___fldiv@b& (0+255),f,b
 37469  018A5E  0E00               	movlw	0
 37470  018A60  231F               	addwfc	(i1___fldiv@b+1)& (0+255),f,b
 37471  018A62  2320               	addwfc	(i1___fldiv@b+2)& (0+255),f,b
 37472  018A64  2321               	addwfc	(i1___fldiv@b+3)& (0+255),f,b
 37473                           
 37474                           ; BSR set to: 1
 37475  018A66  A121               	btfss	(i1___fldiv@b+3)& (0+255),0,b
 37476  018A68  D017               	goto	i1l13670
 37477                           
 37478                           ; BSR set to: 1
 37479  018A6A  C11E  F126         	movff	i1___fldiv@b,??i1___fldiv
 37480  018A6E  C11F  F127         	movff	i1___fldiv@b+1,??i1___fldiv+1
 37481  018A72  C120  F128         	movff	i1___fldiv@b+2,??i1___fldiv+2
 37482  018A76  C121  F129         	movff	i1___fldiv@b+3,??i1___fldiv+3
 37483  018A7A  3529               	rlcf	(??i1___fldiv+3)& (0+255),w,b
 37484  018A7C  3329               	rrcf	(??i1___fldiv+3)& (0+255),f,b
 37485  018A7E  3328               	rrcf	(??i1___fldiv+2)& (0+255),f,b
 37486  018A80  3327               	rrcf	(??i1___fldiv+1)& (0+255),f,b
 37487  018A82  3326               	rrcf	??i1___fldiv& (0+255),f,b
 37488  018A84  C126  F11E         	movff	??i1___fldiv,i1___fldiv@b
 37489  018A88  C127  F11F         	movff	??i1___fldiv+1,i1___fldiv@b+1
 37490  018A8C  C128  F120         	movff	??i1___fldiv+2,i1___fldiv@b+2
 37491  018A90  C129  F121         	movff	??i1___fldiv+3,i1___fldiv@b+3
 37492                           
 37493                           ; BSR set to: 1
 37494  018A94  4B2F               	infsnz	i1___fldiv@new_exp& (0+255),f,b
 37495  018A96  2B30               	incf	(i1___fldiv@new_exp+1)& (0+255),f,b
 37496  018A98                     i1l13670:
 37497                           
 37498                           ; BSR set to: 1
 37499  018A98  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37500  018A9A  D010               	goto	i1l13674
 37501  018A9C  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37502  018A9E  E103               	bnz	i1u1569_20
 37503  018AA0  292F               	incf	i1___fldiv@new_exp& (0+255),w,b
 37504  018AA2  A0D8               	btfss	status,0,c
 37505  018AA4  D00B               	goto	i1l13674
 37506  018AA6                     i1u1569_20:
 37507                           
 37508                           ; BSR set to: 1
 37509  018AA6  0E00               	movlw	0
 37510  018AA8  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37511  018AAA  692F               	setf	i1___fldiv@new_exp& (0+255),b
 37512  018AAC  0E00               	movlw	0
 37513  018AAE  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37514  018AB0  0E00               	movlw	0
 37515  018AB2  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37516  018AB4  0E00               	movlw	0
 37517  018AB6  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37518  018AB8  0E00               	movlw	0
 37519  018ABA  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37520  018ABC                     i1l13674:
 37521                           
 37522                           ; BSR set to: 1
 37523  018ABC  BF30               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 37524  018ABE  D005               	goto	i1u1570_20
 37525  018AC0  5130               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 37526  018AC2  E111               	bnz	i1l13678
 37527  018AC4  052F               	decf	i1___fldiv@new_exp& (0+255),w,b
 37528  018AC6  B0D8               	btfsc	status,0,c
 37529  018AC8  D00E               	goto	i1l13678
 37530  018ACA                     i1u1570_20:
 37531                           
 37532                           ; BSR set to: 1
 37533  018ACA  0E00               	movlw	0
 37534  018ACC  6F30               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 37535  018ACE  0E00               	movlw	0
 37536  018AD0  6F2F               	movwf	i1___fldiv@new_exp& (0+255),b
 37537  018AD2  0E00               	movlw	0
 37538  018AD4  6F1E               	movwf	i1___fldiv@b& (0+255),b
 37539  018AD6  0E00               	movlw	0
 37540  018AD8  6F1F               	movwf	(i1___fldiv@b+1)& (0+255),b
 37541  018ADA  0E00               	movlw	0
 37542  018ADC  6F20               	movwf	(i1___fldiv@b+2)& (0+255),b
 37543  018ADE  0E00               	movlw	0
 37544  018AE0  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37545  018AE2  0E00               	movlw	0
 37546  018AE4  6F2E               	movwf	i1___fldiv@sign& (0+255),b
 37547  018AE6                     i1l13678:
 37548                           
 37549                           ; BSR set to: 1
 37550  018AE6  C12F  F135         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 37551                           
 37552                           ; BSR set to: 1
 37553  018AEA  A135               	btfss	i1___fldiv@bexp& (0+255),0,b
 37554  018AEC  D002               	goto	i1l13684
 37555                           
 37556                           ; BSR set to: 1
 37557  018AEE  8F20               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 37558  018AF0  D001               	goto	i1l13686
 37559  018AF2                     i1l13684:
 37560                           
 37561                           ; BSR set to: 1
 37562  018AF2  9F20               	bcf	(i1___fldiv@b+2)& (0+255),7,b
 37563  018AF4                     i1l13686:
 37564                           
 37565                           ; BSR set to: 1
 37566  018AF4  90D8               	bcf	status,0,c
 37567  018AF6  3135               	rrcf	i1___fldiv@bexp& (0+255),w,b
 37568  018AF8  6F21               	movwf	(i1___fldiv@b+3)& (0+255),b
 37569  018AFA  D70E               	goto	i1l13600
 37570  018AFC                     __end_ofi1___fldiv:
 37571                           	opt callstack 0
 37572                           
 37573 ;; *************** function i1___fladd *****************
 37574 ;; Defined at:
 37575 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 37576 ;; Parameters:    Size  Location     Type
 37577 ;;  b               4   14[BANK1 ] unsigned char 
 37578 ;;  a               4   18[BANK1 ] unsigned char 
 37579 ;; Auto vars:     Size  Location     Type
 37580 ;;  __fladd         1   29[BANK1 ] unsigned char 
 37581 ;;  __fladd         1   28[BANK1 ] unsigned char 
 37582 ;;  __fladd         1   27[BANK1 ] unsigned char 
 37583 ;;  __fladd         1   26[BANK1 ] unsigned char 
 37584 ;; Return value:  Size  Location     Type
 37585 ;;                  4   14[BANK1 ] unsigned char 
 37586 ;; Registers used:
 37587 ;;		wreg, status,2, status,0
 37588 ;; Tracked objects:
 37589 ;;		On entry : 0/0
 37590 ;;		On exit  : 0/0
 37591 ;;		Unchanged: 0/0
 37592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37593 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37594 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37595 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37596 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37597 ;;Total ram usage:       16 bytes
 37598 ;; Hardware stack levels used:    1
 37599 ;; Hardware stack levels required when called:    6
 37600 ;; This function calls:
 37601 ;;		Nothing
 37602 ;; This function is called by:
 37603 ;;		_freqMeasConvert
 37604 ;; This function uses a non-reentrant model
 37605 ;;
 37606                           
 37607                           	psect	text147
 37608  017788                     __ptext147:
 37609                           	opt callstack 0
 37610  017788                     i1___fladd:
 37611                           	opt callstack 12
 37612                           
 37613                           ; BSR set to: 1
 37614                           ;incstack = 0
 37615  017788  0101               	movlb	1	; () banked
 37616  01778A  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37617  01778C  0B80               	andlw	128
 37618  01778E  6F1A               	movwf	i1___fladd@signs& (0+255),b
 37619  017790  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37620  017792  2511               	addwf	(i1___fladd@b+3)& (0+255),w,b
 37621  017794  6F1C               	movwf	i1___fladd@bexp& (0+255),b
 37622                           
 37623                           ; BSR set to: 1
 37624  017796  BF10               	btfsc	(i1___fladd@b+2)& (0+255),7,b
 37625                           
 37626                           ; BSR set to: 1
 37627  017798  811C               	bsf	i1___fladd@bexp& (0+255),0,b
 37628                           
 37629                           ; BSR set to: 1
 37630  01779A  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37631  01779C  B4D8               	btfsc	status,2,c
 37632  01779E  D00D               	goto	i1l13364
 37633                           
 37634                           ; BSR set to: 1
 37635  0177A0  291C               	incf	i1___fladd@bexp& (0+255),w,b
 37636  0177A2  A4D8               	btfss	status,2,c
 37637  0177A4  D008               	goto	i1l13360
 37638                           
 37639                           ; BSR set to: 1
 37640  0177A6  0E00               	movlw	0
 37641  0177A8  6F0E               	movwf	i1___fladd@b& (0+255),b
 37642  0177AA  0E00               	movlw	0
 37643  0177AC  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37644  0177AE  0E00               	movlw	0
 37645  0177B0  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37646  0177B2  0E00               	movlw	0
 37647  0177B4  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37648  0177B6                     i1l13360:
 37649                           
 37650                           ; BSR set to: 1
 37651  0177B6  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 37652  0177B8  D006               	goto	L31
 37653  0177BA                     i1l13364:
 37654                           
 37655                           ; BSR set to: 1
 37656  0177BA  0E00               	movlw	0
 37657  0177BC  6F0E               	movwf	i1___fladd@b& (0+255),b
 37658  0177BE  0E00               	movlw	0
 37659  0177C0  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37660  0177C2  0E00               	movlw	0
 37661  0177C4  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37662  0177C6                     L31:
 37663  0177C6  0E00               	movlw	0
 37664  0177C8  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37665                           
 37666                           ; BSR set to: 1
 37667  0177CA  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37668  0177CC  0B80               	andlw	128
 37669  0177CE  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37670                           
 37671                           ; BSR set to: 1
 37672  0177D0  511A               	movf	i1___fladd@signs& (0+255),w,b
 37673  0177D2  191B               	xorwf	i1___fladd@aexp& (0+255),w,b
 37674  0177D4  A4D8               	btfss	status,2,c
 37675                           
 37676                           ; BSR set to: 1
 37677  0177D6  8D1A               	bsf	i1___fladd@signs& (0+255),6,b
 37678                           
 37679                           ; BSR set to: 1
 37680  0177D8  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37681  0177DA  2515               	addwf	(i1___fladd@a+3)& (0+255),w,b
 37682  0177DC  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 37683                           
 37684                           ; BSR set to: 1
 37685  0177DE  BF14               	btfsc	(i1___fladd@a+2)& (0+255),7,b
 37686                           
 37687                           ; BSR set to: 1
 37688  0177E0  811B               	bsf	i1___fladd@aexp& (0+255),0,b
 37689                           
 37690                           ; BSR set to: 1
 37691  0177E2  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37692  0177E4  B4D8               	btfsc	status,2,c
 37693  0177E6  D00D               	goto	i1l13388
 37694                           
 37695                           ; BSR set to: 1
 37696  0177E8  291B               	incf	i1___fladd@aexp& (0+255),w,b
 37697  0177EA  A4D8               	btfss	status,2,c
 37698  0177EC  D008               	goto	i1l13384
 37699                           
 37700                           ; BSR set to: 1
 37701  0177EE  0E00               	movlw	0
 37702  0177F0  6F12               	movwf	i1___fladd@a& (0+255),b
 37703  0177F2  0E00               	movlw	0
 37704  0177F4  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37705  0177F6  0E00               	movlw	0
 37706  0177F8  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37707  0177FA  0E00               	movlw	0
 37708  0177FC  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37709  0177FE                     i1l13384:
 37710                           
 37711                           ; BSR set to: 1
 37712  0177FE  8F14               	bsf	(i1___fladd@a+2)& (0+255),7,b
 37713  017800  D006               	goto	L32
 37714  017802                     i1l13388:
 37715                           
 37716                           ; BSR set to: 1
 37717  017802  0E00               	movlw	0
 37718  017804  6F12               	movwf	i1___fladd@a& (0+255),b
 37719  017806  0E00               	movlw	0
 37720  017808  6F13               	movwf	(i1___fladd@a+1)& (0+255),b
 37721  01780A  0E00               	movlw	0
 37722  01780C  6F14               	movwf	(i1___fladd@a+2)& (0+255),b
 37723  01780E                     L32:
 37724  01780E  0E00               	movlw	0
 37725  017810  6F15               	movwf	(i1___fladd@a+3)& (0+255),b
 37726                           
 37727                           ; BSR set to: 1
 37728  017812  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37729  017814  5D1B               	subwf	i1___fladd@aexp& (0+255),w,b
 37730  017816  B0D8               	btfsc	status,0,c
 37731  017818  D022               	goto	i1l13426
 37732                           
 37733                           ; BSR set to: 1
 37734  01781A  AD1A               	btfss	i1___fladd@signs& (0+255),6,b
 37735  01781C  D002               	goto	i1l13396
 37736                           
 37737                           ; BSR set to: 1
 37738  01781E  0E80               	movlw	128
 37739  017820  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37740  017822                     i1l13396:
 37741                           
 37742                           ; BSR set to: 1
 37743  017822  C11C  F11D         	movff	i1___fladd@bexp,i1___fladd@grs
 37744                           
 37745                           ; BSR set to: 1
 37746  017826  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37747                           
 37748                           ; BSR set to: 1
 37749  01782A  C11D  F11B         	movff	i1___fladd@grs,i1___fladd@aexp
 37750                           
 37751                           ; BSR set to: 1
 37752  01782E  C10E  F11D         	movff	i1___fladd@b,i1___fladd@grs
 37753                           
 37754                           ; BSR set to: 1
 37755  017832  C112  F10E         	movff	i1___fladd@a,i1___fladd@b
 37756                           
 37757                           ; BSR set to: 1
 37758  017836  C11D  F112         	movff	i1___fladd@grs,i1___fladd@a
 37759                           
 37760                           ; BSR set to: 1
 37761  01783A  C10F  F11D         	movff	i1___fladd@b+1,i1___fladd@grs
 37762                           
 37763                           ; BSR set to: 1
 37764  01783E  C113  F10F         	movff	i1___fladd@a+1,i1___fladd@b+1
 37765                           
 37766                           ; BSR set to: 1
 37767  017842  C11D  F113         	movff	i1___fladd@grs,i1___fladd@a+1
 37768                           
 37769                           ; BSR set to: 1
 37770  017846  C110  F11D         	movff	i1___fladd@b+2,i1___fladd@grs
 37771                           
 37772                           ; BSR set to: 1
 37773  01784A  C114  F110         	movff	i1___fladd@a+2,i1___fladd@b+2
 37774                           
 37775                           ; BSR set to: 1
 37776  01784E  C11D  F114         	movff	i1___fladd@grs,i1___fladd@a+2
 37777                           
 37778                           ; BSR set to: 1
 37779  017852  C111  F11D         	movff	i1___fladd@b+3,i1___fladd@grs
 37780                           
 37781                           ; BSR set to: 1
 37782  017856  C115  F111         	movff	i1___fladd@a+3,i1___fladd@b+3
 37783                           
 37784                           ; BSR set to: 1
 37785  01785A  C11D  F115         	movff	i1___fladd@grs,i1___fladd@a+3
 37786  01785E                     i1l13426:
 37787                           
 37788                           ; BSR set to: 1
 37789  01785E  0E00               	movlw	0
 37790  017860  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37791                           
 37792                           ; BSR set to: 1
 37793  017862  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37794  017864  C11B  F116         	movff	i1___fladd@aexp,??i1___fladd
 37795  017868  6B17               	clrf	(??i1___fladd+1)& (0+255),b
 37796  01786A  5F16               	subwf	??i1___fladd& (0+255),f,b
 37797  01786C  0E00               	movlw	0
 37798  01786E  5B17               	subwfb	(??i1___fladd+1)& (0+255),f,b
 37799  017870  BF17               	btfsc	(??i1___fladd+1)& (0+255),7,b
 37800  017872  D02C               	goto	i1l3238
 37801  017874  5117               	movf	(??i1___fladd+1)& (0+255),w,b
 37802  017876  E104               	bnz	i1u1519_20
 37803  017878  0E1A               	movlw	26
 37804  01787A  5D16               	subwf	??i1___fladd& (0+255),w,b
 37805  01787C  A0D8               	btfss	status,0,c
 37806  01787E  D026               	goto	i1l3238
 37807  017880                     i1u1519_20:
 37808                           
 37809                           ; BSR set to: 1
 37810  017880  510E               	movf	i1___fladd@b& (0+255),w,b
 37811  017882  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 37812  017884  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 37813  017886  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 37814  017888  B4D8               	btfsc	status,2,c
 37815  01788A  D002               	goto	i1u1520_20
 37816  01788C  0E01               	movlw	1
 37817  01788E  D001               	goto	i1u1521_20
 37818  017890                     i1u1520_20:
 37819  017890  0E00               	movlw	0
 37820  017892                     i1u1521_20:
 37821  017892  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37822                           
 37823                           ; BSR set to: 1
 37824  017894  0E00               	movlw	0
 37825  017896  6F0E               	movwf	i1___fladd@b& (0+255),b
 37826  017898  0E00               	movlw	0
 37827  01789A  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37828  01789C  0E00               	movlw	0
 37829  01789E  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37830  0178A0  0E00               	movlw	0
 37831  0178A2  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37832                           
 37833                           ; BSR set to: 1
 37834  0178A4  C11B  F11C         	movff	i1___fladd@aexp,i1___fladd@bexp
 37835  0178A8  D015               	goto	i1u1524_20
 37836  0178AA                     i1l3239:
 37837                           
 37838                           ; BSR set to: 1
 37839  0178AA  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37840  0178AC  D005               	goto	i1l13438
 37841                           
 37842                           ; BSR set to: 1
 37843  0178AE  90D8               	bcf	status,0,c
 37844  0178B0  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37845  0178B2  0901               	iorlw	1
 37846  0178B4  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37847  0178B6  D002               	goto	i1l13440
 37848  0178B8                     i1l13438:
 37849                           
 37850                           ; BSR set to: 1
 37851  0178B8  90D8               	bcf	status,0,c
 37852  0178BA  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37853  0178BC                     i1l13440:
 37854                           
 37855                           ; BSR set to: 1
 37856  0178BC  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37857                           
 37858                           ; BSR set to: 1
 37859  0178BE  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37860                           
 37861                           ; BSR set to: 1
 37862  0178C0  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37863  0178C2  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37864  0178C4  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37865  0178C6  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37866  0178C8  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37867                           
 37868                           ; BSR set to: 1
 37869  0178CA  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37870  0178CC                     i1l3238:
 37871                           
 37872                           ; BSR set to: 1
 37873  0178CC  511B               	movf	i1___fladd@aexp& (0+255),w,b
 37874  0178CE  5D1C               	subwf	i1___fladd@bexp& (0+255),w,b
 37875  0178D0  A0D8               	btfss	status,0,c
 37876  0178D2  D7EB               	goto	i1l3239
 37877  0178D4                     i1u1524_20:
 37878                           
 37879                           ; BSR set to: 1
 37880  0178D4  BD1A               	btfsc	i1___fladd@signs& (0+255),6,b
 37881  0178D6  D028               	goto	i1l13472
 37882                           
 37883                           ; BSR set to: 1
 37884  0178D8  511C               	movf	i1___fladd@bexp& (0+255),w,b
 37885  0178DA  A4D8               	btfss	status,2,c
 37886  0178DC  D009               	goto	i1l13454
 37887                           
 37888                           ; BSR set to: 1
 37889  0178DE  0E00               	movlw	0
 37890  0178E0  6F0E               	movwf	?i1___fladd& (0+255),b
 37891  0178E2  0E00               	movlw	0
 37892  0178E4  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 37893  0178E6  0E00               	movlw	0
 37894  0178E8  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 37895  0178EA  0E00               	movlw	0
 37896  0178EC  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 37897  0178EE  0012               	return	
 37898  0178F0                     i1l13454:
 37899                           
 37900                           ; BSR set to: 1
 37901  0178F0  5112               	movf	i1___fladd@a& (0+255),w,b
 37902  0178F2  270E               	addwf	i1___fladd@b& (0+255),f,b
 37903  0178F4  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37904  0178F6  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 37905  0178F8  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37906  0178FA  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 37907  0178FC  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37908  0178FE  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 37909                           
 37910                           ; BSR set to: 1
 37911  017900  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 37912  017902  D071               	goto	i1u1537_20
 37913                           
 37914                           ; BSR set to: 1
 37915  017904  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 37916  017906  D005               	goto	i1l13462
 37917                           
 37918                           ; BSR set to: 1
 37919  017908  90D8               	bcf	status,0,c
 37920  01790A  311D               	rrcf	i1___fladd@grs& (0+255),w,b
 37921  01790C  0901               	iorlw	1
 37922  01790E  6F1D               	movwf	i1___fladd@grs& (0+255),b
 37923  017910  D002               	goto	i1l13464
 37924  017912                     i1l13462:
 37925                           
 37926                           ; BSR set to: 1
 37927  017912  90D8               	bcf	status,0,c
 37928  017914  331D               	rrcf	i1___fladd@grs& (0+255),f,b
 37929  017916                     i1l13464:
 37930                           
 37931                           ; BSR set to: 1
 37932  017916  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 37933                           
 37934                           ; BSR set to: 1
 37935  017918  8F1D               	bsf	i1___fladd@grs& (0+255),7,b
 37936                           
 37937                           ; BSR set to: 1
 37938  01791A  3511               	rlcf	(i1___fladd@b+3)& (0+255),w,b
 37939  01791C  3311               	rrcf	(i1___fladd@b+3)& (0+255),f,b
 37940  01791E  3310               	rrcf	(i1___fladd@b+2)& (0+255),f,b
 37941  017920  330F               	rrcf	(i1___fladd@b+1)& (0+255),f,b
 37942  017922  330E               	rrcf	i1___fladd@b& (0+255),f,b
 37943                           
 37944                           ; BSR set to: 1
 37945  017924  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 37946  017926  D05F               	goto	i1u1537_20
 37947  017928                     i1l13472:
 37948                           
 37949                           ; BSR set to: 1
 37950  017928  5112               	movf	i1___fladd@a& (0+255),w,b
 37951  01792A  5D0E               	subwf	i1___fladd@b& (0+255),w,b
 37952  01792C  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 37953  01792E  590F               	subwfb	(i1___fladd@b+1)& (0+255),w,b
 37954  017930  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 37955  017932  5910               	subwfb	(i1___fladd@b+2)& (0+255),w,b
 37956  017934  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37957  017936  0A80               	xorlw	128
 37958  017938  6F16               	movwf	??i1___fladd& (0+255),b
 37959  01793A  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 37960  01793C  0A80               	xorlw	128
 37961  01793E  5916               	subwfb	??i1___fladd& (0+255),w,b
 37962  017940  B0D8               	btfsc	status,0,c
 37963  017942  D025               	goto	i1l13482
 37964                           
 37965                           ; BSR set to: 1
 37966  017944  510E               	movf	i1___fladd@b& (0+255),w,b
 37967  017946  5D12               	subwf	i1___fladd@a& (0+255),w,b
 37968  017948  6F16               	movwf	??i1___fladd& (0+255),b
 37969  01794A  510F               	movf	(i1___fladd@b+1)& (0+255),w,b
 37970  01794C  5913               	subwfb	(i1___fladd@a+1)& (0+255),w,b
 37971  01794E  6F17               	movwf	(??i1___fladd+1)& (0+255),b
 37972  017950  5110               	movf	(i1___fladd@b+2)& (0+255),w,b
 37973  017952  5914               	subwfb	(i1___fladd@a+2)& (0+255),w,b
 37974  017954  6F18               	movwf	(??i1___fladd+2)& (0+255),b
 37975  017956  5111               	movf	(i1___fladd@b+3)& (0+255),w,b
 37976  017958  5915               	subwfb	(i1___fladd@a+3)& (0+255),w,b
 37977  01795A  6F19               	movwf	(??i1___fladd+3)& (0+255),b
 37978  01795C  0EFF               	movlw	255
 37979  01795E  2516               	addwf	??i1___fladd& (0+255),w,b
 37980  017960  6F0E               	movwf	i1___fladd@b& (0+255),b
 37981  017962  0EFF               	movlw	255
 37982  017964  2117               	addwfc	(??i1___fladd+1)& (0+255),w,b
 37983  017966  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 37984  017968  0EFF               	movlw	255
 37985  01796A  2118               	addwfc	(??i1___fladd+2)& (0+255),w,b
 37986  01796C  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 37987  01796E  0EFF               	movlw	255
 37988  017970  2119               	addwfc	(??i1___fladd+3)& (0+255),w,b
 37989  017972  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 37990  017974  0E80               	movlw	128
 37991  017976  1B1A               	xorwf	i1___fladd@signs& (0+255),f,b
 37992                           
 37993                           ; BSR set to: 1
 37994  017978  6D1D               	negf	i1___fladd@grs& (0+255),b
 37995                           
 37996                           ; BSR set to: 1
 37997  01797A  511D               	movf	i1___fladd@grs& (0+255),w,b
 37998  01797C  A4D8               	btfss	status,2,c
 37999  01797E  D00F               	goto	i1l3254
 38000                           
 38001                           ; BSR set to: 1
 38002  017980  0E01               	movlw	1
 38003  017982  270E               	addwf	i1___fladd@b& (0+255),f,b
 38004  017984  0E00               	movlw	0
 38005  017986  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 38006  017988  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 38007  01798A  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 38008  01798C  D008               	goto	i1l3254
 38009  01798E                     i1l13482:
 38010                           
 38011                           ; BSR set to: 1
 38012  01798E  5112               	movf	i1___fladd@a& (0+255),w,b
 38013  017990  5F0E               	subwf	i1___fladd@b& (0+255),f,b
 38014  017992  5113               	movf	(i1___fladd@a+1)& (0+255),w,b
 38015  017994  5B0F               	subwfb	(i1___fladd@b+1)& (0+255),f,b
 38016  017996  5114               	movf	(i1___fladd@a+2)& (0+255),w,b
 38017  017998  5B10               	subwfb	(i1___fladd@b+2)& (0+255),f,b
 38018  01799A  5115               	movf	(i1___fladd@a+3)& (0+255),w,b
 38019  01799C  5B11               	subwfb	(i1___fladd@b+3)& (0+255),f,b
 38020  01799E                     i1l3254:
 38021                           
 38022                           ; BSR set to: 1
 38023  01799E  510E               	movf	i1___fladd@b& (0+255),w,b
 38024  0179A0  110F               	iorwf	(i1___fladd@b+1)& (0+255),w,b
 38025  0179A2  1110               	iorwf	(i1___fladd@b+2)& (0+255),w,b
 38026  0179A4  1111               	iorwf	(i1___fladd@b+3)& (0+255),w,b
 38027  0179A6  A4D8               	btfss	status,2,c
 38028  0179A8  D01C               	goto	i1l13506
 38029                           
 38030                           ; BSR set to: 1
 38031  0179AA  511D               	movf	i1___fladd@grs& (0+255),w,b
 38032  0179AC  A4D8               	btfss	status,2,c
 38033  0179AE  D019               	goto	i1l13506
 38034                           
 38035                           ; BSR set to: 1
 38036  0179B0  0E00               	movlw	0
 38037  0179B2  6F0E               	movwf	?i1___fladd& (0+255),b
 38038  0179B4  0E00               	movlw	0
 38039  0179B6  6F0F               	movwf	(?i1___fladd+1)& (0+255),b
 38040  0179B8  0E00               	movlw	0
 38041  0179BA  6F10               	movwf	(?i1___fladd+2)& (0+255),b
 38042  0179BC  0E00               	movlw	0
 38043  0179BE  6F11               	movwf	(?i1___fladd+3)& (0+255),b
 38044  0179C0  0012               	return	
 38045  0179C2                     i1l13490:
 38046                           
 38047                           ; BSR set to: 1
 38048  0179C2  90D8               	bcf	status,0,c
 38049  0179C4  370E               	rlcf	i1___fladd@b& (0+255),f,b
 38050  0179C6  370F               	rlcf	(i1___fladd@b+1)& (0+255),f,b
 38051  0179C8  3710               	rlcf	(i1___fladd@b+2)& (0+255),f,b
 38052  0179CA  3711               	rlcf	(i1___fladd@b+3)& (0+255),f,b
 38053                           
 38054                           ; BSR set to: 1
 38055  0179CC  BF1D               	btfsc	i1___fladd@grs& (0+255),7,b
 38056                           
 38057                           ; BSR set to: 1
 38058  0179CE  810E               	bsf	i1___fladd@b& (0+255),0,b
 38059                           
 38060                           ; BSR set to: 1
 38061  0179D0  A11D               	btfss	i1___fladd@grs& (0+255),0,b
 38062  0179D2  D002               	goto	i1l13500
 38063                           
 38064                           ; BSR set to: 1
 38065  0179D4  80D8               	bsf	status,0,c
 38066  0179D6  D001               	goto	L33
 38067  0179D8                     i1l13500:
 38068                           
 38069                           ; BSR set to: 1
 38070  0179D8  90D8               	bcf	status,0,c
 38071  0179DA                     L33:
 38072  0179DA  371D               	rlcf	i1___fladd@grs& (0+255),f,b
 38073                           
 38074                           ; BSR set to: 1
 38075  0179DC  511C               	movf	i1___fladd@bexp& (0+255),w,b
 38076  0179DE  A4D8               	btfss	status,2,c
 38077                           
 38078                           ; BSR set to: 1
 38079  0179E0  071C               	decf	i1___fladd@bexp& (0+255),f,b
 38080  0179E2                     i1l13506:
 38081                           
 38082                           ; BSR set to: 1
 38083  0179E2  AF10               	btfss	(i1___fladd@b+2)& (0+255),7,b
 38084  0179E4  D7EE               	goto	i1l13490
 38085  0179E6                     i1u1537_20:
 38086                           
 38087                           ; BSR set to: 1
 38088  0179E6  0E00               	movlw	0
 38089  0179E8  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 38090                           
 38091                           ; BSR set to: 1
 38092  0179EA  AF1D               	btfss	i1___fladd@grs& (0+255),7,b
 38093  0179EC  D00B               	goto	i1l3263
 38094                           
 38095                           ; BSR set to: 1
 38096  0179EE  C11D  F116         	movff	i1___fladd@grs,??i1___fladd
 38097  0179F2  0E7F               	movlw	127
 38098  0179F4  1716               	andwf	??i1___fladd& (0+255),f,b
 38099  0179F6  B4D8               	btfsc	status,2,c
 38100  0179F8  D003               	goto	i1l3264
 38101  0179FA                     i1u1539_20:
 38102                           
 38103                           ; BSR set to: 1
 38104  0179FA  0E01               	movlw	1
 38105  0179FC  6F1B               	movwf	i1___fladd@aexp& (0+255),b
 38106  0179FE  D002               	goto	i1l3263
 38107  017A00                     i1l3264:
 38108                           
 38109                           ; BSR set to: 1
 38110  017A00  B10E               	btfsc	i1___fladd@b& (0+255),0,b
 38111  017A02  D7FB               	goto	i1u1539_20
 38112  017A04                     i1l3263:
 38113                           
 38114                           ; BSR set to: 1
 38115  017A04  511B               	movf	i1___fladd@aexp& (0+255),w,b
 38116  017A06  B4D8               	btfsc	status,2,c
 38117  017A08  D020               	goto	i1l13526
 38118                           
 38119                           ; BSR set to: 1
 38120  017A0A  0E01               	movlw	1
 38121  017A0C  270E               	addwf	i1___fladd@b& (0+255),f,b
 38122  017A0E  0E00               	movlw	0
 38123  017A10  230F               	addwfc	(i1___fladd@b+1)& (0+255),f,b
 38124  017A12  2310               	addwfc	(i1___fladd@b+2)& (0+255),f,b
 38125  017A14  2311               	addwfc	(i1___fladd@b+3)& (0+255),f,b
 38126                           
 38127                           ; BSR set to: 1
 38128  017A16  A111               	btfss	(i1___fladd@b+3)& (0+255),0,b
 38129  017A18  D018               	goto	i1l13526
 38130                           
 38131                           ; BSR set to: 1
 38132  017A1A  C10E  F116         	movff	i1___fladd@b,??i1___fladd
 38133  017A1E  C10F  F117         	movff	i1___fladd@b+1,??i1___fladd+1
 38134  017A22  C110  F118         	movff	i1___fladd@b+2,??i1___fladd+2
 38135  017A26  C111  F119         	movff	i1___fladd@b+3,??i1___fladd+3
 38136  017A2A  3519               	rlcf	(??i1___fladd+3)& (0+255),w,b
 38137  017A2C  3319               	rrcf	(??i1___fladd+3)& (0+255),f,b
 38138  017A2E  3318               	rrcf	(??i1___fladd+2)& (0+255),f,b
 38139  017A30  3317               	rrcf	(??i1___fladd+1)& (0+255),f,b
 38140  017A32  3316               	rrcf	??i1___fladd& (0+255),f,b
 38141  017A34  C116  F10E         	movff	??i1___fladd,i1___fladd@b
 38142  017A38  C117  F10F         	movff	??i1___fladd+1,i1___fladd@b+1
 38143  017A3C  C118  F110         	movff	??i1___fladd+2,i1___fladd@b+2
 38144  017A40  C119  F111         	movff	??i1___fladd+3,i1___fladd@b+3
 38145  017A44  291C               	incf	i1___fladd@bexp& (0+255),w,b
 38146  017A46  A4D8               	btfss	status,2,c
 38147                           
 38148                           ; BSR set to: 1
 38149  017A48  2B1C               	incf	i1___fladd@bexp& (0+255),f,b
 38150  017A4A                     i1l13526:
 38151                           
 38152                           ; BSR set to: 1
 38153  017A4A  291C               	incf	i1___fladd@bexp& (0+255),w,b
 38154  017A4C  B4D8               	btfsc	status,2,c
 38155  017A4E  D003               	goto	i1u1545_20
 38156                           
 38157                           ; BSR set to: 1
 38158  017A50  511C               	movf	i1___fladd@bexp& (0+255),w,b
 38159  017A52  A4D8               	btfss	status,2,c
 38160  017A54  D00D               	goto	i1l13534
 38161  017A56                     i1u1545_20:
 38162                           
 38163                           ; BSR set to: 1
 38164  017A56  0E00               	movlw	0
 38165  017A58  6F0E               	movwf	i1___fladd@b& (0+255),b
 38166  017A5A  0E00               	movlw	0
 38167  017A5C  6F0F               	movwf	(i1___fladd@b+1)& (0+255),b
 38168  017A5E  0E00               	movlw	0
 38169  017A60  6F10               	movwf	(i1___fladd@b+2)& (0+255),b
 38170  017A62  0E00               	movlw	0
 38171  017A64  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 38172  017A66  511C               	movf	i1___fladd@bexp& (0+255),w,b
 38173  017A68  A4D8               	btfss	status,2,c
 38174  017A6A  D002               	goto	i1l13534
 38175                           
 38176                           ; BSR set to: 1
 38177  017A6C  0E00               	movlw	0
 38178  017A6E  6F1A               	movwf	i1___fladd@signs& (0+255),b
 38179  017A70                     i1l13534:
 38180                           
 38181                           ; BSR set to: 1
 38182  017A70  A11C               	btfss	i1___fladd@bexp& (0+255),0,b
 38183  017A72  D002               	goto	i1l13538
 38184                           
 38185                           ; BSR set to: 1
 38186  017A74  8F10               	bsf	(i1___fladd@b+2)& (0+255),7,b
 38187  017A76  D001               	goto	i1l13540
 38188  017A78                     i1l13538:
 38189                           
 38190                           ; BSR set to: 1
 38191  017A78  9F10               	bcf	(i1___fladd@b+2)& (0+255),7,b
 38192  017A7A                     i1l13540:
 38193                           
 38194                           ; BSR set to: 1
 38195  017A7A  90D8               	bcf	status,0,c
 38196  017A7C  311C               	rrcf	i1___fladd@bexp& (0+255),w,b
 38197  017A7E  6F11               	movwf	(i1___fladd@b+3)& (0+255),b
 38198                           
 38199                           ; BSR set to: 1
 38200  017A80  BF1A               	btfsc	i1___fladd@signs& (0+255),7,b
 38201                           
 38202                           ; BSR set to: 1
 38203  017A82  8F11               	bsf	(i1___fladd@b+3)& (0+255),7,b
 38204                           
 38205                           ; BSR set to: 1
 38206  017A84  C10E  F10E         	movff	i1___fladd@b,?i1___fladd
 38207  017A88  C10F  F10F         	movff	i1___fladd@b+1,?i1___fladd+1
 38208  017A8C  C110  F110         	movff	i1___fladd@b+2,?i1___fladd+2
 38209  017A90  C111  F111         	movff	i1___fladd@b+3,?i1___fladd+3
 38210                           
 38211                           ; BSR set to: 1
 38212  017A94  0012               	return		;funcret
 38213  017A96                     __end_ofi1___fladd:
 38214                           	opt callstack 0
 38215                           
 38216 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 38217 ;; Defined at:
 38218 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 38219 ;; Parameters:    Size  Location     Type
 38220 ;;		None
 38221 ;; Auto vars:     Size  Location     Type
 38222 ;;		None
 38223 ;; Return value:  Size  Location     Type
 38224 ;;                  1    wreg      void 
 38225 ;; Registers used:
 38226 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38227 ;; Tracked objects:
 38228 ;;		On entry : 0/0
 38229 ;;		On exit  : 0/0
 38230 ;;		Unchanged: 0/0
 38231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38234 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38235 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38236 ;;Total ram usage:       12 bytes
 38237 ;; Hardware stack levels used:    1
 38238 ;; Hardware stack levels required when called:    5
 38239 ;; This function calls:
 38240 ;;		Absolute function
 38241 ;;		_ADCC_ThresholdISR
 38242 ;;		_EUSART2_Receive_ISR
 38243 ;;		_EUSART2_Transmit_ISR
 38244 ;;		_INT1_ISR
 38245 ;;		_INT2_ISR
 38246 ;;		_PIN_MANAGER_IOC
 38247 ;;		_TMR0_ISR
 38248 ;;		_TMR1_ISR
 38249 ;; This function is called by:
 38250 ;;		Interrupt level 2
 38251 ;; This function uses a non-reentrant model
 38252 ;;
 38253                           
 38254                           	psect	intcode
 38255  000008                     __pintcode:
 38256                           	opt callstack 0
 38257  000008                     _INTERRUPT_InterruptManagerHigh:
 38258                           	opt callstack 12
 38259                           
 38260                           ; BSR set to: 1
 38261                           ;incstack = 0
 38262  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38263  00000A  EFD9  F0D3         	goto	int_func
 38264                           
 38265                           	psect	intcode_body
 38266  01A7B2                     __pintcode_body:
 38267                           	opt callstack 12
 38268  01A7B2                     int_func:
 38269                           	opt callstack 12
 38270  01A7B2  CFFA F0AD          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 38271  01A7B6  CFFB F0AE          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 38272  01A7BA  CFE9 F0AF          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 38273  01A7BE  CFEA F0B0          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 38274  01A7C2  CFD9 F0B1          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+4
 38275  01A7C6  CFDA F0B2          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+5
 38276  01A7CA  CFF3 F0B3          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+6
 38277  01A7CE  CFF4 F0B4          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+7
 38278  01A7D2  CFF6 F0B5          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+8
 38279  01A7D6  CFF7 F0B6          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+9
 38280  01A7DA  CFF8 F0B7          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+10
 38281  01A7DE  CFF5 F0B8          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+11
 38282                           
 38283                           ;interrupt_manager.c: 104: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 38284  01A7E2  010E               	movlb	14	; () banked
 38285  01A7E4  B1C6               	btfsc	198,0,b	;volatile
 38286                           
 38287                           ; BSR set to: 14
 38288  01A7E6  A1CE               	btfss	206,0,b	;volatile
 38289  01A7E8  D003               	goto	i2l224
 38290                           
 38291                           ; BSR set to: 14
 38292                           ;interrupt_manager.c: 105: {;interrupt_manager.c: 106: TMR1_ISR();
 38293  01A7EA  ECBB  F0E1         	call	_TMR1_ISR	;wreg free
 38294                           
 38295                           ;interrupt_manager.c: 107: }
 38296  01A7EE  D03B               	goto	i2l235
 38297  01A7F0                     i2l224:
 38298                           
 38299                           ; BSR set to: 14
 38300                           ;interrupt_manager.c: 108: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
 38301  01A7F0  B5C2               	btfsc	194,2,b	;volatile
 38302                           
 38303                           ; BSR set to: 14
 38304  01A7F2  A5CA               	btfss	202,2,b	;volatile
 38305  01A7F4  D003               	goto	i2l226
 38306                           
 38307                           ; BSR set to: 14
 38308                           ;interrupt_manager.c: 109: {;interrupt_manager.c: 110: INT2_ISR();
 38309  01A7F6  ECE7  F0E5         	call	_INT2_ISR	;wreg free
 38310                           
 38311                           ;interrupt_manager.c: 111: }
 38312  01A7FA  D035               	goto	i2l235
 38313  01A7FC                     i2l226:
 38314                           
 38315                           ; BSR set to: 14
 38316                           ;interrupt_manager.c: 112: else if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 38317  01A7FC  BBC2               	btfsc	194,5,b	;volatile
 38318                           
 38319                           ; BSR set to: 14
 38320  01A7FE  ABCA               	btfss	202,5,b	;volatile
 38321  01A800  D003               	goto	i2l228
 38322                           
 38323                           ; BSR set to: 14
 38324                           ;interrupt_manager.c: 113: {;interrupt_manager.c: 114: TMR0_ISR();
 38325  01A802  EC25  F0E3         	call	_TMR0_ISR	;wreg free
 38326                           
 38327                           ;interrupt_manager.c: 115: }
 38328  01A806  D02F               	goto	i2l235
 38329  01A808                     i2l228:
 38330                           
 38331                           ; BSR set to: 14
 38332                           ;interrupt_manager.c: 116: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38333  01A808  BFC5               	btfsc	197,7,b	;volatile
 38334                           
 38335                           ; BSR set to: 14
 38336  01A80A  AFCD               	btfss	205,7,b	;volatile
 38337  01A80C  D00B               	goto	i2l230
 38338                           
 38339                           ; BSR set to: 14
 38340                           ;interrupt_manager.c: 117: {;interrupt_manager.c: 118: EUSART2_RxDefaultInterruptHandler
      +                          ();
 38341  01A80E  D801               	call	i2u2889_48
 38342  01A810  D02A               	goto	i2l235
 38343  01A812                     i2u2889_48:
 38344  01A812  0005               	push	
 38345  01A814  6EFA               	movwf	pclath,c
 38346  01A816  0101               	movlb	1	; () banked
 38347  01A818  517D               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38348  01A81A  6EFD               	movwf	tosl,c
 38349  01A81C  517E               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38350  01A81E  6EFE               	movwf	tosh,c
 38351  01A820  517F               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 38352  01A822  D019               	goto	L34
 38353  01A824                     i2l230:
 38354                           
 38355                           ; BSR set to: 14
 38356                           ;interrupt_manager.c: 120: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 38357  01A824  B3C3               	btfsc	195,1,b	;volatile
 38358                           
 38359                           ; BSR set to: 14
 38360  01A826  A3CB               	btfss	203,1,b	;volatile
 38361  01A828  D003               	goto	i2l232
 38362                           
 38363                           ; BSR set to: 14
 38364                           ;interrupt_manager.c: 121: {;interrupt_manager.c: 122: ADCC_ThresholdISR();
 38365  01A82A  EC39  F0E3         	call	_ADCC_ThresholdISR	;wreg free
 38366                           
 38367                           ;interrupt_manager.c: 123: }
 38368  01A82E  D01B               	goto	i2l235
 38369  01A830                     i2l232:
 38370                           
 38371                           ; BSR set to: 14
 38372                           ;interrupt_manager.c: 124: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 38373  01A830  B9C2               	btfsc	194,4,b	;volatile
 38374                           
 38375                           ; BSR set to: 14
 38376  01A832  A9CA               	btfss	202,4,b	;volatile
 38377  01A834  D003               	goto	i2l234
 38378                           
 38379                           ; BSR set to: 14
 38380                           ;interrupt_manager.c: 125: {;interrupt_manager.c: 126: PIN_MANAGER_IOC();
 38381  01A836  ECF4  F0E4         	call	_PIN_MANAGER_IOC	;wreg free
 38382                           
 38383                           ;interrupt_manager.c: 127: }
 38384  01A83A  D015               	goto	i2l235
 38385  01A83C                     i2l234:
 38386                           
 38387                           ; BSR set to: 14
 38388                           ;interrupt_manager.c: 128: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 38389  01A83C  BDC5               	btfsc	197,6,b	;volatile
 38390                           
 38391                           ; BSR set to: 14
 38392  01A83E  ADCD               	btfss	205,6,b	;volatile
 38393  01A840  D00D               	goto	i2l236
 38394                           
 38395                           ; BSR set to: 14
 38396                           ;interrupt_manager.c: 129: {;interrupt_manager.c: 130: EUSART2_TxDefaultInterruptHandler
      +                          ();
 38397  01A842  D801               	call	i2u2896_48
 38398  01A844  D010               	goto	i2l235
 38399  01A846                     i2u2896_48:
 38400  01A846  0005               	push	
 38401  01A848  6EFA               	movwf	pclath,c
 38402  01A84A  0101               	movlb	1	; () banked
 38403  01A84C  5180               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 38404  01A84E  6EFD               	movwf	tosl,c
 38405  01A850  5181               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 38406  01A852  6EFE               	movwf	tosh,c
 38407  01A854  5182               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 38408  01A856                     L34:
 38409  01A856  6EFF               	movwf	tosu,c
 38410  01A858  50FA               	movf	pclath,w,c
 38411  01A85A  0012               	return		;indir
 38412  01A85C                     i2l236:
 38413                           
 38414                           ; BSR set to: 14
 38415                           ;interrupt_manager.c: 132: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
 38416  01A85C  B3C2               	btfsc	194,1,b	;volatile
 38417                           
 38418                           ; BSR set to: 14
 38419  01A85E  A3CA               	btfss	202,1,b	;volatile
 38420  01A860  D002               	goto	i2l235
 38421                           
 38422                           ; BSR set to: 14
 38423                           ;interrupt_manager.c: 133: {;interrupt_manager.c: 134: INT1_ISR();
 38424  01A862  ECEC  F0E5         	call	_INT1_ISR	;wreg free
 38425  01A866                     i2l235:
 38426                           
 38427                           ; BSR set to: 14
 38428  01A866  C0B8  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+11,tablat
 38429  01A86A  C0B7  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptru
 38430  01A86E  C0B6  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+9,tblptrh
 38431  01A872  C0B5  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptrl
 38432  01A876  C0B4  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+7,prodh
 38433  01A87A  C0B3  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+6,prodl
 38434  01A87E  C0B2  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr2h
 38435  01A882  C0B1  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr2l
 38436  01A886  C0B0  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38437  01A88A  C0AF  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38438  01A88E  C0AE  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38439  01A892  C0AD  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38440  01A896  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38441  01A898  0011               	retfie		f
 38442  01A89A                     __end_of_INTERRUPT_InterruptManagerHigh:
 38443                           	opt callstack 0
 38444                           
 38445 ;; *************** function _TMR1_ISR *****************
 38446 ;; Defined at:
 38447 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 38448 ;; Parameters:    Size  Location     Type
 38449 ;;		None
 38450 ;; Auto vars:     Size  Location     Type
 38451 ;;		None
 38452 ;; Return value:  Size  Location     Type
 38453 ;;                  1    wreg      void 
 38454 ;; Registers used:
 38455 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38456 ;; Tracked objects:
 38457 ;;		On entry : 0/0
 38458 ;;		On exit  : 0/0
 38459 ;;		Unchanged: 0/0
 38460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38465 ;;Total ram usage:        0 bytes
 38466 ;; Hardware stack levels used:    1
 38467 ;; Hardware stack levels required when called:    3
 38468 ;; This function calls:
 38469 ;;		Absolute function
 38470 ;;		_QIErrorTimerHandler
 38471 ;;		_TMR1_DefaultInterruptHandler
 38472 ;;		i2_TMR1_WriteTimer
 38473 ;; This function is called by:
 38474 ;;		_INTERRUPT_InterruptManagerHigh
 38475 ;; This function uses a non-reentrant model
 38476 ;;
 38477                           
 38478                           	psect	text149
 38479  01C376                     __ptext149:
 38480                           	opt callstack 0
 38481  01C376                     _TMR1_ISR:
 38482                           	opt callstack 13
 38483                           
 38484                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 38485                           
 38486                           ;incstack = 0
 38487  01C376  010E               	movlb	14	; () banked
 38488  01C378  91CE               	bcf	206,0,b	;volatile
 38489                           
 38490                           ; BSR set to: 14
 38491                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 38492  01C37A  C189  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 38493  01C37E  C18A  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 38494  01C382  EC62  F0E4         	call	i2_TMR1_WriteTimer	;wreg free
 38495                           
 38496                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 38497  01C386  0101               	movlb	1	; () banked
 38498  01C388  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38499  01C38A  116F               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38500  01C38C  1170               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38501  01C38E  B4D8               	btfsc	status,2,c
 38502  01C390  0012               	return	
 38503                           
 38504                           ; BSR set to: 1
 38505                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 38506  01C392  D801               	call	i2u1877_48
 38507  01C394  0012               	return	
 38508  01C396                     i2u1877_48:
 38509  01C396  0005               	push	
 38510  01C398  6EFA               	movwf	pclath,c
 38511  01C39A  516E               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38512  01C39C  6EFD               	movwf	tosl,c
 38513  01C39E  516F               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38514  01C3A0  6EFE               	movwf	tosh,c
 38515  01C3A2  5170               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 38516  01C3A4  6EFF               	movwf	tosu,c
 38517  01C3A6  50FA               	movf	pclath,w,c
 38518  01C3A8  0012               	return		;indir
 38519  01C3AA                     __end_of_TMR1_ISR:
 38520                           	opt callstack 0
 38521                           
 38522 ;; *************** function _QIErrorTimerHandler *****************
 38523 ;; Defined at:
 38524 ;;		line 118 in file "NXQ_charge_state.c"
 38525 ;; Parameters:    Size  Location     Type
 38526 ;;		None
 38527 ;; Auto vars:     Size  Location     Type
 38528 ;;		None
 38529 ;; Return value:  Size  Location     Type
 38530 ;;                  1    wreg      void 
 38531 ;; Registers used:
 38532 ;;		wreg, status,2, cstack
 38533 ;; Tracked objects:
 38534 ;;		On entry : 0/0
 38535 ;;		On exit  : 0/0
 38536 ;;		Unchanged: 0/0
 38537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38542 ;;Total ram usage:        0 bytes
 38543 ;; Hardware stack levels used:    1
 38544 ;; Hardware stack levels required when called:    2
 38545 ;; This function calls:
 38546 ;;		i2_TMR1_Reload
 38547 ;;		i2_TMR1_StopTimer
 38548 ;; This function is called by:
 38549 ;;		_main
 38550 ;;		_TMR1_ISR
 38551 ;; This function uses a non-reentrant model
 38552 ;;
 38553                           
 38554                           	psect	text150
 38555  01C992                     __ptext150:
 38556                           	opt callstack 0
 38557  01C992                     _QIErrorTimerHandler:
 38558                           	opt callstack 13
 38559                           
 38560                           ;NXQ_charge_state.c: 120: if (PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0) {
 38561                           
 38562                           ;incstack = 0
 38563  01C992  B48E               	btfsc	3982,2,c	;volatile
 38564  01C994  B68E               	btfsc	3982,3,c	;volatile
 38565  01C996  D003               	goto	i2l15326
 38566                           
 38567                           ;NXQ_charge_state.c: 122: nxq_charge_state = QI_Error;
 38568  01C998  0E03               	movlw	3
 38569  01C99A  0101               	movlb	1	; () banked
 38570  01C99C  6F8F               	movwf	_nxq_charge_state& (0+255),b
 38571  01C99E                     i2l15326:
 38572                           
 38573                           ;NXQ_charge_state.c: 124: };NXQ_charge_state.c: 126: TMR1_StopTimer();
 38574  01C99E  EC10  F0E6         	call	i2_TMR1_StopTimer	;wreg free
 38575                           
 38576                           ;NXQ_charge_state.c: 127: TMR1_Reload();
 38577  01C9A2  ECB7  F0E5         	call	i2_TMR1_Reload	;wreg free
 38578  01C9A6  0012               	return		;funcret
 38579  01C9A8                     __end_of_QIErrorTimerHandler:
 38580                           	opt callstack 0
 38581                           
 38582 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38583 ;; Defined at:
 38584 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 38585 ;; Parameters:    Size  Location     Type
 38586 ;;		None
 38587 ;; Auto vars:     Size  Location     Type
 38588 ;;		None
 38589 ;; Return value:  Size  Location     Type
 38590 ;;                  1    wreg      void 
 38591 ;; Registers used:
 38592 ;;		None
 38593 ;; Tracked objects:
 38594 ;;		On entry : 0/0
 38595 ;;		On exit  : 0/0
 38596 ;;		Unchanged: 0/0
 38597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38602 ;;Total ram usage:        0 bytes
 38603 ;; Hardware stack levels used:    1
 38604 ;; This function calls:
 38605 ;;		Nothing
 38606 ;; This function is called by:
 38607 ;;		_TMR1_Initialize
 38608 ;;		_TMR1_ISR
 38609 ;; This function uses a non-reentrant model
 38610 ;;
 38611                           
 38612                           	psect	text151
 38613  01CC3E                     __ptext151:
 38614                           	opt callstack 0
 38615  01CC3E                     _TMR1_DefaultInterruptHandler:
 38616                           	opt callstack 15
 38617                           
 38618                           ;incstack = 0
 38619  01CC3E  0012               	return		;funcret
 38620  01CC40                     __end_of_TMR1_DefaultInterruptHandler:
 38621                           	opt callstack 0
 38622                           
 38623 ;; *************** function i2_TMR1_StopTimer *****************
 38624 ;; Defined at:
 38625 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 38626 ;; Parameters:    Size  Location     Type
 38627 ;;		None
 38628 ;; Auto vars:     Size  Location     Type
 38629 ;;		None
 38630 ;; Return value:  Size  Location     Type
 38631 ;;                  1    wreg      void 
 38632 ;; Registers used:
 38633 ;;		None
 38634 ;; Tracked objects:
 38635 ;;		On entry : 0/0
 38636 ;;		On exit  : 0/0
 38637 ;;		Unchanged: 0/0
 38638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38643 ;;Total ram usage:        0 bytes
 38644 ;; Hardware stack levels used:    1
 38645 ;; This function calls:
 38646 ;;		Nothing
 38647 ;; This function is called by:
 38648 ;;		_QIErrorTimerHandler
 38649 ;; This function uses a non-reentrant model
 38650 ;;
 38651                           
 38652                           	psect	text152
 38653  01CC20                     __ptext152:
 38654                           	opt callstack 0
 38655  01CC20                     i2_TMR1_StopTimer:
 38656                           	opt callstack 14
 38657                           
 38658                           ;tmr1.c: 108: T1CONbits.TMR1ON = 0;
 38659                           
 38660                           ;incstack = 0
 38661  01CC20  90CF               	bcf	4047,0,c	;volatile
 38662  01CC22  0012               	return		;funcret
 38663  01CC24                     __end_ofi2_TMR1_StopTimer:
 38664                           	opt callstack 0
 38665                           
 38666 ;; *************** function _TMR0_ISR *****************
 38667 ;; Defined at:
 38668 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 38669 ;; Parameters:    Size  Location     Type
 38670 ;;		None
 38671 ;; Auto vars:     Size  Location     Type
 38672 ;;		None
 38673 ;; Return value:  Size  Location     Type
 38674 ;;                  1    wreg      void 
 38675 ;; Registers used:
 38676 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38677 ;; Tracked objects:
 38678 ;;		On entry : 0/0
 38679 ;;		On exit  : 0/0
 38680 ;;		Unchanged: 0/0
 38681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38686 ;;Total ram usage:        0 bytes
 38687 ;; Hardware stack levels used:    1
 38688 ;; Hardware stack levels required when called:    2
 38689 ;; This function calls:
 38690 ;;		Absolute function
 38691 ;;		_TMR0_DefaultInterruptHandler
 38692 ;;		_heartbeatTimerHandler
 38693 ;; This function is called by:
 38694 ;;		_INTERRUPT_InterruptManagerHigh
 38695 ;; This function uses a non-reentrant model
 38696 ;;
 38697                           
 38698                           	psect	text153
 38699  01C64A                     __ptext153:
 38700                           	opt callstack 0
 38701  01C64A                     _TMR0_ISR:
 38702                           	opt callstack 14
 38703                           
 38704                           ;tmr0.c: 124: PIR0bits.TMR0IF = 0;
 38705                           
 38706                           ;incstack = 0
 38707  01C64A  010E               	movlb	14	; () banked
 38708  01C64C  9BCA               	bcf	202,5,b	;volatile
 38709                           
 38710                           ; BSR set to: 14
 38711                           ;tmr0.c: 125: if(TMR0_InterruptHandler)
 38712  01C64E  0100               	movlb	0	; () banked
 38713  01C650  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38714  01C652  11CA               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38715  01C654  11CB               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38716  01C656  B4D8               	btfsc	status,2,c
 38717  01C658  0012               	return	
 38718                           
 38719                           ; BSR set to: 0
 38720                           ;tmr0.c: 126: {;tmr0.c: 127: TMR0_InterruptHandler();
 38721  01C65A  D801               	call	i2u2760_48
 38722  01C65C  0012               	return	
 38723  01C65E                     i2u2760_48:
 38724  01C65E  0005               	push	
 38725  01C660  6EFA               	movwf	pclath,c
 38726  01C662  51C9               	movf	_TMR0_InterruptHandler& (0+255),w,b
 38727  01C664  6EFD               	movwf	tosl,c
 38728  01C666  51CA               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 38729  01C668  6EFE               	movwf	tosh,c
 38730  01C66A  51CB               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 38731  01C66C  6EFF               	movwf	tosu,c
 38732  01C66E  50FA               	movf	pclath,w,c
 38733  01C670  0012               	return		;indir
 38734  01C672                     __end_of_TMR0_ISR:
 38735                           	opt callstack 0
 38736                           
 38737 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 38738 ;; Defined at:
 38739 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 38740 ;; Parameters:    Size  Location     Type
 38741 ;;		None
 38742 ;; Auto vars:     Size  Location     Type
 38743 ;;		None
 38744 ;; Return value:  Size  Location     Type
 38745 ;;                  1    wreg      void 
 38746 ;; Registers used:
 38747 ;;		None
 38748 ;; Tracked objects:
 38749 ;;		On entry : 0/0
 38750 ;;		On exit  : 0/0
 38751 ;;		Unchanged: 0/0
 38752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38757 ;;Total ram usage:        0 bytes
 38758 ;; Hardware stack levels used:    1
 38759 ;; This function calls:
 38760 ;;		Nothing
 38761 ;; This function is called by:
 38762 ;;		_TMR0_Initialize
 38763 ;;		_TMR0_ISR
 38764 ;; This function uses a non-reentrant model
 38765 ;;
 38766                           
 38767                           	psect	text154
 38768  01CC40                     __ptext154:
 38769                           	opt callstack 0
 38770  01CC40                     _TMR0_DefaultInterruptHandler:
 38771                           	opt callstack 15
 38772                           
 38773                           ;incstack = 0
 38774  01CC40  0012               	return		;funcret
 38775  01CC42                     __end_of_TMR0_DefaultInterruptHandler:
 38776                           	opt callstack 0
 38777                           
 38778 ;; *************** function _heartbeatTimerHandler *****************
 38779 ;; Defined at:
 38780 ;;		line 23 in file "heartbeat_timer.c"
 38781 ;; Parameters:    Size  Location     Type
 38782 ;;		None
 38783 ;; Auto vars:     Size  Location     Type
 38784 ;;		None
 38785 ;; Return value:  Size  Location     Type
 38786 ;;                  1    wreg      void 
 38787 ;; Registers used:
 38788 ;;		wreg, status,2, status,0, cstack
 38789 ;; Tracked objects:
 38790 ;;		On entry : 0/0
 38791 ;;		On exit  : 0/0
 38792 ;;		Unchanged: 0/0
 38793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38798 ;;Total ram usage:        1 bytes
 38799 ;; Hardware stack levels used:    1
 38800 ;; Hardware stack levels required when called:    1
 38801 ;; This function calls:
 38802 ;;		i2___fladd
 38803 ;;		i2___llmod
 38804 ;; This function is called by:
 38805 ;;		_main
 38806 ;;		_TMR0_ISR
 38807 ;; This function uses a non-reentrant model
 38808 ;;
 38809                           
 38810                           	psect	text155
 38811  019A50                     __ptext155:
 38812                           	opt callstack 0
 38813  019A50                     _heartbeatTimerHandler:
 38814                           	opt callstack 14
 38815                           
 38816                           ;heartbeat_timer.c: 26: LATBbits.LATB6 = ~(LATBbits.LATB6);
 38817                           
 38818                           ;incstack = 0
 38819  019A50  AC84               	btfss	3972,6,c	;volatile
 38820  019A52  D002               	goto	i2u2724_40
 38821  019A54  0E01               	movlw	1
 38822  019A56  D001               	goto	i2u2724_46
 38823  019A58                     i2u2724_40:
 38824  019A58  0E00               	movlw	0
 38825  019A5A                     i2u2724_46:
 38826  019A5A  0AFF               	xorlw	255
 38827  019A5C  6E5E               	movwf	??_heartbeatTimerHandler& (0+255),c
 38828  019A5E  3A5E               	swapf	??_heartbeatTimerHandler,f,c
 38829  019A60  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38830  019A62  465E               	rlncf	??_heartbeatTimerHandler,f,c
 38831  019A64  5084               	movf	3972,w,c	;volatile
 38832  019A66  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38833  019A68  0BBF               	andlw	-65
 38834  019A6A  185E               	xorwf	??_heartbeatTimerHandler,w,c
 38835  019A6C  6E84               	movwf	3972,c	;volatile
 38836                           
 38837                           ;heartbeat_timer.c: 29: device_on_time++;
 38838  019A6E  0E01               	movlw	1
 38839  019A70  0100               	movlb	0	; () banked
 38840  019A72  27C5               	addwf	_device_on_time& (0+255),f,b
 38841  019A74  0E00               	movlw	0
 38842  019A76  23C6               	addwfc	(_device_on_time+1)& (0+255),f,b
 38843  019A78  23C7               	addwfc	(_device_on_time+2)& (0+255),f,b
 38844  019A7A  23C8               	addwfc	(_device_on_time+3)& (0+255),f,b
 38845                           
 38846                           ;heartbeat_timer.c: 32: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) QI_charge_time++;
 38847  019A7C  0101               	movlb	1	; () banked
 38848  019A7E  058F               	decf	_nxq_charge_state& (0+255),w,b
 38849  019A80  B4D8               	btfsc	status,2,c
 38850  019A82  D004               	goto	i2u2726_40
 38851                           
 38852                           ; BSR set to: 1
 38853  019A84  0E02               	movlw	2
 38854  019A86  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 38855  019A88  A4D8               	btfss	status,2,c
 38856  019A8A  D008               	goto	i2l21254
 38857  019A8C                     i2u2726_40:
 38858                           
 38859                           ; BSR set to: 1
 38860  019A8C  0E01               	movlw	1
 38861  019A8E  0102               	movlb	2	; () banked
 38862  019A90  27D2               	addwf	_QI_charge_time& (0+255),f,b
 38863  019A92  0E00               	movlw	0
 38864  019A94  23D3               	addwfc	(_QI_charge_time+1)& (0+255),f,b
 38865  019A96  23D4               	addwfc	(_QI_charge_time+2)& (0+255),f,b
 38866  019A98  23D5               	addwfc	(_QI_charge_time+3)& (0+255),f,b
 38867  019A9A  D009               	goto	i2l21256
 38868  019A9C                     i2l21254:
 38869                           
 38870                           ; BSR set to: 1
 38871                           ;heartbeat_timer.c: 33: else QI_charge_time = 0;
 38872  019A9C  0E00               	movlw	0
 38873  019A9E  0102               	movlb	2	; () banked
 38874  019AA0  6FD2               	movwf	_QI_charge_time& (0+255),b
 38875  019AA2  0E00               	movlw	0
 38876  019AA4  6FD3               	movwf	(_QI_charge_time+1)& (0+255),b
 38877  019AA6  0E00               	movlw	0
 38878  019AA8  6FD4               	movwf	(_QI_charge_time+2)& (0+255),b
 38879  019AAA  0E00               	movlw	0
 38880  019AAC  6FD5               	movwf	(_QI_charge_time+3)& (0+255),b
 38881  019AAE                     i2l21256:
 38882                           
 38883                           ; BSR set to: 2
 38884                           ;heartbeat_timer.c: 36: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_charge += adc_results.qi_isns_adc_result;
 38885  019AAE  0101               	movlb	1	; () banked
 38886  019AB0  058F               	decf	_nxq_charge_state& (0+255),w,b
 38887  019AB2  B4D8               	btfsc	status,2,c
 38888  019AB4  D004               	goto	i2u2728_40
 38889                           
 38890                           ; BSR set to: 1
 38891  019AB6  0E02               	movlw	2
 38892  019AB8  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 38893  019ABA  A4D8               	btfss	status,2,c
 38894  019ABC  D01B               	goto	i2l21262
 38895  019ABE                     i2u2728_40:
 38896                           
 38897                           ; BSR set to: 1
 38898  019ABE  C2CA  F052         	movff	_adc_calculations+12,i2___fladd@b
 38899  019AC2  C2CB  F053         	movff	_adc_calculations+13,i2___fladd@b+1
 38900  019AC6  C2CC  F054         	movff	_adc_calculations+14,i2___fladd@b+2
 38901  019ACA  C2CD  F055         	movff	_adc_calculations+15,i2___fladd@b+3
 38902  019ACE  C0F1  F056         	movff	_adc_results+20,i2___fladd@a
 38903  019AD2  C0F2  F057         	movff	_adc_results+21,i2___fladd@a+1
 38904  019AD6  C0F3  F058         	movff	_adc_results+22,i2___fladd@a+2
 38905  019ADA  C0F4  F059         	movff	_adc_results+23,i2___fladd@a+3
 38906  019ADE  EC4B  F0BD         	call	i2___fladd	;wreg free
 38907  019AE2  C052  F2CA         	movff	?i2___fladd,_adc_calculations+12
 38908  019AE6  C053  F2CB         	movff	?i2___fladd+1,_adc_calculations+13
 38909  019AEA  C054  F2CC         	movff	?i2___fladd+2,_adc_calculations+14
 38910  019AEE  C055  F2CD         	movff	?i2___fladd+3,_adc_calculations+15
 38911  019AF2  D009               	goto	i2l21264
 38912  019AF4                     i2l21262:
 38913                           
 38914                           ; BSR set to: 1
 38915                           ;heartbeat_timer.c: 37: else adc_calculations.output_charge = 0.0;
 38916  019AF4  0E00               	movlw	0
 38917  019AF6  0102               	movlb	2	; () banked
 38918  019AF8  6FCA               	movwf	(_adc_calculations+12)& (0+255),b
 38919  019AFA  0E00               	movlw	0
 38920  019AFC  6FCB               	movwf	(_adc_calculations+13)& (0+255),b
 38921  019AFE  0E00               	movlw	0
 38922  019B00  6FCC               	movwf	(_adc_calculations+14)& (0+255),b
 38923  019B02  0E00               	movlw	0
 38924  019B04  6FCD               	movwf	(_adc_calculations+15)& (0+255),b
 38925  019B06                     i2l21264:
 38926                           
 38927                           ;heartbeat_timer.c: 40: if (nxq_charge_state == QI_Charging || nxq_charge_state == QI_Fu
      +                          lly_Charged) adc_calculations.output_energy += adc_calculations.output_power;
 38928  019B06  0101               	movlb	1	; () banked
 38929  019B08  058F               	decf	_nxq_charge_state& (0+255),w,b
 38930  019B0A  B4D8               	btfsc	status,2,c
 38931  019B0C  D004               	goto	i2u2730_40
 38932                           
 38933                           ; BSR set to: 1
 38934  019B0E  0E02               	movlw	2
 38935  019B10  198F               	xorwf	_nxq_charge_state& (0+255),w,b
 38936  019B12  A4D8               	btfss	status,2,c
 38937  019B14  D01B               	goto	i2l21270
 38938  019B16                     i2u2730_40:
 38939                           
 38940                           ; BSR set to: 1
 38941  019B16  C2CE  F052         	movff	_adc_calculations+16,i2___fladd@b
 38942  019B1A  C2CF  F053         	movff	_adc_calculations+17,i2___fladd@b+1
 38943  019B1E  C2D0  F054         	movff	_adc_calculations+18,i2___fladd@b+2
 38944  019B22  C2D1  F055         	movff	_adc_calculations+19,i2___fladd@b+3
 38945  019B26  C2C2  F056         	movff	_adc_calculations+4,i2___fladd@a
 38946  019B2A  C2C3  F057         	movff	_adc_calculations+5,i2___fladd@a+1
 38947  019B2E  C2C4  F058         	movff	_adc_calculations+6,i2___fladd@a+2
 38948  019B32  C2C5  F059         	movff	_adc_calculations+7,i2___fladd@a+3
 38949  019B36  EC4B  F0BD         	call	i2___fladd	;wreg free
 38950  019B3A  C052  F2CE         	movff	?i2___fladd,_adc_calculations+16
 38951  019B3E  C053  F2CF         	movff	?i2___fladd+1,_adc_calculations+17
 38952  019B42  C054  F2D0         	movff	?i2___fladd+2,_adc_calculations+18
 38953  019B46  C055  F2D1         	movff	?i2___fladd+3,_adc_calculations+19
 38954  019B4A  D009               	goto	i2l1808
 38955  019B4C                     i2l21270:
 38956                           
 38957                           ; BSR set to: 1
 38958                           ;heartbeat_timer.c: 41: else adc_calculations.output_energy = 0.0;
 38959  019B4C  0E00               	movlw	0
 38960  019B4E  0102               	movlb	2	; () banked
 38961  019B50  6FCE               	movwf	(_adc_calculations+16)& (0+255),b
 38962  019B52  0E00               	movlw	0
 38963  019B54  6FCF               	movwf	(_adc_calculations+17)& (0+255),b
 38964  019B56  0E00               	movlw	0
 38965  019B58  6FD0               	movwf	(_adc_calculations+18)& (0+255),b
 38966  019B5A  0E00               	movlw	0
 38967  019B5C  6FD1               	movwf	(_adc_calculations+19)& (0+255),b
 38968  019B5E                     i2l1808:
 38969  019B5E  0004               	clrwdt		;# 
 38970                           
 38971                           ;heartbeat_timer.c: 47: LM73_start_flag = 1;
 38972  019B60  0E01               	movlw	1
 38973  019B62  0102               	movlb	2	; () banked
 38974  019B64  6FD8               	movwf	_LM73_start_flag& (0+255),b
 38975                           
 38976                           ; BSR set to: 2
 38977                           ;heartbeat_timer.c: 50: if (device_on_time % OLED_update_time == 0) OLED_update_flag = 1
      +                          ;
 38978  019B66  C0C5  F00E         	movff	_device_on_time,i2___llmod@dividend
 38979  019B6A  C0C6  F00F         	movff	_device_on_time+1,i2___llmod@dividend+1
 38980  019B6E  C0C7  F010         	movff	_device_on_time+2,i2___llmod@dividend+2
 38981  019B72  C0C8  F011         	movff	_device_on_time+3,i2___llmod@dividend+3
 38982  019B76  0100               	movlb	0	; () banked
 38983  019B78  51FB               	movf	_OLED_update_time& (0+255),w,b
 38984  019B7A  6E12               	movwf	i2___llmod@divisor,c
 38985  019B7C  6A13               	clrf	i2___llmod@divisor+1,c
 38986  019B7E  6A14               	clrf	i2___llmod@divisor+2,c
 38987  019B80  6A15               	clrf	i2___llmod@divisor+3,c
 38988  019B82  ECF0  F0DB         	call	i2___llmod	;wreg free
 38989  019B86  500E               	movf	?i2___llmod,w,c
 38990  019B88  100F               	iorwf	?i2___llmod+1,w,c
 38991  019B8A  1010               	iorwf	?i2___llmod+2,w,c
 38992  019B8C  1011               	iorwf	?i2___llmod+3,w,c
 38993  019B8E  A4D8               	btfss	status,2,c
 38994  019B90  D003               	goto	i2l1809
 38995  019B92  0E01               	movlw	1
 38996  019B94  0102               	movlb	2	; () banked
 38997  019B96  6FD6               	movwf	_OLED_update_flag& (0+255),b
 38998  019B98                     i2l1809:
 38999                           
 39000                           ;heartbeat_timer.c: 53: freq_meas_start_flag = 1;
 39001  019B98  0E01               	movlw	1
 39002  019B9A  0102               	movlb	2	; () banked
 39003  019B9C  6FDA               	movwf	_freq_meas_start_flag& (0+255),b
 39004                           
 39005                           ;heartbeat_timer.c: 56: if (live_measurement_enable_flag) live_measurement_request_flag 
      +                          = 1;
 39006  019B9E  0100               	movlb	0	; () banked
 39007  019BA0  51D7               	movf	_live_measurement_enable_flag& (0+255),w,b
 39008  019BA2  B4D8               	btfsc	status,2,c
 39009  019BA4  0012               	return	
 39010                           
 39011                           ; BSR set to: 0
 39012  019BA6  0E01               	movlw	1
 39013  019BA8  0102               	movlb	2	; () banked
 39014  019BAA  6FD9               	movwf	_live_measurement_request_flag& (0+255),b
 39015  019BAC  0012               	return		;funcret
 39016  019BAE                     __end_of_heartbeatTimerHandler:
 39017                           	opt callstack 0
 39018                           
 39019 ;; *************** function _PIN_MANAGER_IOC *****************
 39020 ;; Defined at:
 39021 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 39022 ;; Parameters:    Size  Location     Type
 39023 ;;		None
 39024 ;; Auto vars:     Size  Location     Type
 39025 ;;		None
 39026 ;; Return value:  Size  Location     Type
 39027 ;;                  1    wreg      void 
 39028 ;; Registers used:
 39029 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39030 ;; Tracked objects:
 39031 ;;		On entry : 0/0
 39032 ;;		On exit  : 0/0
 39033 ;;		Unchanged: 0/0
 39034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39039 ;;Total ram usage:        0 bytes
 39040 ;; Hardware stack levels used:    1
 39041 ;; Hardware stack levels required when called:    4
 39042 ;; This function calls:
 39043 ;;		_IOCBF2_ISR
 39044 ;;		_IOCBF3_ISR
 39045 ;; This function is called by:
 39046 ;;		_INTERRUPT_InterruptManagerHigh
 39047 ;; This function uses a non-reentrant model
 39048 ;;
 39049                           
 39050                           	psect	text156
 39051  01C9E8                     __ptext156:
 39052                           	opt callstack 0
 39053  01C9E8                     _PIN_MANAGER_IOC:
 39054                           	opt callstack 12
 39055                           
 39056                           ;pin_manager.c: 146: if(IOCBFbits.IOCBF2 == 1)
 39057                           
 39058                           ;incstack = 0
 39059  01C9E8  010F               	movlb	15	; () banked
 39060  01C9EA  B512               	btfsc	18,2,b	;volatile
 39061                           
 39062                           ; BSR set to: 15
 39063                           ;pin_manager.c: 147: {;pin_manager.c: 148: IOCBF2_ISR();
 39064  01C9EC  ECD4  F0E2         	call	_IOCBF2_ISR	;wreg free
 39065                           
 39066                           ;pin_manager.c: 149: };pin_manager.c: 151: if(IOCBFbits.IOCBF3 == 1)
 39067  01C9F0  010F               	movlb	15	; () banked
 39068  01C9F2  A712               	btfss	18,3,b	;volatile
 39069  01C9F4  0012               	return	
 39070                           
 39071                           ; BSR set to: 15
 39072                           ;pin_manager.c: 152: {;pin_manager.c: 153: IOCBF3_ISR();
 39073  01C9F6  ECBF  F0E2         	call	_IOCBF3_ISR	;wreg free
 39074  01C9FA  0012               	return		;funcret
 39075  01C9FC                     __end_of_PIN_MANAGER_IOC:
 39076                           	opt callstack 0
 39077                           
 39078 ;; *************** function _IOCBF3_ISR *****************
 39079 ;; Defined at:
 39080 ;;		line 190 in file "mcc_generated_files/pin_manager.c"
 39081 ;; Parameters:    Size  Location     Type
 39082 ;;		None
 39083 ;; Auto vars:     Size  Location     Type
 39084 ;;		None
 39085 ;; Return value:  Size  Location     Type
 39086 ;;                  1    wreg      void 
 39087 ;; Registers used:
 39088 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39089 ;; Tracked objects:
 39090 ;;		On entry : 0/0
 39091 ;;		On exit  : 0/0
 39092 ;;		Unchanged: 0/0
 39093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39098 ;;Total ram usage:        0 bytes
 39099 ;; Hardware stack levels used:    1
 39100 ;; Hardware stack levels required when called:    3
 39101 ;; This function calls:
 39102 ;;		Absolute function
 39103 ;;		_IOCBF3_DefaultInterruptHandler
 39104 ;;		_QIChargeIOCHandler
 39105 ;; This function is called by:
 39106 ;;		_PIN_MANAGER_IOC
 39107 ;; This function uses a non-reentrant model
 39108 ;;
 39109                           
 39110                           	psect	text157
 39111  01C57E                     __ptext157:
 39112                           	opt callstack 0
 39113  01C57E                     _IOCBF3_ISR:
 39114                           	opt callstack 12
 39115                           
 39116                           ;pin_manager.c: 195: if(IOCBF3_InterruptHandler)
 39117                           
 39118                           ;incstack = 0
 39119  01C57E  0101               	movlb	1	; () banked
 39120  01C580  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 39121  01C582  1178               	iorwf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 39122  01C584  1179               	iorwf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 39123  01C586  B4D8               	btfsc	status,2,c
 39124  01C588  D00C               	goto	i2u1812_49
 39125                           
 39126                           ; BSR set to: 1
 39127                           ;pin_manager.c: 196: {;pin_manager.c: 197: IOCBF3_InterruptHandler();
 39128  01C58A  D801               	call	i2u1812_48
 39129  01C58C  D00A               	goto	i2u1812_49
 39130  01C58E                     i2u1812_48:
 39131  01C58E  0005               	push	
 39132  01C590  6EFA               	movwf	pclath,c
 39133  01C592  5177               	movf	_IOCBF3_InterruptHandler& (0+255),w,b
 39134  01C594  6EFD               	movwf	tosl,c
 39135  01C596  5178               	movf	(_IOCBF3_InterruptHandler+1)& (0+255),w,b
 39136  01C598  6EFE               	movwf	tosh,c
 39137  01C59A  5179               	movf	(_IOCBF3_InterruptHandler+2)& (0+255),w,b
 39138  01C59C  6EFF               	movwf	tosu,c
 39139  01C59E  50FA               	movf	pclath,w,c
 39140  01C5A0  0012               	return		;indir
 39141  01C5A2                     i2u1812_49:
 39142                           
 39143                           ;pin_manager.c: 198: };pin_manager.c: 199: IOCBFbits.IOCBF3 = 0;
 39144  01C5A2  010F               	movlb	15	; () banked
 39145  01C5A4  9712               	bcf	18,3,b	;volatile
 39146                           
 39147                           ; BSR set to: 15
 39148  01C5A6  0012               	return		;funcret
 39149  01C5A8                     __end_of_IOCBF3_ISR:
 39150                           	opt callstack 0
 39151                           
 39152 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 39153 ;; Defined at:
 39154 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 39155 ;; Parameters:    Size  Location     Type
 39156 ;;		None
 39157 ;; Auto vars:     Size  Location     Type
 39158 ;;		None
 39159 ;; Return value:  Size  Location     Type
 39160 ;;                  1    wreg      void 
 39161 ;; Registers used:
 39162 ;;		None
 39163 ;; Tracked objects:
 39164 ;;		On entry : 0/0
 39165 ;;		On exit  : 0/0
 39166 ;;		Unchanged: 0/0
 39167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39172 ;;Total ram usage:        0 bytes
 39173 ;; Hardware stack levels used:    1
 39174 ;; This function calls:
 39175 ;;		Nothing
 39176 ;; This function is called by:
 39177 ;;		_PIN_MANAGER_Initialize
 39178 ;;		_IOCBF3_ISR
 39179 ;; This function uses a non-reentrant model
 39180 ;;
 39181                           
 39182                           	psect	text158
 39183  01CC42                     __ptext158:
 39184                           	opt callstack 0
 39185  01CC42                     _IOCBF3_DefaultInterruptHandler:
 39186                           	opt callstack 14
 39187                           
 39188                           ; BSR set to: 15
 39189                           ;incstack = 0
 39190  01CC42  0012               	return		;funcret
 39191  01CC44                     __end_of_IOCBF3_DefaultInterruptHandler:
 39192                           	opt callstack 0
 39193                           
 39194 ;; *************** function _QIChargeIOCHandler *****************
 39195 ;; Defined at:
 39196 ;;		line 82 in file "NXQ_charge_state.c"
 39197 ;; Parameters:    Size  Location     Type
 39198 ;;		None
 39199 ;; Auto vars:     Size  Location     Type
 39200 ;;		None
 39201 ;; Return value:  Size  Location     Type
 39202 ;;                  1    wreg      void 
 39203 ;; Registers used:
 39204 ;;		wreg, status,2, cstack
 39205 ;; Tracked objects:
 39206 ;;		On entry : 0/0
 39207 ;;		On exit  : 0/0
 39208 ;;		Unchanged: 0/0
 39209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39214 ;;Total ram usage:        0 bytes
 39215 ;; Hardware stack levels used:    1
 39216 ;; Hardware stack levels required when called:    2
 39217 ;; This function calls:
 39218 ;;		_TMR3_StartTimer
 39219 ;;		i2_TMR1_Reload
 39220 ;;		i2_TMR3_Reload
 39221 ;; This function is called by:
 39222 ;;		_main
 39223 ;;		_IOCBF3_ISR
 39224 ;; This function uses a non-reentrant model
 39225 ;;
 39226                           
 39227                           	psect	text159
 39228  01C8A8                     __ptext159:
 39229                           	opt callstack 0
 39230  01C8A8                     _QIChargeIOCHandler:
 39231                           	opt callstack 12
 39232                           
 39233                           ;NXQ_charge_state.c: 84: if (IOCBNbits.IOCBN3 && PORTBbits.RB2 == 1) {
 39234                           
 39235                           ;incstack = 0
 39236  01C8A8  010F               	movlb	15	; () banked
 39237  01C8AA  B713               	btfsc	19,3,b	;volatile
 39238                           
 39239                           ; BSR set to: 15
 39240  01C8AC  A48E               	btfss	3982,2,c	;volatile
 39241  01C8AE  D003               	goto	i2l14058
 39242                           
 39243                           ; BSR set to: 15
 39244                           ;NXQ_charge_state.c: 86: nxq_charge_state = QI_Charging;
 39245  01C8B0  0E01               	movlw	1
 39246  01C8B2  0101               	movlb	1	; () banked
 39247  01C8B4  6F8F               	movwf	_nxq_charge_state& (0+255),b
 39248  01C8B6                     i2l14058:
 39249                           
 39250                           ;NXQ_charge_state.c: 88: };NXQ_charge_state.c: 90: TMR3_Reload();
 39251  01C8B6  ECBE  F0E5         	call	i2_TMR3_Reload	;wreg free
 39252                           
 39253                           ;NXQ_charge_state.c: 91: TMR3_StartTimer();
 39254  01C8BA  EC12  F0E6         	call	_TMR3_StartTimer	;wreg free
 39255                           
 39256                           ;NXQ_charge_state.c: 93: TMR1_Reload();
 39257  01C8BE  ECB7  F0E5         	call	i2_TMR1_Reload	;wreg free
 39258  01C8C2  0012               	return		;funcret
 39259  01C8C4                     __end_of_QIChargeIOCHandler:
 39260                           	opt callstack 0
 39261                           
 39262 ;; *************** function i2_TMR1_Reload *****************
 39263 ;; Defined at:
 39264 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 39265 ;; Parameters:    Size  Location     Type
 39266 ;;		None
 39267 ;; Auto vars:     Size  Location     Type
 39268 ;;		None
 39269 ;; Return value:  Size  Location     Type
 39270 ;;                  1    wreg      void 
 39271 ;; Registers used:
 39272 ;;		wreg, status,2, cstack
 39273 ;; Tracked objects:
 39274 ;;		On entry : 0/0
 39275 ;;		On exit  : 0/0
 39276 ;;		Unchanged: 0/0
 39277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39282 ;;Total ram usage:        0 bytes
 39283 ;; Hardware stack levels used:    1
 39284 ;; Hardware stack levels required when called:    1
 39285 ;; This function calls:
 39286 ;;		i2_TMR1_WriteTimer
 39287 ;; This function is called by:
 39288 ;;		_QIChargeIOCHandler
 39289 ;;		_QIErrorTimerHandler
 39290 ;; This function uses a non-reentrant model
 39291 ;;
 39292                           
 39293                           	psect	text160
 39294  01CB6E                     __ptext160:
 39295                           	opt callstack 0
 39296  01CB6E                     i2_TMR1_Reload:
 39297                           	opt callstack 13
 39298                           
 39299                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 39300                           
 39301                           ;incstack = 0
 39302  01CB6E  C189  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 39303  01CB72  C18A  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 39304  01CB76  EC62  F0E4         	call	i2_TMR1_WriteTimer	;wreg free
 39305  01CB7A  0012               	return		;funcret
 39306  01CB7C                     __end_ofi2_TMR1_Reload:
 39307                           	opt callstack 0
 39308                           
 39309 ;; *************** function i2_TMR1_WriteTimer *****************
 39310 ;; Defined at:
 39311 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 39312 ;; Parameters:    Size  Location     Type
 39313 ;;  timerVal        2    0[COMRAM] unsigned int 
 39314 ;; Auto vars:     Size  Location     Type
 39315 ;;		None
 39316 ;; Return value:  Size  Location     Type
 39317 ;;                  1    wreg      void 
 39318 ;; Registers used:
 39319 ;;		wreg, status,2
 39320 ;; Tracked objects:
 39321 ;;		On entry : 0/0
 39322 ;;		On exit  : 0/0
 39323 ;;		Unchanged: 0/0
 39324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39329 ;;Total ram usage:        2 bytes
 39330 ;; Hardware stack levels used:    1
 39331 ;; This function calls:
 39332 ;;		Nothing
 39333 ;; This function is called by:
 39334 ;;		_TMR1_ISR
 39335 ;;		i2_TMR1_Reload
 39336 ;; This function uses a non-reentrant model
 39337 ;;
 39338                           
 39339                           	psect	text161
 39340  01C8C4                     __ptext161:
 39341                           	opt callstack 0
 39342  01C8C4                     i2_TMR1_WriteTimer:
 39343                           	opt callstack 15
 39344                           
 39345                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 39346                           
 39347                           ;incstack = 0
 39348  01C8C4  A4CF               	btfss	4047,2,c	;volatile
 39349  01C8C6  D007               	goto	i2l12246
 39350                           
 39351                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 39352  01C8C8  90CF               	bcf	4047,0,c	;volatile
 39353                           
 39354                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 39355  01C8CA  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39356  01C8CC  6ECE               	movwf	4046,c	;volatile
 39357                           
 39358                           ;tmr1.c: 136: TMR1L = timerVal;
 39359  01C8CE  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39360                           
 39361                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 39362  01C8D2  80CF               	bsf	4047,0,c	;volatile
 39363                           
 39364                           ;tmr1.c: 140: }
 39365  01C8D4  0012               	return	
 39366  01C8D6                     i2l12246:
 39367                           
 39368                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 39369  01C8D6  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 39370  01C8D8  6ECE               	movwf	4046,c	;volatile
 39371                           
 39372                           ;tmr1.c: 145: TMR1L = timerVal;
 39373  01C8DA  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 39374  01C8DE  0012               	return		;funcret
 39375  01C8E0                     __end_ofi2_TMR1_WriteTimer:
 39376                           	opt callstack 0
 39377                           
 39378 ;; *************** function _IOCBF2_ISR *****************
 39379 ;; Defined at:
 39380 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
 39381 ;; Parameters:    Size  Location     Type
 39382 ;;		None
 39383 ;; Auto vars:     Size  Location     Type
 39384 ;;		None
 39385 ;; Return value:  Size  Location     Type
 39386 ;;                  1    wreg      void 
 39387 ;; Registers used:
 39388 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39389 ;; Tracked objects:
 39390 ;;		On entry : 0/0
 39391 ;;		On exit  : 0/0
 39392 ;;		Unchanged: 0/0
 39393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39398 ;;Total ram usage:        0 bytes
 39399 ;; Hardware stack levels used:    1
 39400 ;; Hardware stack levels required when called:    3
 39401 ;; This function calls:
 39402 ;;		Absolute function
 39403 ;;		_IOCBF2_DefaultInterruptHandler
 39404 ;;		_QIIdleIOCHandler
 39405 ;; This function is called by:
 39406 ;;		_PIN_MANAGER_IOC
 39407 ;; This function uses a non-reentrant model
 39408 ;;
 39409                           
 39410                           	psect	text162
 39411  01C5A8                     __ptext162:
 39412                           	opt callstack 0
 39413  01C5A8                     _IOCBF2_ISR:
 39414                           	opt callstack 12
 39415                           
 39416                           ;pin_manager.c: 165: if(IOCBF2_InterruptHandler)
 39417                           
 39418                           ;incstack = 0
 39419  01C5A8  0101               	movlb	1	; () banked
 39420  01C5AA  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39421  01C5AC  117B               	iorwf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39422  01C5AE  117C               	iorwf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39423  01C5B0  B4D8               	btfsc	status,2,c
 39424  01C5B2  D00C               	goto	i2u1810_49
 39425                           
 39426                           ; BSR set to: 1
 39427                           ;pin_manager.c: 166: {;pin_manager.c: 167: IOCBF2_InterruptHandler();
 39428  01C5B4  D801               	call	i2u1810_48
 39429  01C5B6  D00A               	goto	i2u1810_49
 39430  01C5B8                     i2u1810_48:
 39431  01C5B8  0005               	push	
 39432  01C5BA  6EFA               	movwf	pclath,c
 39433  01C5BC  517A               	movf	_IOCBF2_InterruptHandler& (0+255),w,b
 39434  01C5BE  6EFD               	movwf	tosl,c
 39435  01C5C0  517B               	movf	(_IOCBF2_InterruptHandler+1)& (0+255),w,b
 39436  01C5C2  6EFE               	movwf	tosh,c
 39437  01C5C4  517C               	movf	(_IOCBF2_InterruptHandler+2)& (0+255),w,b
 39438  01C5C6  6EFF               	movwf	tosu,c
 39439  01C5C8  50FA               	movf	pclath,w,c
 39440  01C5CA  0012               	return		;indir
 39441  01C5CC                     i2u1810_49:
 39442                           
 39443                           ;pin_manager.c: 168: };pin_manager.c: 169: IOCBFbits.IOCBF2 = 0;
 39444  01C5CC  010F               	movlb	15	; () banked
 39445  01C5CE  9512               	bcf	18,2,b	;volatile
 39446                           
 39447                           ; BSR set to: 15
 39448  01C5D0  0012               	return		;funcret
 39449  01C5D2                     __end_of_IOCBF2_ISR:
 39450                           	opt callstack 0
 39451                           
 39452 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
 39453 ;; Defined at:
 39454 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 39455 ;; Parameters:    Size  Location     Type
 39456 ;;		None
 39457 ;; Auto vars:     Size  Location     Type
 39458 ;;		None
 39459 ;; Return value:  Size  Location     Type
 39460 ;;                  1    wreg      void 
 39461 ;; Registers used:
 39462 ;;		None
 39463 ;; Tracked objects:
 39464 ;;		On entry : 0/0
 39465 ;;		On exit  : 0/0
 39466 ;;		Unchanged: 0/0
 39467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39472 ;;Total ram usage:        0 bytes
 39473 ;; Hardware stack levels used:    1
 39474 ;; This function calls:
 39475 ;;		Nothing
 39476 ;; This function is called by:
 39477 ;;		_PIN_MANAGER_Initialize
 39478 ;;		_IOCBF2_ISR
 39479 ;; This function uses a non-reentrant model
 39480 ;;
 39481                           
 39482                           	psect	text163
 39483  01CC44                     __ptext163:
 39484                           	opt callstack 0
 39485  01CC44                     _IOCBF2_DefaultInterruptHandler:
 39486                           	opt callstack 14
 39487                           
 39488                           ; BSR set to: 15
 39489                           ;incstack = 0
 39490  01CC44  0012               	return		;funcret
 39491  01CC46                     __end_of_IOCBF2_DefaultInterruptHandler:
 39492                           	opt callstack 0
 39493                           
 39494 ;; *************** function _QIIdleIOCHandler *****************
 39495 ;; Defined at:
 39496 ;;		line 67 in file "NXQ_charge_state.c"
 39497 ;; Parameters:    Size  Location     Type
 39498 ;;		None
 39499 ;; Auto vars:     Size  Location     Type
 39500 ;;		None
 39501 ;; Return value:  Size  Location     Type
 39502 ;;                  1    wreg      void 
 39503 ;; Registers used:
 39504 ;;		wreg, status,2, cstack
 39505 ;; Tracked objects:
 39506 ;;		On entry : 0/0
 39507 ;;		On exit  : 0/0
 39508 ;;		Unchanged: 0/0
 39509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39514 ;;Total ram usage:        0 bytes
 39515 ;; Hardware stack levels used:    1
 39516 ;; Hardware stack levels required when called:    2
 39517 ;; This function calls:
 39518 ;;		_TMR1_StartTimer
 39519 ;;		_TMR3_StartTimer
 39520 ;;		i2_TMR3_Reload
 39521 ;; This function is called by:
 39522 ;;		_main
 39523 ;;		_IOCBF2_ISR
 39524 ;; This function uses a non-reentrant model
 39525 ;;
 39526                           
 39527                           	psect	text164
 39528  01C9FC                     __ptext164:
 39529                           	opt callstack 0
 39530  01C9FC                     _QIIdleIOCHandler:
 39531                           	opt callstack 12
 39532                           
 39533                           ;NXQ_charge_state.c: 69: if (IOCBNbits.IOCBN2 == 1) {
 39534                           
 39535                           ;incstack = 0
 39536  01C9FC  010F               	movlb	15	; () banked
 39537  01C9FE  A513               	btfss	19,2,b	;volatile
 39538  01CA00  0012               	return	
 39539                           
 39540                           ; BSR set to: 15
 39541                           ;NXQ_charge_state.c: 71: TMR3_Reload();
 39542  01CA02  ECBE  F0E5         	call	i2_TMR3_Reload	;wreg free
 39543                           
 39544                           ;NXQ_charge_state.c: 72: TMR3_StartTimer();
 39545  01CA06  EC12  F0E6         	call	_TMR3_StartTimer	;wreg free
 39546                           
 39547                           ;NXQ_charge_state.c: 75: TMR1_StartTimer();
 39548  01CA0A  EC14  F0E6         	call	_TMR1_StartTimer	;wreg free
 39549  01CA0E  0012               	return		;funcret
 39550  01CA10                     __end_of_QIIdleIOCHandler:
 39551                           	opt callstack 0
 39552                           
 39553 ;; *************** function i2_TMR3_Reload *****************
 39554 ;; Defined at:
 39555 ;;		line 149 in file "mcc_generated_files/tmr3.c"
 39556 ;; Parameters:    Size  Location     Type
 39557 ;;		None
 39558 ;; Auto vars:     Size  Location     Type
 39559 ;;		None
 39560 ;; Return value:  Size  Location     Type
 39561 ;;                  1    wreg      void 
 39562 ;; Registers used:
 39563 ;;		wreg, status,2, cstack
 39564 ;; Tracked objects:
 39565 ;;		On entry : 0/0
 39566 ;;		On exit  : 0/0
 39567 ;;		Unchanged: 0/0
 39568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39573 ;;Total ram usage:        0 bytes
 39574 ;; Hardware stack levels used:    1
 39575 ;; Hardware stack levels required when called:    1
 39576 ;; This function calls:
 39577 ;;		i2_TMR3_WriteTimer
 39578 ;; This function is called by:
 39579 ;;		_QIIdleIOCHandler
 39580 ;;		_QIChargeIOCHandler
 39581 ;; This function uses a non-reentrant model
 39582 ;;
 39583                           
 39584                           	psect	text165
 39585  01CB7C                     __ptext165:
 39586                           	opt callstack 0
 39587  01CB7C                     i2_TMR3_Reload:
 39588                           	opt callstack 12
 39589                           
 39590                           ;tmr3.c: 151: TMR3_WriteTimer(timer3ReloadVal);
 39591                           
 39592                           ;incstack = 0
 39593  01CB7C  C18D  F001         	movff	_timer3ReloadVal,i2TMR3_WriteTimer@timerVal	;volatile
 39594  01CB80  C18E  F002         	movff	_timer3ReloadVal+1,i2TMR3_WriteTimer@timerVal+1	;volatile
 39595  01CB84  EC70  F0E4         	call	i2_TMR3_WriteTimer	;wreg free
 39596  01CB88  0012               	return		;funcret
 39597  01CB8A                     __end_ofi2_TMR3_Reload:
 39598                           	opt callstack 0
 39599                           
 39600 ;; *************** function i2_TMR3_WriteTimer *****************
 39601 ;; Defined at:
 39602 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 39603 ;; Parameters:    Size  Location     Type
 39604 ;;  timerVal        2    0[COMRAM] unsigned int 
 39605 ;; Auto vars:     Size  Location     Type
 39606 ;;		None
 39607 ;; Return value:  Size  Location     Type
 39608 ;;                  1    wreg      void 
 39609 ;; Registers used:
 39610 ;;		wreg, status,2
 39611 ;; Tracked objects:
 39612 ;;		On entry : 0/0
 39613 ;;		On exit  : 0/0
 39614 ;;		Unchanged: 0/0
 39615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39620 ;;Total ram usage:        2 bytes
 39621 ;; Hardware stack levels used:    1
 39622 ;; This function calls:
 39623 ;;		Nothing
 39624 ;; This function is called by:
 39625 ;;		i2_TMR3_Reload
 39626 ;; This function uses a non-reentrant model
 39627 ;;
 39628                           
 39629                           	psect	text166
 39630  01C8E0                     __ptext166:
 39631                           	opt callstack 0
 39632  01C8E0                     i2_TMR3_WriteTimer:
 39633                           	opt callstack 12
 39634                           
 39635                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 39636                           
 39637                           ;incstack = 0
 39638  01C8E0  A4C9               	btfss	4041,2,c	;volatile
 39639  01C8E2  D007               	goto	i2l12232
 39640                           
 39641                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 39642  01C8E4  90C9               	bcf	4041,0,c	;volatile
 39643                           
 39644                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 39645  01C8E6  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39646  01C8E8  6EC8               	movwf	4040,c	;volatile
 39647                           
 39648                           ;tmr3.c: 136: TMR3L = timerVal;
 39649  01C8EA  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39650                           
 39651                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 39652  01C8EE  80C9               	bsf	4041,0,c	;volatile
 39653                           
 39654                           ;tmr3.c: 140: }
 39655  01C8F0  0012               	return	
 39656  01C8F2                     i2l12232:
 39657                           
 39658                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 39659  01C8F2  5002               	movf	i2TMR3_WriteTimer@timerVal+1,w,c
 39660  01C8F4  6EC8               	movwf	4040,c	;volatile
 39661                           
 39662                           ;tmr3.c: 145: TMR3L = timerVal;
 39663  01C8F6  C001  FFC7         	movff	i2TMR3_WriteTimer@timerVal,4039	;volatile
 39664  01C8FA  0012               	return		;funcret
 39665  01C8FC                     __end_ofi2_TMR3_WriteTimer:
 39666                           	opt callstack 0
 39667                           
 39668 ;; *************** function _TMR3_StartTimer *****************
 39669 ;; Defined at:
 39670 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 39671 ;; Parameters:    Size  Location     Type
 39672 ;;		None
 39673 ;; Auto vars:     Size  Location     Type
 39674 ;;		None
 39675 ;; Return value:  Size  Location     Type
 39676 ;;                  1    wreg      void 
 39677 ;; Registers used:
 39678 ;;		None
 39679 ;; Tracked objects:
 39680 ;;		On entry : 0/0
 39681 ;;		On exit  : 0/0
 39682 ;;		Unchanged: 0/0
 39683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39688 ;;Total ram usage:        0 bytes
 39689 ;; Hardware stack levels used:    1
 39690 ;; This function calls:
 39691 ;;		Nothing
 39692 ;; This function is called by:
 39693 ;;		_QIIdleIOCHandler
 39694 ;;		_QIChargeIOCHandler
 39695 ;; This function uses a non-reentrant model
 39696 ;;
 39697                           
 39698                           	psect	text167
 39699  01CC24                     __ptext167:
 39700                           	opt callstack 0
 39701  01CC24                     _TMR3_StartTimer:
 39702                           	opt callstack 13
 39703                           
 39704                           ;tmr3.c: 102: T3CONbits.TMR3ON = 1;
 39705                           
 39706                           ;incstack = 0
 39707  01CC24  80C9               	bsf	4041,0,c	;volatile
 39708  01CC26  0012               	return		;funcret
 39709  01CC28                     __end_of_TMR3_StartTimer:
 39710                           	opt callstack 0
 39711                           
 39712 ;; *************** function _TMR1_StartTimer *****************
 39713 ;; Defined at:
 39714 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 39715 ;; Parameters:    Size  Location     Type
 39716 ;;		None
 39717 ;; Auto vars:     Size  Location     Type
 39718 ;;		None
 39719 ;; Return value:  Size  Location     Type
 39720 ;;                  1    wreg      void 
 39721 ;; Registers used:
 39722 ;;		None
 39723 ;; Tracked objects:
 39724 ;;		On entry : 0/0
 39725 ;;		On exit  : 0/0
 39726 ;;		Unchanged: 0/0
 39727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39732 ;;Total ram usage:        0 bytes
 39733 ;; Hardware stack levels used:    1
 39734 ;; This function calls:
 39735 ;;		Nothing
 39736 ;; This function is called by:
 39737 ;;		_QIIdleIOCHandler
 39738 ;; This function uses a non-reentrant model
 39739 ;;
 39740                           
 39741                           	psect	text168
 39742  01CC28                     __ptext168:
 39743                           	opt callstack 0
 39744  01CC28                     _TMR1_StartTimer:
 39745                           	opt callstack 13
 39746                           
 39747                           ;tmr1.c: 102: T1CONbits.TMR1ON = 1;
 39748                           
 39749                           ;incstack = 0
 39750  01CC28  80CF               	bsf	4047,0,c	;volatile
 39751  01CC2A  0012               	return		;funcret
 39752  01CC2C                     __end_of_TMR1_StartTimer:
 39753                           	opt callstack 0
 39754                           
 39755 ;; *************** function _INT2_ISR *****************
 39756 ;; Defined at:
 39757 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 39758 ;; Parameters:    Size  Location     Type
 39759 ;;		None
 39760 ;; Auto vars:     Size  Location     Type
 39761 ;;		None
 39762 ;; Return value:  Size  Location     Type
 39763 ;;                  1    wreg      void 
 39764 ;; Registers used:
 39765 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39766 ;; Tracked objects:
 39767 ;;		On entry : 0/0
 39768 ;;		On exit  : 0/0
 39769 ;;		Unchanged: 0/0
 39770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39775 ;;Total ram usage:        0 bytes
 39776 ;; Hardware stack levels used:    1
 39777 ;; Hardware stack levels required when called:    2
 39778 ;; This function calls:
 39779 ;;		_INT2_CallBack
 39780 ;; This function is called by:
 39781 ;;		_INTERRUPT_InterruptManagerHigh
 39782 ;; This function uses a non-reentrant model
 39783 ;;
 39784                           
 39785                           	psect	text169
 39786  01CBCE                     __ptext169:
 39787                           	opt callstack 0
 39788  01CBCE                     _INT2_ISR:
 39789                           	opt callstack 14
 39790                           
 39791                           ;ext_int.c: 61: (PIR0bits.INT2IF = 0);
 39792                           
 39793                           ;incstack = 0
 39794  01CBCE  010E               	movlb	14	; () banked
 39795  01CBD0  95CA               	bcf	202,2,b	;volatile
 39796                           
 39797                           ; BSR set to: 14
 39798                           ;ext_int.c: 64: INT2_CallBack();
 39799  01CBD2  EC73  F0E3         	call	_INT2_CallBack	;wreg free
 39800  01CBD6  0012               	return		;funcret
 39801  01CBD8                     __end_of_INT2_ISR:
 39802                           	opt callstack 0
 39803                           
 39804 ;; *************** function _INT2_CallBack *****************
 39805 ;; Defined at:
 39806 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 39807 ;; Parameters:    Size  Location     Type
 39808 ;;		None
 39809 ;; Auto vars:     Size  Location     Type
 39810 ;;		None
 39811 ;; Return value:  Size  Location     Type
 39812 ;;                  1    wreg      void 
 39813 ;; Registers used:
 39814 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39815 ;; Tracked objects:
 39816 ;;		On entry : 0/0
 39817 ;;		On exit  : 0/0
 39818 ;;		Unchanged: 0/0
 39819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39824 ;;Total ram usage:        0 bytes
 39825 ;; Hardware stack levels used:    1
 39826 ;; Hardware stack levels required when called:    1
 39827 ;; This function calls:
 39828 ;;		Absolute function
 39829 ;;		_INT2_DefaultInterruptHandler
 39830 ;;		_rightCapTouchHandler
 39831 ;; This function is called by:
 39832 ;;		_INT2_ISR
 39833 ;; This function uses a non-reentrant model
 39834 ;;
 39835                           
 39836                           	psect	text170
 39837  01C6E6                     __ptext170:
 39838                           	opt callstack 0
 39839  01C6E6                     _INT2_CallBack:
 39840                           	opt callstack 14
 39841                           
 39842                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 39843                           
 39844                           ;incstack = 0
 39845  01C6E6  0101               	movlb	1	; () banked
 39846  01C6E8  5183               	movf	_INT2_InterruptHandler& (0+255),w,b
 39847  01C6EA  1184               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39848  01C6EC  1185               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39849  01C6EE  B4D8               	btfsc	status,2,c
 39850  01C6F0  0012               	return	
 39851                           
 39852                           ; BSR set to: 1
 39853                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 39854  01C6F2  D801               	call	i2u1806_48
 39855  01C6F4  0012               	return	
 39856  01C6F6                     i2u1806_48:
 39857  01C6F6  0005               	push	
 39858  01C6F8  6EFA               	movwf	pclath,c
 39859  01C6FA  5183               	movf	_INT2_InterruptHandler& (0+255),w,b
 39860  01C6FC  6EFD               	movwf	tosl,c
 39861  01C6FE  5184               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39862  01C700  6EFE               	movwf	tosh,c
 39863  01C702  5185               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 39864  01C704  6EFF               	movwf	tosu,c
 39865  01C706  50FA               	movf	pclath,w,c
 39866  01C708  0012               	return		;indir
 39867  01C70A                     __end_of_INT2_CallBack:
 39868                           	opt callstack 0
 39869                           
 39870 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39871 ;; Defined at:
 39872 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 39873 ;; Parameters:    Size  Location     Type
 39874 ;;		None
 39875 ;; Auto vars:     Size  Location     Type
 39876 ;;		None
 39877 ;; Return value:  Size  Location     Type
 39878 ;;                  1    wreg      void 
 39879 ;; Registers used:
 39880 ;;		None
 39881 ;; Tracked objects:
 39882 ;;		On entry : 0/0
 39883 ;;		On exit  : 0/0
 39884 ;;		Unchanged: 0/0
 39885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39890 ;;Total ram usage:        0 bytes
 39891 ;; Hardware stack levels used:    1
 39892 ;; This function calls:
 39893 ;;		Nothing
 39894 ;; This function is called by:
 39895 ;;		_EXT_INT_Initialize
 39896 ;;		_INT2_CallBack
 39897 ;; This function uses a non-reentrant model
 39898 ;;
 39899                           
 39900                           	psect	text171
 39901  01CC46                     __ptext171:
 39902                           	opt callstack 0
 39903  01CC46                     _INT2_DefaultInterruptHandler:
 39904                           	opt callstack 14
 39905                           
 39906                           ;incstack = 0
 39907  01CC46  0012               	return		;funcret
 39908  01CC48                     __end_of_INT2_DefaultInterruptHandler:
 39909                           	opt callstack 0
 39910                           
 39911 ;; *************** function _rightCapTouchHandler *****************
 39912 ;; Defined at:
 39913 ;;		line 20 in file "cap_touch_int.c"
 39914 ;; Parameters:    Size  Location     Type
 39915 ;;		None
 39916 ;; Auto vars:     Size  Location     Type
 39917 ;;		None
 39918 ;; Return value:  Size  Location     Type
 39919 ;;                  1    wreg      void 
 39920 ;; Registers used:
 39921 ;;		wreg, status,2, status,0
 39922 ;; Tracked objects:
 39923 ;;		On entry : 0/0
 39924 ;;		On exit  : 0/0
 39925 ;;		Unchanged: 0/0
 39926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39931 ;;Total ram usage:        0 bytes
 39932 ;; Hardware stack levels used:    1
 39933 ;; This function calls:
 39934 ;;		Nothing
 39935 ;; This function is called by:
 39936 ;;		_main
 39937 ;;		_INT2_CallBack
 39938 ;; This function uses a non-reentrant model
 39939 ;;
 39940                           
 39941                           	psect	text172
 39942  01C9A8                     __ptext172:
 39943                           	opt callstack 0
 39944  01C9A8                     _rightCapTouchHandler:
 39945                           	opt callstack 14
 39946                           
 39947                           ;cap_touch_int.c: 22: OLED_Frame++;
 39948                           
 39949                           ;incstack = 0
 39950  01C9A8  0102               	movlb	2	; () banked
 39951  01C9AA  2BD7               	incf	_OLED_Frame& (0+255),f,b
 39952                           
 39953                           ; BSR set to: 2
 39954                           ;cap_touch_int.c: 23: if (OLED_Frame == 25 + 1) OLED_Frame = 4;
 39955  01C9AC  0E1A               	movlw	26
 39956  01C9AE  19D7               	xorwf	_OLED_Frame& (0+255),w,b
 39957  01C9B0  A4D8               	btfss	status,2,c
 39958  01C9B2  D002               	goto	i2l1625
 39959                           
 39960                           ; BSR set to: 2
 39961  01C9B4  0E04               	movlw	4
 39962  01C9B6  6FD7               	movwf	_OLED_Frame& (0+255),b
 39963  01C9B8                     i2l1625:
 39964                           
 39965                           ; BSR set to: 2
 39966                           ;cap_touch_int.c: 24: OLED_update_flag = 1;
 39967  01C9B8  0E01               	movlw	1
 39968  01C9BA  6FD6               	movwf	_OLED_update_flag& (0+255),b
 39969                           
 39970                           ; BSR set to: 2
 39971  01C9BC  0012               	return		;funcret
 39972  01C9BE                     __end_of_rightCapTouchHandler:
 39973                           	opt callstack 0
 39974                           
 39975 ;; *************** function _INT1_ISR *****************
 39976 ;; Defined at:
 39977 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 39978 ;; Parameters:    Size  Location     Type
 39979 ;;		None
 39980 ;; Auto vars:     Size  Location     Type
 39981 ;;		None
 39982 ;; Return value:  Size  Location     Type
 39983 ;;                  1    wreg      void 
 39984 ;; Registers used:
 39985 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39986 ;; Tracked objects:
 39987 ;;		On entry : 0/0
 39988 ;;		On exit  : 0/0
 39989 ;;		Unchanged: 0/0
 39990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39995 ;;Total ram usage:        0 bytes
 39996 ;; Hardware stack levels used:    1
 39997 ;; Hardware stack levels required when called:    2
 39998 ;; This function calls:
 39999 ;;		_INT1_CallBack
 40000 ;; This function is called by:
 40001 ;;		_INTERRUPT_InterruptManagerHigh
 40002 ;; This function uses a non-reentrant model
 40003 ;;
 40004                           
 40005                           	psect	text173
 40006  01CBD8                     __ptext173:
 40007                           	opt callstack 0
 40008  01CBD8                     _INT1_ISR:
 40009                           	opt callstack 14
 40010                           
 40011                           ;ext_int.c: 35: (PIR0bits.INT1IF = 0);
 40012                           
 40013                           ; BSR set to: 2
 40014                           ;incstack = 0
 40015  01CBD8  010E               	movlb	14	; () banked
 40016  01CBDA  93CA               	bcf	202,1,b	;volatile
 40017                           
 40018                           ; BSR set to: 14
 40019                           ;ext_int.c: 38: INT1_CallBack();
 40020  01CBDC  EC85  F0E3         	call	_INT1_CallBack	;wreg free
 40021  01CBE0  0012               	return		;funcret
 40022  01CBE2                     __end_of_INT1_ISR:
 40023                           	opt callstack 0
 40024                           
 40025 ;; *************** function _INT1_CallBack *****************
 40026 ;; Defined at:
 40027 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 40028 ;; Parameters:    Size  Location     Type
 40029 ;;		None
 40030 ;; Auto vars:     Size  Location     Type
 40031 ;;		None
 40032 ;; Return value:  Size  Location     Type
 40033 ;;                  1    wreg      void 
 40034 ;; Registers used:
 40035 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40036 ;; Tracked objects:
 40037 ;;		On entry : 0/0
 40038 ;;		On exit  : 0/0
 40039 ;;		Unchanged: 0/0
 40040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40045 ;;Total ram usage:        0 bytes
 40046 ;; Hardware stack levels used:    1
 40047 ;; Hardware stack levels required when called:    1
 40048 ;; This function calls:
 40049 ;;		Absolute function
 40050 ;;		_INT1_DefaultInterruptHandler
 40051 ;;		_leftCapTouchHandler
 40052 ;; This function is called by:
 40053 ;;		_INT1_ISR
 40054 ;; This function uses a non-reentrant model
 40055 ;;
 40056                           
 40057                           	psect	text174
 40058  01C70A                     __ptext174:
 40059                           	opt callstack 0
 40060  01C70A                     _INT1_CallBack:
 40061                           	opt callstack 14
 40062                           
 40063                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 40064                           
 40065                           ;incstack = 0
 40066  01C70A  0101               	movlb	1	; () banked
 40067  01C70C  5186               	movf	_INT1_InterruptHandler& (0+255),w,b
 40068  01C70E  1187               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40069  01C710  1188               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 40070  01C712  B4D8               	btfsc	status,2,c
 40071  01C714  0012               	return	
 40072                           
 40073                           ; BSR set to: 1
 40074                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 40075  01C716  D801               	call	i2u1804_48
 40076  01C718  0012               	return	
 40077  01C71A                     i2u1804_48:
 40078  01C71A  0005               	push	
 40079  01C71C  6EFA               	movwf	pclath,c
 40080  01C71E  5186               	movf	_INT1_InterruptHandler& (0+255),w,b
 40081  01C720  6EFD               	movwf	tosl,c
 40082  01C722  5187               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40083  01C724  6EFE               	movwf	tosh,c
 40084  01C726  5188               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 40085  01C728  6EFF               	movwf	tosu,c
 40086  01C72A  50FA               	movf	pclath,w,c
 40087  01C72C  0012               	return		;indir
 40088  01C72E                     __end_of_INT1_CallBack:
 40089                           	opt callstack 0
 40090                           
 40091 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40092 ;; Defined at:
 40093 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 40094 ;; Parameters:    Size  Location     Type
 40095 ;;		None
 40096 ;; Auto vars:     Size  Location     Type
 40097 ;;		None
 40098 ;; Return value:  Size  Location     Type
 40099 ;;                  1    wreg      void 
 40100 ;; Registers used:
 40101 ;;		None
 40102 ;; Tracked objects:
 40103 ;;		On entry : 0/0
 40104 ;;		On exit  : 0/0
 40105 ;;		Unchanged: 0/0
 40106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40111 ;;Total ram usage:        0 bytes
 40112 ;; Hardware stack levels used:    1
 40113 ;; This function calls:
 40114 ;;		Nothing
 40115 ;; This function is called by:
 40116 ;;		_EXT_INT_Initialize
 40117 ;;		_INT1_CallBack
 40118 ;; This function uses a non-reentrant model
 40119 ;;
 40120                           
 40121                           	psect	text175
 40122  01CC48                     __ptext175:
 40123                           	opt callstack 0
 40124  01CC48                     _INT1_DefaultInterruptHandler:
 40125                           	opt callstack 14
 40126                           
 40127                           ;incstack = 0
 40128  01CC48  0012               	return		;funcret
 40129  01CC4A                     __end_of_INT1_DefaultInterruptHandler:
 40130                           	opt callstack 0
 40131                           
 40132 ;; *************** function _leftCapTouchHandler *****************
 40133 ;; Defined at:
 40134 ;;		line 11 in file "cap_touch_int.c"
 40135 ;; Parameters:    Size  Location     Type
 40136 ;;		None
 40137 ;; Auto vars:     Size  Location     Type
 40138 ;;		None
 40139 ;; Return value:  Size  Location     Type
 40140 ;;                  1    wreg      void 
 40141 ;; Registers used:
 40142 ;;		wreg, status,2, status,0
 40143 ;; Tracked objects:
 40144 ;;		On entry : 0/0
 40145 ;;		On exit  : 0/0
 40146 ;;		Unchanged: 0/0
 40147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40152 ;;Total ram usage:        0 bytes
 40153 ;; Hardware stack levels used:    1
 40154 ;; This function calls:
 40155 ;;		Nothing
 40156 ;; This function is called by:
 40157 ;;		_main
 40158 ;;		_INT1_CallBack
 40159 ;; This function uses a non-reentrant model
 40160 ;;
 40161                           
 40162                           	psect	text176
 40163  01C9BE                     __ptext176:
 40164                           	opt callstack 0
 40165  01C9BE                     _leftCapTouchHandler:
 40166                           	opt callstack 14
 40167                           
 40168                           ;cap_touch_int.c: 13: OLED_Frame--;
 40169                           
 40170                           ;incstack = 0
 40171  01C9BE  0102               	movlb	2	; () banked
 40172  01C9C0  07D7               	decf	_OLED_Frame& (0+255),f,b
 40173                           
 40174                           ; BSR set to: 2
 40175                           ;cap_touch_int.c: 14: if (OLED_Frame == 4 - 1) OLED_Frame = 25;
 40176  01C9C2  0E03               	movlw	3
 40177  01C9C4  19D7               	xorwf	_OLED_Frame& (0+255),w,b
 40178  01C9C6  A4D8               	btfss	status,2,c
 40179  01C9C8  D002               	goto	i2l1621
 40180                           
 40181                           ; BSR set to: 2
 40182  01C9CA  0E19               	movlw	25
 40183  01C9CC  6FD7               	movwf	_OLED_Frame& (0+255),b
 40184  01C9CE                     i2l1621:
 40185                           
 40186                           ; BSR set to: 2
 40187                           ;cap_touch_int.c: 15: OLED_update_flag = 1;
 40188  01C9CE  0E01               	movlw	1
 40189  01C9D0  6FD6               	movwf	_OLED_update_flag& (0+255),b
 40190                           
 40191                           ; BSR set to: 2
 40192  01C9D2  0012               	return		;funcret
 40193  01C9D4                     __end_of_leftCapTouchHandler:
 40194                           	opt callstack 0
 40195                           
 40196 ;; *************** function _EUSART2_Transmit_ISR *****************
 40197 ;; Defined at:
 40198 ;;		line 187 in file "mcc_generated_files/eusart2.c"
 40199 ;; Parameters:    Size  Location     Type
 40200 ;;		None
 40201 ;; Auto vars:     Size  Location     Type
 40202 ;;		None
 40203 ;; Return value:  Size  Location     Type
 40204 ;;                  1    wreg      void 
 40205 ;; Registers used:
 40206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40207 ;; Tracked objects:
 40208 ;;		On entry : 0/0
 40209 ;;		On exit  : 0/0
 40210 ;;		Unchanged: 0/0
 40211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40216 ;;Total ram usage:        0 bytes
 40217 ;; Hardware stack levels used:    1
 40218 ;; This function calls:
 40219 ;;		Nothing
 40220 ;; This function is called by:
 40221 ;;		_EUSART2_Initialize
 40222 ;;		_INTERRUPT_InterruptManagerHigh
 40223 ;; This function uses a non-reentrant model
 40224 ;;
 40225                           
 40226                           	psect	text177
 40227  01C3DC                     __ptext177:
 40228                           	opt callstack 0
 40229  01C3DC                     _EUSART2_Transmit_ISR:
 40230                           	opt callstack 16
 40231                           
 40232                           ;eusart2.c: 191: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 40233                           
 40234                           ; BSR set to: 2
 40235                           ;incstack = 0
 40236  01C3DC  0E40               	movlw	64
 40237  01C3DE  0101               	movlb	1	; () banked
 40238  01C3E0  6193               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 40239  01C3E2  D012               	goto	i2l136
 40240                           
 40241                           ; BSR set to: 1
 40242                           ;eusart2.c: 192: {;eusart2.c: 193: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 40243  01C3E4  0EC0               	movlw	low _eusart2TxBuffer
 40244  01C3E6  2594               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 40245  01C3E8  6ED9               	movwf	fsr2l,c
 40246  01C3EA  6ADA               	clrf	fsr2h,c
 40247  01C3EC  0E04               	movlw	high _eusart2TxBuffer
 40248  01C3EE  22DA               	addwfc	fsr2h,f,c
 40249  01C3F0  50DF               	movf	indf2,w,c
 40250  01C3F2  010E               	movlb	14	; () banked
 40251  01C3F4  6F9A               	movwf	154,b	;volatile
 40252                           
 40253                           ; BSR set to: 14
 40254  01C3F6  0101               	movlb	1	; () banked
 40255  01C3F8  2B94               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 40256                           
 40257                           ; BSR set to: 1
 40258                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 40259  01C3FA  0E3F               	movlw	63
 40260  01C3FC  6594               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 40261  01C3FE  D002               	goto	i2l15726
 40262                           
 40263                           ; BSR set to: 1
 40264                           ;eusart2.c: 195: {;eusart2.c: 196: eusart2TxTail = 0;
 40265  01C400  0E00               	movlw	0
 40266  01C402  6F94               	movwf	_eusart2TxTail& (0+255),b	;volatile
 40267  01C404                     i2l15726:
 40268                           
 40269                           ; BSR set to: 1
 40270                           ;eusart2.c: 197: };eusart2.c: 198: eusart2TxBufferRemaining++;
 40271  01C404  2B93               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 40272                           
 40273                           ;eusart2.c: 199: }
 40274  01C406  0012               	return	
 40275  01C408                     i2l136:
 40276                           
 40277                           ; BSR set to: 1
 40278                           ;eusart2.c: 200: else;eusart2.c: 201: {;eusart2.c: 202: PIE3bits.TX2IE = 0;
 40279  01C408  010E               	movlb	14	; () banked
 40280  01C40A  9DC5               	bcf	197,6,b	;volatile
 40281  01C40C  0012               	return		;funcret
 40282  01C40E                     __end_of_EUSART2_Transmit_ISR:
 40283                           	opt callstack 0
 40284                           
 40285 ;; *************** function _EUSART2_Receive_ISR *****************
 40286 ;; Defined at:
 40287 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 40288 ;; Parameters:    Size  Location     Type
 40289 ;;		None
 40290 ;; Auto vars:     Size  Location     Type
 40291 ;;		None
 40292 ;; Return value:  Size  Location     Type
 40293 ;;                  1    wreg      void 
 40294 ;; Registers used:
 40295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40296 ;; Tracked objects:
 40297 ;;		On entry : 0/0
 40298 ;;		On exit  : 0/0
 40299 ;;		Unchanged: 0/0
 40300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40305 ;;Total ram usage:        0 bytes
 40306 ;; Hardware stack levels used:    1
 40307 ;; Hardware stack levels required when called:    4
 40308 ;; This function calls:
 40309 ;;		i2_printf
 40310 ;; This function is called by:
 40311 ;;		_EUSART2_Initialize
 40312 ;;		_INTERRUPT_InterruptManagerHigh
 40313 ;; This function uses a non-reentrant model
 40314 ;;
 40315                           
 40316                           	psect	text178
 40317  01AE98                     __ptext178:
 40318                           	opt callstack 0
 40319  01AE98                     _EUSART2_Receive_ISR:
 40320                           	opt callstack 12
 40321                           
 40322                           ;eusart2.c: 209: if(1 == RC2STAbits.OERR)
 40323                           
 40324                           ;incstack = 0
 40325  01AE98  010E               	movlb	14	; () banked
 40326  01AE9A  A39D               	btfss	157,1,b	;volatile
 40327  01AE9C  D005               	goto	i2l21504
 40328                           
 40329                           ; BSR set to: 14
 40330                           ;eusart2.c: 210: {;eusart2.c: 213: RC2STAbits.CREN = 0;
 40331  01AE9E  999D               	bcf	157,4,b	;volatile
 40332                           
 40333                           ;eusart2.c: 214: RC2STAbits.CREN = 1;
 40334  01AEA0  899D               	bsf	157,4,b	;volatile
 40335                           
 40336                           ; BSR set to: 14
 40337                           ;eusart2.c: 215: error_handler.USB_UART_COMM_error_flag = 1;
 40338  01AEA2  0E01               	movlw	1
 40339  01AEA4  0100               	movlb	0	; () banked
 40340  01AEA6  6FC0               	movwf	(_error_handler+7)& (0+255),b
 40341  01AEA8                     i2l21504:
 40342                           
 40343                           ;eusart2.c: 216: };eusart2.c: 219: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 40344  01AEA8  0E80               	movlw	low _eusart2RxBuffer
 40345  01AEAA  0100               	movlb	0	; () banked
 40346  01AEAC  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40347  01AEAE  6ED9               	movwf	fsr2l,c
 40348  01AEB0  6ADA               	clrf	fsr2h,c
 40349  01AEB2  0E04               	movlw	high _eusart2RxBuffer
 40350  01AEB4  22DA               	addwfc	fsr2h,f,c
 40351  01AEB6  CE99 FFDF          	movff	3737,indf2	;volatile
 40352                           
 40353                           ; BSR set to: 0
 40354  01AEBA  2BDC               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 40355                           
 40356                           ; BSR set to: 0
 40357                           ;eusart2.c: 220: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 40358  01AEBC  0E3F               	movlw	63
 40359  01AEBE  65DC               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 40360  01AEC0  D002               	goto	i2l21512
 40361                           
 40362                           ; BSR set to: 0
 40363                           ;eusart2.c: 221: {;eusart2.c: 222: eusart2RxHead = 0;
 40364  01AEC2  0E00               	movlw	0
 40365  01AEC4  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 40366  01AEC6                     i2l21512:
 40367                           
 40368                           ; BSR set to: 0
 40369                           ;eusart2.c: 223: };eusart2.c: 224: eusart2RxCount++;
 40370  01AEC6  0101               	movlb	1	; () banked
 40371  01AEC8  2B91               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 40372                           
 40373                           ; BSR set to: 1
 40374                           ;eusart2.c: 226: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 40375  01AECA  0E0A               	movlw	10
 40376  01AECC  010E               	movlb	14	; () banked
 40377  01AECE  1999               	xorwf	153,w,b	;volatile
 40378  01AED0  B4D8               	btfsc	status,2,c
 40379  01AED2  D004               	goto	i2u2756_40
 40380                           
 40381                           ; BSR set to: 14
 40382  01AED4  0E0D               	movlw	13
 40383  01AED6  1999               	xorwf	153,w,b	;volatile
 40384  01AED8  A4D8               	btfss	status,2,c
 40385  01AEDA  D006               	goto	i2l144
 40386  01AEDC                     i2u2756_40:
 40387                           
 40388                           ; BSR set to: 14
 40389                           ;eusart2.c: 228: eusart2RxStringReady = 1;
 40390  01AEDC  0100               	movlb	0	; () banked
 40391  01AEDE  81FD               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40392                           
 40393                           ; BSR set to: 0
 40394                           ;eusart2.c: 231: RC2REG = 0;
 40395  01AEE0  0E00               	movlw	0
 40396  01AEE2  010E               	movlb	14	; () banked
 40397  01AEE4  6F99               	movwf	153,b	;volatile
 40398                           
 40399                           ;eusart2.c: 233: }
 40400  01AEE6  D002               	goto	i2l21520
 40401  01AEE8                     i2l144:
 40402                           
 40403                           ; BSR set to: 14
 40404                           ;eusart2.c: 235: else {;eusart2.c: 237: eusart2RxStringReady = 0;
 40405  01AEE8  0100               	movlb	0	; () banked
 40406  01AEEA  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 40407  01AEEC                     i2l21520:
 40408                           
 40409                           ;eusart2.c: 239: };eusart2.c: 242: if((RC2REG == (int) '\b')) {
 40410  01AEEC  0E08               	movlw	8
 40411  01AEEE  010E               	movlb	14	; () banked
 40412  01AEF0  1999               	xorwf	153,w,b	;volatile
 40413  01AEF2  A4D8               	btfss	status,2,c
 40414  01AEF4  0012               	return	
 40415                           
 40416                           ; BSR set to: 14
 40417                           ;eusart2.c: 244: eusart2RxBuffer[eusart2RxHead] = '\0';
 40418  01AEF6  0E80               	movlw	low _eusart2RxBuffer
 40419  01AEF8  0100               	movlb	0	; () banked
 40420  01AEFA  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40421  01AEFC  6ED9               	movwf	fsr2l,c
 40422  01AEFE  6ADA               	clrf	fsr2h,c
 40423  01AF00  0E04               	movlw	high _eusart2RxBuffer
 40424  01AF02  22DA               	addwfc	fsr2h,f,c
 40425  01AF04  0E00               	movlw	0
 40426  01AF06  6EDF               	movwf	indf2,c
 40427                           
 40428                           ; BSR set to: 0
 40429                           ;eusart2.c: 245: eusart2RxHead--;
 40430  01AF08  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40431                           
 40432                           ; BSR set to: 0
 40433                           ;eusart2.c: 248: printf("\033[K");
 40434  01AF0A  0EC7               	movlw	low STR_1
 40435  01AF0C  6FA4               	movwf	i2printf@f& (0+255),b
 40436  01AF0E  0EFF               	movlw	high STR_1
 40437  01AF10  6FA5               	movwf	(i2printf@f+1)& (0+255),b
 40438  01AF12  EC14  F0E1         	call	i2_printf	;wreg free
 40439                           
 40440                           ;eusart2.c: 250: if(eusart2RxHead != eusart2RxTail) {
 40441  01AF16  0101               	movlb	1	; () banked
 40442  01AF18  5192               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 40443  01AF1A  0100               	movlb	0	; () banked
 40444  01AF1C  19DC               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 40445  01AF1E  B4D8               	btfsc	status,2,c
 40446  01AF20  D009               	goto	i2l21534
 40447                           
 40448                           ; BSR set to: 0
 40449                           ;eusart2.c: 252: eusart2RxBuffer[eusart2RxHead] = '\0';
 40450  01AF22  0E80               	movlw	low _eusart2RxBuffer
 40451  01AF24  25DC               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 40452  01AF26  6ED9               	movwf	fsr2l,c
 40453  01AF28  6ADA               	clrf	fsr2h,c
 40454  01AF2A  0E04               	movlw	high _eusart2RxBuffer
 40455  01AF2C  22DA               	addwfc	fsr2h,f,c
 40456  01AF2E  0E00               	movlw	0
 40457  01AF30  6EDF               	movwf	indf2,c
 40458                           
 40459                           ; BSR set to: 0
 40460                           ;eusart2.c: 253: eusart2RxHead--;
 40461  01AF32  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 40462  01AF34                     i2l21534:
 40463                           
 40464                           ; BSR set to: 0
 40465                           ;eusart2.c: 255: };eusart2.c: 257: RC2REG = 0;
 40466  01AF34  0E00               	movlw	0
 40467  01AF36  010E               	movlb	14	; () banked
 40468  01AF38  6F99               	movwf	153,b	;volatile
 40469                           
 40470                           ; BSR set to: 14
 40471  01AF3A  0012               	return		;funcret
 40472  01AF3C                     __end_of_EUSART2_Receive_ISR:
 40473                           	opt callstack 0
 40474                           
 40475 ;; *************** function i2_printf *****************
 40476 ;; Defined at:
 40477 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\printf.c"
 40478 ;; Parameters:    Size  Location     Type
 40479 ;;  f               2   68[BANK0 ] PTR const unsigned char 
 40480 ;;		 -> STR_362(60), STR_361(24), STR_360(24), STR_359(24), 
 40481 ;;		 -> STR_358(27), STR_357(20), STR_356(35), STR_355(34), 
 40482 ;;		 -> STR_354(37), STR_353(34), STR_352(36), STR_351(35), 
 40483 ;;		 -> STR_350(33), STR_349(35), STR_348(20), STR_347(23), 
 40484 ;;		 -> STR_346(20), STR_345(22), STR_344(21), STR_343(19), 
 40485 ;;		 -> STR_342(21), STR_341(27), STR_340(18), STR_339(11), 
 40486 ;;		 -> terminalTextAttributes@print_string(16), STR_309(4), STR_308(4), STR_307(4), 
 40487 ;;		 -> STR_306(4), STR_305(5), STR_297(3), STR_296(39), 
 40488 ;;		 -> STR_295(96), STR_294(62), STR_293(34), STR_292(3), 
 40489 ;;		 -> STR_291(50), STR_290(56), STR_289(55), STR_288(27), 
 40490 ;;		 -> STR_287(3), STR_286(58), STR_285(40), STR_284(63), 
 40491 ;;		 -> STR_283(42), STR_282(36), STR_281(3), STR_280(61), 
 40492 ;;		 -> STR_279(3), STR_278(59), STR_277(3), STR_276(45), 
 40493 ;;		 -> STR_275(3), STR_274(58), STR_273(59), STR_272(20), 
 40494 ;;		 -> STR_271(3), STR_270(54), STR_269(52), STR_268(23), 
 40495 ;;		 -> STR_267(3), STR_266(43), STR_265(44), STR_264(23), 
 40496 ;;		 -> STR_263(48), STR_262(3), STR_261(50), STR_260(58), 
 40497 ;;		 -> STR_259(35), STR_258(32), STR_257(64), STR_256(30), 
 40498 ;;		 -> STR_255(31), STR_254(63), STR_253(33), STR_252(35), 
 40499 ;;		 -> STR_251(37), STR_250(40), STR_249(28), STR_248(46), 
 40500 ;;		 -> STR_247(31), STR_246(52), STR_245(14), STR_244(28), 
 40501 ;;		 -> STR_243(50), STR_242(29), STR_241(36), STR_240(45), 
 40502 ;;		 -> STR_239(88), STR_238(37), STR_237(3), STR_236(30), 
 40503 ;;		 -> STR_235(46), STR_234(39), STR_233(62), STR_232(57), 
 40504 ;;		 -> STR_231(653), STR_230(22), STR_229(3), STR_227(29), 
 40505 ;;		 -> STR_225(3), STR_224(47), STR_223(3), STR_220(24), 
 40506 ;;		 -> STR_218(23), STR_216(23), STR_214(3), STR_213(3), 
 40507 ;;		 -> STR_212(54), STR_211(3), STR_210(56), STR_209(3), 
 40508 ;;		 -> STR_208(60), STR_207(61), STR_206(3), STR_205(62), 
 40509 ;;		 -> STR_204(3), STR_203(50), STR_202(3), STR_201(45), 
 40510 ;;		 -> STR_200(3), STR_198(54), STR_196(4), STR_195(5), 
 40511 ;;		 -> STR_193(4), STR_192(5), STR_12(26), STR_11(23), 
 40512 ;;		 -> STR_10(47), STR_9(30), STR_8(46), STR_7(39), 
 40513 ;;		 -> STR_6(62), STR_5(57), STR_4(39), STR_3(44), 
 40514 ;;		 -> STR_2(52), STR_1(4), 
 40515 ;; Auto vars:     Size  Location     Type
 40516 ;;  printf          5   72[BANK0 ] struct __prbuf
 40517 ;;  printf          2   70[BANK0 ] PTR void [1]
 40518 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 40519 ;; Return value:  Size  Location     Type
 40520 ;;                  2   68[BANK0 ] int 
 40521 ;; Registers used:
 40522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40523 ;; Tracked objects:
 40524 ;;		On entry : 0/0
 40525 ;;		On exit  : 0/0
 40526 ;;		Unchanged: 0/0
 40527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40529 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40531 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40532 ;;Total ram usage:        9 bytes
 40533 ;; Hardware stack levels used:    1
 40534 ;; Hardware stack levels required when called:    3
 40535 ;; This function calls:
 40536 ;;		i2__doprnt
 40537 ;; This function is called by:
 40538 ;;		_EUSART2_Receive_ISR
 40539 ;; This function uses a non-reentrant model
 40540 ;;
 40541                           
 40542                           	psect	text179
 40543  01C228                     __ptext179:
 40544                           	opt callstack 0
 40545  01C228                     i2_printf:
 40546                           	opt callstack 12
 40547                           
 40548                           ; BSR set to: 14
 40549                           ;incstack = 0
 40550  01C228  0E00               	movlw	0
 40551  01C22A  0100               	movlb	0	; () banked
 40552  01C22C  6FA8               	movwf	i2printf@pb& (0+255),b
 40553  01C22E  0E00               	movlw	0
 40554  01C230  6FA9               	movwf	(i2printf@pb+1)& (0+255),b
 40555  01C232  0EE2               	movlw	low i2_putch
 40556  01C234  6FAA               	movwf	(i2printf@pb+2)& (0+255),b
 40557  01C236  0ECB               	movlw	high i2_putch
 40558  01C238  6FAB               	movwf	(i2printf@pb+3)& (0+255),b
 40559  01C23A  0E01               	movlw	low (i2_putch shr (0+16))
 40560  01C23C  6FAC               	movwf	(i2printf@pb+4)& (0+255),b
 40561  01C23E  0EA6               	movlw	low (?i2_printf+2)
 40562  01C240  6FA6               	movwf	i2printf@ap& (0+255),b
 40563  01C242  0E00               	movlw	high (?i2_printf+2)
 40564  01C244  6FA7               	movwf	(i2printf@ap+1)& (0+255),b
 40565                           
 40566                           ; BSR set to: 0
 40567                           ;	Return value of i2_printf is never used
 40568  01C246  0EA8               	movlw	low i2printf@pb
 40569  01C248  6F6C               	movwf	i2__doprnt@pb& (0+255),b
 40570  01C24A  0E00               	movlw	high i2printf@pb
 40571  01C24C  6F6D               	movwf	(i2__doprnt@pb+1)& (0+255),b
 40572  01C24E  C0A4  F06E         	movff	i2printf@f,i2__doprnt@f
 40573  01C252  C0A5  F06F         	movff	i2printf@f+1,i2__doprnt@f+1
 40574  01C256  0EA6               	movlw	low i2printf@ap
 40575  01C258  6F70               	movwf	i2__doprnt@ap& (0+255),b
 40576  01C25A  0E00               	movlw	high i2printf@ap
 40577  01C25C  6F71               	movwf	(i2__doprnt@ap+1)& (0+255),b
 40578  01C25E  EC92  F08B         	call	i2__doprnt	;wreg free
 40579  01C262  0012               	return		;funcret
 40580  01C264                     __end_ofi2_printf:
 40581                           	opt callstack 0
 40582                           
 40583 ;; *************** function i2__doprnt *****************
 40584 ;; Defined at:
 40585 ;;		line 466 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 40586 ;; Parameters:    Size  Location     Type
 40587 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 40588 ;;		 -> i2printf@pb(5), sprintf@pb(5), printf@pb(5), 
 40589 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 40590 ;;		 -> STR_365(11), STR_362(60), STR_361(24), STR_360(24), 
 40591 ;;		 -> STR_359(24), STR_358(27), STR_357(20), STR_356(35), 
 40592 ;;		 -> STR_355(34), STR_354(37), STR_353(34), STR_352(36), 
 40593 ;;		 -> STR_351(35), STR_350(33), STR_349(35), STR_348(20), 
 40594 ;;		 -> STR_347(23), STR_346(20), STR_345(22), STR_344(21), 
 40595 ;;		 -> STR_343(19), STR_342(21), STR_341(27), STR_340(18), 
 40596 ;;		 -> STR_339(11), terminalTextAttributes@print_string(16), STR_309(4), STR_308(4), 
 40597 ;;		 -> STR_307(4), STR_306(4), STR_305(5), STR_304(5), 
 40598 ;;		 -> STR_303(9), STR_302(9), STR_301(9), STR_300(8), 
 40599 ;;		 -> STR_299(9), STR_298(9), STR_297(3), STR_296(39), 
 40600 ;;		 -> STR_295(96), STR_294(62), STR_293(34), STR_292(3), 
 40601 ;;		 -> STR_291(50), STR_290(56), STR_289(55), STR_288(27), 
 40602 ;;		 -> STR_287(3), STR_286(58), STR_285(40), STR_284(63), 
 40603 ;;		 -> STR_283(42), STR_282(36), STR_281(3), STR_280(61), 
 40604 ;;		 -> STR_279(3), STR_278(59), STR_277(3), STR_276(45), 
 40605 ;;		 -> STR_275(3), STR_274(58), STR_273(59), STR_272(20), 
 40606 ;;		 -> STR_271(3), STR_270(54), STR_269(52), STR_268(23), 
 40607 ;;		 -> STR_267(3), STR_266(43), STR_265(44), STR_264(23), 
 40608 ;;		 -> STR_263(48), STR_262(3), STR_261(50), STR_260(58), 
 40609 ;;		 -> STR_259(35), STR_258(32), STR_257(64), STR_256(30), 
 40610 ;;		 -> STR_255(31), STR_254(63), STR_253(33), STR_252(35), 
 40611 ;;		 -> STR_251(37), STR_250(40), STR_249(28), STR_248(46), 
 40612 ;;		 -> STR_247(31), STR_246(52), STR_245(14), STR_244(28), 
 40613 ;;		 -> STR_243(50), STR_242(29), STR_241(36), STR_240(45), 
 40614 ;;		 -> STR_239(88), STR_238(37), STR_237(3), STR_236(30), 
 40615 ;;		 -> STR_235(46), STR_234(39), STR_233(62), STR_232(57), 
 40616 ;;		 -> STR_231(653), STR_230(22), STR_229(3), STR_227(29), 
 40617 ;;		 -> STR_225(3), STR_224(47), STR_223(3), STR_220(24), 
 40618 ;;		 -> STR_218(23), STR_216(23), STR_214(3), STR_213(3), 
 40619 ;;		 -> STR_212(54), STR_211(3), STR_210(56), STR_209(3), 
 40620 ;;		 -> STR_208(60), STR_207(61), STR_206(3), STR_205(62), 
 40621 ;;		 -> STR_204(3), STR_203(50), STR_202(3), STR_201(45), 
 40622 ;;		 -> STR_200(3), STR_198(54), STR_196(4), STR_195(5), 
 40623 ;;		 -> STR_193(4), STR_192(5), STR_182(7), STR_180(5), 
 40624 ;;		 -> STR_173(4), STR_168(4), STR_163(11), STR_158(11), 
 40625 ;;		 -> STR_157(11), STR_156(11), STR_155(11), STR_154(9), 
 40626 ;;		 -> STR_150(11), STR_148(11), STR_147(11), STR_146(11), 
 40627 ;;		 -> STR_145(11), STR_144(9), STR_143(11), STR_142(9), 
 40628 ;;		 -> STR_141(8), STR_140(9), STR_139(8), STR_138(9), 
 40629 ;;		 -> STR_134(5), STR_124(8), STR_120(8), STR_116(8), 
 40630 ;;		 -> STR_112(8), STR_108(9), STR_103(8), STR_98(8), 
 40631 ;;		 -> STR_94(8), STR_89(8), STR_85(8), STR_81(8), 
 40632 ;;		 -> STR_68(7), STR_66(5), STR_59(11), STR_58(10), 
 40633 ;;		 -> STR_57(13), STR_56(12), STR_55(11), STR_54(10), 
 40634 ;;		 -> STR_53(10), STR_52(9), STR_51(11), STR_50(10), 
 40635 ;;		 -> STR_12(26), STR_11(23), STR_10(47), STR_9(30), 
 40636 ;;		 -> STR_8(46), STR_7(39), STR_6(62), STR_5(57), 
 40637 ;;		 -> STR_4(39), STR_3(44), STR_2(52), STR_1(4), 
 40638 ;;  ap              2   16[BANK0 ] PTR PTR void 
 40639 ;;		 -> i2printf@ap(2), sprintf@ap(2), printf@ap(2), 
 40640 ;; Auto vars:     Size  Location     Type
 40641 ;;  _doprnt         4   57[BANK0 ] unsigned long 
 40642 ;;  _doprnt         4   53[BANK0 ] unsigned long 
 40643 ;;  _doprnt         4   49[BANK0 ] struct .
 40644 ;;  _doprnt         2   65[BANK0 ] unsigned short 
 40645 ;;  _doprnt         2   63[BANK0 ] int 
 40646 ;;  _doprnt         2   61[BANK0 ] int 
 40647 ;;  _doprnt         2   47[BANK0 ] int 
 40648 ;;  _doprnt         2   45[BANK0 ] unsigned int 
 40649 ;;  _doprnt         2   43[BANK0 ] PTR const unsigned char 
 40650 ;;		 -> i2__doprnt@c(1), ?_sprintf(2), ?_printf(2), ftoa@buf(17), 
 40651 ;;		 -> STR_363(7), _doprnt@c(1), freqMeasConvert@qi_period(4), floatToEngineeringFormat@result(20), 
 40652 ;;		 -> OLED_updateHandler@rev_id_str(17), OLED_updateHandler@dev_id_str(17), OLED_RAM_Buffer(68), getStringSecondsAsTim
      +e@buff(20), 
 40653 ;;		 -> getStringSecondsAsTime@return_string(40), STR_49(10), STR_48(13), STR_47(13), 
 40654 ;;		 -> STR_46(12), STR_45(12), STR_44(13), STR_43(12), 
 40655 ;;		 -> STR_32(16), STR_31(22), STR_30(21), STR_29(27), 
 40656 ;;		 -> STR_28(41), STR_27(32), STR_26(19), STR_25(16), 
 40657 ;;		 -> STR_24(15), STR_23(16), STR_17(10), STR_16(6), 
 40658 ;;		 -> STR_15(14), STR_14(9), STR_13(5), LM73Convert@Ambient_Conv(2), 
 40659 ;;		 -> LM73Convert@POS5_Conv(2), LM73Convert@QI_Conv(2), NULL(0), 
 40660 ;;  _doprnt         1   67[BANK0 ] unsigned char 
 40661 ;;  _doprnt         1   26[BANK0 ] unsigned char 
 40662 ;;  _doprnt         1    0        unsigned char 
 40663 ;; Return value:  Size  Location     Type
 40664 ;;                  2   12[BANK0 ] int 
 40665 ;; Registers used:
 40666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40667 ;; Tracked objects:
 40668 ;;		On entry : 0/0
 40669 ;;		On exit  : 0/0
 40670 ;;		Unchanged: 0/0
 40671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40672 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40673 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40674 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40675 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40676 ;;Total ram usage:       56 bytes
 40677 ;; Hardware stack levels used:    1
 40678 ;; Hardware stack levels required when called:    2
 40679 ;; This function calls:
 40680 ;;		Absolute function
 40681 ;;		i2___awdiv
 40682 ;;		i2___fladd
 40683 ;;		i2___fleq
 40684 ;;		i2___flge
 40685 ;;		i2___flmul
 40686 ;;		i2___flneg
 40687 ;;		i2___flsub
 40688 ;;		i2___fltol
 40689 ;;		i2___lldiv
 40690 ;;		i2___llmod
 40691 ;;		i2___wmul
 40692 ;;		i2___xxtofl
 40693 ;;		i2__div_to_l_
 40694 ;;		i2__tdiv_to_l_
 40695 ;;		i2_fround
 40696 ;;		i2_isdigit
 40697 ;;		i2_putch
 40698 ;;		i2_scale
 40699 ;; This function is called by:
 40700 ;;		i2_printf
 40701 ;; This function uses a non-reentrant model
 40702 ;;
 40703                           
 40704                           	psect	text180
 40705  011724                     __ptext180:
 40706                           	opt callstack 0
 40707  011724                     i2__doprnt:
 40708                           	opt callstack 12
 40709                           
 40710                           ;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 512: int prec;;doprnt.c: 520
      +                          : unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: double fval;;doprnt.c: 529:
      +                           int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;doprnt.c: 537: double
      +                           integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long val;;doprnt.c: 541: unsign
      +                          ed len;;doprnt.c: 542: const char * cp;;doprnt.c: 548: while((c = *f++)) {
 40711                           
 40712                           ;incstack = 0
 40713  011724  EFFB  F096         	goto	i2u2699_40
 40714  011728                     i2l20246:
 40715                           
 40716                           ; BSR set to: 0
 40717                           ;doprnt.c: 550: if(c != '%')
 40718  011728  0E25               	movlw	37
 40719  01172A  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 40720  01172C  B4D8               	btfsc	status,2,c
 40721  01172E  D036               	goto	i2l20256
 40722                           
 40723                           ; BSR set to: 0
 40724  011730  EE20 F002          	lfsr	2,2
 40725  011734  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40726  011736  26D9               	addwf	fsr2l,f,c
 40727  011738  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40728  01173A  22DA               	addwfc	fsr2h,f,c
 40729  01173C  50DE               	movf	postinc2,w,c
 40730  01173E  10DE               	iorwf	postinc2,w,c
 40731  011740  10DE               	iorwf	postinc2,w,c
 40732  011742  B4D8               	btfsc	status,2,c
 40733  011744  D014               	goto	i2l20252
 40734                           
 40735                           ; BSR set to: 0
 40736  011746  EE20 F002          	lfsr	2,2
 40737  01174A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 40738  01174C  26D9               	addwf	fsr2l,f,c
 40739  01174E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 40740  011750  22DA               	addwfc	fsr2h,f,c
 40741  011752  D802               	call	i2u2571_48
 40742  011754  EFFB  F096         	goto	i2u2699_40
 40743  011758                     i2u2571_48:
 40744  011758  0005               	push	
 40745  01175A  6EFA               	movwf	pclath,c
 40746  01175C  50DE               	movf	postinc2,w,c
 40747  01175E  6EFD               	movwf	tosl,c
 40748  011760  50DE               	movf	postinc2,w,c
 40749  011762  6EFE               	movwf	tosh,c
 40750  011764  50DE               	movf	postinc2,w,c
 40751  011766  6EFF               	movwf	tosu,c
 40752  011768  50FA               	movf	pclath,w,c
 40753  01176A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 40754  01176C  0012               	return		;indir
 40755  01176E                     i2l20252:
 40756                           
 40757                           ; BSR set to: 0
 40758  01176E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40759  011772  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40760  011776  CFDE F072          	movff	postinc2,??i2__doprnt
 40761  01177A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 40762  01177E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 40763  011782  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 40764  011786  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 40765                           
 40766                           ; BSR set to: 0
 40767  01178A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 40768  01178E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 40769  011792  2ADE               	incf	postinc2,f,c
 40770  011794  0E00               	movlw	0
 40771  011796  22DD               	addwfc	postdec2,f,c
 40772  011798  EFFB  F096         	goto	i2u2699_40
 40773  01179C                     i2l20256:
 40774                           
 40775                           ; BSR set to: 0
 40776                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 40777  01179C  0E00               	movlw	0
 40778  01179E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40779  0117A0  0E00               	movlw	0
 40780  0117A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40781                           
 40782                           ;doprnt.c: 560: flag = 0;
 40783  0117A4  0E00               	movlw	0
 40784  0117A6  6FA2               	movwf	(i2__doprnt@flag+1)& (0+255),b
 40785  0117A8  0E00               	movlw	0
 40786  0117AA  6FA1               	movwf	i2__doprnt@flag& (0+255),b
 40787  0117AC  D00A               	goto	i2l20266
 40788  0117AE                     i2l20258:
 40789                           
 40790                           ;doprnt.c: 573: flag |= 0x01;
 40791  0117AE  0100               	movlb	0	; () banked
 40792  0117B0  81A1               	bsf	i2__doprnt@flag& (0+255),0,b
 40793  0117B2  D005               	goto	L35
 40794  0117B4                     i2l20260:
 40795                           
 40796                           ;doprnt.c: 580: flag |= 0x02;
 40797  0117B4  0100               	movlb	0	; () banked
 40798  0117B6  83A1               	bsf	i2__doprnt@flag& (0+255),1,b
 40799  0117B8  D002               	goto	L35
 40800  0117BA                     i2l20262:
 40801                           
 40802                           ;doprnt.c: 592: flag |= 0x04;
 40803  0117BA  0100               	movlb	0	; () banked
 40804  0117BC  85A1               	bsf	i2__doprnt@flag& (0+255),2,b
 40805  0117BE                     L35:
 40806                           
 40807                           ;doprnt.c: 593: f++;
 40808  0117BE  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40809  0117C0  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40810  0117C2                     i2l20266:
 40811                           
 40812                           ; BSR set to: 0
 40813  0117C2  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40814  0117C6  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40815  0117CA  0E00               	movlw	low (__mediumconst shr (0+16))
 40816  0117CC  6EF8               	movwf	tblptru,c
 40817  0117CE  0E0E               	movlw	(high __ramtop+-1)
 40818  0117D0  64F7               	cpfsgt	tblptrh,c
 40819  0117D2  D003               	bra	i2u2572_47
 40820  0117D4  0008               	tblrd		*
 40821  0117D6  50F5               	movf	tablat,w,c
 40822  0117D8  D005               	bra	i2u2572_40
 40823  0117DA                     i2u2572_47:
 40824  0117DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40825  0117DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40826  0117E2  50EF               	movf	indf0,w,c
 40827  0117E4                     i2u2572_40:
 40828                           
 40829                           ; Switch size 1, requested type "simple"
 40830                           ; Number of cases is 3, Range of values is 32 to 48
 40831                           ; switch strategies available:
 40832                           ; Name         Instructions Cycles
 40833                           ; simple_byte           10     6 (average)
 40834                           ;	Chosen strategy is simple_byte
 40835  0117E4  0A20               	xorlw	32	; case 32
 40836  0117E6  B4D8               	btfsc	status,2,c
 40837  0117E8  D7E2               	goto	i2l20258
 40838  0117EA  0A0B               	xorlw	11	; case 43
 40839  0117EC  B4D8               	btfsc	status,2,c
 40840  0117EE  D7E2               	goto	i2l20260
 40841  0117F0  0A1B               	xorlw	27	; case 48
 40842  0117F2  B4D8               	btfsc	status,2,c
 40843  0117F4  D7E2               	goto	i2l20262
 40844                           
 40845                           ;doprnt.c: 601: if(flag & 0x02)
 40846  0117F6  0100               	movlb	0	; () banked
 40847  0117F8  B3A1               	btfsc	i2__doprnt@flag& (0+255),1,b
 40848                           
 40849                           ; BSR set to: 0
 40850                           ;doprnt.c: 602: flag &= ~0x01;
 40851  0117FA  91A1               	bcf	i2__doprnt@flag& (0+255),0,b
 40852                           
 40853                           ; BSR set to: 0
 40854                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 40855  0117FC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40856  011800  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40857  011804  0E00               	movlw	low (__mediumconst shr (0+16))
 40858  011806  6EF8               	movwf	tblptru,c
 40859  011808  0E0E               	movlw	(high __ramtop+-1)
 40860  01180A  64F7               	cpfsgt	tblptrh,c
 40861  01180C  D003               	bra	i2u2574_47
 40862  01180E  0008               	tblrd		*
 40863  011810  50F5               	movf	tablat,w,c
 40864  011812  D005               	bra	i2u2574_40
 40865  011814                     i2u2574_47:
 40866  011814  CFF6 FFE9          	movff	tblptrl,fsr0l
 40867  011818  CFF7 FFEA          	movff	tblptrh,fsr0h
 40868  01181C  50EF               	movf	indf0,w,c
 40869  01181E                     i2u2574_40:
 40870  01181E  EC29  F0E4         	call	i2_isdigit
 40871  011822  A0D8               	btfss	status,0,c
 40872  011824  D04B               	goto	i2u2578_40
 40873                           
 40874                           ;doprnt.c: 610: width = 0;
 40875  011826  0E00               	movlw	0
 40876  011828  0100               	movlb	0	; () banked
 40877  01182A  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 40878  01182C  0E00               	movlw	0
 40879  01182E  6F9D               	movwf	i2__doprnt@width& (0+255),b
 40880  011830                     i2l20274:
 40881                           
 40882                           ;doprnt.c: 612: width *= 10;
 40883  011830  C09D  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 40884  011834  C09E  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 40885  011838  0E00               	movlw	0
 40886  01183A  6E04               	movwf	i2___wmul@multiplicand+1,c
 40887  01183C  0E0A               	movlw	10
 40888  01183E  6E03               	movwf	i2___wmul@multiplicand,c
 40889  011840  EC60  F0E3         	call	i2___wmul	;wreg free
 40890  011844  C001  F09D         	movff	?i2___wmul,i2__doprnt@width
 40891  011848  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@width+1
 40892                           
 40893                           ;doprnt.c: 613: width += *f++ - '0';
 40894  01184C  0ED0               	movlw	208
 40895  01184E  0100               	movlb	0	; () banked
 40896  011850  6F72               	movwf	??i2__doprnt& (0+255),b
 40897  011852  0EFF               	movlw	255
 40898  011854  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 40899  011856  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40900  01185A  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40901  01185E  0E00               	movlw	low (__mediumconst shr (0+16))
 40902  011860  6EF8               	movwf	tblptru,c
 40903  011862  0E0E               	movlw	(high __ramtop+-1)
 40904  011864  64F7               	cpfsgt	tblptrh,c
 40905  011866  D003               	bra	i2u2576_47
 40906  011868  0008               	tblrd		*
 40907  01186A  50F5               	movf	tablat,w,c
 40908  01186C  D005               	bra	i2u2576_40
 40909  01186E                     i2u2576_47:
 40910  01186E  CFF6 FFE9          	movff	tblptrl,fsr0l
 40911  011872  CFF7 FFEA          	movff	tblptrh,fsr0h
 40912  011876  50EF               	movf	indf0,w,c
 40913  011878                     i2u2576_40:
 40914  011878  0100               	movlb	0	; () banked
 40915  01187A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 40916  01187C  6B75               	clrf	(??i2__doprnt+3)& (0+255),b
 40917  01187E  5172               	movf	??i2__doprnt& (0+255),w,b
 40918  011880  2774               	addwf	(??i2__doprnt+2)& (0+255),f,b
 40919  011882  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 40920  011884  2375               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 40921  011886  5174               	movf	(??i2__doprnt+2)& (0+255),w,b
 40922  011888  279D               	addwf	i2__doprnt@width& (0+255),f,b
 40923  01188A  5175               	movf	(??i2__doprnt+3)& (0+255),w,b
 40924  01188C  239E               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 40925                           
 40926                           ; BSR set to: 0
 40927  01188E  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40928  011890  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40929                           
 40930                           ; BSR set to: 0
 40931                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 40932  011892  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40933  011896  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40934  01189A  0E00               	movlw	low (__mediumconst shr (0+16))
 40935  01189C  6EF8               	movwf	tblptru,c
 40936  01189E  0E0E               	movlw	(high __ramtop+-1)
 40937  0118A0  64F7               	cpfsgt	tblptrh,c
 40938  0118A2  D003               	bra	i2u2577_47
 40939  0118A4  0008               	tblrd		*
 40940  0118A6  50F5               	movf	tablat,w,c
 40941  0118A8  D005               	bra	i2u2577_40
 40942  0118AA                     i2u2577_47:
 40943  0118AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40944  0118AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40945  0118B2  50EF               	movf	indf0,w,c
 40946  0118B4                     i2u2577_40:
 40947  0118B4  EC29  F0E4         	call	i2_isdigit
 40948  0118B8  B0D8               	btfsc	status,0,c
 40949  0118BA  D7BA               	goto	i2l20274
 40950  0118BC                     i2u2578_40:
 40951                           
 40952                           ;doprnt.c: 620: };doprnt.c: 623: if(*f == '.') {
 40953  0118BC  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 40954  0118C0  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 40955  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
 40956  0118C6  6EF8               	movwf	tblptru,c
 40957  0118C8  0E0E               	movlw	(high __ramtop+-1)
 40958  0118CA  64F7               	cpfsgt	tblptrh,c
 40959  0118CC  D003               	bra	i2u2579_47
 40960  0118CE  0008               	tblrd		*
 40961  0118D0  50F5               	movf	tablat,w,c
 40962  0118D2  D005               	bra	i2u2579_40
 40963  0118D4                     i2u2579_47:
 40964  0118D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 40965  0118D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 40966  0118DC  50EF               	movf	indf0,w,c
 40967  0118DE                     i2u2579_40:
 40968  0118DE  0A2E               	xorlw	46
 40969  0118E0  A4D8               	btfss	status,2,c
 40970  0118E2  D048               	goto	i2l20294
 40971                           
 40972                           ;doprnt.c: 624: flag |= 0x4000;
 40973  0118E4  0100               	movlb	0	; () banked
 40974  0118E6  8DA2               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 40975                           
 40976                           ;doprnt.c: 625: f++;
 40977  0118E8  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 40978  0118EA  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 40979                           
 40980                           ; BSR set to: 0
 40981                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
 40982  0118EC  0E00               	movlw	0
 40983  0118EE  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 40984  0118F0  0E00               	movlw	0
 40985  0118F2  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 40986                           
 40987                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
 40988  0118F4  D029               	goto	i2l20292
 40989  0118F6                     i2l20288:
 40990                           
 40991                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
 40992  0118F6  C09F  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 40993  0118FA  C0A0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 40994  0118FE  0E00               	movlw	0
 40995  011900  6E04               	movwf	i2___wmul@multiplicand+1,c
 40996  011902  0E0A               	movlw	10
 40997  011904  6E03               	movwf	i2___wmul@multiplicand,c
 40998  011906  EC60  F0E3         	call	i2___wmul	;wreg free
 40999  01190A  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 41000  01190E  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41001  011912  0E00               	movlw	low (__mediumconst shr (0+16))
 41002  011914  6EF8               	movwf	tblptru,c
 41003  011916  0E0E               	movlw	(high __ramtop+-1)
 41004  011918  64F7               	cpfsgt	tblptrh,c
 41005  01191A  D003               	bra	i2u2581_47
 41006  01191C  0008               	tblrd		*
 41007  01191E  50F5               	movf	tablat,w,c
 41008  011920  D005               	bra	i2u2581_40
 41009  011922                     i2u2581_47:
 41010  011922  CFF6 FFE9          	movff	tblptrl,fsr0l
 41011  011926  CFF7 FFEA          	movff	tblptrh,fsr0h
 41012  01192A  50EF               	movf	indf0,w,c
 41013  01192C                     i2u2581_40:
 41014  01192C  0100               	movlb	0	; () banked
 41015  01192E  6F72               	movwf	??i2__doprnt& (0+255),b
 41016  011930  5172               	movf	??i2__doprnt& (0+255),w,b
 41017  011932  2601               	addwf	?i2___wmul,f,c
 41018  011934  0E00               	movlw	0
 41019  011936  2202               	addwfc	?i2___wmul+1,f,c
 41020  011938  0ED0               	movlw	208
 41021  01193A  2401               	addwf	?i2___wmul,w,c
 41022  01193C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 41023  01193E  0EFF               	movlw	255
 41024  011940  2002               	addwfc	?i2___wmul+1,w,c
 41025  011942  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41026                           
 41027                           ; BSR set to: 0
 41028  011944  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 41029  011946  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41030  011948                     i2l20292:
 41031                           
 41032                           ; BSR set to: 0
 41033  011948  C06E  FFF6         	movff	i2__doprnt@f,tblptrl
 41034  01194C  C06F  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41035  011950  0E00               	movlw	low (__mediumconst shr (0+16))
 41036  011952  6EF8               	movwf	tblptru,c
 41037  011954  0E0E               	movlw	(high __ramtop+-1)
 41038  011956  64F7               	cpfsgt	tblptrh,c
 41039  011958  D003               	bra	i2u2582_47
 41040  01195A  0008               	tblrd		*
 41041  01195C  50F5               	movf	tablat,w,c
 41042  01195E  D005               	bra	i2u2582_40
 41043  011960                     i2u2582_47:
 41044  011960  CFF6 FFE9          	movff	tblptrl,fsr0l
 41045  011964  CFF7 FFEA          	movff	tblptrh,fsr0h
 41046  011968  50EF               	movf	indf0,w,c
 41047  01196A                     i2u2582_40:
 41048  01196A  EC29  F0E4         	call	i2_isdigit
 41049  01196E  A0D8               	btfss	status,0,c
 41050  011970  D12A               	goto	i2l20362
 41051  011972  D7C1               	goto	i2l20288
 41052  011974                     i2l20294:
 41053                           
 41054                           ;doprnt.c: 645: prec = 0;
 41055  011974  0E00               	movlw	0
 41056  011976  0100               	movlb	0	; () banked
 41057  011978  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41058  01197A  0E00               	movlw	0
 41059  01197C  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 41060                           
 41061                           ; BSR set to: 0
 41062                           ;doprnt.c: 647: flag |= 0x1000;
 41063  01197E  89A2               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 41064  011980  D122               	goto	i2l20362
 41065  011982                     i2l20298:
 41066                           
 41067                           ; BSR set to: 0
 41068                           ;doprnt.c: 662: flag |= 0x10;
 41069  011982  89A1               	bsf	i2__doprnt@flag& (0+255),4,b
 41070                           
 41071                           ;doprnt.c: 663: goto loop;
 41072  011984  D120               	goto	i2l20362
 41073  011986                     i2l20300:
 41074                           
 41075                           ; BSR set to: 0
 41076                           ;doprnt.c: 682: flag |= 0x400;
 41077  011986  85A2               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 41078                           
 41079                           ;doprnt.c: 683: break;
 41080  011988  D159               	goto	i2l20364
 41081  01198A                     i2l20302:
 41082                           
 41083                           ; BSR set to: 0
 41084                           ;doprnt.c: 737: case 'x':;doprnt.c: 740: flag |= 0x80;
 41085  01198A  8FA1               	bsf	i2__doprnt@flag& (0+255),7,b
 41086                           
 41087                           ;doprnt.c: 742: break;
 41088  01198C  D157               	goto	i2l20364
 41089  01198E                     i2l20304:
 41090                           
 41091                           ; BSR set to: 0
 41092                           ;doprnt.c: 753: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 41093  01198E  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41094  011992  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41095  011996  CFDF F072          	movff	indf2,??i2__doprnt
 41096  01199A  0E02               	movlw	2
 41097  01199C  26DE               	addwf	postinc2,f,c
 41098  01199E  CFDF F073          	movff	indf2,??i2__doprnt+1
 41099  0119A2  0E00               	movlw	0
 41100  0119A4  22DD               	addwfc	postdec2,f,c
 41101  0119A6  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41102  0119AA  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41103  0119AE  CFDE F08B          	movff	postinc2,i2__doprnt@cp
 41104  0119B2  CFDD F08C          	movff	postdec2,i2__doprnt@cp+1
 41105                           
 41106                           ; BSR set to: 0
 41107                           ;doprnt.c: 759: if(!cp)
 41108  0119B6  518B               	movf	i2__doprnt@cp& (0+255),w,b
 41109  0119B8  118C               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 41110  0119BA  A4D8               	btfss	status,2,c
 41111  0119BC  D004               	goto	i2l20310
 41112                           
 41113                           ; BSR set to: 0
 41114                           ;doprnt.c: 760: cp = "(null)";
 41115  0119BE  0E6A               	movlw	low STR_363
 41116  0119C0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 41117  0119C2  0EFF               	movlw	high STR_363
 41118  0119C4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 41119  0119C6                     i2l20310:
 41120                           
 41121                           ; BSR set to: 0
 41122                           ;doprnt.c: 764: len = 0;
 41123  0119C6  0E00               	movlw	0
 41124  0119C8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 41125  0119CA  0E00               	movlw	0
 41126  0119CC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 41127                           
 41128                           ;doprnt.c: 765: while(cp[len])
 41129  0119CE  D003               	goto	i2l20314
 41130  0119D0                     i2l20312:
 41131                           
 41132                           ;doprnt.c: 766: len++;
 41133  0119D0  0100               	movlb	0	; () banked
 41134  0119D2  4B8D               	infsnz	i2__doprnt@len& (0+255),f,b
 41135  0119D4  2B8E               	incf	(i2__doprnt@len+1)& (0+255),f,b
 41136  0119D6                     i2l20314:
 41137                           
 41138                           ; BSR set to: 0
 41139  0119D6  518D               	movf	i2__doprnt@len& (0+255),w,b
 41140  0119D8  258B               	addwf	i2__doprnt@cp& (0+255),w,b
 41141  0119DA  6F72               	movwf	??i2__doprnt& (0+255),b
 41142  0119DC  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41143  0119DE  218C               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 41144  0119E0  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41145  0119E2  C072  FFF6         	movff	??i2__doprnt,tblptrl
 41146  0119E6  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 41147  0119EA  0E00               	movlw	low (__mediumconst shr (0+16))
 41148  0119EC  6EF8               	movwf	tblptru,c
 41149  0119EE  0E0E               	movlw	(high __ramtop+-1)
 41150  0119F0  64F7               	cpfsgt	tblptrh,c
 41151  0119F2  D003               	bra	i2u2585_47
 41152  0119F4  0008               	tblrd		*
 41153  0119F6  50F5               	movf	tablat,w,c
 41154  0119F8  D005               	bra	i2u2585_40
 41155  0119FA                     i2u2585_47:
 41156  0119FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 41157  0119FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 41158  011A02  50EF               	movf	indf0,w,c
 41159  011A04                     i2u2585_40:
 41160  011A04  0900               	iorlw	0
 41161  011A06  A4D8               	btfss	status,2,c
 41162  011A08  D7E3               	goto	i2l20312
 41163  011A0A                     i2u2586_40:
 41164                           
 41165                           ;doprnt.c: 772: if(prec && prec < len)
 41166  011A0A  0100               	movlb	0	; () banked
 41167  011A0C  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41168  011A0E  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41169  011A10  B4D8               	btfsc	status,2,c
 41170  011A12  D00A               	goto	i2l20322
 41171                           
 41172                           ; BSR set to: 0
 41173  011A14  518D               	movf	i2__doprnt@len& (0+255),w,b
 41174  011A16  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41175  011A18  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41176  011A1A  59A0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 41177  011A1C  B0D8               	btfsc	status,0,c
 41178  011A1E  D004               	goto	i2l20322
 41179                           
 41180                           ; BSR set to: 0
 41181                           ;doprnt.c: 773: len = prec;
 41182  011A20  C09F  F08D         	movff	i2__doprnt@prec,i2__doprnt@len
 41183  011A24  C0A0  F08E         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 41184  011A28                     i2l20322:
 41185                           
 41186                           ; BSR set to: 0
 41187                           ;doprnt.c: 776: if(width > len)
 41188  011A28  519D               	movf	i2__doprnt@width& (0+255),w,b
 41189  011A2A  5D8D               	subwf	i2__doprnt@len& (0+255),w,b
 41190  011A2C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 41191  011A2E  598E               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 41192  011A30  B0D8               	btfsc	status,0,c
 41193  011A32  D005               	goto	i2l20326
 41194                           
 41195                           ; BSR set to: 0
 41196                           ;doprnt.c: 777: width -= len;
 41197  011A34  518D               	movf	i2__doprnt@len& (0+255),w,b
 41198  011A36  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41199  011A38  518E               	movf	(i2__doprnt@len+1)& (0+255),w,b
 41200  011A3A  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41201  011A3C  D038               	goto	i2l20336
 41202  011A3E                     i2l20326:
 41203                           
 41204                           ; BSR set to: 0
 41205                           ;doprnt.c: 778: else;doprnt.c: 779: width = 0;
 41206  011A3E  0E00               	movlw	0
 41207  011A40  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 41208  011A42  0E00               	movlw	0
 41209  011A44  6F9D               	movwf	i2__doprnt@width& (0+255),b
 41210  011A46  D033               	goto	i2l20336
 41211  011A48                     i2l20328:
 41212                           
 41213                           ; BSR set to: 0
 41214  011A48  EE20 F002          	lfsr	2,2
 41215  011A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41216  011A4E  26D9               	addwf	fsr2l,f,c
 41217  011A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41218  011A52  22DA               	addwfc	fsr2h,f,c
 41219  011A54  50DE               	movf	postinc2,w,c
 41220  011A56  10DE               	iorwf	postinc2,w,c
 41221  011A58  10DE               	iorwf	postinc2,w,c
 41222  011A5A  B4D8               	btfsc	status,2,c
 41223  011A5C  D013               	goto	i2l20332
 41224                           
 41225                           ; BSR set to: 0
 41226  011A5E  EE20 F002          	lfsr	2,2
 41227  011A62  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41228  011A64  26D9               	addwf	fsr2l,f,c
 41229  011A66  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41230  011A68  22DA               	addwfc	fsr2h,f,c
 41231  011A6A  D801               	call	i2u2591_48
 41232  011A6C  D020               	goto	i2l20336
 41233  011A6E                     i2u2591_48:
 41234  011A6E  0005               	push	
 41235  011A70  6EFA               	movwf	pclath,c
 41236  011A72  50DE               	movf	postinc2,w,c
 41237  011A74  6EFD               	movwf	tosl,c
 41238  011A76  50DE               	movf	postinc2,w,c
 41239  011A78  6EFE               	movwf	tosh,c
 41240  011A7A  50DE               	movf	postinc2,w,c
 41241  011A7C  6EFF               	movwf	tosu,c
 41242  011A7E  50FA               	movf	pclath,w,c
 41243  011A80  0E20               	movlw	32
 41244  011A82  0012               	return		;indir
 41245  011A84                     i2l20332:
 41246                           
 41247                           ; BSR set to: 0
 41248  011A84  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41249  011A88  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41250  011A8C  CFDE F072          	movff	postinc2,??i2__doprnt
 41251  011A90  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41252  011A94  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41253  011A98  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41254  011A9C  0E20               	movlw	32
 41255  011A9E  6EDF               	movwf	indf2,c
 41256                           
 41257                           ; BSR set to: 0
 41258  011AA0  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41259  011AA4  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41260  011AA8  2ADE               	incf	postinc2,f,c
 41261  011AAA  0E00               	movlw	0
 41262  011AAC  22DD               	addwfc	postdec2,f,c
 41263  011AAE                     i2l20336:
 41264  011AAE  0100               	movlb	0	; () banked
 41265  011AB0  079D               	decf	i2__doprnt@width& (0+255),f,b
 41266  011AB2  A0D8               	btfss	status,0,c
 41267  011AB4  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41268  011AB6  299D               	incf	i2__doprnt@width& (0+255),w,b
 41269  011AB8  E1C7               	bnz	i2l20328
 41270  011ABA  299E               	incf	(i2__doprnt@width+1)& (0+255),w,b
 41271  011ABC  B4D8               	btfsc	status,2,c
 41272  011ABE  D05B               	goto	i2l20350
 41273  011AC0  D7C3               	goto	i2l20328
 41274  011AC2                     i2l20338:
 41275                           
 41276                           ; BSR set to: 0
 41277  011AC2  EE20 F002          	lfsr	2,2
 41278  011AC6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41279  011AC8  26D9               	addwf	fsr2l,f,c
 41280  011ACA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41281  011ACC  22DA               	addwfc	fsr2h,f,c
 41282  011ACE  50DE               	movf	postinc2,w,c
 41283  011AD0  10DE               	iorwf	postinc2,w,c
 41284  011AD2  10DE               	iorwf	postinc2,w,c
 41285  011AD4  B4D8               	btfsc	status,2,c
 41286  011AD6  D027               	goto	i2l20344
 41287                           
 41288                           ; BSR set to: 0
 41289  011AD8  EE20 F002          	lfsr	2,2
 41290  011ADC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41291  011ADE  26D9               	addwf	fsr2l,f,c
 41292  011AE0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41293  011AE2  22DA               	addwfc	fsr2h,f,c
 41294  011AE4  D801               	call	i2u2594_48
 41295  011AE6  D01B               	goto	i2u2594_49
 41296  011AE8                     i2u2594_48:
 41297  011AE8  0005               	push	
 41298  011AEA  6EFA               	movwf	pclath,c
 41299  011AEC  50DE               	movf	postinc2,w,c
 41300  011AEE  6EFD               	movwf	tosl,c
 41301  011AF0  50DE               	movf	postinc2,w,c
 41302  011AF2  6EFE               	movwf	tosh,c
 41303  011AF4  50DE               	movf	postinc2,w,c
 41304  011AF6  6EFF               	movwf	tosu,c
 41305  011AF8  50FA               	movf	pclath,w,c
 41306  011AFA  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 41307  011AFE  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 41308  011B02  0E00               	movlw	low (__mediumconst shr (0+16))
 41309  011B04  6EF8               	movwf	tblptru,c
 41310  011B06  0E0E               	movlw	(high __ramtop+-1)
 41311  011B08  64F7               	cpfsgt	tblptrh,c
 41312  011B0A  D003               	bra	i2u2595_47
 41313  011B0C  0008               	tblrd		*
 41314  011B0E  50F5               	movf	tablat,w,c
 41315  011B10  D005               	bra	i2u2595_40
 41316  011B12                     i2u2595_47:
 41317  011B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 41318  011B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 41319  011B1A  50EF               	movf	indf0,w,c
 41320  011B1C                     i2u2595_40:
 41321  011B1C  0012               	return		;indir
 41322  011B1E                     i2u2594_49:
 41323  011B1E  0100               	movlb	0	; () banked
 41324  011B20  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 41325  011B22  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 41326  011B24  D028               	goto	i2l20350
 41327  011B26                     i2l20344:
 41328                           
 41329                           ; BSR set to: 0
 41330  011B26  C08B  FFF6         	movff	i2__doprnt@cp,tblptrl
 41331  011B2A  C08C  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 41332  011B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 41333  011B30  6EF8               	movwf	tblptru,c
 41334  011B32  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41335  011B36  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41336  011B3A  CFDE F072          	movff	postinc2,??i2__doprnt
 41337  011B3E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 41338  011B42  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41339  011B46  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41340  011B4A  0E0E               	movlw	(high __ramtop+-1)
 41341  011B4C  64F7               	cpfsgt	tblptrh,c
 41342  011B4E  D003               	bra	i2u2596_47
 41343  011B50  0008               	tblrd		*
 41344  011B52  50F5               	movf	tablat,w,c
 41345  011B54  D005               	bra	i2u2596_40
 41346  011B56                     i2u2596_47:
 41347  011B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 41348  011B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 41349  011B5E  50EF               	movf	indf0,w,c
 41350  011B60                     i2u2596_40:
 41351  011B60  6EDF               	movwf	indf2,c
 41352  011B62  0100               	movlb	0	; () banked
 41353  011B64  4B8B               	infsnz	i2__doprnt@cp& (0+255),f,b
 41354  011B66  2B8C               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 41355                           
 41356                           ; BSR set to: 0
 41357  011B68  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 41358  011B6C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41359  011B70  2ADE               	incf	postinc2,f,c
 41360  011B72  0E00               	movlw	0
 41361  011B74  22DD               	addwfc	postdec2,f,c
 41362  011B76                     i2l20350:
 41363                           
 41364                           ; BSR set to: 0
 41365  011B76  078D               	decf	i2__doprnt@len& (0+255),f,b
 41366  011B78  A0D8               	btfss	status,0,c
 41367  011B7A  078E               	decf	(i2__doprnt@len+1)& (0+255),f,b
 41368  011B7C  298D               	incf	i2__doprnt@len& (0+255),w,b
 41369  011B7E  E1A1               	bnz	i2l20338
 41370  011B80  298E               	incf	(i2__doprnt@len+1)& (0+255),w,b
 41371  011B82  B4D8               	btfsc	status,2,c
 41372  011B84  EFFB  F096         	goto	i2u2699_40
 41373  011B88  D79C               	goto	i2l20338
 41374  011B8A                     i2l20352:
 41375                           
 41376                           ; BSR set to: 0
 41377                           ;doprnt.c: 818: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 41378  011B8A  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41379  011B8E  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41380  011B92  CFDF F072          	movff	indf2,??i2__doprnt
 41381  011B96  0E02               	movlw	2
 41382  011B98  26DE               	addwf	postinc2,f,c
 41383  011B9A  CFDF F073          	movff	indf2,??i2__doprnt+1
 41384  011B9E  0E00               	movlw	0
 41385  011BA0  22DD               	addwfc	postdec2,f,c
 41386  011BA2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41387  011BA6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41388  011BAA  50DF               	movf	indf2,w,c
 41389  011BAC  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41390  011BAE                     i2l20354:
 41391                           
 41392                           ; BSR set to: 0
 41393                           ;doprnt.c: 824: cp = (char *)&c;
 41394  011BAE  0EA3               	movlw	low i2__doprnt@c
 41395  011BB0  6F8B               	movwf	i2__doprnt@cp& (0+255),b
 41396  011BB2  0E00               	movlw	high i2__doprnt@c
 41397  011BB4  6F8C               	movwf	(i2__doprnt@cp+1)& (0+255),b
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;doprnt.c: 825: len = 1;
 41401  011BB6  0E00               	movlw	0
 41402  011BB8  6F8E               	movwf	(i2__doprnt@len+1)& (0+255),b
 41403  011BBA  0E01               	movlw	1
 41404  011BBC  6F8D               	movwf	i2__doprnt@len& (0+255),b
 41405                           
 41406                           ;doprnt.c: 826: goto dostring;
 41407  011BBE  D725               	goto	i2u2586_40
 41408  011BC0                     i2l20358:
 41409                           
 41410                           ; BSR set to: 0
 41411                           ;doprnt.c: 837: flag |= 0xC0;
 41412  011BC0  0EC0               	movlw	192
 41413  011BC2  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41414                           
 41415                           ;doprnt.c: 838: break;
 41416  011BC4  D03B               	goto	i2l20364
 41417  011BC6                     i2l20362:
 41418  011BC6  0100               	movlb	0	; () banked
 41419  011BC8  516E               	movf	i2__doprnt@f& (0+255),w,b
 41420  011BCA  6F72               	movwf	??i2__doprnt& (0+255),b
 41421  011BCC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 41422  011BCE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41423  011BD0  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 41424  011BD2  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41425  011BD4  C072  FFF6         	movff	??i2__doprnt,tblptrl
 41426  011BD8  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 41427  011BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 41428  011BDE  6EF8               	movwf	tblptru,c
 41429  011BE0  0E0E               	movlw	(high __ramtop+-1)
 41430  011BE2  64F7               	cpfsgt	tblptrh,c
 41431  011BE4  D003               	bra	i2u2598_47
 41432  011BE6  0008               	tblrd		*
 41433  011BE8  50F5               	movf	tablat,w,c
 41434  011BEA  D005               	bra	i2u2598_40
 41435  011BEC                     i2u2598_47:
 41436  011BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 41437  011BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 41438  011BF4  50EF               	movf	indf0,w,c
 41439  011BF6                     i2u2598_40:
 41440  011BF6  0100               	movlb	0	; () banked
 41441  011BF8  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41442  011BFA  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41443                           
 41444                           ; Switch size 1, requested type "simple"
 41445                           ; Number of cases is 10, Range of values is 0 to 120
 41446                           ; switch strategies available:
 41447                           ; Name         Instructions Cycles
 41448                           ; simple_byte           31    16 (average)
 41449                           ;	Chosen strategy is simple_byte
 41450  011BFC  0A00               	xorlw	0	; case 0
 41451  011BFE  B4D8               	btfsc	status,2,c
 41452  011C00  EF19  F097         	goto	i2u2701_40
 41453  011C04  0A58               	xorlw	88	; case 88
 41454  011C06  B4D8               	btfsc	status,2,c
 41455  011C08  D6C0               	goto	i2l20302
 41456  011C0A  0A3B               	xorlw	59	; case 99
 41457  011C0C  B4D8               	btfsc	status,2,c
 41458  011C0E  D7BD               	goto	i2l20352
 41459  011C10  0A07               	xorlw	7	; case 100
 41460  011C12  B4D8               	btfsc	status,2,c
 41461  011C14  D013               	goto	i2l20364
 41462  011C16  0A02               	xorlw	2	; case 102
 41463  011C18  B4D8               	btfsc	status,2,c
 41464  011C1A  D6B5               	goto	i2l20300
 41465  011C1C  0A0F               	xorlw	15	; case 105
 41466  011C1E  B4D8               	btfsc	status,2,c
 41467  011C20  D00D               	goto	i2l20364
 41468  011C22  0A05               	xorlw	5	; case 108
 41469  011C24  B4D8               	btfsc	status,2,c
 41470  011C26  D6AD               	goto	i2l20298
 41471  011C28  0A1F               	xorlw	31	; case 115
 41472  011C2A  B4D8               	btfsc	status,2,c
 41473  011C2C  D6B0               	goto	i2l20304
 41474  011C2E  0A06               	xorlw	6	; case 117
 41475  011C30  B4D8               	btfsc	status,2,c
 41476  011C32  D7C6               	goto	i2l20358
 41477  011C34  0A0D               	xorlw	13	; case 120
 41478  011C36  B4D8               	btfsc	status,2,c
 41479  011C38  D6A8               	goto	i2l20302
 41480  011C3A  D7B9               	goto	i2l20354
 41481  011C3C                     i2l20364:
 41482                           
 41483                           ; BSR set to: 0
 41484                           ;doprnt.c: 844: if(flag & (0x700)) {
 41485  011C3C  0E07               	movlw	7
 41486  011C3E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41487  011C40  B4D8               	btfsc	status,2,c
 41488  011C42  EF9C  F093         	goto	i2l20608
 41489                           
 41490                           ; BSR set to: 0
 41491                           ;doprnt.c: 846: if(flag & 0x1000)
 41492  011C46  A9A2               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 41493  011C48  D004               	goto	i2l20370
 41494                           
 41495                           ; BSR set to: 0
 41496                           ;doprnt.c: 848: prec = 6;
 41497  011C4A  0E00               	movlw	0
 41498  011C4C  6FA0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 41499  011C4E  0E06               	movlw	6
 41500  011C50  6F9F               	movwf	i2__doprnt@prec& (0+255),b
 41501  011C52                     i2l20370:
 41502                           
 41503                           ; BSR set to: 0
 41504                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 41505  011C52  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 41506  011C56  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 41507  011C5A  CFDF F072          	movff	indf2,??i2__doprnt
 41508  011C5E  0E04               	movlw	4
 41509  011C60  26DE               	addwf	postinc2,f,c
 41510  011C62  CFDF F073          	movff	indf2,??i2__doprnt+1
 41511  011C66  0E00               	movlw	0
 41512  011C68  22DD               	addwfc	postdec2,f,c
 41513  011C6A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 41514  011C6E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 41515  011C72  CFDE F095          	movff	postinc2,i2__doprnt@fval
 41516  011C76  CFDE F096          	movff	postinc2,i2__doprnt@fval+1
 41517  011C7A  CFDE F097          	movff	postinc2,i2__doprnt@fval+2
 41518  011C7E  CFDE F098          	movff	postinc2,i2__doprnt@fval+3
 41519                           
 41520                           ; BSR set to: 0
 41521                           ;doprnt.c: 850: if(fval < 0.0) {
 41522  011C82  AF98               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 41523  011C84  D015               	goto	i2l20378
 41524                           
 41525                           ; BSR set to: 0
 41526                           ;doprnt.c: 851: fval = -fval;
 41527  011C86  C095  F001         	movff	i2__doprnt@fval,i2___flneg@f1
 41528  011C8A  C096  F002         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 41529  011C8E  C097  F003         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 41530  011C92  C098  F004         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 41531  011C96  EC7E  F0E2         	call	i2___flneg
 41532  011C9A  C001  F095         	movff	?i2___flneg,i2__doprnt@fval
 41533  011C9E  C002  F096         	movff	?i2___flneg+1,i2__doprnt@fval+1
 41534  011CA2  C003  F097         	movff	?i2___flneg+2,i2__doprnt@fval+2
 41535  011CA6  C004  F098         	movff	?i2___flneg+3,i2__doprnt@fval+3
 41536                           
 41537                           ;doprnt.c: 852: flag |= 0x03;
 41538  011CAA  0E03               	movlw	3
 41539  011CAC  0100               	movlb	0	; () banked
 41540  011CAE  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 41541  011CB0                     i2l20378:
 41542                           
 41543                           ; BSR set to: 0
 41544                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
 41545  011CB0  0E00               	movlw	0
 41546  011CB2  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41547  011CB4  0E00               	movlw	0
 41548  011CB6  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41549                           
 41550                           ; BSR set to: 0
 41551                           ;doprnt.c: 855: if( fval!=0) {
 41552  011CB8  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41553  011CBC  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41554  011CC0  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41555  011CC4  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41556  011CC8  0E00               	movlw	0
 41557  011CCA  6E05               	movwf	i2___fleq@ff2,c
 41558  011CCC  0E00               	movlw	0
 41559  011CCE  6E06               	movwf	i2___fleq@ff2+1,c
 41560  011CD0  0E00               	movlw	0
 41561  011CD2  6E07               	movwf	i2___fleq@ff2+2,c
 41562  011CD4  0E00               	movlw	0
 41563  011CD6  6E08               	movwf	i2___fleq@ff2+3,c
 41564  011CD8  EC65  F0D9         	call	i2___fleq	;wreg free
 41565  011CDC  B0D8               	btfsc	status,0,c
 41566  011CDE  D083               	goto	i2l20406
 41567                           
 41568                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 41569  011CE0  0100               	movlb	0	; () banked
 41570  011CE2  3597               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 41571  011CE4  3598               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 41572  011CE6  0F82               	addlw	130
 41573  011CE8  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41574  011CEA  6B90               	clrf	(i2__doprnt@eexp+1)& (0+255),b
 41575  011CEC  0EFF               	movlw	255
 41576  011CEE  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41577                           
 41578                           ; BSR set to: 0
 41579                           ;doprnt.c: 857: eexp--;
 41580  011CF0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41581  011CF2  A0D8               	btfss	status,0,c
 41582  011CF4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41583                           
 41584                           ; BSR set to: 0
 41585                           ;doprnt.c: 858: eexp *= 3;
 41586  011CF6  C08F  F001         	movff	i2__doprnt@eexp,i2___wmul@multiplier
 41587  011CFA  C090  F002         	movff	i2__doprnt@eexp+1,i2___wmul@multiplier+1
 41588  011CFE  0E00               	movlw	0
 41589  011D00  6E04               	movwf	i2___wmul@multiplicand+1,c
 41590  011D02  0E03               	movlw	3
 41591  011D04  6E03               	movwf	i2___wmul@multiplicand,c
 41592  011D06  EC60  F0E3         	call	i2___wmul	;wreg free
 41593  011D0A  C001  F08F         	movff	?i2___wmul,i2__doprnt@eexp
 41594  011D0E  C002  F090         	movff	?i2___wmul+1,i2__doprnt@eexp+1
 41595                           
 41596                           ;doprnt.c: 859: eexp /= 10;
 41597  011D12  C08F  F007         	movff	i2__doprnt@eexp,i2___awdiv@dividend
 41598  011D16  C090  F008         	movff	i2__doprnt@eexp+1,i2___awdiv@dividend+1
 41599  011D1A  0E00               	movlw	0
 41600  011D1C  6E0A               	movwf	i2___awdiv@divisor+1,c
 41601  011D1E  0E0A               	movlw	10
 41602  011D20  6E09               	movwf	i2___awdiv@divisor,c
 41603  011D22  EC2F  F0DA         	call	i2___awdiv	;wreg free
 41604  011D26  C007  F08F         	movff	?i2___awdiv,i2__doprnt@eexp
 41605  011D2A  C008  F090         	movff	?i2___awdiv+1,i2__doprnt@eexp+1
 41606                           
 41607                           ;doprnt.c: 860: if(eexp < 0)
 41608  011D2E  0100               	movlb	0	; () banked
 41609  011D30  AF90               	btfss	(i2__doprnt@eexp+1)& (0+255),7,b
 41610  011D32  D003               	goto	i2l20394
 41611                           
 41612                           ; BSR set to: 0
 41613                           ;doprnt.c: 861: eexp--;
 41614  011D34  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41615  011D36  A0D8               	btfss	status,0,c
 41616  011D38  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41617  011D3A                     i2l20394:
 41618                           
 41619                           ; BSR set to: 0
 41620                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
 41621  011D3A  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41622  011D3C  0800               	sublw	0
 41623  011D3E  ECAE  F0AF         	call	i2_scale
 41624  011D42  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41625  011D46  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41626  011D4A  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41627  011D4E  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41628                           
 41629                           ;doprnt.c: 866: tmpval.integ *= fval;
 41630  011D52  C091  F02C         	movff	i2__doprnt@tmpval,i2___flmul@b
 41631  011D56  C092  F02D         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 41632  011D5A  C093  F02E         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 41633  011D5E  C094  F02F         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 41634  011D62  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 41635  011D66  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 41636  011D6A  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 41637  011D6E  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 41638  011D72  EC94  F0B8         	call	i2___flmul	;wreg free
 41639  011D76  C02C  F091         	movff	?i2___flmul,i2__doprnt@tmpval
 41640  011D7A  C02D  F092         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 41641  011D7E  C02E  F093         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 41642  011D82  C02F  F094         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 41643                           
 41644                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
 41645  011D86  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41646  011D8A  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41647  011D8E  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41648  011D92  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41649  011D96  0E00               	movlw	0
 41650  011D98  6E05               	movwf	i2___flge@ff2,c
 41651  011D9A  0E00               	movlw	0
 41652  011D9C  6E06               	movwf	i2___flge@ff2+1,c
 41653  011D9E  0E80               	movlw	128
 41654  011DA0  6E07               	movwf	i2___flge@ff2+2,c
 41655  011DA2  0E3F               	movlw	63
 41656  011DA4  6E08               	movwf	i2___flge@ff2+3,c
 41657  011DA6  ECB6  F0D4         	call	i2___flge	;wreg free
 41658  011DAA  B0D8               	btfsc	status,0,c
 41659  011DAC  D005               	goto	i2l20402
 41660                           
 41661                           ;doprnt.c: 868: eexp--;
 41662  011DAE  0100               	movlb	0	; () banked
 41663  011DB0  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 41664  011DB2  A0D8               	btfss	status,0,c
 41665  011DB4  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 41666  011DB6  D017               	goto	i2l20406
 41667  011DB8                     i2l20402:
 41668                           
 41669                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
 41670  011DB8  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41671  011DBC  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41672  011DC0  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41673  011DC4  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41674  011DC8  0E00               	movlw	0
 41675  011DCA  6E05               	movwf	i2___flge@ff2,c
 41676  011DCC  0E00               	movlw	0
 41677  011DCE  6E06               	movwf	i2___flge@ff2+1,c
 41678  011DD0  0E20               	movlw	32
 41679  011DD2  6E07               	movwf	i2___flge@ff2+2,c
 41680  011DD4  0E41               	movlw	65
 41681  011DD6  6E08               	movwf	i2___flge@ff2+3,c
 41682  011DD8  ECB6  F0D4         	call	i2___flge	;wreg free
 41683  011DDC  A0D8               	btfss	status,0,c
 41684  011DDE  D003               	goto	i2l20406
 41685                           
 41686                           ;doprnt.c: 870: eexp++;
 41687  011DE0  0100               	movlb	0	; () banked
 41688  011DE2  4B8F               	infsnz	i2__doprnt@eexp& (0+255),f,b
 41689  011DE4  2B90               	incf	(i2__doprnt@eexp+1)& (0+255),f,b
 41690  011DE6                     i2l20406:
 41691                           
 41692                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
 41693  011DE6  0100               	movlb	0	; () banked
 41694  011DE8  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 41695  011DEA  D006               	goto	i2u2606_40
 41696  011DEC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 41697  011DEE  E121               	bnz	i2l20410
 41698  011DF0  0E0D               	movlw	13
 41699  011DF2  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 41700  011DF4  B0D8               	btfsc	status,0,c
 41701  011DF6  D01D               	goto	i2l20410
 41702  011DF8                     i2u2606_40:
 41703                           
 41704                           ; BSR set to: 0
 41705                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
 41706  011DF8  C095  F052         	movff	i2__doprnt@fval,i2___fladd@b
 41707  011DFC  C096  F053         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 41708  011E00  C097  F054         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 41709  011E04  C098  F055         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 41710  011E08  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41711  011E0A  EC9D  F0C1         	call	i2_fround
 41712  011E0E  C045  F056         	movff	?i2_fround,i2___fladd@a
 41713  011E12  C046  F057         	movff	?i2_fround+1,i2___fladd@a+1
 41714  011E16  C047  F058         	movff	?i2_fround+2,i2___fladd@a+2
 41715  011E1A  C048  F059         	movff	?i2_fround+3,i2___fladd@a+3
 41716  011E1E  EC4B  F0BD         	call	i2___fladd	;wreg free
 41717  011E22  C052  F095         	movff	?i2___fladd,i2__doprnt@fval
 41718  011E26  C053  F096         	movff	?i2___fladd+1,i2__doprnt@fval+1
 41719  011E2A  C054  F097         	movff	?i2___fladd+2,i2__doprnt@fval+2
 41720  011E2E  C055  F098         	movff	?i2___fladd+3,i2__doprnt@fval+3
 41721  011E32                     i2l20410:
 41722                           
 41723                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 41724  011E32  0100               	movlb	0	; () banked
 41725  011E34  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41726  011E36  D006               	goto	i2u2607_40
 41727  011E38  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41728  011E3A  E131               	bnz	i2l20418
 41729  011E3C  0E0A               	movlw	10
 41730  011E3E  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41731  011E40  B0D8               	btfsc	status,0,c
 41732  011E42  D02D               	goto	i2u2610_40
 41733  011E44                     i2u2607_40:
 41734                           
 41735                           ; BSR set to: 0
 41736  011E44  C095  F001         	movff	i2__doprnt@fval,i2___fleq@ff1
 41737  011E48  C096  F002         	movff	i2__doprnt@fval+1,i2___fleq@ff1+1
 41738  011E4C  C097  F003         	movff	i2__doprnt@fval+2,i2___fleq@ff1+2
 41739  011E50  C098  F004         	movff	i2__doprnt@fval+3,i2___fleq@ff1+3
 41740  011E54  0E00               	movlw	0
 41741  011E56  6E05               	movwf	i2___fleq@ff2,c
 41742  011E58  0E00               	movlw	0
 41743  011E5A  6E06               	movwf	i2___fleq@ff2+1,c
 41744  011E5C  0E00               	movlw	0
 41745  011E5E  6E07               	movwf	i2___fleq@ff2+2,c
 41746  011E60  0E00               	movlw	0
 41747  011E62  6E08               	movwf	i2___fleq@ff2+3,c
 41748  011E64  EC65  F0D9         	call	i2___fleq	;wreg free
 41749  011E68  B0D8               	btfsc	status,0,c
 41750  011E6A  D064               	goto	i2l20432
 41751  011E6C  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41752  011E70  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41753  011E74  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41754  011E78  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41755  011E7C  EC43  F0D6         	call	i2___fltol	;wreg free
 41756  011E80  504E               	movf	?i2___fltol,w,c
 41757  011E82  104F               	iorwf	?i2___fltol+1,w,c
 41758  011E84  1050               	iorwf	?i2___fltol+2,w,c
 41759  011E86  1051               	iorwf	?i2___fltol+3,w,c
 41760  011E88  A4D8               	btfss	status,2,c
 41761  011E8A  D054               	goto	i2l20432
 41762  011E8C  0100               	movlb	0	; () banked
 41763  011E8E  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 41764  011E90  D051               	goto	i2l20432
 41765  011E92  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41766  011E94  E104               	bnz	i2u2610_40
 41767  011E96  0E02               	movlw	2
 41768  011E98  5D8F               	subwf	i2__doprnt@eexp& (0+255),w,b
 41769  011E9A  A0D8               	btfss	status,0,c
 41770  011E9C  D04B               	goto	i2l20432
 41771  011E9E                     i2u2610_40:
 41772  011E9E                     i2l20418:
 41773                           
 41774                           ; BSR set to: 0
 41775                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
 41776  011E9E  C091  F001         	movff	i2__doprnt@tmpval,i2___flge@ff1
 41777  011EA2  C092  F002         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 41778  011EA6  C093  F003         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 41779  011EAA  C094  F004         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 41780  011EAE  0E5F               	movlw	95
 41781  011EB0  6E05               	movwf	i2___flge@ff2,c
 41782  011EB2  0E70               	movlw	112
 41783  011EB4  6E06               	movwf	i2___flge@ff2+1,c
 41784  011EB6  0E89               	movlw	137
 41785  011EB8  6E07               	movwf	i2___flge@ff2+2,c
 41786  011EBA  0E40               	movlw	64
 41787  011EBC  6E08               	movwf	i2___flge@ff2+3,c
 41788  011EBE  ECB6  F0D4         	call	i2___flge	;wreg free
 41789  011EC2  B0D8               	btfsc	status,0,c
 41790  011EC4  D003               	goto	i2l20422
 41791                           
 41792                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 41793  011EC6  0100               	movlb	0	; () banked
 41794  011EC8  0EF7               	movlw	247
 41795  011ECA  D002               	goto	L36
 41796  011ECC                     i2l20422:
 41797                           
 41798                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 41799  011ECC  0100               	movlb	0	; () banked
 41800  011ECE  0EF8               	movlw	248
 41801  011ED0                     L36:
 41802  011ED0  278F               	addwf	i2__doprnt@eexp& (0+255),f,b
 41803  011ED2  0EFF               	movlw	255
 41804  011ED4  2390               	addwfc	(i2__doprnt@eexp+1)& (0+255),f,b
 41805                           
 41806                           ; BSR set to: 0
 41807                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 41808  011ED6  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41809  011ED8  ECAE  F0AF         	call	i2_scale
 41810  011EDC  C045  F091         	movff	?i2_scale,i2__doprnt@tmpval
 41811  011EE0  C046  F092         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 41812  011EE4  C047  F093         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 41813  011EE8  C048  F094         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 41814  011EEC  C095  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 41815  011EF0  C096  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 41816  011EF4  C097  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 41817  011EF8  C098  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 41818  011EFC  C091  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 41819  011F00  C092  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 41820  011F04  C093  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 41821  011F08  C094  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 41822  011F0C  EC6E  F0D2         	call	i2__div_to_l_	;wreg free
 41823  011F10  C001  F099         	movff	?i2__div_to_l_,i2__doprnt@val
 41824  011F14  C002  F09A         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 41825  011F18  C003  F09B         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 41826  011F1C  C004  F09C         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 41827                           
 41828                           ;doprnt.c: 1148: fval = 0.0;
 41829  011F20  0E00               	movlw	0
 41830  011F22  0100               	movlb	0	; () banked
 41831  011F24  6F95               	movwf	i2__doprnt@fval& (0+255),b
 41832  011F26  0E00               	movlw	0
 41833  011F28  6F96               	movwf	(i2__doprnt@fval+1)& (0+255),b
 41834  011F2A  0E00               	movlw	0
 41835  011F2C  6F97               	movwf	(i2__doprnt@fval+2)& (0+255),b
 41836  011F2E  0E00               	movlw	0
 41837  011F30  6F98               	movwf	(i2__doprnt@fval+3)& (0+255),b
 41838                           
 41839                           ;doprnt.c: 1149: } else {
 41840  011F32  D03C               	goto	i2l20436
 41841  011F34                     i2l20432:
 41842                           
 41843                           ;doprnt.c: 1150: val = (unsigned long)fval;
 41844  011F34  C095  F04E         	movff	i2__doprnt@fval,i2___fltol@f1
 41845  011F38  C096  F04F         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 41846  011F3C  C097  F050         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 41847  011F40  C098  F051         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 41848  011F44  EC43  F0D6         	call	i2___fltol	;wreg free
 41849  011F48  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 41850  011F4C  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 41851  011F50  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 41852  011F54  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 41853                           
 41854                           ;doprnt.c: 1151: fval -= (double)val;
 41855  011F58  C095  F064         	movff	i2__doprnt@fval,i2___flsub@b
 41856  011F5C  C096  F065         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 41857  011F60  C097  F066         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 41858  011F64  C098  F067         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 41859  011F68  C099  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 41860  011F6C  C09A  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 41861  011F70  C09B  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 41862  011F74  C09C  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 41863  011F78  0E00               	movlw	0
 41864  011F7A  ECC3  F0CF         	call	i2___xxtofl
 41865  011F7E  C005  F068         	movff	?i2___xxtofl,i2___flsub@a
 41866  011F82  C006  F069         	movff	?i2___xxtofl+1,i2___flsub@a+1
 41867  011F86  C007  F06A         	movff	?i2___xxtofl+2,i2___flsub@a+2
 41868  011F8A  C008  F06B         	movff	?i2___xxtofl+3,i2___flsub@a+3
 41869  011F8E  ECE7  F0DE         	call	i2___flsub	;wreg free
 41870  011F92  C064  F095         	movff	?i2___flsub,i2__doprnt@fval
 41871  011F96  C065  F096         	movff	?i2___flsub+1,i2__doprnt@fval+1
 41872  011F9A  C066  F097         	movff	?i2___flsub+2,i2__doprnt@fval+2
 41873  011F9E  C067  F098         	movff	?i2___flsub+3,i2__doprnt@fval+3
 41874                           
 41875                           ;doprnt.c: 1152: eexp = 0;
 41876  011FA2  0E00               	movlw	0
 41877  011FA4  0100               	movlb	0	; () banked
 41878  011FA6  6F90               	movwf	(i2__doprnt@eexp+1)& (0+255),b
 41879  011FA8  0E00               	movlw	0
 41880  011FAA  6F8F               	movwf	i2__doprnt@eexp& (0+255),b
 41881  011FAC                     i2l20436:
 41882                           
 41883                           ; BSR set to: 0
 41884                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 41885  011FAC  0E01               	movlw	1
 41886  011FAE  6FA3               	movwf	i2__doprnt@c& (0+255),b
 41887  011FB0                     i2l20442:
 41888                           
 41889                           ; BSR set to: 0
 41890                           ;doprnt.c: 1156: if(val < dpowers[c])
 41891  011FB0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41892  011FB2  0D04               	mullw	4
 41893  011FB4  0E63               	movlw	low _dpowers
 41894  011FB6  24F3               	addwf	prodl,w,c
 41895  011FB8  6EF6               	movwf	tblptrl,c
 41896  011FBA  0EE8               	movlw	high _dpowers
 41897  011FBC  20F4               	addwfc	prodh,w,c
 41898  011FBE  6EF7               	movwf	tblptrh,c
 41899  011FC0                     	if	1	;There are 3 active tblptr bytes
 41900  011FC0  6AF8               	clrf	tblptru,c
 41901  011FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41902  011FC4  22F8               	addwfc	tblptru,f,c
 41903  011FC6                     	endif
 41904  011FC6  0009               	tblrd		*+
 41905  011FC8  50F5               	movf	tablat,w,c
 41906  011FCA  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 41907  011FCC  0009               	tblrd		*+
 41908  011FCE  50F5               	movf	tablat,w,c
 41909  011FD0  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 41910  011FD2  0009               	tblrd		*+
 41911  011FD4  50F5               	movf	tablat,w,c
 41912  011FD6  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 41913  011FD8  0009               	tblrd		*+
 41914  011FDA  50F5               	movf	tablat,w,c
 41915  011FDC  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 41916  011FDE  A0D8               	btfss	status,0,c
 41917  011FE0  D005               	goto	i2u2613_40
 41918                           
 41919                           ; BSR set to: 0
 41920  011FE2  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 41921                           
 41922                           ; BSR set to: 0
 41923  011FE4  0E0A               	movlw	10
 41924  011FE6  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 41925  011FE8  A4D8               	btfss	status,2,c
 41926  011FEA  D7E2               	goto	i2l20442
 41927  011FEC                     i2u2613_40:
 41928                           
 41929                           ; BSR set to: 0
 41930                           ;doprnt.c: 1161: width -= prec + c + eexp;
 41931  011FEC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 41932  011FEE  259F               	addwf	i2__doprnt@prec& (0+255),w,b
 41933  011FF0  6F72               	movwf	??i2__doprnt& (0+255),b
 41934  011FF2  0E00               	movlw	0
 41935  011FF4  21A0               	addwfc	(i2__doprnt@prec+1)& (0+255),w,b
 41936  011FF6  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41937  011FF8  518F               	movf	i2__doprnt@eexp& (0+255),w,b
 41938  011FFA  2772               	addwf	??i2__doprnt& (0+255),f,b
 41939  011FFC  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 41940  011FFE  2373               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 41941  012000  5172               	movf	??i2__doprnt& (0+255),w,b
 41942  012002  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 41943  012004  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 41944  012006  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 41945                           
 41946                           ;doprnt.c: 1162: if(;doprnt.c: 1166: prec)
 41947  012008  519F               	movf	i2__doprnt@prec& (0+255),w,b
 41948  01200A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 41949  01200C  B4D8               	btfsc	status,2,c
 41950  01200E  D003               	goto	i2l20454
 41951                           
 41952                           ; BSR set to: 0
 41953                           ;doprnt.c: 1167: width--;
 41954  012010  079D               	decf	i2__doprnt@width& (0+255),f,b
 41955  012012  A0D8               	btfss	status,0,c
 41956  012014  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41957  012016                     i2l20454:
 41958                           
 41959                           ; BSR set to: 0
 41960                           ;doprnt.c: 1168: if(flag & 0x03)
 41961  012016  0E03               	movlw	3
 41962  012018  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 41963  01201A  6F72               	movwf	??i2__doprnt& (0+255),b
 41964  01201C  0E00               	movlw	0
 41965  01201E  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 41966  012020  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 41967  012022  5172               	movf	??i2__doprnt& (0+255),w,b
 41968  012024  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 41969  012026  B4D8               	btfsc	status,2,c
 41970  012028  D003               	goto	i2l20458
 41971                           
 41972                           ; BSR set to: 0
 41973                           ;doprnt.c: 1169: width--;
 41974  01202A  079D               	decf	i2__doprnt@width& (0+255),f,b
 41975  01202C  A0D8               	btfss	status,0,c
 41976  01202E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 41977  012030                     i2l20458:
 41978                           
 41979                           ; BSR set to: 0
 41980                           ;doprnt.c: 1172: if(flag & 0x04) {
 41981  012030  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 41982  012032  D0F0               	goto	i2l20510
 41983                           
 41984                           ; BSR set to: 0
 41985                           ;doprnt.c: 1174: if(flag & 0x02)
 41986  012034  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 41987  012036  D041               	goto	i2l2501
 41988                           
 41989                           ; BSR set to: 0
 41990  012038  EE20 F002          	lfsr	2,2
 41991  01203C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 41992  01203E  26D9               	addwf	fsr2l,f,c
 41993  012040  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41994  012042  22DA               	addwfc	fsr2h,f,c
 41995  012044  50DE               	movf	postinc2,w,c
 41996  012046  10DE               	iorwf	postinc2,w,c
 41997  012048  10DE               	iorwf	postinc2,w,c
 41998  01204A  B4D8               	btfsc	status,2,c
 41999  01204C  D01D               	goto	i2l2503
 42000                           
 42001                           ; BSR set to: 0
 42002  01204E  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42003  012050  D004               	goto	i2l20468
 42004                           
 42005                           ; BSR set to: 0
 42006  012052  0E00               	movlw	0
 42007  012054  6F7C               	movwf	(i2__doprnt$4989+1)& (0+255),b
 42008  012056  0E2B               	movlw	43
 42009  012058  D003               	goto	L37
 42010  01205A                     i2l20468:
 42011                           
 42012                           ; BSR set to: 0
 42013  01205A  0E00               	movlw	0
 42014  01205C  6F7C               	movwf	(i2__doprnt$4989+1)& (0+255),b
 42015  01205E  0E2D               	movlw	45
 42016  012060                     L37:
 42017  012060  6F7B               	movwf	i2__doprnt$4989& (0+255),b
 42018                           
 42019                           ; BSR set to: 0
 42020  012062  EE20 F002          	lfsr	2,2
 42021  012066  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42022  012068  26D9               	addwf	fsr2l,f,c
 42023  01206A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42024  01206C  22DA               	addwfc	fsr2h,f,c
 42025  01206E  D801               	call	i2u2620_48
 42026  012070  D091               	goto	i2l20498
 42027  012072                     i2u2620_48:
 42028  012072  0005               	push	
 42029  012074  6EFA               	movwf	pclath,c
 42030  012076  50DE               	movf	postinc2,w,c
 42031  012078  6EFD               	movwf	tosl,c
 42032  01207A  50DE               	movf	postinc2,w,c
 42033  01207C  6EFE               	movwf	tosh,c
 42034  01207E  50DE               	movf	postinc2,w,c
 42035  012080  6EFF               	movwf	tosu,c
 42036  012082  50FA               	movf	pclath,w,c
 42037  012084  517B               	movf	i2__doprnt$4989& (0+255),w,b
 42038  012086  0012               	return		;indir
 42039  012088                     i2l2503:
 42040                           
 42041                           ; BSR set to: 0
 42042  012088  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42043  01208A  D004               	goto	i2l20474
 42044                           
 42045                           ; BSR set to: 0
 42046  01208C  0E00               	movlw	0
 42047  01208E  6F7E               	movwf	(i2__doprnt$4990+1)& (0+255),b
 42048  012090  0E2B               	movlw	43
 42049  012092  D003               	goto	L38
 42050  012094                     i2l20474:
 42051                           
 42052                           ; BSR set to: 0
 42053  012094  0E00               	movlw	0
 42054  012096  6F7E               	movwf	(i2__doprnt$4990+1)& (0+255),b
 42055  012098  0E2D               	movlw	45
 42056  01209A                     L38:
 42057  01209A  6F7D               	movwf	i2__doprnt$4990& (0+255),b
 42058                           
 42059                           ; BSR set to: 0
 42060  01209C  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42061  0120A0  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42062  0120A4  CFDE F072          	movff	postinc2,??i2__doprnt
 42063  0120A8  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42064  0120AC  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42065  0120B0  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42066  0120B4  C07D  FFDF         	movff	i2__doprnt$4990,indf2
 42067  0120B8  D02E               	goto	i2l20486
 42068  0120BA                     i2l2501:
 42069                           
 42070                           ; BSR set to: 0
 42071                           ;doprnt.c: 1180: else;doprnt.c: 1183: if(flag & 0x01)
 42072  0120BA  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 42073  0120BC  D06B               	goto	i2l20498
 42074                           
 42075                           ; BSR set to: 0
 42076  0120BE  EE20 F002          	lfsr	2,2
 42077  0120C2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42078  0120C4  26D9               	addwf	fsr2l,f,c
 42079  0120C6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42080  0120C8  22DA               	addwfc	fsr2h,f,c
 42081  0120CA  50DE               	movf	postinc2,w,c
 42082  0120CC  10DE               	iorwf	postinc2,w,c
 42083  0120CE  10DE               	iorwf	postinc2,w,c
 42084  0120D0  B4D8               	btfsc	status,2,c
 42085  0120D2  D013               	goto	i2l20484
 42086                           
 42087                           ; BSR set to: 0
 42088  0120D4  EE20 F002          	lfsr	2,2
 42089  0120D8  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42090  0120DA  26D9               	addwf	fsr2l,f,c
 42091  0120DC  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42092  0120DE  22DA               	addwfc	fsr2h,f,c
 42093  0120E0  D801               	call	i2u2624_48
 42094  0120E2  D058               	goto	i2l20498
 42095  0120E4                     i2u2624_48:
 42096  0120E4  0005               	push	
 42097  0120E6  6EFA               	movwf	pclath,c
 42098  0120E8  50DE               	movf	postinc2,w,c
 42099  0120EA  6EFD               	movwf	tosl,c
 42100  0120EC  50DE               	movf	postinc2,w,c
 42101  0120EE  6EFE               	movwf	tosh,c
 42102  0120F0  50DE               	movf	postinc2,w,c
 42103  0120F2  6EFF               	movwf	tosu,c
 42104  0120F4  50FA               	movf	pclath,w,c
 42105  0120F6  0E20               	movlw	32
 42106  0120F8  0012               	return		;indir
 42107  0120FA                     i2l20484:
 42108                           
 42109                           ; BSR set to: 0
 42110  0120FA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42111  0120FE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42112  012102  CFDE F072          	movff	postinc2,??i2__doprnt
 42113  012106  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42114  01210A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42115  01210E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42116  012112  0E20               	movlw	32
 42117  012114  6EDF               	movwf	indf2,c
 42118  012116                     i2l20486:
 42119                           
 42120                           ; BSR set to: 0
 42121  012116  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42122  01211A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42123  01211E  2ADE               	incf	postinc2,f,c
 42124  012120  0E00               	movlw	0
 42125  012122  22DD               	addwfc	postdec2,f,c
 42126  012124  D037               	goto	i2l20498
 42127  012126                     i2l20488:
 42128                           
 42129                           ; BSR set to: 0
 42130  012126  EE20 F002          	lfsr	2,2
 42131  01212A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42132  01212C  26D9               	addwf	fsr2l,f,c
 42133  01212E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42134  012130  22DA               	addwfc	fsr2h,f,c
 42135  012132  50DE               	movf	postinc2,w,c
 42136  012134  10DE               	iorwf	postinc2,w,c
 42137  012136  10DE               	iorwf	postinc2,w,c
 42138  012138  B4D8               	btfsc	status,2,c
 42139  01213A  D013               	goto	i2l20492
 42140                           
 42141                           ; BSR set to: 0
 42142  01213C  EE20 F002          	lfsr	2,2
 42143  012140  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42144  012142  26D9               	addwf	fsr2l,f,c
 42145  012144  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42146  012146  22DA               	addwfc	fsr2h,f,c
 42147  012148  D801               	call	i2u2626_48
 42148  01214A  D020               	goto	i2l20496
 42149  01214C                     i2u2626_48:
 42150  01214C  0005               	push	
 42151  01214E  6EFA               	movwf	pclath,c
 42152  012150  50DE               	movf	postinc2,w,c
 42153  012152  6EFD               	movwf	tosl,c
 42154  012154  50DE               	movf	postinc2,w,c
 42155  012156  6EFE               	movwf	tosh,c
 42156  012158  50DE               	movf	postinc2,w,c
 42157  01215A  6EFF               	movwf	tosu,c
 42158  01215C  50FA               	movf	pclath,w,c
 42159  01215E  0E30               	movlw	48
 42160  012160  0012               	return		;indir
 42161  012162                     i2l20492:
 42162                           
 42163                           ; BSR set to: 0
 42164  012162  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42165  012166  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42166  01216A  CFDE F072          	movff	postinc2,??i2__doprnt
 42167  01216E  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42168  012172  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42169  012176  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42170  01217A  0E30               	movlw	48
 42171  01217C  6EDF               	movwf	indf2,c
 42172                           
 42173                           ; BSR set to: 0
 42174  01217E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42175  012182  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42176  012186  2ADE               	incf	postinc2,f,c
 42177  012188  0E00               	movlw	0
 42178  01218A  22DD               	addwfc	postdec2,f,c
 42179  01218C                     i2l20496:
 42180                           
 42181                           ;doprnt.c: 1189: width--;
 42182  01218C  0100               	movlb	0	; () banked
 42183  01218E  079D               	decf	i2__doprnt@width& (0+255),f,b
 42184  012190  A0D8               	btfss	status,0,c
 42185  012192  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42186  012194                     i2l20498:
 42187  012194  0100               	movlb	0	; () banked
 42188  012196  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 42189  012198  D12E               	goto	i2l20548
 42190  01219A  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42191  01219C  E1C4               	bnz	i2l20488
 42192  01219E  059D               	decf	i2__doprnt@width& (0+255),w,b
 42193  0121A0  A0D8               	btfss	status,0,c
 42194  0121A2  D129               	goto	i2l20548
 42195  0121A4  D7C0               	goto	i2l20488
 42196  0121A6                     i2l20500:
 42197                           
 42198                           ; BSR set to: 0
 42199  0121A6  EE20 F002          	lfsr	2,2
 42200  0121AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42201  0121AC  26D9               	addwf	fsr2l,f,c
 42202  0121AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42203  0121B0  22DA               	addwfc	fsr2h,f,c
 42204  0121B2  50DE               	movf	postinc2,w,c
 42205  0121B4  10DE               	iorwf	postinc2,w,c
 42206  0121B6  10DE               	iorwf	postinc2,w,c
 42207  0121B8  B4D8               	btfsc	status,2,c
 42208  0121BA  D013               	goto	i2l20504
 42209                           
 42210                           ; BSR set to: 0
 42211  0121BC  EE20 F002          	lfsr	2,2
 42212  0121C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42213  0121C2  26D9               	addwf	fsr2l,f,c
 42214  0121C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42215  0121C6  22DA               	addwfc	fsr2h,f,c
 42216  0121C8  D801               	call	i2u2629_48
 42217  0121CA  D020               	goto	i2l20508
 42218  0121CC                     i2u2629_48:
 42219  0121CC  0005               	push	
 42220  0121CE  6EFA               	movwf	pclath,c
 42221  0121D0  50DE               	movf	postinc2,w,c
 42222  0121D2  6EFD               	movwf	tosl,c
 42223  0121D4  50DE               	movf	postinc2,w,c
 42224  0121D6  6EFE               	movwf	tosh,c
 42225  0121D8  50DE               	movf	postinc2,w,c
 42226  0121DA  6EFF               	movwf	tosu,c
 42227  0121DC  50FA               	movf	pclath,w,c
 42228  0121DE  0E20               	movlw	32
 42229  0121E0  0012               	return		;indir
 42230  0121E2                     i2l20504:
 42231                           
 42232                           ; BSR set to: 0
 42233  0121E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42234  0121E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42235  0121EA  CFDE F072          	movff	postinc2,??i2__doprnt
 42236  0121EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42237  0121F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42238  0121F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42239  0121FA  0E20               	movlw	32
 42240  0121FC  6EDF               	movwf	indf2,c
 42241                           
 42242                           ; BSR set to: 0
 42243  0121FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42244  012202  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42245  012206  2ADE               	incf	postinc2,f,c
 42246  012208  0E00               	movlw	0
 42247  01220A  22DD               	addwfc	postdec2,f,c
 42248  01220C                     i2l20508:
 42249                           
 42250                           ;doprnt.c: 1201: width--;
 42251  01220C  0100               	movlb	0	; () banked
 42252  01220E  079D               	decf	i2__doprnt@width& (0+255),f,b
 42253  012210  A0D8               	btfss	status,0,c
 42254  012212  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42255  012214                     i2l20510:
 42256                           
 42257                           ; BSR set to: 0
 42258  012214  BF9E               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 42259  012216  D005               	goto	i2u2630_40
 42260  012218  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42261  01221A  E1C5               	bnz	i2l20500
 42262  01221C  059D               	decf	i2__doprnt@width& (0+255),w,b
 42263  01221E  B0D8               	btfsc	status,0,c
 42264  012220  D7C2               	goto	i2l20500
 42265  012222                     i2u2630_40:
 42266                           
 42267                           ; BSR set to: 0
 42268                           ;doprnt.c: 1202: };doprnt.c: 1205: if(flag & 0x02)
 42269  012222  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 42270  012224  D041               	goto	i2l2535
 42271                           
 42272                           ; BSR set to: 0
 42273  012226  EE20 F002          	lfsr	2,2
 42274  01222A  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42275  01222C  26D9               	addwf	fsr2l,f,c
 42276  01222E  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42277  012230  22DA               	addwfc	fsr2h,f,c
 42278  012232  50DE               	movf	postinc2,w,c
 42279  012234  10DE               	iorwf	postinc2,w,c
 42280  012236  10DE               	iorwf	postinc2,w,c
 42281  012238  B4D8               	btfsc	status,2,c
 42282  01223A  D01D               	goto	i2l2537
 42283                           
 42284                           ; BSR set to: 0
 42285  01223C  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42286  01223E  D004               	goto	i2l20518
 42287                           
 42288                           ; BSR set to: 0
 42289  012240  0E00               	movlw	0
 42290  012242  6F80               	movwf	(i2__doprnt$4991+1)& (0+255),b
 42291  012244  0E2B               	movlw	43
 42292  012246  D003               	goto	L39
 42293  012248                     i2l20518:
 42294                           
 42295                           ; BSR set to: 0
 42296  012248  0E00               	movlw	0
 42297  01224A  6F80               	movwf	(i2__doprnt$4991+1)& (0+255),b
 42298  01224C  0E2D               	movlw	45
 42299  01224E                     L39:
 42300  01224E  6F7F               	movwf	i2__doprnt$4991& (0+255),b
 42301                           
 42302                           ; BSR set to: 0
 42303  012250  EE20 F002          	lfsr	2,2
 42304  012254  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42305  012256  26D9               	addwf	fsr2l,f,c
 42306  012258  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42307  01225A  22DA               	addwfc	fsr2h,f,c
 42308  01225C  D801               	call	i2u2634_48
 42309  01225E  D0CB               	goto	i2l20548
 42310  012260                     i2u2634_48:
 42311  012260  0005               	push	
 42312  012262  6EFA               	movwf	pclath,c
 42313  012264  50DE               	movf	postinc2,w,c
 42314  012266  6EFD               	movwf	tosl,c
 42315  012268  50DE               	movf	postinc2,w,c
 42316  01226A  6EFE               	movwf	tosh,c
 42317  01226C  50DE               	movf	postinc2,w,c
 42318  01226E  6EFF               	movwf	tosu,c
 42319  012270  50FA               	movf	pclath,w,c
 42320  012272  517F               	movf	i2__doprnt$4991& (0+255),w,b
 42321  012274  0012               	return		;indir
 42322  012276                     i2l2537:
 42323                           
 42324                           ; BSR set to: 0
 42325  012276  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 42326  012278  D004               	goto	i2l20524
 42327                           
 42328                           ; BSR set to: 0
 42329  01227A  0E00               	movlw	0
 42330  01227C  6F82               	movwf	(i2__doprnt$4992+1)& (0+255),b
 42331  01227E  0E2B               	movlw	43
 42332  012280  D003               	goto	L40
 42333  012282                     i2l20524:
 42334                           
 42335                           ; BSR set to: 0
 42336  012282  0E00               	movlw	0
 42337  012284  6F82               	movwf	(i2__doprnt$4992+1)& (0+255),b
 42338  012286  0E2D               	movlw	45
 42339  012288                     L40:
 42340  012288  6F81               	movwf	i2__doprnt$4992& (0+255),b
 42341                           
 42342                           ; BSR set to: 0
 42343  01228A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42344  01228E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42345  012292  CFDE F072          	movff	postinc2,??i2__doprnt
 42346  012296  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42347  01229A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42348  01229E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42349  0122A2  C081  FFDF         	movff	i2__doprnt$4992,indf2
 42350  0122A6  D0A0               	goto	L41
 42351  0122A8                     i2l2535:
 42352                           
 42353                           ; BSR set to: 0
 42354                           ;doprnt.c: 1211: else if(flag & 0x01)
 42355  0122A8  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 42356  0122AA  D0A5               	goto	i2l20548
 42357                           
 42358                           ; BSR set to: 0
 42359  0122AC  EE20 F002          	lfsr	2,2
 42360  0122B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42361  0122B2  26D9               	addwf	fsr2l,f,c
 42362  0122B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42363  0122B6  22DA               	addwfc	fsr2h,f,c
 42364  0122B8  50DE               	movf	postinc2,w,c
 42365  0122BA  10DE               	iorwf	postinc2,w,c
 42366  0122BC  10DE               	iorwf	postinc2,w,c
 42367  0122BE  B4D8               	btfsc	status,2,c
 42368  0122C0  D013               	goto	i2l20534
 42369                           
 42370                           ; BSR set to: 0
 42371  0122C2  EE20 F002          	lfsr	2,2
 42372  0122C6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42373  0122C8  26D9               	addwf	fsr2l,f,c
 42374  0122CA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42375  0122CC  22DA               	addwfc	fsr2h,f,c
 42376  0122CE  D801               	call	i2u2638_48
 42377  0122D0  D092               	goto	i2l20548
 42378  0122D2                     i2u2638_48:
 42379  0122D2  0005               	push	
 42380  0122D4  6EFA               	movwf	pclath,c
 42381  0122D6  50DE               	movf	postinc2,w,c
 42382  0122D8  6EFD               	movwf	tosl,c
 42383  0122DA  50DE               	movf	postinc2,w,c
 42384  0122DC  6EFE               	movwf	tosh,c
 42385  0122DE  50DE               	movf	postinc2,w,c
 42386  0122E0  6EFF               	movwf	tosu,c
 42387  0122E2  50FA               	movf	pclath,w,c
 42388  0122E4  0E20               	movlw	32
 42389  0122E6  0012               	return		;indir
 42390  0122E8                     i2l20534:
 42391                           
 42392                           ; BSR set to: 0
 42393  0122E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42394  0122EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42395  0122F0  CFDE F072          	movff	postinc2,??i2__doprnt
 42396  0122F4  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42397  0122F8  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42398  0122FC  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42399  012300  0E20               	movlw	32
 42400  012302  D071               	goto	L61
 42401  012304                     i2l20538:
 42402                           
 42403                           ; BSR set to: 0
 42404                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
 42405  012304  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42406  012308  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42407  01230C  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42408  012310  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42409  012314  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42410  012316  0D04               	mullw	4
 42411  012318  0E63               	movlw	low _dpowers
 42412  01231A  24F3               	addwf	prodl,w,c
 42413  01231C  6EF6               	movwf	tblptrl,c
 42414  01231E  0EE8               	movlw	high _dpowers
 42415  012320  20F4               	addwfc	prodh,w,c
 42416  012322  6EF7               	movwf	tblptrh,c
 42417  012324                     	if	1	;There are 3 active tblptr bytes
 42418  012324  6AF8               	clrf	tblptru,c
 42419  012326  0E00               	movlw	low (__mediumconst shr (0+16))
 42420  012328  22F8               	addwfc	tblptru,f,c
 42421  01232A                     	endif
 42422  01232A  0009               	tblrd		*+
 42423  01232C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42424  012330  0009               	tblrd		*+
 42425  012332  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42426  012336  0009               	tblrd		*+
 42427  012338  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42428  01233C  000A               	tblrd		*-
 42429  01233E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42430  012342  EC71  F0DA         	call	i2___lldiv
 42431  012346  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42432  01234A  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42433  01234E  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42434  012352  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42435                           
 42436                           ;doprnt.c: 1221: tmpval.vd %= 10;
 42437  012356  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42438  01235A  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42439  01235E  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42440  012362  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42441  012366  0E0A               	movlw	10
 42442  012368  6E12               	movwf	i2___llmod@divisor,c
 42443  01236A  0E00               	movlw	0
 42444  01236C  6E13               	movwf	i2___llmod@divisor+1,c
 42445  01236E  0E00               	movlw	0
 42446  012370  6E14               	movwf	i2___llmod@divisor+2,c
 42447  012372  0E00               	movlw	0
 42448  012374  6E15               	movwf	i2___llmod@divisor+3,c
 42449  012376  ECF0  F0DB         	call	i2___llmod	;wreg free
 42450  01237A  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42451  01237E  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42452  012382  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42453  012386  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42454  01238A  0100               	movlb	0	; () banked
 42455  01238C  EE20 F002          	lfsr	2,2
 42456  012390  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42457  012392  26D9               	addwf	fsr2l,f,c
 42458  012394  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42459  012396  22DA               	addwfc	fsr2h,f,c
 42460  012398  50DE               	movf	postinc2,w,c
 42461  01239A  10DE               	iorwf	postinc2,w,c
 42462  01239C  10DE               	iorwf	postinc2,w,c
 42463  01239E  B4D8               	btfsc	status,2,c
 42464  0123A0  D014               	goto	i2l20546
 42465                           
 42466                           ; BSR set to: 0
 42467  0123A2  EE20 F002          	lfsr	2,2
 42468  0123A6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42469  0123A8  26D9               	addwf	fsr2l,f,c
 42470  0123AA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42471  0123AC  22DA               	addwfc	fsr2h,f,c
 42472  0123AE  D801               	call	i2u2640_48
 42473  0123B0  D022               	goto	i2l20548
 42474  0123B2                     i2u2640_48:
 42475  0123B2  0005               	push	
 42476  0123B4  6EFA               	movwf	pclath,c
 42477  0123B6  50DE               	movf	postinc2,w,c
 42478  0123B8  6EFD               	movwf	tosl,c
 42479  0123BA  50DE               	movf	postinc2,w,c
 42480  0123BC  6EFE               	movwf	tosh,c
 42481  0123BE  50DE               	movf	postinc2,w,c
 42482  0123C0  6EFF               	movwf	tosu,c
 42483  0123C2  50FA               	movf	pclath,w,c
 42484  0123C4  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42485  0123C6  0F30               	addlw	48
 42486  0123C8  0012               	return		;indir
 42487  0123CA                     i2l20546:
 42488                           
 42489                           ; BSR set to: 0
 42490  0123CA  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42491  0123CC  0F30               	addlw	48
 42492  0123CE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42493  0123D2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42494  0123D6  CFDE F072          	movff	postinc2,??i2__doprnt
 42495  0123DA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42496  0123DE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42497  0123E2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42498  0123E6                     L61:
 42499  0123E6  6EDF               	movwf	indf2,c
 42500  0123E8                     L41:
 42501  0123E8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42502  0123EC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42503  0123F0  2ADE               	incf	postinc2,f,c
 42504  0123F2  0E00               	movlw	0
 42505  0123F4  22DD               	addwfc	postdec2,f,c
 42506  0123F6                     i2l20548:
 42507  0123F6  0100               	movlb	0	; () banked
 42508  0123F8  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42509  0123FA  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42510  0123FC  B4D8               	btfsc	status,2,c
 42511  0123FE  D038               	goto	i2l20560
 42512  012400  D781               	goto	i2l20538
 42513  012402                     i2l20550:
 42514                           
 42515                           ; BSR set to: 0
 42516  012402  EE20 F002          	lfsr	2,2
 42517  012406  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42518  012408  26D9               	addwf	fsr2l,f,c
 42519  01240A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42520  01240C  22DA               	addwfc	fsr2h,f,c
 42521  01240E  50DE               	movf	postinc2,w,c
 42522  012410  10DE               	iorwf	postinc2,w,c
 42523  012412  10DE               	iorwf	postinc2,w,c
 42524  012414  B4D8               	btfsc	status,2,c
 42525  012416  D013               	goto	i2l20554
 42526                           
 42527                           ; BSR set to: 0
 42528  012418  EE20 F002          	lfsr	2,2
 42529  01241C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42530  01241E  26D9               	addwf	fsr2l,f,c
 42531  012420  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42532  012422  22DA               	addwfc	fsr2h,f,c
 42533  012424  D801               	call	i2u2643_48
 42534  012426  D020               	goto	i2l20558
 42535  012428                     i2u2643_48:
 42536  012428  0005               	push	
 42537  01242A  6EFA               	movwf	pclath,c
 42538  01242C  50DE               	movf	postinc2,w,c
 42539  01242E  6EFD               	movwf	tosl,c
 42540  012430  50DE               	movf	postinc2,w,c
 42541  012432  6EFE               	movwf	tosh,c
 42542  012434  50DE               	movf	postinc2,w,c
 42543  012436  6EFF               	movwf	tosu,c
 42544  012438  50FA               	movf	pclath,w,c
 42545  01243A  0E30               	movlw	48
 42546  01243C  0012               	return		;indir
 42547  01243E                     i2l20554:
 42548                           
 42549                           ; BSR set to: 0
 42550  01243E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42551  012442  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42552  012446  CFDE F072          	movff	postinc2,??i2__doprnt
 42553  01244A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42554  01244E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42555  012452  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42556  012456  0E30               	movlw	48
 42557  012458  6EDF               	movwf	indf2,c
 42558                           
 42559                           ; BSR set to: 0
 42560  01245A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42561  01245E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42562  012462  2ADE               	incf	postinc2,f,c
 42563  012464  0E00               	movlw	0
 42564  012466  22DD               	addwfc	postdec2,f,c
 42565  012468                     i2l20558:
 42566                           
 42567                           ;doprnt.c: 1228: eexp--;
 42568  012468  0100               	movlb	0	; () banked
 42569  01246A  078F               	decf	i2__doprnt@eexp& (0+255),f,b
 42570  01246C  A0D8               	btfss	status,0,c
 42571  01246E  0790               	decf	(i2__doprnt@eexp+1)& (0+255),f,b
 42572  012470                     i2l20560:
 42573                           
 42574                           ; BSR set to: 0
 42575  012470  BF90               	btfsc	(i2__doprnt@eexp+1)& (0+255),7,b
 42576  012472  D005               	goto	i2u2644_40
 42577  012474  5190               	movf	(i2__doprnt@eexp+1)& (0+255),w,b
 42578  012476  E1C5               	bnz	i2l20550
 42579  012478  058F               	decf	i2__doprnt@eexp& (0+255),w,b
 42580  01247A  B0D8               	btfsc	status,0,c
 42581  01247C  D7C2               	goto	i2l20550
 42582  01247E                     i2u2644_40:
 42583                           
 42584                           ; BSR set to: 0
 42585                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 42586  01247E  BFA0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 42587  012480  D009               	goto	i2l2568
 42588  012482  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42589  012484  E104               	bnz	i2u2645_40
 42590  012486  0E09               	movlw	9
 42591  012488  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 42592  01248A  A0D8               	btfss	status,0,c
 42593  01248C  D003               	goto	i2l2568
 42594  01248E                     i2u2645_40:
 42595                           
 42596                           ; BSR set to: 0
 42597                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
 42598  01248E  0E08               	movlw	8
 42599  012490  6FA3               	movwf	i2__doprnt@c& (0+255),b
 42600  012492  D002               	goto	i2l20566
 42601  012494                     i2l2568:
 42602                           
 42603                           ; BSR set to: 0
 42604                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
 42605  012494  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 42606  012498                     i2l20566:
 42607                           
 42608                           ; BSR set to: 0
 42609                           ;doprnt.c: 1234: prec -= (int)c;
 42610  012498  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42611  01249A  5F9F               	subwf	i2__doprnt@prec& (0+255),f,b
 42612  01249C  0E00               	movlw	0
 42613  01249E  5BA0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 42614                           
 42615                           ; BSR set to: 0
 42616                           ;doprnt.c: 1238: if(c)
 42617  0124A0  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42618  0124A2  B4D8               	btfsc	status,2,c
 42619  0124A4  D033               	goto	i2l20578
 42620                           
 42621                           ; BSR set to: 0
 42622  0124A6  EE20 F002          	lfsr	2,2
 42623  0124AA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42624  0124AC  26D9               	addwf	fsr2l,f,c
 42625  0124AE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42626  0124B0  22DA               	addwfc	fsr2h,f,c
 42627  0124B2  50DE               	movf	postinc2,w,c
 42628  0124B4  10DE               	iorwf	postinc2,w,c
 42629  0124B6  10DE               	iorwf	postinc2,w,c
 42630  0124B8  B4D8               	btfsc	status,2,c
 42631  0124BA  D013               	goto	i2l20574
 42632                           
 42633                           ; BSR set to: 0
 42634  0124BC  EE20 F002          	lfsr	2,2
 42635  0124C0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42636  0124C2  26D9               	addwf	fsr2l,f,c
 42637  0124C4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42638  0124C6  22DA               	addwfc	fsr2h,f,c
 42639  0124C8  D801               	call	i2u2648_48
 42640  0124CA  D020               	goto	i2l20578
 42641  0124CC                     i2u2648_48:
 42642  0124CC  0005               	push	
 42643  0124CE  6EFA               	movwf	pclath,c
 42644  0124D0  50DE               	movf	postinc2,w,c
 42645  0124D2  6EFD               	movwf	tosl,c
 42646  0124D4  50DE               	movf	postinc2,w,c
 42647  0124D6  6EFE               	movwf	tosh,c
 42648  0124D8  50DE               	movf	postinc2,w,c
 42649  0124DA  6EFF               	movwf	tosu,c
 42650  0124DC  50FA               	movf	pclath,w,c
 42651  0124DE  0E2E               	movlw	46
 42652  0124E0  0012               	return		;indir
 42653  0124E2                     i2l20574:
 42654                           
 42655                           ; BSR set to: 0
 42656  0124E2  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42657  0124E6  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42658  0124EA  CFDE F072          	movff	postinc2,??i2__doprnt
 42659  0124EE  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42660  0124F2  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42661  0124F6  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42662  0124FA  0E2E               	movlw	46
 42663  0124FC  6EDF               	movwf	indf2,c
 42664                           
 42665                           ; BSR set to: 0
 42666  0124FE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42667  012502  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42668  012506  2ADE               	incf	postinc2,f,c
 42669  012508  0E00               	movlw	0
 42670  01250A  22DD               	addwfc	postdec2,f,c
 42671  01250C                     i2l20578:
 42672                           
 42673                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42674  01250C  0100               	movlb	0	; () banked
 42675  01250E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42676  012510  ECAE  F0AF         	call	i2_scale
 42677  012514  C045  F076         	movff	?i2_scale,i2__doprnt$6434
 42678  012518  C046  F077         	movff	?i2_scale+1,i2__doprnt$6434+1
 42679  01251C  C047  F078         	movff	?i2_scale+2,i2__doprnt$6434+2
 42680  012520  C048  F079         	movff	?i2_scale+3,i2__doprnt$6434+3
 42681                           
 42682                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
 42683  012524  C095  F030         	movff	i2__doprnt@fval,i2___flmul@a
 42684  012528  C096  F031         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 42685  01252C  C097  F032         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 42686  012530  C098  F033         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 42687  012534  C076  F02C         	movff	i2__doprnt$6434,i2___flmul@b
 42688  012538  C077  F02D         	movff	i2__doprnt$6434+1,i2___flmul@b+1
 42689  01253C  C078  F02E         	movff	i2__doprnt$6434+2,i2___flmul@b+2
 42690  012540  C079  F02F         	movff	i2__doprnt$6434+3,i2___flmul@b+3
 42691  012544  EC94  F0B8         	call	i2___flmul	;wreg free
 42692  012548  C02C  F04E         	movff	?i2___flmul,i2___fltol@f1
 42693  01254C  C02D  F04F         	movff	?i2___flmul+1,i2___fltol@f1+1
 42694  012550  C02E  F050         	movff	?i2___flmul+2,i2___fltol@f1+2
 42695  012554  C02F  F051         	movff	?i2___flmul+3,i2___fltol@f1+3
 42696  012558  EC43  F0D6         	call	i2___fltol	;wreg free
 42697  01255C  C04E  F099         	movff	?i2___fltol,i2__doprnt@val
 42698  012560  C04F  F09A         	movff	?i2___fltol+1,i2__doprnt@val+1
 42699  012564  C050  F09B         	movff	?i2___fltol+2,i2__doprnt@val+2
 42700  012568  C051  F09C         	movff	?i2___fltol+3,i2__doprnt@val+3
 42701                           
 42702                           ;doprnt.c: 1247: while(c--) {
 42703  01256C  D0A3               	goto	i2l20594
 42704  01256E                     i2l20582:
 42705                           
 42706                           ; BSR set to: 0
 42707                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
 42708  01256E  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 42709  012572  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 42710  012576  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 42711  01257A  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 42712  01257E  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42713  012580  0D04               	mullw	4
 42714  012582  0E63               	movlw	low _dpowers
 42715  012584  24F3               	addwf	prodl,w,c
 42716  012586  6EF6               	movwf	tblptrl,c
 42717  012588  0EE8               	movlw	high _dpowers
 42718  01258A  20F4               	addwfc	prodh,w,c
 42719  01258C  6EF7               	movwf	tblptrh,c
 42720  01258E                     	if	1	;There are 3 active tblptr bytes
 42721  01258E  6AF8               	clrf	tblptru,c
 42722  012590  0E00               	movlw	low (__mediumconst shr (0+16))
 42723  012592  22F8               	addwfc	tblptru,f,c
 42724  012594                     	endif
 42725  012594  0009               	tblrd		*+
 42726  012596  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 42727  01259A  0009               	tblrd		*+
 42728  01259C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 42729  0125A0  0009               	tblrd		*+
 42730  0125A2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 42731  0125A6  000A               	tblrd		*-
 42732  0125A8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 42733  0125AC  EC71  F0DA         	call	i2___lldiv	;wreg free
 42734  0125B0  C001  F091         	movff	?i2___lldiv,i2__doprnt@tmpval
 42735  0125B4  C002  F092         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 42736  0125B8  C003  F093         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 42737  0125BC  C004  F094         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 42738                           
 42739                           ;doprnt.c: 1249: tmpval.vd %= 10;
 42740  0125C0  C091  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 42741  0125C4  C092  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 42742  0125C8  C093  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 42743  0125CC  C094  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 42744  0125D0  0E0A               	movlw	10
 42745  0125D2  6E12               	movwf	i2___llmod@divisor,c
 42746  0125D4  0E00               	movlw	0
 42747  0125D6  6E13               	movwf	i2___llmod@divisor+1,c
 42748  0125D8  0E00               	movlw	0
 42749  0125DA  6E14               	movwf	i2___llmod@divisor+2,c
 42750  0125DC  0E00               	movlw	0
 42751  0125DE  6E15               	movwf	i2___llmod@divisor+3,c
 42752  0125E0  ECF0  F0DB         	call	i2___llmod	;wreg free
 42753  0125E4  C00E  F091         	movff	?i2___llmod,i2__doprnt@tmpval
 42754  0125E8  C00F  F092         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 42755  0125EC  C010  F093         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 42756  0125F0  C011  F094         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 42757  0125F4  0100               	movlb	0	; () banked
 42758  0125F6  EE20 F002          	lfsr	2,2
 42759  0125FA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42760  0125FC  26D9               	addwf	fsr2l,f,c
 42761  0125FE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42762  012600  22DA               	addwfc	fsr2h,f,c
 42763  012602  50DE               	movf	postinc2,w,c
 42764  012604  10DE               	iorwf	postinc2,w,c
 42765  012606  10DE               	iorwf	postinc2,w,c
 42766  012608  B4D8               	btfsc	status,2,c
 42767  01260A  D014               	goto	i2l20590
 42768                           
 42769                           ; BSR set to: 0
 42770  01260C  EE20 F002          	lfsr	2,2
 42771  012610  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42772  012612  26D9               	addwf	fsr2l,f,c
 42773  012614  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42774  012616  22DA               	addwfc	fsr2h,f,c
 42775  012618  D801               	call	i2u2650_48
 42776  01261A  D022               	goto	i2l20592
 42777  01261C                     i2u2650_48:
 42778  01261C  0005               	push	
 42779  01261E  6EFA               	movwf	pclath,c
 42780  012620  50DE               	movf	postinc2,w,c
 42781  012622  6EFD               	movwf	tosl,c
 42782  012624  50DE               	movf	postinc2,w,c
 42783  012626  6EFE               	movwf	tosh,c
 42784  012628  50DE               	movf	postinc2,w,c
 42785  01262A  6EFF               	movwf	tosu,c
 42786  01262C  50FA               	movf	pclath,w,c
 42787  01262E  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42788  012630  0F30               	addlw	48
 42789  012632  0012               	return		;indir
 42790  012634                     i2l20590:
 42791                           
 42792                           ; BSR set to: 0
 42793  012634  5191               	movf	i2__doprnt@tmpval& (0+255),w,b
 42794  012636  0F30               	addlw	48
 42795  012638  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42796  01263C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42797  012640  CFDE F072          	movff	postinc2,??i2__doprnt
 42798  012644  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42799  012648  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42800  01264C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42801  012650  6EDF               	movwf	indf2,c
 42802  012652  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42803  012656  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42804  01265A  2ADE               	incf	postinc2,f,c
 42805  01265C  0E00               	movlw	0
 42806  01265E  22DD               	addwfc	postdec2,f,c
 42807  012660                     i2l20592:
 42808                           
 42809                           ;doprnt.c: 1251: val %= dpowers[c];
 42810  012660  C099  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 42811  012664  C09A  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 42812  012668  C09B  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 42813  01266C  C09C  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 42814  012670  0100               	movlb	0	; () banked
 42815  012672  51A3               	movf	i2__doprnt@c& (0+255),w,b
 42816  012674  0D04               	mullw	4
 42817  012676  0E63               	movlw	low _dpowers
 42818  012678  24F3               	addwf	prodl,w,c
 42819  01267A  6EF6               	movwf	tblptrl,c
 42820  01267C  0EE8               	movlw	high _dpowers
 42821  01267E  20F4               	addwfc	prodh,w,c
 42822  012680  6EF7               	movwf	tblptrh,c
 42823  012682                     	if	1	;There are 3 active tblptr bytes
 42824  012682  6AF8               	clrf	tblptru,c
 42825  012684  0E00               	movlw	low (__mediumconst shr (0+16))
 42826  012686  22F8               	addwfc	tblptru,f,c
 42827  012688                     	endif
 42828  012688  0009               	tblrd		*+
 42829  01268A  CFF5 F012          	movff	tablat,i2___llmod@divisor
 42830  01268E  0009               	tblrd		*+
 42831  012690  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 42832  012694  0009               	tblrd		*+
 42833  012696  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 42834  01269A  000A               	tblrd		*-
 42835  01269C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 42836  0126A0  ECF0  F0DB         	call	i2___llmod
 42837  0126A4  C00E  F099         	movff	?i2___llmod,i2__doprnt@val
 42838  0126A8  C00F  F09A         	movff	?i2___llmod+1,i2__doprnt@val+1
 42839  0126AC  C010  F09B         	movff	?i2___llmod+2,i2__doprnt@val+2
 42840  0126B0  C011  F09C         	movff	?i2___llmod+3,i2__doprnt@val+3
 42841  0126B4                     i2l20594:
 42842  0126B4  0100               	movlb	0	; () banked
 42843  0126B6  07A3               	decf	i2__doprnt@c& (0+255),f,b
 42844  0126B8  29A3               	incf	i2__doprnt@c& (0+255),w,b
 42845  0126BA  B4D8               	btfsc	status,2,c
 42846  0126BC  D038               	goto	i2l20606
 42847  0126BE  D757               	goto	i2l20582
 42848  0126C0                     i2l20596:
 42849                           
 42850                           ; BSR set to: 0
 42851  0126C0  EE20 F002          	lfsr	2,2
 42852  0126C4  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42853  0126C6  26D9               	addwf	fsr2l,f,c
 42854  0126C8  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42855  0126CA  22DA               	addwfc	fsr2h,f,c
 42856  0126CC  50DE               	movf	postinc2,w,c
 42857  0126CE  10DE               	iorwf	postinc2,w,c
 42858  0126D0  10DE               	iorwf	postinc2,w,c
 42859  0126D2  B4D8               	btfsc	status,2,c
 42860  0126D4  D013               	goto	i2l20600
 42861                           
 42862                           ; BSR set to: 0
 42863  0126D6  EE20 F002          	lfsr	2,2
 42864  0126DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 42865  0126DC  26D9               	addwf	fsr2l,f,c
 42866  0126DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42867  0126E0  22DA               	addwfc	fsr2h,f,c
 42868  0126E2  D801               	call	i2u2653_48
 42869  0126E4  D020               	goto	i2l20604
 42870  0126E6                     i2u2653_48:
 42871  0126E6  0005               	push	
 42872  0126E8  6EFA               	movwf	pclath,c
 42873  0126EA  50DE               	movf	postinc2,w,c
 42874  0126EC  6EFD               	movwf	tosl,c
 42875  0126EE  50DE               	movf	postinc2,w,c
 42876  0126F0  6EFE               	movwf	tosh,c
 42877  0126F2  50DE               	movf	postinc2,w,c
 42878  0126F4  6EFF               	movwf	tosu,c
 42879  0126F6  50FA               	movf	pclath,w,c
 42880  0126F8  0E30               	movlw	48
 42881  0126FA  0012               	return		;indir
 42882  0126FC                     i2l20600:
 42883                           
 42884                           ; BSR set to: 0
 42885  0126FC  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42886  012700  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42887  012704  CFDE F072          	movff	postinc2,??i2__doprnt
 42888  012708  CFDD F073          	movff	postdec2,??i2__doprnt+1
 42889  01270C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42890  012710  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42891  012714  0E30               	movlw	48
 42892  012716  6EDF               	movwf	indf2,c
 42893                           
 42894                           ; BSR set to: 0
 42895  012718  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 42896  01271C  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42897  012720  2ADE               	incf	postinc2,f,c
 42898  012722  0E00               	movlw	0
 42899  012724  22DD               	addwfc	postdec2,f,c
 42900  012726                     i2l20604:
 42901                           
 42902                           ;doprnt.c: 1256: prec--;
 42903  012726  0100               	movlb	0	; () banked
 42904  012728  079F               	decf	i2__doprnt@prec& (0+255),f,b
 42905  01272A  A0D8               	btfss	status,0,c
 42906  01272C  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 42907  01272E                     i2l20606:
 42908                           
 42909                           ; BSR set to: 0
 42910  01272E  519F               	movf	i2__doprnt@prec& (0+255),w,b
 42911  012730  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42912  012732  B4D8               	btfsc	status,2,c
 42913  012734  D360               	goto	i2u2699_40
 42914  012736  D7C4               	goto	i2l20596
 42915  012738                     i2l20608:
 42916                           
 42917                           ; BSR set to: 0
 42918                           ;doprnt.c: 1265: };doprnt.c: 1270: if((flag & (0xC0)) == 0x00)
 42919  012738  0EC0               	movlw	192
 42920  01273A  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 42921  01273C  6F72               	movwf	??i2__doprnt& (0+255),b
 42922  01273E  0E00               	movlw	0
 42923  012740  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42924  012742  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 42925  012744  5172               	movf	??i2__doprnt& (0+255),w,b
 42926  012746  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 42927  012748  A4D8               	btfss	status,2,c
 42928  01274A  D041               	goto	i2l2589
 42929                           
 42930                           ; BSR set to: 0
 42931                           ;doprnt.c: 1272: {;doprnt.c: 1274: if(flag & 0x10)
 42932  01274C  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 42933  01274E  D019               	goto	i2l20614
 42934                           
 42935                           ; BSR set to: 0
 42936                           ;doprnt.c: 1275: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 42937  012750  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42938  012754  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42939  012758  CFDF F072          	movff	indf2,??i2__doprnt
 42940  01275C  0E04               	movlw	4
 42941  01275E  26DE               	addwf	postinc2,f,c
 42942  012760  CFDF F073          	movff	indf2,??i2__doprnt+1
 42943  012764  0E00               	movlw	0
 42944  012766  22DD               	addwfc	postdec2,f,c
 42945  012768  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42946  01276C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42947  012770  CFDE F099          	movff	postinc2,i2__doprnt@val
 42948  012774  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 42949  012778  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 42950  01277C  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 42951  012780  D019               	goto	i2l20616
 42952  012782                     i2l20614:
 42953                           
 42954                           ; BSR set to: 0
 42955                           ;doprnt.c: 1276: else;doprnt.c: 1278: val = (long)(*(int *)__va_arg((*(int **)ap), (int)
      +                          0));
 42956  012782  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 42957  012786  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42958  01278A  CFDF F072          	movff	indf2,??i2__doprnt
 42959  01278E  0E02               	movlw	2
 42960  012790  26DE               	addwf	postinc2,f,c
 42961  012792  CFDF F073          	movff	indf2,??i2__doprnt+1
 42962  012796  0E00               	movlw	0
 42963  012798  22DD               	addwfc	postdec2,f,c
 42964  01279A  C072  FFD9         	movff	??i2__doprnt,fsr2l
 42965  01279E  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 42966  0127A2  CFDE F099          	movff	postinc2,i2__doprnt@val
 42967  0127A6  CFDD F09A          	movff	postdec2,i2__doprnt@val+1
 42968  0127AA  0E00               	movlw	0
 42969  0127AC  BF9A               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 42970  0127AE  0EFF               	movlw	-1
 42971  0127B0  6F9B               	movwf	(i2__doprnt@val+2)& (0+255),b
 42972  0127B2  6F9C               	movwf	(i2__doprnt@val+3)& (0+255),b
 42973  0127B4                     i2l20616:
 42974                           
 42975                           ; BSR set to: 0
 42976                           ;doprnt.c: 1280: if((long)val < 0) {
 42977  0127B4  AF9C               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 42978  0127B6  D040               	goto	i2l20626
 42979                           
 42980                           ; BSR set to: 0
 42981                           ;doprnt.c: 1281: flag |= 0x03;
 42982  0127B8  0E03               	movlw	3
 42983  0127BA  13A1               	iorwf	i2__doprnt@flag& (0+255),f,b
 42984                           
 42985                           ; BSR set to: 0
 42986                           ;doprnt.c: 1282: val = -val;
 42987  0127BC  1F9C               	comf	(i2__doprnt@val+3)& (0+255),f,b
 42988  0127BE  1F9B               	comf	(i2__doprnt@val+2)& (0+255),f,b
 42989  0127C0  1F9A               	comf	(i2__doprnt@val+1)& (0+255),f,b
 42990  0127C2  6D99               	negf	i2__doprnt@val& (0+255),b
 42991  0127C4  0E00               	movlw	0
 42992  0127C6  239A               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 42993  0127C8  239B               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 42994  0127CA  239C               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 42995  0127CC  D035               	goto	i2l20626
 42996  0127CE                     i2l2589:
 42997                           
 42998                           ; BSR set to: 0
 42999                           ;doprnt.c: 1287: else;doprnt.c: 1292: {;doprnt.c: 1300: if(flag & 0x10)
 43000  0127CE  A9A1               	btfss	i2__doprnt@flag& (0+255),4,b
 43001  0127D0  D019               	goto	i2l20624
 43002                           
 43003                           ; BSR set to: 0
 43004                           ;doprnt.c: 1301: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 43005  0127D2  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 43006  0127D6  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43007  0127DA  CFDF F072          	movff	indf2,??i2__doprnt
 43008  0127DE  0E04               	movlw	4
 43009  0127E0  26DE               	addwf	postinc2,f,c
 43010  0127E2  CFDF F073          	movff	indf2,??i2__doprnt+1
 43011  0127E6  0E00               	movlw	0
 43012  0127E8  22DD               	addwfc	postdec2,f,c
 43013  0127EA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43014  0127EE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43015  0127F2  CFDE F099          	movff	postinc2,i2__doprnt@val
 43016  0127F6  CFDE F09A          	movff	postinc2,i2__doprnt@val+1
 43017  0127FA  CFDE F09B          	movff	postinc2,i2__doprnt@val+2
 43018  0127FE  CFDE F09C          	movff	postinc2,i2__doprnt@val+3
 43019  012802  D01A               	goto	i2l20626
 43020  012804                     i2l20624:
 43021                           
 43022                           ; BSR set to: 0
 43023                           ;doprnt.c: 1302: else;doprnt.c: 1305: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 43024  012804  C070  FFD9         	movff	i2__doprnt@ap,fsr2l
 43025  012808  C071  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43026  01280C  CFDF F072          	movff	indf2,??i2__doprnt
 43027  012810  0E02               	movlw	2
 43028  012812  26DE               	addwf	postinc2,f,c
 43029  012814  CFDF F073          	movff	indf2,??i2__doprnt+1
 43030  012818  0E00               	movlw	0
 43031  01281A  22DD               	addwfc	postdec2,f,c
 43032  01281C  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43033  012820  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43034  012824  CFDE F074          	movff	postinc2,??i2__doprnt+2
 43035  012828  CFDD F075          	movff	postdec2,??i2__doprnt+3
 43036  01282C  C074  F099         	movff	??i2__doprnt+2,i2__doprnt@val
 43037  012830  C075  F09A         	movff	??i2__doprnt+3,i2__doprnt@val+1
 43038  012834  6B9B               	clrf	(i2__doprnt@val+2)& (0+255),b
 43039  012836  6B9C               	clrf	(i2__doprnt@val+3)& (0+255),b
 43040  012838                     i2l20626:
 43041                           
 43042                           ; BSR set to: 0
 43043                           ;doprnt.c: 1306: };doprnt.c: 1309: if(prec == 0 && val == 0)
 43044  012838  519F               	movf	i2__doprnt@prec& (0+255),w,b
 43045  01283A  11A0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43046  01283C  A4D8               	btfss	status,2,c
 43047  01283E  D04B               	goto	i2l20662
 43048                           
 43049                           ; BSR set to: 0
 43050  012840  5199               	movf	i2__doprnt@val& (0+255),w,b
 43051  012842  119A               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 43052  012844  119B               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 43053  012846  119C               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 43054  012848  A4D8               	btfss	status,2,c
 43055  01284A  D045               	goto	i2l20662
 43056                           
 43057                           ; BSR set to: 0
 43058                           ;doprnt.c: 1310: prec++;
 43059  01284C  4B9F               	infsnz	i2__doprnt@prec& (0+255),f,b
 43060  01284E  2BA0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 43061  012850  D042               	goto	i2l20662
 43062  012852                     i2l20632:
 43063                           
 43064                           ; BSR set to: 0
 43065                           ;doprnt.c: 1321: case 0xC0:;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 43066  012852  0E01               	movlw	1
 43067  012854  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43068  012856                     i2l20638:
 43069                           
 43070                           ; BSR set to: 0
 43071                           ;doprnt.c: 1325: if(val < dpowers[c])
 43072  012856  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43073  012858  0D04               	mullw	4
 43074  01285A  0E63               	movlw	low _dpowers
 43075  01285C  24F3               	addwf	prodl,w,c
 43076  01285E  6EF6               	movwf	tblptrl,c
 43077  012860  0EE8               	movlw	high _dpowers
 43078  012862  20F4               	addwfc	prodh,w,c
 43079  012864  6EF7               	movwf	tblptrh,c
 43080  012866                     	if	1	;There are 3 active tblptr bytes
 43081  012866  6AF8               	clrf	tblptru,c
 43082  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 43083  01286A  22F8               	addwfc	tblptru,f,c
 43084  01286C                     	endif
 43085  01286C  0009               	tblrd		*+
 43086  01286E  50F5               	movf	tablat,w,c
 43087  012870  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 43088  012872  0009               	tblrd		*+
 43089  012874  50F5               	movf	tablat,w,c
 43090  012876  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43091  012878  0009               	tblrd		*+
 43092  01287A  50F5               	movf	tablat,w,c
 43093  01287C  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43094  01287E  0009               	tblrd		*+
 43095  012880  50F5               	movf	tablat,w,c
 43096  012882  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43097  012884  A0D8               	btfss	status,0,c
 43098  012886  D032               	goto	i2l20664
 43099                           
 43100                           ; BSR set to: 0
 43101  012888  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 43102                           
 43103                           ; BSR set to: 0
 43104  01288A  0E0A               	movlw	10
 43105  01288C  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 43106  01288E  B4D8               	btfsc	status,2,c
 43107  012890  D02D               	goto	i2l20664
 43108  012892  D7E1               	goto	i2l20638
 43109  012894                     i2l20646:
 43110                           
 43111                           ; BSR set to: 0
 43112                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 43113  012894  0E01               	movlw	1
 43114  012896  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43115  012898                     i2l20652:
 43116                           
 43117                           ; BSR set to: 0
 43118                           ;doprnt.c: 1336: if(val < hexpowers[c])
 43119  012898  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43120  01289A  0D04               	mullw	4
 43121  01289C  0E43               	movlw	low _hexpowers
 43122  01289E  24F3               	addwf	prodl,w,c
 43123  0128A0  6EF6               	movwf	tblptrl,c
 43124  0128A2  0EE5               	movlw	high _hexpowers
 43125  0128A4  20F4               	addwfc	prodh,w,c
 43126  0128A6  6EF7               	movwf	tblptrh,c
 43127  0128A8                     	if	1	;There are 3 active tblptr bytes
 43128  0128A8  6AF8               	clrf	tblptru,c
 43129  0128AA  0E00               	movlw	low (__mediumconst shr (0+16))
 43130  0128AC  22F8               	addwfc	tblptru,f,c
 43131  0128AE                     	endif
 43132  0128AE  0009               	tblrd		*+
 43133  0128B0  50F5               	movf	tablat,w,c
 43134  0128B2  5D99               	subwf	i2__doprnt@val& (0+255),w,b
 43135  0128B4  0009               	tblrd		*+
 43136  0128B6  50F5               	movf	tablat,w,c
 43137  0128B8  599A               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43138  0128BA  0009               	tblrd		*+
 43139  0128BC  50F5               	movf	tablat,w,c
 43140  0128BE  599B               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43141  0128C0  0009               	tblrd		*+
 43142  0128C2  50F5               	movf	tablat,w,c
 43143  0128C4  599C               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43144  0128C6  A0D8               	btfss	status,0,c
 43145  0128C8  D011               	goto	i2l20664
 43146                           
 43147                           ; BSR set to: 0
 43148  0128CA  2BA3               	incf	i2__doprnt@c& (0+255),f,b
 43149                           
 43150                           ; BSR set to: 0
 43151  0128CC  0E08               	movlw	8
 43152  0128CE  19A3               	xorwf	i2__doprnt@c& (0+255),w,b
 43153  0128D0  B4D8               	btfsc	status,2,c
 43154  0128D2  D00C               	goto	i2l20664
 43155  0128D4  D7E1               	goto	i2l20652
 43156  0128D6                     i2l20662:
 43157                           
 43158                           ; BSR set to: 0
 43159  0128D6  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 43160  0128D8  0BC0               	andlw	192
 43161                           
 43162                           ; Switch size 1, requested type "simple"
 43163                           ; Number of cases is 3, Range of values is 0 to 192
 43164                           ; switch strategies available:
 43165                           ; Name         Instructions Cycles
 43166                           ; simple_byte           10     6 (average)
 43167                           ;	Chosen strategy is simple_byte
 43168  0128DA  0A00               	xorlw	0	; case 0
 43169  0128DC  B4D8               	btfsc	status,2,c
 43170  0128DE  D7B9               	goto	i2l20632
 43171  0128E0  0A80               	xorlw	128	; case 128
 43172  0128E2  B4D8               	btfsc	status,2,c
 43173  0128E4  D7D7               	goto	i2l20646
 43174  0128E6  0A40               	xorlw	64	; case 192
 43175  0128E8  B4D8               	btfsc	status,2,c
 43176  0128EA  D7B3               	goto	i2l20632
 43177  0128EC                     i2l20664:
 43178                           
 43179                           ; BSR set to: 0
 43180                           ;doprnt.c: 1358: if(c < prec)
 43181  0128EC  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43182  0128EE  6F72               	movwf	??i2__doprnt& (0+255),b
 43183  0128F0  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 43184  0128F2  519F               	movf	i2__doprnt@prec& (0+255),w,b
 43185  0128F4  5D72               	subwf	??i2__doprnt& (0+255),w,b
 43186  0128F6  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 43187  0128F8  0A80               	xorlw	128
 43188  0128FA  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 43189  0128FC  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43190  0128FE  0A80               	xorlw	128
 43191  012900  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 43192  012902  B0D8               	btfsc	status,0,c
 43193  012904  D003               	goto	i2l20668
 43194                           
 43195                           ; BSR set to: 0
 43196                           ;doprnt.c: 1359: c = prec;
 43197  012906  C09F  F0A3         	movff	i2__doprnt@prec,i2__doprnt@c
 43198  01290A  D010               	goto	i2l20672
 43199  01290C                     i2l20668:
 43200                           
 43201                           ; BSR set to: 0
 43202                           ;doprnt.c: 1360: else if(prec < c)
 43203  01290C  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43204  01290E  6F72               	movwf	??i2__doprnt& (0+255),b
 43205  012910  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 43206  012912  5172               	movf	??i2__doprnt& (0+255),w,b
 43207  012914  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 43208  012916  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43209  012918  0A80               	xorlw	128
 43210  01291A  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 43211  01291C  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 43212  01291E  0A80               	xorlw	128
 43213  012920  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 43214  012922  B0D8               	btfsc	status,0,c
 43215  012924  D003               	goto	i2l20672
 43216                           
 43217                           ; BSR set to: 0
 43218                           ;doprnt.c: 1361: prec = c;
 43219  012926  C0A3  F09F         	movff	i2__doprnt@c,i2__doprnt@prec
 43220  01292A  6BA0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 43221  01292C                     i2l20672:
 43222                           
 43223                           ; BSR set to: 0
 43224                           ;doprnt.c: 1364: if(width && flag & 0x03)
 43225  01292C  519D               	movf	i2__doprnt@width& (0+255),w,b
 43226  01292E  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43227  012930  B4D8               	btfsc	status,2,c
 43228  012932  D00D               	goto	i2l20678
 43229                           
 43230                           ; BSR set to: 0
 43231  012934  0E03               	movlw	3
 43232  012936  15A1               	andwf	i2__doprnt@flag& (0+255),w,b
 43233  012938  6F72               	movwf	??i2__doprnt& (0+255),b
 43234  01293A  0E00               	movlw	0
 43235  01293C  15A2               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43236  01293E  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 43237  012940  5172               	movf	??i2__doprnt& (0+255),w,b
 43238  012942  1173               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43239  012944  B4D8               	btfsc	status,2,c
 43240  012946  D003               	goto	i2l20678
 43241                           
 43242                           ; BSR set to: 0
 43243                           ;doprnt.c: 1365: width--;
 43244  012948  079D               	decf	i2__doprnt@width& (0+255),f,b
 43245  01294A  A0D8               	btfss	status,0,c
 43246  01294C  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43247  01294E                     i2l20678:
 43248                           
 43249                           ; BSR set to: 0
 43250                           ;doprnt.c: 1367: if(flag & 0x4000) {
 43251  01294E  ADA2               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 43252  012950  D013               	goto	i2l20686
 43253                           
 43254                           ; BSR set to: 0
 43255                           ;doprnt.c: 1368: if(width > prec)
 43256  012952  519D               	movf	i2__doprnt@width& (0+255),w,b
 43257  012954  5D9F               	subwf	i2__doprnt@prec& (0+255),w,b
 43258  012956  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43259  012958  0A80               	xorlw	128
 43260  01295A  6F72               	movwf	??i2__doprnt& (0+255),b
 43261  01295C  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43262  01295E  0A80               	xorlw	128
 43263  012960  5972               	subwfb	??i2__doprnt& (0+255),w,b
 43264  012962  B0D8               	btfsc	status,0,c
 43265  012964  D005               	goto	i2l20684
 43266                           
 43267                           ; BSR set to: 0
 43268                           ;doprnt.c: 1369: width -= prec;
 43269  012966  519F               	movf	i2__doprnt@prec& (0+255),w,b
 43270  012968  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 43271  01296A  51A0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43272  01296C  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43273  01296E  D004               	goto	i2l20686
 43274  012970                     i2l20684:
 43275                           
 43276                           ; BSR set to: 0
 43277                           ;doprnt.c: 1370: else;doprnt.c: 1371: width = 0;
 43278  012970  0E00               	movlw	0
 43279  012972  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 43280  012974  0E00               	movlw	0
 43281  012976  6F9D               	movwf	i2__doprnt@width& (0+255),b
 43282  012978                     i2l20686:
 43283                           
 43284                           ; BSR set to: 0
 43285                           ;doprnt.c: 1372: };doprnt.c: 1400: if(width > c)
 43286  012978  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43287  01297A  6F72               	movwf	??i2__doprnt& (0+255),b
 43288  01297C  6B73               	clrf	(??i2__doprnt+1)& (0+255),b
 43289  01297E  519D               	movf	i2__doprnt@width& (0+255),w,b
 43290  012980  5D72               	subwf	??i2__doprnt& (0+255),w,b
 43291  012982  5173               	movf	(??i2__doprnt+1)& (0+255),w,b
 43292  012984  0A80               	xorlw	128
 43293  012986  6F74               	movwf	(??i2__doprnt+2)& (0+255),b
 43294  012988  519E               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43295  01298A  0A80               	xorlw	128
 43296  01298C  5974               	subwfb	(??i2__doprnt+2)& (0+255),w,b
 43297  01298E  B0D8               	btfsc	status,0,c
 43298  012990  D005               	goto	i2l20690
 43299                           
 43300                           ; BSR set to: 0
 43301                           ;doprnt.c: 1401: width -= c;
 43302  012992  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43303  012994  5F9D               	subwf	i2__doprnt@width& (0+255),f,b
 43304  012996  0E00               	movlw	0
 43305  012998  5B9E               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43306  01299A  D004               	goto	i2l20692
 43307  01299C                     i2l20690:
 43308                           
 43309                           ; BSR set to: 0
 43310                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 43311  01299C  0E00               	movlw	0
 43312  01299E  6F9E               	movwf	(i2__doprnt@width+1)& (0+255),b
 43313  0129A0  0E00               	movlw	0
 43314  0129A2  6F9D               	movwf	i2__doprnt@width& (0+255),b
 43315  0129A4                     i2l20692:
 43316                           
 43317                           ; BSR set to: 0
 43318                           ;doprnt.c: 1406: if(flag & 0x04) {
 43319  0129A4  A5A1               	btfss	i2__doprnt@flag& (0+255),2,b
 43320  0129A6  D0B5               	goto	i2l20734
 43321                           
 43322                           ; BSR set to: 0
 43323                           ;doprnt.c: 1408: if(flag & 0x02)
 43324  0129A8  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 43325  0129AA  D041               	goto	i2l2618
 43326                           
 43327                           ; BSR set to: 0
 43328  0129AC  EE20 F002          	lfsr	2,2
 43329  0129B0  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43330  0129B2  26D9               	addwf	fsr2l,f,c
 43331  0129B4  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43332  0129B6  22DA               	addwfc	fsr2h,f,c
 43333  0129B8  50DE               	movf	postinc2,w,c
 43334  0129BA  10DE               	iorwf	postinc2,w,c
 43335  0129BC  10DE               	iorwf	postinc2,w,c
 43336  0129BE  B4D8               	btfsc	status,2,c
 43337  0129C0  D01D               	goto	i2l2620
 43338                           
 43339                           ; BSR set to: 0
 43340  0129C2  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43341  0129C4  D004               	goto	i2l20702
 43342                           
 43343                           ; BSR set to: 0
 43344  0129C6  0E00               	movlw	0
 43345  0129C8  6F84               	movwf	(i2__doprnt$4993+1)& (0+255),b
 43346  0129CA  0E2B               	movlw	43
 43347  0129CC  D003               	goto	L42
 43348  0129CE                     i2l20702:
 43349                           
 43350                           ; BSR set to: 0
 43351  0129CE  0E00               	movlw	0
 43352  0129D0  6F84               	movwf	(i2__doprnt$4993+1)& (0+255),b
 43353  0129D2  0E2D               	movlw	45
 43354  0129D4                     L42:
 43355  0129D4  6F83               	movwf	i2__doprnt$4993& (0+255),b
 43356                           
 43357                           ; BSR set to: 0
 43358  0129D6  EE20 F002          	lfsr	2,2
 43359  0129DA  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43360  0129DC  26D9               	addwf	fsr2l,f,c
 43361  0129DE  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43362  0129E0  22DA               	addwfc	fsr2h,f,c
 43363  0129E2  D801               	call	i2u2676_48
 43364  0129E4  D059               	goto	i2l20722
 43365  0129E6                     i2u2676_48:
 43366  0129E6  0005               	push	
 43367  0129E8  6EFA               	movwf	pclath,c
 43368  0129EA  50DE               	movf	postinc2,w,c
 43369  0129EC  6EFD               	movwf	tosl,c
 43370  0129EE  50DE               	movf	postinc2,w,c
 43371  0129F0  6EFE               	movwf	tosh,c
 43372  0129F2  50DE               	movf	postinc2,w,c
 43373  0129F4  6EFF               	movwf	tosu,c
 43374  0129F6  50FA               	movf	pclath,w,c
 43375  0129F8  5183               	movf	i2__doprnt$4993& (0+255),w,b
 43376  0129FA  0012               	return		;indir
 43377  0129FC                     i2l2620:
 43378                           
 43379                           ; BSR set to: 0
 43380  0129FC  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43381  0129FE  D004               	goto	i2l20708
 43382                           
 43383                           ; BSR set to: 0
 43384  012A00  0E00               	movlw	0
 43385  012A02  6F86               	movwf	(i2__doprnt$4994+1)& (0+255),b
 43386  012A04  0E2B               	movlw	43
 43387  012A06  D003               	goto	L43
 43388  012A08                     i2l20708:
 43389                           
 43390                           ; BSR set to: 0
 43391  012A08  0E00               	movlw	0
 43392  012A0A  6F86               	movwf	(i2__doprnt$4994+1)& (0+255),b
 43393  012A0C  0E2D               	movlw	45
 43394  012A0E                     L43:
 43395  012A0E  6F85               	movwf	i2__doprnt$4994& (0+255),b
 43396                           
 43397                           ; BSR set to: 0
 43398  012A10  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43399  012A14  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43400  012A18  CFDE F072          	movff	postinc2,??i2__doprnt
 43401  012A1C  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43402  012A20  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43403  012A24  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43404  012A28  C085  FFDF         	movff	i2__doprnt$4994,indf2
 43405  012A2C  D02E               	goto	i2l20720
 43406  012A2E                     i2l2618:
 43407                           
 43408                           ; BSR set to: 0
 43409                           ;doprnt.c: 1415: else;doprnt.c: 1418: if(flag & 0x01)
 43410  012A2E  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43411  012A30  D033               	goto	i2l20722
 43412                           
 43413                           ; BSR set to: 0
 43414  012A32  EE20 F002          	lfsr	2,2
 43415  012A36  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43416  012A38  26D9               	addwf	fsr2l,f,c
 43417  012A3A  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43418  012A3C  22DA               	addwfc	fsr2h,f,c
 43419  012A3E  50DE               	movf	postinc2,w,c
 43420  012A40  10DE               	iorwf	postinc2,w,c
 43421  012A42  10DE               	iorwf	postinc2,w,c
 43422  012A44  B4D8               	btfsc	status,2,c
 43423  012A46  D013               	goto	i2l20718
 43424                           
 43425                           ; BSR set to: 0
 43426  012A48  EE20 F002          	lfsr	2,2
 43427  012A4C  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43428  012A4E  26D9               	addwf	fsr2l,f,c
 43429  012A50  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43430  012A52  22DA               	addwfc	fsr2h,f,c
 43431  012A54  D801               	call	i2u2680_48
 43432  012A56  D020               	goto	i2l20722
 43433  012A58                     i2u2680_48:
 43434  012A58  0005               	push	
 43435  012A5A  6EFA               	movwf	pclath,c
 43436  012A5C  50DE               	movf	postinc2,w,c
 43437  012A5E  6EFD               	movwf	tosl,c
 43438  012A60  50DE               	movf	postinc2,w,c
 43439  012A62  6EFE               	movwf	tosh,c
 43440  012A64  50DE               	movf	postinc2,w,c
 43441  012A66  6EFF               	movwf	tosu,c
 43442  012A68  50FA               	movf	pclath,w,c
 43443  012A6A  0E20               	movlw	32
 43444  012A6C  0012               	return		;indir
 43445  012A6E                     i2l20718:
 43446                           
 43447                           ; BSR set to: 0
 43448  012A6E  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43449  012A72  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43450  012A76  CFDE F072          	movff	postinc2,??i2__doprnt
 43451  012A7A  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43452  012A7E  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43453  012A82  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43454  012A86  0E20               	movlw	32
 43455  012A88  6EDF               	movwf	indf2,c
 43456  012A8A                     i2l20720:
 43457                           
 43458                           ; BSR set to: 0
 43459  012A8A  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43460  012A8E  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43461  012A92  2ADE               	incf	postinc2,f,c
 43462  012A94  0E00               	movlw	0
 43463  012A96  22DD               	addwfc	postdec2,f,c
 43464  012A98                     i2l20722:
 43465                           
 43466                           ;doprnt.c: 1434: if(width)
 43467  012A98  0100               	movlb	0	; () banked
 43468  012A9A  519D               	movf	i2__doprnt@width& (0+255),w,b
 43469  012A9C  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43470  012A9E  B4D8               	btfsc	status,2,c
 43471  012AA0  D1A1               	goto	i2l20790
 43472                           
 43473                           ; BSR set to: 0
 43474  012AA2  EE20 F002          	lfsr	2,2
 43475  012AA6  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43476  012AA8  26D9               	addwf	fsr2l,f,c
 43477  012AAA  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43478  012AAC  22DA               	addwfc	fsr2h,f,c
 43479  012AAE  50DE               	movf	postinc2,w,c
 43480  012AB0  10DE               	iorwf	postinc2,w,c
 43481  012AB2  10DE               	iorwf	postinc2,w,c
 43482  012AB4  B4D8               	btfsc	status,2,c
 43483  012AB6  D013               	goto	i2l20728
 43484                           
 43485                           ; BSR set to: 0
 43486  012AB8  EE20 F002          	lfsr	2,2
 43487  012ABC  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43488  012ABE  26D9               	addwf	fsr2l,f,c
 43489  012AC0  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43490  012AC2  22DA               	addwfc	fsr2h,f,c
 43491  012AC4  D801               	call	i2u2683_48
 43492  012AC6  D020               	goto	i2l20732
 43493  012AC8                     i2u2683_48:
 43494  012AC8  0005               	push	
 43495  012ACA  6EFA               	movwf	pclath,c
 43496  012ACC  50DE               	movf	postinc2,w,c
 43497  012ACE  6EFD               	movwf	tosl,c
 43498  012AD0  50DE               	movf	postinc2,w,c
 43499  012AD2  6EFE               	movwf	tosh,c
 43500  012AD4  50DE               	movf	postinc2,w,c
 43501  012AD6  6EFF               	movwf	tosu,c
 43502  012AD8  50FA               	movf	pclath,w,c
 43503  012ADA  0E30               	movlw	48
 43504  012ADC  0012               	return		;indir
 43505  012ADE                     i2l20728:
 43506                           
 43507                           ; BSR set to: 0
 43508  012ADE  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43509  012AE2  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43510  012AE6  CFDE F072          	movff	postinc2,??i2__doprnt
 43511  012AEA  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43512  012AEE  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43513  012AF2  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43514  012AF6  0E30               	movlw	48
 43515  012AF8  6EDF               	movwf	indf2,c
 43516                           
 43517                           ; BSR set to: 0
 43518  012AFA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43519  012AFE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43520  012B02  2ADE               	incf	postinc2,f,c
 43521  012B04  0E00               	movlw	0
 43522  012B06  22DD               	addwfc	postdec2,f,c
 43523  012B08                     i2l20732:
 43524                           
 43525                           ;doprnt.c: 1437: while(--width);
 43526  012B08  0100               	movlb	0	; () banked
 43527  012B0A  079D               	decf	i2__doprnt@width& (0+255),f,b
 43528  012B0C  A0D8               	btfss	status,0,c
 43529  012B0E  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43530  012B10  D7C4               	goto	L60
 43531  012B12                     i2l20734:
 43532                           
 43533                           ; BSR set to: 0
 43534                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 43535  012B12  519D               	movf	i2__doprnt@width& (0+255),w,b
 43536  012B14  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43537  012B16  B4D8               	btfsc	status,2,c
 43538  012B18  D03B               	goto	i2u2688_40
 43539  012B1A                     i2u2685_40:
 43540                           
 43541                           ; BSR set to: 0
 43542  012B1A  EE20 F002          	lfsr	2,2
 43543  012B1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43544  012B20  26D9               	addwf	fsr2l,f,c
 43545  012B22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43546  012B24  22DA               	addwfc	fsr2h,f,c
 43547  012B26  50DE               	movf	postinc2,w,c
 43548  012B28  10DE               	iorwf	postinc2,w,c
 43549  012B2A  10DE               	iorwf	postinc2,w,c
 43550  012B2C  B4D8               	btfsc	status,2,c
 43551  012B2E  D013               	goto	i2l20740
 43552                           
 43553                           ; BSR set to: 0
 43554  012B30  EE20 F002          	lfsr	2,2
 43555  012B34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43556  012B36  26D9               	addwf	fsr2l,f,c
 43557  012B38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43558  012B3A  22DA               	addwfc	fsr2h,f,c
 43559  012B3C  D801               	call	i2u2687_48
 43560  012B3E  D020               	goto	i2l20744
 43561  012B40                     i2u2687_48:
 43562  012B40  0005               	push	
 43563  012B42  6EFA               	movwf	pclath,c
 43564  012B44  50DE               	movf	postinc2,w,c
 43565  012B46  6EFD               	movwf	tosl,c
 43566  012B48  50DE               	movf	postinc2,w,c
 43567  012B4A  6EFE               	movwf	tosh,c
 43568  012B4C  50DE               	movf	postinc2,w,c
 43569  012B4E  6EFF               	movwf	tosu,c
 43570  012B50  50FA               	movf	pclath,w,c
 43571  012B52  0E20               	movlw	32
 43572  012B54  0012               	return		;indir
 43573  012B56                     i2l20740:
 43574                           
 43575                           ; BSR set to: 0
 43576  012B56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43577  012B5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43578  012B5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43579  012B62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43580  012B66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43581  012B6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43582  012B6E  0E20               	movlw	32
 43583  012B70  6EDF               	movwf	indf2,c
 43584                           
 43585                           ; BSR set to: 0
 43586  012B72  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43587  012B76  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43588  012B7A  2ADE               	incf	postinc2,f,c
 43589  012B7C  0E00               	movlw	0
 43590  012B7E  22DD               	addwfc	postdec2,f,c
 43591  012B80                     i2l20744:
 43592                           
 43593                           ;doprnt.c: 1450: while(--width);
 43594  012B80  0100               	movlb	0	; () banked
 43595  012B82  079D               	decf	i2__doprnt@width& (0+255),f,b
 43596  012B84  A0D8               	btfss	status,0,c
 43597  012B86  079E               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43598  012B88  519D               	movf	i2__doprnt@width& (0+255),w,b
 43599  012B8A  119E               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 43600  012B8C  A4D8               	btfss	status,2,c
 43601  012B8E  D7C5               	goto	i2u2685_40
 43602  012B90                     i2u2688_40:
 43603                           
 43604                           ; BSR set to: 0
 43605                           ;doprnt.c: 1453: if(flag & 0x02)
 43606  012B90  A3A1               	btfss	i2__doprnt@flag& (0+255),1,b
 43607  012B92  D041               	goto	i2l2652
 43608                           
 43609                           ; BSR set to: 0
 43610  012B94  EE20 F002          	lfsr	2,2
 43611  012B98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43612  012B9A  26D9               	addwf	fsr2l,f,c
 43613  012B9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43614  012B9E  22DA               	addwfc	fsr2h,f,c
 43615  012BA0  50DE               	movf	postinc2,w,c
 43616  012BA2  10DE               	iorwf	postinc2,w,c
 43617  012BA4  10DE               	iorwf	postinc2,w,c
 43618  012BA6  B4D8               	btfsc	status,2,c
 43619  012BA8  D01D               	goto	i2l2654
 43620                           
 43621                           ; BSR set to: 0
 43622  012BAA  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43623  012BAC  D004               	goto	i2l20752
 43624                           
 43625                           ; BSR set to: 0
 43626  012BAE  0E00               	movlw	0
 43627  012BB0  6F88               	movwf	(i2__doprnt$4995+1)& (0+255),b
 43628  012BB2  0E2B               	movlw	43
 43629  012BB4  D003               	goto	L44
 43630  012BB6                     i2l20752:
 43631                           
 43632                           ; BSR set to: 0
 43633  012BB6  0E00               	movlw	0
 43634  012BB8  6F88               	movwf	(i2__doprnt$4995+1)& (0+255),b
 43635  012BBA  0E2D               	movlw	45
 43636  012BBC                     L44:
 43637  012BBC  6F87               	movwf	i2__doprnt$4995& (0+255),b
 43638                           
 43639                           ; BSR set to: 0
 43640  012BBE  EE20 F002          	lfsr	2,2
 43641  012BC2  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43642  012BC4  26D9               	addwf	fsr2l,f,c
 43643  012BC6  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43644  012BC8  22DA               	addwfc	fsr2h,f,c
 43645  012BCA  D801               	call	i2u2692_48
 43646  012BCC  D10B               	goto	i2l20790
 43647  012BCE                     i2u2692_48:
 43648  012BCE  0005               	push	
 43649  012BD0  6EFA               	movwf	pclath,c
 43650  012BD2  50DE               	movf	postinc2,w,c
 43651  012BD4  6EFD               	movwf	tosl,c
 43652  012BD6  50DE               	movf	postinc2,w,c
 43653  012BD8  6EFE               	movwf	tosh,c
 43654  012BDA  50DE               	movf	postinc2,w,c
 43655  012BDC  6EFF               	movwf	tosu,c
 43656  012BDE  50FA               	movf	pclath,w,c
 43657  012BE0  5187               	movf	i2__doprnt$4995& (0+255),w,b
 43658  012BE2  0012               	return		;indir
 43659  012BE4                     i2l2654:
 43660                           
 43661                           ; BSR set to: 0
 43662  012BE4  B1A1               	btfsc	i2__doprnt@flag& (0+255),0,b
 43663  012BE6  D004               	goto	i2l20758
 43664                           
 43665                           ; BSR set to: 0
 43666  012BE8  0E00               	movlw	0
 43667  012BEA  6F8A               	movwf	(i2__doprnt$4996+1)& (0+255),b
 43668  012BEC  0E2B               	movlw	43
 43669  012BEE  D003               	goto	L45
 43670  012BF0                     i2l20758:
 43671                           
 43672                           ; BSR set to: 0
 43673  012BF0  0E00               	movlw	0
 43674  012BF2  6F8A               	movwf	(i2__doprnt$4996+1)& (0+255),b
 43675  012BF4  0E2D               	movlw	45
 43676  012BF6                     L45:
 43677  012BF6  6F89               	movwf	i2__doprnt$4996& (0+255),b
 43678                           
 43679                           ; BSR set to: 0
 43680  012BF8  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43681  012BFC  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43682  012C00  CFDE F072          	movff	postinc2,??i2__doprnt
 43683  012C04  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43684  012C08  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43685  012C0C  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43686  012C10  C089  FFDF         	movff	i2__doprnt$4996,indf2
 43687  012C14  D0E0               	goto	i2l20788
 43688  012C16                     i2l2652:
 43689                           
 43690                           ; BSR set to: 0
 43691                           ;doprnt.c: 1462: else if(flag & 0x01)
 43692  012C16  A1A1               	btfss	i2__doprnt@flag& (0+255),0,b
 43693  012C18  D0E5               	goto	i2l20790
 43694                           
 43695                           ; BSR set to: 0
 43696  012C1A  EE20 F002          	lfsr	2,2
 43697  012C1E  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43698  012C20  26D9               	addwf	fsr2l,f,c
 43699  012C22  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43700  012C24  22DA               	addwfc	fsr2h,f,c
 43701  012C26  50DE               	movf	postinc2,w,c
 43702  012C28  10DE               	iorwf	postinc2,w,c
 43703  012C2A  10DE               	iorwf	postinc2,w,c
 43704  012C2C  B4D8               	btfsc	status,2,c
 43705  012C2E  D013               	goto	i2l20768
 43706                           
 43707                           ; BSR set to: 0
 43708  012C30  EE20 F002          	lfsr	2,2
 43709  012C34  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43710  012C36  26D9               	addwf	fsr2l,f,c
 43711  012C38  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43712  012C3A  22DA               	addwfc	fsr2h,f,c
 43713  012C3C  D801               	call	i2u2696_48
 43714  012C3E  D0D2               	goto	i2l20790
 43715  012C40                     i2u2696_48:
 43716  012C40  0005               	push	
 43717  012C42  6EFA               	movwf	pclath,c
 43718  012C44  50DE               	movf	postinc2,w,c
 43719  012C46  6EFD               	movwf	tosl,c
 43720  012C48  50DE               	movf	postinc2,w,c
 43721  012C4A  6EFE               	movwf	tosh,c
 43722  012C4C  50DE               	movf	postinc2,w,c
 43723  012C4E  6EFF               	movwf	tosu,c
 43724  012C50  50FA               	movf	pclath,w,c
 43725  012C52  0E20               	movlw	32
 43726  012C54  0012               	return		;indir
 43727  012C56                     i2l20768:
 43728                           
 43729                           ; BSR set to: 0
 43730  012C56  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43731  012C5A  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43732  012C5E  CFDE F072          	movff	postinc2,??i2__doprnt
 43733  012C62  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43734  012C66  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43735  012C6A  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43736  012C6E  0E20               	movlw	32
 43737  012C70  6EDF               	movwf	indf2,c
 43738  012C72  D0B1               	goto	i2l20788
 43739  012C74                     i2l20772:
 43740                           
 43741                           ; BSR set to: 0
 43742                           ;doprnt.c: 1505: case 0xC0:;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 43743  012C74  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43744  012C78  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43745  012C7C  90D8               	bcf	status,0,c
 43746  012C7E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43747  012C80  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43748  012C82  90D8               	bcf	status,0,c
 43749  012C84  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43750  012C86  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43751  012C88  0E63               	movlw	low _dpowers
 43752  012C8A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43753  012C8C  6EF6               	movwf	tblptrl,c
 43754  012C8E  0EE8               	movlw	high _dpowers
 43755  012C90  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43756  012C92  6EF7               	movwf	tblptrh,c
 43757  012C94                     	if	1	;There are 3 active tblptr bytes
 43758  012C94  6AF8               	clrf	tblptru,c
 43759  012C96  0E00               	movlw	low (__mediumconst shr (0+16))
 43760  012C98  22F8               	addwfc	tblptru,f,c
 43761  012C9A                     	endif
 43762  012C9A  0009               	tblrd		*+
 43763  012C9C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43764  012CA0  0009               	tblrd		*+
 43765  012CA2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43766  012CA6  0009               	tblrd		*+
 43767  012CA8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43768  012CAC  000A               	tblrd		*-
 43769  012CAE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43770  012CB2  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43771  012CB6  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43772  012CBA  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43773  012CBE  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43774  012CC2  EC71  F0DA         	call	i2___lldiv
 43775  012CC6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 43776  012CCA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 43777  012CCE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 43778  012CD2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 43779  012CD6  0E0A               	movlw	10
 43780  012CD8  6E12               	movwf	i2___llmod@divisor,c
 43781  012CDA  0E00               	movlw	0
 43782  012CDC  6E13               	movwf	i2___llmod@divisor+1,c
 43783  012CDE  0E00               	movlw	0
 43784  012CE0  6E14               	movwf	i2___llmod@divisor+2,c
 43785  012CE2  0E00               	movlw	0
 43786  012CE4  6E15               	movwf	i2___llmod@divisor+3,c
 43787  012CE6  ECF0  F0DB         	call	i2___llmod	;wreg free
 43788  012CEA  500E               	movf	?i2___llmod,w,c
 43789  012CEC  0F30               	addlw	48
 43790  012CEE  0100               	movlb	0	; () banked
 43791  012CF0  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43792                           
 43793                           ;doprnt.c: 1510: break;
 43794  012CF2  D045               	goto	i2l20782
 43795  012CF4                     i2l20774:
 43796                           
 43797                           ; BSR set to: 0
 43798                           ;doprnt.c: 1518: {;doprnt.c: 1519: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 43799  012CF4  C099  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43800  012CF8  C09A  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43801  012CFC  C09B  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43802  012D00  C09C  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43803  012D04  C09F  F072         	movff	i2__doprnt@prec,??i2__doprnt
 43804  012D08  C0A0  F073         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 43805  012D0C  90D8               	bcf	status,0,c
 43806  012D0E  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43807  012D10  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43808  012D12  90D8               	bcf	status,0,c
 43809  012D14  3772               	rlcf	??i2__doprnt& (0+255),f,b
 43810  012D16  3773               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 43811  012D18  0E43               	movlw	low _hexpowers
 43812  012D1A  2572               	addwf	??i2__doprnt& (0+255),w,b
 43813  012D1C  6EF6               	movwf	tblptrl,c
 43814  012D1E  0EE5               	movlw	high _hexpowers
 43815  012D20  2173               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 43816  012D22  6EF7               	movwf	tblptrh,c
 43817  012D24                     	if	1	;There are 3 active tblptr bytes
 43818  012D24  6AF8               	clrf	tblptru,c
 43819  012D26  0E00               	movlw	low (__mediumconst shr (0+16))
 43820  012D28  22F8               	addwfc	tblptru,f,c
 43821  012D2A                     	endif
 43822  012D2A  0009               	tblrd		*+
 43823  012D2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43824  012D30  0009               	tblrd		*+
 43825  012D32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43826  012D36  0009               	tblrd		*+
 43827  012D38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43828  012D3C  000A               	tblrd		*-
 43829  012D3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43830  012D42  EC71  F0DA         	call	i2___lldiv	;wreg free
 43831  012D46  5001               	movf	?i2___lldiv,w,c
 43832  012D48  0B0F               	andlw	15
 43833  012D4A  0100               	movlb	0	; () banked
 43834  012D4C  6F7A               	movwf	i2__doprnt@idx& (0+255),b
 43835                           
 43836                           ; BSR set to: 0
 43837                           ;doprnt.c: 1523: c = "0123456789ABCDEF"[idx];
 43838  012D4E  0E1F               	movlw	low STR_364
 43839  012D50  257A               	addwf	i2__doprnt@idx& (0+255),w,b
 43840  012D52  6EF6               	movwf	tblptrl,c
 43841  012D54  6AF7               	clrf	tblptrh,c
 43842  012D56  0EFB               	movlw	high STR_364
 43843  012D58  22F7               	addwfc	tblptrh,f,c
 43844  012D5A                     	if	1	;There are 3 active tblptr bytes
 43845  012D5A  6AF8               	clrf	tblptru,c
 43846  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 43847  012D5E  22F8               	addwfc	tblptru,f,c
 43848  012D60                     	endif
 43849  012D60  0008               	tblrd		*
 43850  012D62  CFF5 F0A3          	movff	tablat,i2__doprnt@c
 43851                           
 43852                           ;doprnt.c: 1527: };doprnt.c: 1529: break;
 43853  012D66  D00B               	goto	i2l20782
 43854  012D68                     i2l20780:
 43855                           
 43856                           ; BSR set to: 0
 43857  012D68  51A1               	movf	i2__doprnt@flag& (0+255),w,b
 43858  012D6A  0BC0               	andlw	192
 43859                           
 43860                           ; Switch size 1, requested type "simple"
 43861                           ; Number of cases is 3, Range of values is 0 to 192
 43862                           ; switch strategies available:
 43863                           ; Name         Instructions Cycles
 43864                           ; simple_byte           10     6 (average)
 43865                           ;	Chosen strategy is simple_byte
 43866  012D6C  0A00               	xorlw	0	; case 0
 43867  012D6E  B4D8               	btfsc	status,2,c
 43868  012D70  D781               	goto	i2l20772
 43869  012D72  0A80               	xorlw	128	; case 128
 43870  012D74  B4D8               	btfsc	status,2,c
 43871  012D76  D7BE               	goto	i2l20774
 43872  012D78  0A40               	xorlw	64	; case 192
 43873  012D7A  B4D8               	btfsc	status,2,c
 43874  012D7C  D77B               	goto	i2l20772
 43875  012D7E                     i2l20782:
 43876                           
 43877                           ; BSR set to: 0
 43878  012D7E  EE20 F002          	lfsr	2,2
 43879  012D82  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43880  012D84  26D9               	addwf	fsr2l,f,c
 43881  012D86  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43882  012D88  22DA               	addwfc	fsr2h,f,c
 43883  012D8A  50DE               	movf	postinc2,w,c
 43884  012D8C  10DE               	iorwf	postinc2,w,c
 43885  012D8E  10DE               	iorwf	postinc2,w,c
 43886  012D90  B4D8               	btfsc	status,2,c
 43887  012D92  D013               	goto	i2l20786
 43888                           
 43889                           ; BSR set to: 0
 43890  012D94  EE20 F002          	lfsr	2,2
 43891  012D98  516C               	movf	i2__doprnt@pb& (0+255),w,b
 43892  012D9A  26D9               	addwf	fsr2l,f,c
 43893  012D9C  516D               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43894  012D9E  22DA               	addwfc	fsr2h,f,c
 43895  012DA0  D801               	call	i2u2698_48
 43896  012DA2  D020               	goto	i2l20790
 43897  012DA4                     i2u2698_48:
 43898  012DA4  0005               	push	
 43899  012DA6  6EFA               	movwf	pclath,c
 43900  012DA8  50DE               	movf	postinc2,w,c
 43901  012DAA  6EFD               	movwf	tosl,c
 43902  012DAC  50DE               	movf	postinc2,w,c
 43903  012DAE  6EFE               	movwf	tosh,c
 43904  012DB0  50DE               	movf	postinc2,w,c
 43905  012DB2  6EFF               	movwf	tosu,c
 43906  012DB4  50FA               	movf	pclath,w,c
 43907  012DB6  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43908  012DB8  0012               	return		;indir
 43909  012DBA                     i2l20786:
 43910                           
 43911                           ; BSR set to: 0
 43912  012DBA  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43913  012DBE  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43914  012DC2  CFDE F072          	movff	postinc2,??i2__doprnt
 43915  012DC6  CFDD F073          	movff	postdec2,??i2__doprnt+1
 43916  012DCA  C072  FFD9         	movff	??i2__doprnt,fsr2l
 43917  012DCE  C073  FFDA         	movff	??i2__doprnt+1,fsr2h
 43918  012DD2  C0A3  FFDF         	movff	i2__doprnt@c,indf2
 43919  012DD6                     i2l20788:
 43920                           
 43921                           ; BSR set to: 0
 43922  012DD6  C06C  FFD9         	movff	i2__doprnt@pb,fsr2l
 43923  012DDA  C06D  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43924  012DDE  2ADE               	incf	postinc2,f,c
 43925  012DE0  0E00               	movlw	0
 43926  012DE2  22DD               	addwfc	postdec2,f,c
 43927  012DE4                     i2l20790:
 43928  012DE4  0100               	movlb	0	; () banked
 43929  012DE6  079F               	decf	i2__doprnt@prec& (0+255),f,b
 43930  012DE8  A0D8               	btfss	status,0,c
 43931  012DEA  07A0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43932  012DEC  299F               	incf	i2__doprnt@prec& (0+255),w,b
 43933  012DEE  E1BC               	bnz	i2l20780
 43934  012DF0  29A0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 43935  012DF2  A4D8               	btfss	status,2,c
 43936  012DF4  D7B9               	goto	i2l20780
 43937  012DF6                     i2u2699_40:
 43938  012DF6  0100               	movlb	0	; () banked
 43939  012DF8  516E               	movf	i2__doprnt@f& (0+255),w,b
 43940  012DFA  6F72               	movwf	??i2__doprnt& (0+255),b
 43941  012DFC  516F               	movf	(i2__doprnt@f+1)& (0+255),w,b
 43942  012DFE  6F73               	movwf	(??i2__doprnt+1)& (0+255),b
 43943  012E00  4B6E               	infsnz	i2__doprnt@f& (0+255),f,b
 43944  012E02  2B6F               	incf	(i2__doprnt@f+1)& (0+255),f,b
 43945  012E04  C072  FFF6         	movff	??i2__doprnt,tblptrl
 43946  012E08  C073  FFF7         	movff	??i2__doprnt+1,tblptrh
 43947  012E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 43948  012E0E  6EF8               	movwf	tblptru,c
 43949  012E10  0E0E               	movlw	(high __ramtop+-1)
 43950  012E12  64F7               	cpfsgt	tblptrh,c
 43951  012E14  D003               	bra	i2u2700_47
 43952  012E16  0008               	tblrd		*
 43953  012E18  50F5               	movf	tablat,w,c
 43954  012E1A  D005               	bra	i2u2700_40
 43955  012E1C                     i2u2700_47:
 43956  012E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 43957  012E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 43958  012E24  50EF               	movf	indf0,w,c
 43959  012E26                     i2u2700_40:
 43960  012E26  0100               	movlb	0	; () banked
 43961  012E28  6FA3               	movwf	i2__doprnt@c& (0+255),b
 43962  012E2A  51A3               	movf	i2__doprnt@c& (0+255),w,b
 43963  012E2C  A4D8               	btfss	status,2,c
 43964  012E2E  EF94  F08B         	goto	i2l20246
 43965  012E32                     i2u2701_40:
 43966                           
 43967                           ; BSR set to: 0
 43968                           ;doprnt.c: 1559: return 0;
 43969  012E32  0E00               	movlw	0
 43970  012E34  6F6D               	movwf	(?i2__doprnt+1)& (0+255),b
 43971  012E36  0E00               	movlw	0
 43972  012E38  6F6C               	movwf	?i2__doprnt& (0+255),b
 43973                           
 43974                           ; BSR set to: 0
 43975  012E3A  0012               	return		;funcret
 43976  012E3C                     __end_ofi2__doprnt:
 43977                           	opt callstack 0
 43978                           
 43979 ;; *************** function i2_scale *****************
 43980 ;; Defined at:
 43981 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 43982 ;; Parameters:    Size  Location     Type
 43983 ;;  scl             1    wreg     char 
 43984 ;; Auto vars:     Size  Location     Type
 43985 ;;  scl             1   76[COMRAM] char 
 43986 ;; Return value:  Size  Location     Type
 43987 ;;                  4   68[COMRAM] char 
 43988 ;; Registers used:
 43989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43990 ;; Tracked objects:
 43991 ;;		On entry : 0/0
 43992 ;;		On exit  : 0/0
 43993 ;;		Unchanged: 0/0
 43994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43996 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43998 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43999 ;;Total ram usage:        9 bytes
 44000 ;; Hardware stack levels used:    1
 44001 ;; Hardware stack levels required when called:    1
 44002 ;; This function calls:
 44003 ;;		i2___awdiv
 44004 ;;		i2___awmod
 44005 ;;		i2___flmul
 44006 ;; This function is called by:
 44007 ;;		i2__doprnt
 44008 ;; This function uses a non-reentrant model
 44009 ;;
 44010                           
 44011                           	psect	text181
 44012  015F5C                     __ptext181:
 44013                           	opt callstack 0
 44014  015F5C                     i2_scale:
 44015                           	opt callstack 12
 44016                           
 44017                           ; BSR set to: 0
 44018                           ;incstack = 0
 44019                           ;i2scale@scl stored from wreg
 44020  015F5C  6E4D               	movwf	i2scale@scl,c
 44021                           
 44022                           ;doprnt.c: 436: if(scl < 0) {
 44023  015F5E  AE4D               	btfss	i2scale@scl,7,c
 44024  015F60  D105               	goto	i2l19658
 44025                           
 44026                           ;doprnt.c: 437: scl = -scl;
 44027  015F62  6C4D               	negf	i2scale@scl,c
 44028                           
 44029                           ;doprnt.c: 438: if(scl>=110)
 44030  015F64  504D               	movf	i2scale@scl,w,c
 44031  015F66  0A80               	xorlw	128
 44032  015F68  0F12               	addlw	-238
 44033  015F6A  A0D8               	btfss	status,0,c
 44034  015F6C  D091               	goto	i2l19648
 44035                           
 44036                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 44037  015F6E  0E00               	movlw	0
 44038  015F70  6E0A               	movwf	i2___awdiv@divisor+1,c
 44039  015F72  0E0A               	movlw	10
 44040  015F74  6E09               	movwf	i2___awdiv@divisor,c
 44041  015F76  0E00               	movlw	0
 44042  015F78  6E04               	movwf	i2___awmod@divisor+1,c
 44043  015F7A  0E64               	movlw	100
 44044  015F7C  6E03               	movwf	i2___awmod@divisor,c
 44045  015F7E  504D               	movf	i2scale@scl,w,c
 44046  015F80  6E01               	movwf	i2___awmod@dividend,c
 44047  015F82  6A02               	clrf	i2___awmod@dividend+1,c
 44048  015F84  BE01               	btfsc	i2___awmod@dividend,7,c
 44049  015F86  0602               	decf	i2___awmod@dividend+1,f,c
 44050  015F88  ECEB  F0DA         	call	i2___awmod
 44051  015F8C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 44052  015F90  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 44053  015F94  EC2F  F0DA         	call	i2___awdiv	;wreg free
 44054  015F98  0E09               	movlw	9
 44055  015F9A  2607               	addwf	?i2___awdiv,f,c
 44056  015F9C  5007               	movf	?i2___awdiv,w,c
 44057  015F9E  0D04               	mullw	4
 44058  015FA0  0E0F               	movlw	low __npowers_
 44059  015FA2  24F3               	addwf	prodl,w,c
 44060  015FA4  6EF6               	movwf	tblptrl,c
 44061  015FA6  0EE5               	movlw	high __npowers_
 44062  015FA8  20F4               	addwfc	prodh,w,c
 44063  015FAA  6EF7               	movwf	tblptrh,c
 44064  015FAC                     	if	1	;There are 3 active tblptr bytes
 44065  015FAC  6AF8               	clrf	tblptru,c
 44066  015FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 44067  015FB0  22F8               	addwfc	tblptru,f,c
 44068  015FB2                     	endif
 44069  015FB2  0009               	tblrd		*+
 44070  015FB4  CFF5 F030          	movff	tablat,i2___flmul@a
 44071  015FB8  0009               	tblrd		*+
 44072  015FBA  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44073  015FBE  0009               	tblrd		*+
 44074  015FC0  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44075  015FC4  000A               	tblrd		*-
 44076  015FC6  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44077  015FCA  0E00               	movlw	0
 44078  015FCC  6E0A               	movwf	i2___awdiv@divisor+1,c
 44079  015FCE  0E64               	movlw	100
 44080  015FD0  6E09               	movwf	i2___awdiv@divisor,c
 44081  015FD2  504D               	movf	i2scale@scl,w,c
 44082  015FD4  6E07               	movwf	i2___awdiv@dividend,c
 44083  015FD6  6A08               	clrf	i2___awdiv@dividend+1,c
 44084  015FD8  BE07               	btfsc	i2___awdiv@dividend,7,c
 44085  015FDA  0608               	decf	i2___awdiv@dividend+1,f,c
 44086  015FDC  EC2F  F0DA         	call	i2___awdiv	;wreg free
 44087  015FE0  0E12               	movlw	18
 44088  015FE2  2607               	addwf	?i2___awdiv,f,c
 44089  015FE4  5007               	movf	?i2___awdiv,w,c
 44090  015FE6  0D04               	mullw	4
 44091  015FE8  0E0F               	movlw	low __npowers_
 44092  015FEA  24F3               	addwf	prodl,w,c
 44093  015FEC  6EF6               	movwf	tblptrl,c
 44094  015FEE  0EE5               	movlw	high __npowers_
 44095  015FF0  20F4               	addwfc	prodh,w,c
 44096  015FF2  6EF7               	movwf	tblptrh,c
 44097  015FF4                     	if	1	;There are 3 active tblptr bytes
 44098  015FF4  6AF8               	clrf	tblptru,c
 44099  015FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 44100  015FF8  22F8               	addwfc	tblptru,f,c
 44101  015FFA                     	endif
 44102  015FFA  0009               	tblrd		*+
 44103  015FFC  CFF5 F02C          	movff	tablat,i2___flmul@b
 44104  016000  0009               	tblrd		*+
 44105  016002  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44106  016006  0009               	tblrd		*+
 44107  016008  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44108  01600C  000A               	tblrd		*-
 44109  01600E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44110  016012  EC94  F0B8         	call	i2___flmul	;wreg free
 44111  016016  C02C  F049         	movff	?i2___flmul,i2_scale$6433
 44112  01601A  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6433+1
 44113  01601E  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6433+2
 44114  016022  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6433+3
 44115                           
 44116                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 44117  016026  C049  F02C         	movff	i2_scale$6433,i2___flmul@b
 44118  01602A  C04A  F02D         	movff	i2_scale$6433+1,i2___flmul@b+1
 44119  01602E  C04B  F02E         	movff	i2_scale$6433+2,i2___flmul@b+2
 44120  016032  C04C  F02F         	movff	i2_scale$6433+3,i2___flmul@b+3
 44121  016036  0E00               	movlw	0
 44122  016038  6E04               	movwf	i2___awmod@divisor+1,c
 44123  01603A  0E0A               	movlw	10
 44124  01603C  6E03               	movwf	i2___awmod@divisor,c
 44125  01603E  504D               	movf	i2scale@scl,w,c
 44126  016040  6E01               	movwf	i2___awmod@dividend,c
 44127  016042  6A02               	clrf	i2___awmod@dividend+1,c
 44128  016044  BE01               	btfsc	i2___awmod@dividend,7,c
 44129  016046  0602               	decf	i2___awmod@dividend+1,f,c
 44130  016048  ECEB  F0DA         	call	i2___awmod	;wreg free
 44131  01604C  5001               	movf	?i2___awmod,w,c
 44132  01604E  0D04               	mullw	4
 44133  016050  0E0F               	movlw	low __npowers_
 44134  016052  24F3               	addwf	prodl,w,c
 44135  016054  6EF6               	movwf	tblptrl,c
 44136  016056  0EE5               	movlw	high __npowers_
 44137  016058  20F4               	addwfc	prodh,w,c
 44138  01605A  6EF7               	movwf	tblptrh,c
 44139  01605C                     	if	1	;There are 3 active tblptr bytes
 44140  01605C  6AF8               	clrf	tblptru,c
 44141  01605E  0E00               	movlw	low (__mediumconst shr (0+16))
 44142  016060  22F8               	addwfc	tblptru,f,c
 44143  016062                     	endif
 44144  016062  0009               	tblrd		*+
 44145  016064  CFF5 F030          	movff	tablat,i2___flmul@a
 44146  016068  0009               	tblrd		*+
 44147  01606A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44148  01606E  0009               	tblrd		*+
 44149  016070  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44150  016074  000A               	tblrd		*-
 44151  016076  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44152  01607A  EC94  F0B8         	call	i2___flmul	;wreg free
 44153  01607E  C02C  F045         	movff	?i2___flmul,?i2_scale
 44154  016082  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44155  016086  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44156  01608A  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44157  01608E  0012               	return	
 44158  016090                     i2l19648:
 44159                           
 44160                           ;doprnt.c: 440: else if(scl > 10)
 44161  016090  504D               	movf	i2scale@scl,w,c
 44162  016092  0A80               	xorlw	128
 44163  016094  0F75               	addlw	-139
 44164  016096  A0D8               	btfss	status,0,c
 44165  016098  D051               	goto	i2l19654
 44166                           
 44167                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 44168  01609A  0E00               	movlw	0
 44169  01609C  6E0A               	movwf	i2___awdiv@divisor+1,c
 44170  01609E  0E0A               	movlw	10
 44171  0160A0  6E09               	movwf	i2___awdiv@divisor,c
 44172  0160A2  504D               	movf	i2scale@scl,w,c
 44173  0160A4  6E07               	movwf	i2___awdiv@dividend,c
 44174  0160A6  6A08               	clrf	i2___awdiv@dividend+1,c
 44175  0160A8  BE07               	btfsc	i2___awdiv@dividend,7,c
 44176  0160AA  0608               	decf	i2___awdiv@dividend+1,f,c
 44177  0160AC  EC2F  F0DA         	call	i2___awdiv	;wreg free
 44178  0160B0  0E09               	movlw	9
 44179  0160B2  2607               	addwf	?i2___awdiv,f,c
 44180  0160B4  5007               	movf	?i2___awdiv,w,c
 44181  0160B6  0D04               	mullw	4
 44182  0160B8  0E0F               	movlw	low __npowers_
 44183  0160BA  24F3               	addwf	prodl,w,c
 44184  0160BC  6EF6               	movwf	tblptrl,c
 44185  0160BE  0EE5               	movlw	high __npowers_
 44186  0160C0  20F4               	addwfc	prodh,w,c
 44187  0160C2  6EF7               	movwf	tblptrh,c
 44188  0160C4                     	if	1	;There are 3 active tblptr bytes
 44189  0160C4  6AF8               	clrf	tblptru,c
 44190  0160C6  0E00               	movlw	low (__mediumconst shr (0+16))
 44191  0160C8  22F8               	addwfc	tblptru,f,c
 44192  0160CA                     	endif
 44193  0160CA  0009               	tblrd		*+
 44194  0160CC  CFF5 F02C          	movff	tablat,i2___flmul@b
 44195  0160D0  0009               	tblrd		*+
 44196  0160D2  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44197  0160D6  0009               	tblrd		*+
 44198  0160D8  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44199  0160DC  000A               	tblrd		*-
 44200  0160DE  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44201  0160E2  0E00               	movlw	0
 44202  0160E4  6E04               	movwf	i2___awmod@divisor+1,c
 44203  0160E6  0E0A               	movlw	10
 44204  0160E8  6E03               	movwf	i2___awmod@divisor,c
 44205  0160EA  504D               	movf	i2scale@scl,w,c
 44206  0160EC  6E01               	movwf	i2___awmod@dividend,c
 44207  0160EE  6A02               	clrf	i2___awmod@dividend+1,c
 44208  0160F0  BE01               	btfsc	i2___awmod@dividend,7,c
 44209  0160F2  0602               	decf	i2___awmod@dividend+1,f,c
 44210  0160F4  ECEB  F0DA         	call	i2___awmod	;wreg free
 44211  0160F8  5001               	movf	?i2___awmod,w,c
 44212  0160FA  0D04               	mullw	4
 44213  0160FC  0E0F               	movlw	low __npowers_
 44214  0160FE  24F3               	addwf	prodl,w,c
 44215  016100  6EF6               	movwf	tblptrl,c
 44216  016102  0EE5               	movlw	high __npowers_
 44217  016104  20F4               	addwfc	prodh,w,c
 44218  016106  6EF7               	movwf	tblptrh,c
 44219  016108                     	if	1	;There are 3 active tblptr bytes
 44220  016108  6AF8               	clrf	tblptru,c
 44221  01610A  0E00               	movlw	low (__mediumconst shr (0+16))
 44222  01610C  22F8               	addwfc	tblptru,f,c
 44223  01610E                     	endif
 44224  01610E  0009               	tblrd		*+
 44225  016110  CFF5 F030          	movff	tablat,i2___flmul@a
 44226  016114  0009               	tblrd		*+
 44227  016116  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44228  01611A  0009               	tblrd		*+
 44229  01611C  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44230  016120  000A               	tblrd		*-
 44231  016122  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44232  016126  EC94  F0B8         	call	i2___flmul	;wreg free
 44233  01612A  C02C  F045         	movff	?i2___flmul,?i2_scale
 44234  01612E  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44235  016132  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44236  016136  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44237  01613A  0012               	return	
 44238  01613C                     i2l19654:
 44239                           
 44240                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 44241  01613C  504D               	movf	i2scale@scl,w,c
 44242  01613E  0D04               	mullw	4
 44243  016140  0E0F               	movlw	low __npowers_
 44244  016142  24F3               	addwf	prodl,w,c
 44245  016144  6EF6               	movwf	tblptrl,c
 44246  016146  0EE5               	movlw	high __npowers_
 44247  016148  20F4               	addwfc	prodh,w,c
 44248  01614A  6EF7               	movwf	tblptrh,c
 44249  01614C                     	if	1	;There are 3 active tblptr bytes
 44250  01614C  6AF8               	clrf	tblptru,c
 44251  01614E  0E00               	movlw	low (__mediumconst shr (0+16))
 44252  016150  22F8               	addwfc	tblptru,f,c
 44253  016152                     	endif
 44254  016152  0009               	tblrd		*+
 44255  016154  CFF5 F045          	movff	tablat,?i2_scale
 44256  016158  0009               	tblrd		*+
 44257  01615A  CFF5 F046          	movff	tablat,?i2_scale+1
 44258  01615E  0009               	tblrd		*+
 44259  016160  CFF5 F047          	movff	tablat,?i2_scale+2
 44260  016164  000A               	tblrd		*-
 44261  016166  CFF5 F048          	movff	tablat,?i2_scale+3
 44262  01616A  0012               	return	
 44263  01616C                     i2l19658:
 44264                           
 44265                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 44266  01616C  504D               	movf	i2scale@scl,w,c
 44267  01616E  0A80               	xorlw	128
 44268  016170  0F12               	addlw	-238
 44269  016172  A0D8               	btfss	status,0,c
 44270  016174  D091               	goto	i2l19666
 44271                           
 44272                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 44273  016176  0E00               	movlw	0
 44274  016178  6E0A               	movwf	i2___awdiv@divisor+1,c
 44275  01617A  0E0A               	movlw	10
 44276  01617C  6E09               	movwf	i2___awdiv@divisor,c
 44277  01617E  0E00               	movlw	0
 44278  016180  6E04               	movwf	i2___awmod@divisor+1,c
 44279  016182  0E64               	movlw	100
 44280  016184  6E03               	movwf	i2___awmod@divisor,c
 44281  016186  504D               	movf	i2scale@scl,w,c
 44282  016188  6E01               	movwf	i2___awmod@dividend,c
 44283  01618A  6A02               	clrf	i2___awmod@dividend+1,c
 44284  01618C  BE01               	btfsc	i2___awmod@dividend,7,c
 44285  01618E  0602               	decf	i2___awmod@dividend+1,f,c
 44286  016190  ECEB  F0DA         	call	i2___awmod	;wreg free
 44287  016194  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 44288  016198  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 44289  01619C  EC2F  F0DA         	call	i2___awdiv	;wreg free
 44290  0161A0  0E09               	movlw	9
 44291  0161A2  2607               	addwf	?i2___awdiv,f,c
 44292  0161A4  5007               	movf	?i2___awdiv,w,c
 44293  0161A6  0D04               	mullw	4
 44294  0161A8  0EDB               	movlw	low __powers_
 44295  0161AA  24F3               	addwf	prodl,w,c
 44296  0161AC  6EF6               	movwf	tblptrl,c
 44297  0161AE  0EE4               	movlw	high __powers_
 44298  0161B0  20F4               	addwfc	prodh,w,c
 44299  0161B2  6EF7               	movwf	tblptrh,c
 44300  0161B4                     	if	1	;There are 3 active tblptr bytes
 44301  0161B4  6AF8               	clrf	tblptru,c
 44302  0161B6  0E00               	movlw	low (__mediumconst shr (0+16))
 44303  0161B8  22F8               	addwfc	tblptru,f,c
 44304  0161BA                     	endif
 44305  0161BA  0009               	tblrd		*+
 44306  0161BC  CFF5 F030          	movff	tablat,i2___flmul@a
 44307  0161C0  0009               	tblrd		*+
 44308  0161C2  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44309  0161C6  0009               	tblrd		*+
 44310  0161C8  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44311  0161CC  000A               	tblrd		*-
 44312  0161CE  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44313  0161D2  0E00               	movlw	0
 44314  0161D4  6E0A               	movwf	i2___awdiv@divisor+1,c
 44315  0161D6  0E64               	movlw	100
 44316  0161D8  6E09               	movwf	i2___awdiv@divisor,c
 44317  0161DA  504D               	movf	i2scale@scl,w,c
 44318  0161DC  6E07               	movwf	i2___awdiv@dividend,c
 44319  0161DE  6A08               	clrf	i2___awdiv@dividend+1,c
 44320  0161E0  BE07               	btfsc	i2___awdiv@dividend,7,c
 44321  0161E2  0608               	decf	i2___awdiv@dividend+1,f,c
 44322  0161E4  EC2F  F0DA         	call	i2___awdiv	;wreg free
 44323  0161E8  0E12               	movlw	18
 44324  0161EA  2607               	addwf	?i2___awdiv,f,c
 44325  0161EC  5007               	movf	?i2___awdiv,w,c
 44326  0161EE  0D04               	mullw	4
 44327  0161F0  0EDB               	movlw	low __powers_
 44328  0161F2  24F3               	addwf	prodl,w,c
 44329  0161F4  6EF6               	movwf	tblptrl,c
 44330  0161F6  0EE4               	movlw	high __powers_
 44331  0161F8  20F4               	addwfc	prodh,w,c
 44332  0161FA  6EF7               	movwf	tblptrh,c
 44333  0161FC                     	if	1	;There are 3 active tblptr bytes
 44334  0161FC  6AF8               	clrf	tblptru,c
 44335  0161FE  0E00               	movlw	low (__mediumconst shr (0+16))
 44336  016200  22F8               	addwfc	tblptru,f,c
 44337  016202                     	endif
 44338  016202  0009               	tblrd		*+
 44339  016204  CFF5 F02C          	movff	tablat,i2___flmul@b
 44340  016208  0009               	tblrd		*+
 44341  01620A  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44342  01620E  0009               	tblrd		*+
 44343  016210  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44344  016214  000A               	tblrd		*-
 44345  016216  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44346  01621A  EC94  F0B8         	call	i2___flmul	;wreg free
 44347  01621E  C02C  F049         	movff	?i2___flmul,i2_scale$6433
 44348  016222  C02D  F04A         	movff	?i2___flmul+1,i2_scale$6433+1
 44349  016226  C02E  F04B         	movff	?i2___flmul+2,i2_scale$6433+2
 44350  01622A  C02F  F04C         	movff	?i2___flmul+3,i2_scale$6433+3
 44351                           
 44352                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 44353  01622E  C049  F02C         	movff	i2_scale$6433,i2___flmul@b
 44354  016232  C04A  F02D         	movff	i2_scale$6433+1,i2___flmul@b+1
 44355  016236  C04B  F02E         	movff	i2_scale$6433+2,i2___flmul@b+2
 44356  01623A  C04C  F02F         	movff	i2_scale$6433+3,i2___flmul@b+3
 44357  01623E  0E00               	movlw	0
 44358  016240  6E04               	movwf	i2___awmod@divisor+1,c
 44359  016242  0E0A               	movlw	10
 44360  016244  6E03               	movwf	i2___awmod@divisor,c
 44361  016246  504D               	movf	i2scale@scl,w,c
 44362  016248  6E01               	movwf	i2___awmod@dividend,c
 44363  01624A  6A02               	clrf	i2___awmod@dividend+1,c
 44364  01624C  BE01               	btfsc	i2___awmod@dividend,7,c
 44365  01624E  0602               	decf	i2___awmod@dividend+1,f,c
 44366  016250  ECEB  F0DA         	call	i2___awmod	;wreg free
 44367  016254  5001               	movf	?i2___awmod,w,c
 44368  016256  0D04               	mullw	4
 44369  016258  0EDB               	movlw	low __powers_
 44370  01625A  24F3               	addwf	prodl,w,c
 44371  01625C  6EF6               	movwf	tblptrl,c
 44372  01625E  0EE4               	movlw	high __powers_
 44373  016260  20F4               	addwfc	prodh,w,c
 44374  016262  6EF7               	movwf	tblptrh,c
 44375  016264                     	if	1	;There are 3 active tblptr bytes
 44376  016264  6AF8               	clrf	tblptru,c
 44377  016266  0E00               	movlw	low (__mediumconst shr (0+16))
 44378  016268  22F8               	addwfc	tblptru,f,c
 44379  01626A                     	endif
 44380  01626A  0009               	tblrd		*+
 44381  01626C  CFF5 F030          	movff	tablat,i2___flmul@a
 44382  016270  0009               	tblrd		*+
 44383  016272  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44384  016276  0009               	tblrd		*+
 44385  016278  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44386  01627C  000A               	tblrd		*-
 44387  01627E  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44388  016282  EC94  F0B8         	call	i2___flmul	;wreg free
 44389  016286  C02C  F045         	movff	?i2___flmul,?i2_scale
 44390  01628A  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44391  01628E  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44392  016292  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44393  016296  0012               	return	
 44394  016298                     i2l19666:
 44395                           
 44396                           ;doprnt.c: 446: else if(scl > 10)
 44397  016298  504D               	movf	i2scale@scl,w,c
 44398  01629A  0A80               	xorlw	128
 44399  01629C  0F75               	addlw	-139
 44400  01629E  A0D8               	btfss	status,0,c
 44401  0162A0  D051               	goto	i2l19672
 44402                           
 44403                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 44404  0162A2  0E00               	movlw	0
 44405  0162A4  6E0A               	movwf	i2___awdiv@divisor+1,c
 44406  0162A6  0E0A               	movlw	10
 44407  0162A8  6E09               	movwf	i2___awdiv@divisor,c
 44408  0162AA  504D               	movf	i2scale@scl,w,c
 44409  0162AC  6E07               	movwf	i2___awdiv@dividend,c
 44410  0162AE  6A08               	clrf	i2___awdiv@dividend+1,c
 44411  0162B0  BE07               	btfsc	i2___awdiv@dividend,7,c
 44412  0162B2  0608               	decf	i2___awdiv@dividend+1,f,c
 44413  0162B4  EC2F  F0DA         	call	i2___awdiv	;wreg free
 44414  0162B8  0E09               	movlw	9
 44415  0162BA  2607               	addwf	?i2___awdiv,f,c
 44416  0162BC  5007               	movf	?i2___awdiv,w,c
 44417  0162BE  0D04               	mullw	4
 44418  0162C0  0EDB               	movlw	low __powers_
 44419  0162C2  24F3               	addwf	prodl,w,c
 44420  0162C4  6EF6               	movwf	tblptrl,c
 44421  0162C6  0EE4               	movlw	high __powers_
 44422  0162C8  20F4               	addwfc	prodh,w,c
 44423  0162CA  6EF7               	movwf	tblptrh,c
 44424  0162CC                     	if	1	;There are 3 active tblptr bytes
 44425  0162CC  6AF8               	clrf	tblptru,c
 44426  0162CE  0E00               	movlw	low (__mediumconst shr (0+16))
 44427  0162D0  22F8               	addwfc	tblptru,f,c
 44428  0162D2                     	endif
 44429  0162D2  0009               	tblrd		*+
 44430  0162D4  CFF5 F02C          	movff	tablat,i2___flmul@b
 44431  0162D8  0009               	tblrd		*+
 44432  0162DA  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 44433  0162DE  0009               	tblrd		*+
 44434  0162E0  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 44435  0162E4  000A               	tblrd		*-
 44436  0162E6  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 44437  0162EA  0E00               	movlw	0
 44438  0162EC  6E04               	movwf	i2___awmod@divisor+1,c
 44439  0162EE  0E0A               	movlw	10
 44440  0162F0  6E03               	movwf	i2___awmod@divisor,c
 44441  0162F2  504D               	movf	i2scale@scl,w,c
 44442  0162F4  6E01               	movwf	i2___awmod@dividend,c
 44443  0162F6  6A02               	clrf	i2___awmod@dividend+1,c
 44444  0162F8  BE01               	btfsc	i2___awmod@dividend,7,c
 44445  0162FA  0602               	decf	i2___awmod@dividend+1,f,c
 44446  0162FC  ECEB  F0DA         	call	i2___awmod	;wreg free
 44447  016300  5001               	movf	?i2___awmod,w,c
 44448  016302  0D04               	mullw	4
 44449  016304  0EDB               	movlw	low __powers_
 44450  016306  24F3               	addwf	prodl,w,c
 44451  016308  6EF6               	movwf	tblptrl,c
 44452  01630A  0EE4               	movlw	high __powers_
 44453  01630C  20F4               	addwfc	prodh,w,c
 44454  01630E  6EF7               	movwf	tblptrh,c
 44455  016310                     	if	1	;There are 3 active tblptr bytes
 44456  016310  6AF8               	clrf	tblptru,c
 44457  016312  0E00               	movlw	low (__mediumconst shr (0+16))
 44458  016314  22F8               	addwfc	tblptru,f,c
 44459  016316                     	endif
 44460  016316  0009               	tblrd		*+
 44461  016318  CFF5 F030          	movff	tablat,i2___flmul@a
 44462  01631C  0009               	tblrd		*+
 44463  01631E  CFF5 F031          	movff	tablat,i2___flmul@a+1
 44464  016322  0009               	tblrd		*+
 44465  016324  CFF5 F032          	movff	tablat,i2___flmul@a+2
 44466  016328  000A               	tblrd		*-
 44467  01632A  CFF5 F033          	movff	tablat,i2___flmul@a+3
 44468  01632E  EC94  F0B8         	call	i2___flmul	;wreg free
 44469  016332  C02C  F045         	movff	?i2___flmul,?i2_scale
 44470  016336  C02D  F046         	movff	?i2___flmul+1,?i2_scale+1
 44471  01633A  C02E  F047         	movff	?i2___flmul+2,?i2_scale+2
 44472  01633E  C02F  F048         	movff	?i2___flmul+3,?i2_scale+3
 44473  016342  0012               	return	
 44474  016344                     i2l19672:
 44475                           
 44476                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 44477  016344  504D               	movf	i2scale@scl,w,c
 44478  016346  0D04               	mullw	4
 44479  016348  0EDB               	movlw	low __powers_
 44480  01634A  24F3               	addwf	prodl,w,c
 44481  01634C  6EF6               	movwf	tblptrl,c
 44482  01634E  0EE4               	movlw	high __powers_
 44483  016350  20F4               	addwfc	prodh,w,c
 44484  016352  6EF7               	movwf	tblptrh,c
 44485  016354                     	if	1	;There are 3 active tblptr bytes
 44486  016354  6AF8               	clrf	tblptru,c
 44487  016356  0E00               	movlw	low (__mediumconst shr (0+16))
 44488  016358  22F8               	addwfc	tblptru,f,c
 44489  01635A                     	endif
 44490  01635A  0009               	tblrd		*+
 44491  01635C  CFF5 F045          	movff	tablat,?i2_scale
 44492  016360  0009               	tblrd		*+
 44493  016362  CFF5 F046          	movff	tablat,?i2_scale+1
 44494  016366  0009               	tblrd		*+
 44495  016368  CFF5 F047          	movff	tablat,?i2_scale+2
 44496  01636C  000A               	tblrd		*-
 44497  01636E  CFF5 F048          	movff	tablat,?i2_scale+3
 44498  016372  0012               	return		;funcret
 44499  016374                     __end_ofi2_scale:
 44500                           	opt callstack 0
 44501                           
 44502 ;; *************** function i2___awmod *****************
 44503 ;; Defined at:
 44504 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 44505 ;; Parameters:    Size  Location     Type
 44506 ;;  dividend        2    0[COMRAM] int 
 44507 ;;  divisor         2    2[COMRAM] int 
 44508 ;; Auto vars:     Size  Location     Type
 44509 ;;  __awmod         1    5[COMRAM] unsigned char 
 44510 ;;  __awmod         1    4[COMRAM] unsigned char 
 44511 ;; Return value:  Size  Location     Type
 44512 ;;                  2    0[COMRAM] int 
 44513 ;; Registers used:
 44514 ;;		wreg, status,2, status,0
 44515 ;; Tracked objects:
 44516 ;;		On entry : 0/0
 44517 ;;		On exit  : 0/0
 44518 ;;		Unchanged: 0/0
 44519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44524 ;;Total ram usage:        6 bytes
 44525 ;; Hardware stack levels used:    1
 44526 ;; This function calls:
 44527 ;;		Nothing
 44528 ;; This function is called by:
 44529 ;;		i2_scale
 44530 ;; This function uses a non-reentrant model
 44531 ;;
 44532                           
 44533                           	psect	text182
 44534  01B5D6                     __ptext182:
 44535                           	opt callstack 0
 44536  01B5D6                     i2___awmod:
 44537                           	opt callstack 12
 44538                           
 44539                           ;incstack = 0
 44540  01B5D6  0E00               	movlw	0
 44541  01B5D8  6E06               	movwf	i2___awmod@sign,c
 44542  01B5DA  AE02               	btfss	i2___awmod@dividend+1,7,c
 44543  01B5DC  D006               	goto	i2l18906
 44544  01B5DE  6C01               	negf	i2___awmod@dividend,c
 44545  01B5E0  1E02               	comf	i2___awmod@dividend+1,f,c
 44546  01B5E2  B0D8               	btfsc	status,0,c
 44547  01B5E4  2A02               	incf	i2___awmod@dividend+1,f,c
 44548  01B5E6  0E01               	movlw	1
 44549  01B5E8  6E06               	movwf	i2___awmod@sign,c
 44550  01B5EA                     i2l18906:
 44551  01B5EA  AE04               	btfss	i2___awmod@divisor+1,7,c
 44552  01B5EC  D004               	goto	i2l18910
 44553  01B5EE  6C03               	negf	i2___awmod@divisor,c
 44554  01B5F0  1E04               	comf	i2___awmod@divisor+1,f,c
 44555  01B5F2  B0D8               	btfsc	status,0,c
 44556  01B5F4  2A04               	incf	i2___awmod@divisor+1,f,c
 44557  01B5F6                     i2l18910:
 44558  01B5F6  5003               	movf	i2___awmod@divisor,w,c
 44559  01B5F8  1004               	iorwf	i2___awmod@divisor+1,w,c
 44560  01B5FA  B4D8               	btfsc	status,2,c
 44561  01B5FC  D018               	goto	i2l18926
 44562  01B5FE  0E01               	movlw	1
 44563  01B600  6E05               	movwf	i2___awmod@counter,c
 44564  01B602  D004               	goto	i2l18916
 44565  01B604                     i2l18914:
 44566  01B604  90D8               	bcf	status,0,c
 44567  01B606  3603               	rlcf	i2___awmod@divisor,f,c
 44568  01B608  3604               	rlcf	i2___awmod@divisor+1,f,c
 44569  01B60A  2A05               	incf	i2___awmod@counter,f,c
 44570  01B60C                     i2l18916:
 44571  01B60C  AE04               	btfss	i2___awmod@divisor+1,7,c
 44572  01B60E  D7FA               	goto	i2l18914
 44573  01B610                     i2u2382_40:
 44574  01B610  5003               	movf	i2___awmod@divisor,w,c
 44575  01B612  5C01               	subwf	i2___awmod@dividend,w,c
 44576  01B614  5004               	movf	i2___awmod@divisor+1,w,c
 44577  01B616  5802               	subwfb	i2___awmod@dividend+1,w,c
 44578  01B618  A0D8               	btfss	status,0,c
 44579  01B61A  D004               	goto	i2l18922
 44580  01B61C  5003               	movf	i2___awmod@divisor,w,c
 44581  01B61E  5E01               	subwf	i2___awmod@dividend,f,c
 44582  01B620  5004               	movf	i2___awmod@divisor+1,w,c
 44583  01B622  5A02               	subwfb	i2___awmod@dividend+1,f,c
 44584  01B624                     i2l18922:
 44585  01B624  90D8               	bcf	status,0,c
 44586  01B626  3204               	rrcf	i2___awmod@divisor+1,f,c
 44587  01B628  3203               	rrcf	i2___awmod@divisor,f,c
 44588  01B62A  2E05               	decfsz	i2___awmod@counter,f,c
 44589  01B62C  D7F1               	goto	i2u2382_40
 44590  01B62E                     i2l18926:
 44591  01B62E  5006               	movf	i2___awmod@sign,w,c
 44592  01B630  B4D8               	btfsc	status,2,c
 44593  01B632  D004               	goto	i2l18930
 44594  01B634  6C01               	negf	i2___awmod@dividend,c
 44595  01B636  1E02               	comf	i2___awmod@dividend+1,f,c
 44596  01B638  B0D8               	btfsc	status,0,c
 44597  01B63A  2A02               	incf	i2___awmod@dividend+1,f,c
 44598  01B63C                     i2l18930:
 44599  01B63C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 44600  01B640  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 44601  01B644  0012               	return		;funcret
 44602  01B646                     __end_ofi2___awmod:
 44603                           	opt callstack 0
 44604                           
 44605 ;; *************** function i2___awdiv *****************
 44606 ;; Defined at:
 44607 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 44608 ;; Parameters:    Size  Location     Type
 44609 ;;  dividend        2    6[COMRAM] int 
 44610 ;;  divisor         2    8[COMRAM] int 
 44611 ;; Auto vars:     Size  Location     Type
 44612 ;;  __awdiv         2   12[COMRAM] int 
 44613 ;;  __awdiv         1   11[COMRAM] unsigned char 
 44614 ;;  __awdiv         1   10[COMRAM] unsigned char 
 44615 ;; Return value:  Size  Location     Type
 44616 ;;                  2    6[COMRAM] int 
 44617 ;; Registers used:
 44618 ;;		wreg, status,2, status,0
 44619 ;; Tracked objects:
 44620 ;;		On entry : 0/0
 44621 ;;		On exit  : 0/0
 44622 ;;		Unchanged: 0/0
 44623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44625 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44627 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44628 ;;Total ram usage:        8 bytes
 44629 ;; Hardware stack levels used:    1
 44630 ;; This function calls:
 44631 ;;		Nothing
 44632 ;; This function is called by:
 44633 ;;		i2_scale
 44634 ;;		i2__doprnt
 44635 ;; This function uses a non-reentrant model
 44636 ;;
 44637                           
 44638                           	psect	text183
 44639  01B45E                     __ptext183:
 44640                           	opt callstack 0
 44641  01B45E                     i2___awdiv:
 44642                           	opt callstack 12
 44643                           
 44644                           ;incstack = 0
 44645  01B45E  0E00               	movlw	0
 44646  01B460  6E0C               	movwf	i2___awdiv@sign,c
 44647  01B462  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44648  01B464  D006               	goto	i2l18862
 44649  01B466  6C09               	negf	i2___awdiv@divisor,c
 44650  01B468  1E0A               	comf	i2___awdiv@divisor+1,f,c
 44651  01B46A  B0D8               	btfsc	status,0,c
 44652  01B46C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 44653  01B46E  0E01               	movlw	1
 44654  01B470  6E0C               	movwf	i2___awdiv@sign,c
 44655  01B472                     i2l18862:
 44656  01B472  AE08               	btfss	i2___awdiv@dividend+1,7,c
 44657  01B474  D006               	goto	i2l18868
 44658  01B476  6C07               	negf	i2___awdiv@dividend,c
 44659  01B478  1E08               	comf	i2___awdiv@dividend+1,f,c
 44660  01B47A  B0D8               	btfsc	status,0,c
 44661  01B47C  2A08               	incf	i2___awdiv@dividend+1,f,c
 44662  01B47E  0E01               	movlw	1
 44663  01B480  1A0C               	xorwf	i2___awdiv@sign,f,c
 44664  01B482                     i2l18868:
 44665  01B482  0E00               	movlw	0
 44666  01B484  6E0E               	movwf	i2___awdiv@quotient+1,c
 44667  01B486  0E00               	movlw	0
 44668  01B488  6E0D               	movwf	i2___awdiv@quotient,c
 44669  01B48A  5009               	movf	i2___awdiv@divisor,w,c
 44670  01B48C  100A               	iorwf	i2___awdiv@divisor+1,w,c
 44671  01B48E  B4D8               	btfsc	status,2,c
 44672  01B490  D01C               	goto	i2l18890
 44673  01B492  0E01               	movlw	1
 44674  01B494  6E0B               	movwf	i2___awdiv@counter,c
 44675  01B496  D004               	goto	i2l18876
 44676  01B498                     i2l18874:
 44677  01B498  90D8               	bcf	status,0,c
 44678  01B49A  3609               	rlcf	i2___awdiv@divisor,f,c
 44679  01B49C  360A               	rlcf	i2___awdiv@divisor+1,f,c
 44680  01B49E  2A0B               	incf	i2___awdiv@counter,f,c
 44681  01B4A0                     i2l18876:
 44682  01B4A0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 44683  01B4A2  D7FA               	goto	i2l18874
 44684  01B4A4                     i2u2376_40:
 44685  01B4A4  90D8               	bcf	status,0,c
 44686  01B4A6  360D               	rlcf	i2___awdiv@quotient,f,c
 44687  01B4A8  360E               	rlcf	i2___awdiv@quotient+1,f,c
 44688  01B4AA  5009               	movf	i2___awdiv@divisor,w,c
 44689  01B4AC  5C07               	subwf	i2___awdiv@dividend,w,c
 44690  01B4AE  500A               	movf	i2___awdiv@divisor+1,w,c
 44691  01B4B0  5808               	subwfb	i2___awdiv@dividend+1,w,c
 44692  01B4B2  A0D8               	btfss	status,0,c
 44693  01B4B4  D005               	goto	i2l18886
 44694  01B4B6  5009               	movf	i2___awdiv@divisor,w,c
 44695  01B4B8  5E07               	subwf	i2___awdiv@dividend,f,c
 44696  01B4BA  500A               	movf	i2___awdiv@divisor+1,w,c
 44697  01B4BC  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 44698  01B4BE  800D               	bsf	i2___awdiv@quotient,0,c
 44699  01B4C0                     i2l18886:
 44700  01B4C0  90D8               	bcf	status,0,c
 44701  01B4C2  320A               	rrcf	i2___awdiv@divisor+1,f,c
 44702  01B4C4  3209               	rrcf	i2___awdiv@divisor,f,c
 44703  01B4C6  2E0B               	decfsz	i2___awdiv@counter,f,c
 44704  01B4C8  D7ED               	goto	i2u2376_40
 44705  01B4CA                     i2l18890:
 44706  01B4CA  500C               	movf	i2___awdiv@sign,w,c
 44707  01B4CC  B4D8               	btfsc	status,2,c
 44708  01B4CE  D004               	goto	i2l18894
 44709  01B4D0  6C0D               	negf	i2___awdiv@quotient,c
 44710  01B4D2  1E0E               	comf	i2___awdiv@quotient+1,f,c
 44711  01B4D4  B0D8               	btfsc	status,0,c
 44712  01B4D6  2A0E               	incf	i2___awdiv@quotient+1,f,c
 44713  01B4D8                     i2l18894:
 44714  01B4D8  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 44715  01B4DC  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 44716  01B4E0  0012               	return		;funcret
 44717  01B4E2                     __end_ofi2___awdiv:
 44718                           	opt callstack 0
 44719                           
 44720 ;; *************** function i2_putch *****************
 44721 ;; Defined at:
 44722 ;;		line 182 in file "mcc_generated_files/eusart2.c"
 44723 ;; Parameters:    Size  Location     Type
 44724 ;;  txData          1    wreg     unsigned char 
 44725 ;; Auto vars:     Size  Location     Type
 44726 ;;  txData          1    1[COMRAM] unsigned char 
 44727 ;; Return value:  Size  Location     Type
 44728 ;;                  1    wreg      void 
 44729 ;; Registers used:
 44730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44731 ;; Tracked objects:
 44732 ;;		On entry : 0/0
 44733 ;;		On exit  : 0/0
 44734 ;;		Unchanged: 0/0
 44735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44740 ;;Total ram usage:        1 bytes
 44741 ;; Hardware stack levels used:    1
 44742 ;; Hardware stack levels required when called:    1
 44743 ;; This function calls:
 44744 ;;		i2_EUSART2_Write
 44745 ;; This function is called by:
 44746 ;;		i2_printf
 44747 ;;		i2__doprnt
 44748 ;; This function uses a non-reentrant model
 44749 ;;
 44750                           
 44751                           	psect	text184
 44752  01CBE2                     __ptext184:
 44753                           	opt callstack 0
 44754  01CBE2                     i2_putch:
 44755                           	opt callstack 12
 44756                           
 44757                           ;incstack = 0
 44758                           ;i2putch@txData stored from wreg
 44759  01CBE2  6E02               	movwf	i2putch@txData,c
 44760                           
 44761                           ;eusart2.c: 184: EUSART2_Write(txData);
 44762  01CBE4  5002               	movf	i2putch@txData,w,c
 44763  01CBE6  ECFA  F0DF         	call	i2_EUSART2_Write
 44764  01CBEA  0012               	return		;funcret
 44765  01CBEC                     __end_ofi2_putch:
 44766                           	opt callstack 0
 44767                           
 44768 ;; *************** function i2_EUSART2_Write *****************
 44769 ;; Defined at:
 44770 ;;		line 153 in file "mcc_generated_files/eusart2.c"
 44771 ;; Parameters:    Size  Location     Type
 44772 ;;  txData          1    wreg     unsigned char 
 44773 ;; Auto vars:     Size  Location     Type
 44774 ;;  txData          1    0[COMRAM] unsigned char 
 44775 ;; Return value:  Size  Location     Type
 44776 ;;                  1    wreg      void 
 44777 ;; Registers used:
 44778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44779 ;; Tracked objects:
 44780 ;;		On entry : 0/0
 44781 ;;		On exit  : 0/0
 44782 ;;		Unchanged: 0/0
 44783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44788 ;;Total ram usage:        1 bytes
 44789 ;; Hardware stack levels used:    1
 44790 ;; This function calls:
 44791 ;;		Nothing
 44792 ;; This function is called by:
 44793 ;;		i2_putch
 44794 ;; This function uses a non-reentrant model
 44795 ;;
 44796                           
 44797                           	psect	text185
 44798  01BFF4                     __ptext185:
 44799                           	opt callstack 0
 44800  01BFF4                     i2_EUSART2_Write:
 44801                           	opt callstack 12
 44802                           
 44803                           ;incstack = 0
 44804                           ;i2EUSART2_Write@txData stored from wreg
 44805  01BFF4  6E01               	movwf	i2EUSART2_Write@txData,c
 44806                           
 44807                           ;eusart2.c: 155: while(0 == eusart2TxBufferRemaining)
 44808  01BFF6  D001               	goto	i2l18838
 44809  01BFF8                     i2l122:
 44810                           
 44811                           ; BSR set to: 1
 44812  01BFF8  0004               	clrwdt		;# 
 44813  01BFFA                     i2l18838:
 44814  01BFFA  0101               	movlb	1	; () banked
 44815  01BFFC  5193               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 44816  01BFFE  B4D8               	btfsc	status,2,c
 44817  01C000  D7FB               	goto	i2l122
 44818                           
 44819                           ; BSR set to: 1
 44820                           ;eusart2.c: 158: };eusart2.c: 160: if(0 == PIE3bits.TX2IE)
 44821  01C002  010E               	movlb	14	; () banked
 44822  01C004  BDC5               	btfsc	197,6,b	;volatile
 44823  01C006  D003               	goto	i2l124
 44824                           
 44825                           ; BSR set to: 14
 44826                           ;eusart2.c: 161: {;eusart2.c: 162: TX2REG = txData;
 44827  01C008  C001  FE9A         	movff	i2EUSART2_Write@txData,3738	;volatile
 44828                           
 44829                           ;eusart2.c: 163: }
 44830  01C00C  D011               	goto	i2l18852
 44831  01C00E                     i2l124:
 44832                           
 44833                           ; BSR set to: 14
 44834                           ;eusart2.c: 164: else;eusart2.c: 165: {;eusart2.c: 166: PIE3bits.TX2IE = 0;
 44835  01C00E  9DC5               	bcf	197,6,b	;volatile
 44836                           
 44837                           ; BSR set to: 14
 44838                           ;eusart2.c: 167: eusart2TxBuffer[eusart2TxHead++] = txData;
 44839  01C010  0EC0               	movlw	low _eusart2TxBuffer
 44840  01C012  0101               	movlb	1	; () banked
 44841  01C014  2595               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 44842  01C016  6ED9               	movwf	fsr2l,c
 44843  01C018  6ADA               	clrf	fsr2h,c
 44844  01C01A  0E04               	movlw	high _eusart2TxBuffer
 44845  01C01C  22DA               	addwfc	fsr2h,f,c
 44846  01C01E  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 44847                           
 44848                           ; BSR set to: 1
 44849  01C022  2B95               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 44850                           
 44851                           ; BSR set to: 1
 44852                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 44853  01C024  0E3F               	movlw	63
 44854  01C026  6595               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 44855  01C028  D002               	goto	i2l18850
 44856                           
 44857                           ; BSR set to: 1
 44858                           ;eusart2.c: 169: {;eusart2.c: 170: eusart2TxHead = 0;
 44859  01C02A  0E00               	movlw	0
 44860  01C02C  6F95               	movwf	_eusart2TxHead& (0+255),b	;volatile
 44861  01C02E                     i2l18850:
 44862                           
 44863                           ; BSR set to: 1
 44864                           ;eusart2.c: 171: };eusart2.c: 172: eusart2TxBufferRemaining--;
 44865  01C02E  0793               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 44866  01C030                     i2l18852:
 44867                           
 44868                           ;eusart2.c: 173: };eusart2.c: 174: PIE3bits.TX2IE = 1;
 44869  01C030  010E               	movlb	14	; () banked
 44870  01C032  8DC5               	bsf	197,6,b	;volatile
 44871                           
 44872                           ; BSR set to: 14
 44873  01C034  0012               	return		;funcret
 44874  01C036                     __end_ofi2_EUSART2_Write:
 44875                           	opt callstack 0
 44876                           
 44877 ;; *************** function i2_isdigit *****************
 44878 ;; Defined at:
 44879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 44880 ;; Parameters:    Size  Location     Type
 44881 ;;  c               1    wreg     unsigned char 
 44882 ;; Auto vars:     Size  Location     Type
 44883 ;;  c               1    2[COMRAM] unsigned char 
 44884 ;; Return value:  Size  Location     Type
 44885 ;;		None               void
 44886 ;; Registers used:
 44887 ;;		wreg, status,2, status,0
 44888 ;; Tracked objects:
 44889 ;;		On entry : 0/0
 44890 ;;		On exit  : 0/0
 44891 ;;		Unchanged: 0/0
 44892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44897 ;;Total ram usage:        3 bytes
 44898 ;; Hardware stack levels used:    1
 44899 ;; This function calls:
 44900 ;;		Nothing
 44901 ;; This function is called by:
 44902 ;;		i2__doprnt
 44903 ;; This function uses a non-reentrant model
 44904 ;;
 44905                           
 44906                           	psect	text186
 44907  01C852                     __ptext186:
 44908                           	opt callstack 0
 44909  01C852                     i2_isdigit:
 44910                           	opt callstack 13
 44911                           
 44912                           ; BSR set to: 14
 44913                           ;incstack = 0
 44914                           ;i2isdigit@c stored from wreg
 44915  01C852  6E03               	movwf	i2isdigit@c,c
 44916  01C854  0E00               	movlw	0
 44917  01C856  6E02               	movwf	i2_isdigit$5463,c
 44918  01C858  0E3A               	movlw	58
 44919  01C85A  6003               	cpfslt	i2isdigit@c,c
 44920  01C85C  D005               	goto	i2l19986
 44921  01C85E  0E2F               	movlw	47
 44922  01C860  6403               	cpfsgt	i2isdigit@c,c
 44923  01C862  D002               	goto	i2l19986
 44924  01C864  0E01               	movlw	1
 44925  01C866  6E02               	movwf	i2_isdigit$5463,c
 44926  01C868                     i2l19986:
 44927  01C868  C002  F001         	movff	i2_isdigit$5463,??i2_isdigit
 44928  01C86C  3001               	rrcf	??i2_isdigit,w,c
 44929  01C86E  0012               	return		;funcret
 44930  01C870                     __end_ofi2_isdigit:
 44931                           	opt callstack 0
 44932                           
 44933 ;; *************** function i2_fround *****************
 44934 ;; Defined at:
 44935 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 44936 ;; Parameters:    Size  Location     Type
 44937 ;;  prec            1    wreg     unsigned char 
 44938 ;; Auto vars:     Size  Location     Type
 44939 ;;  prec            1   80[COMRAM] unsigned char 
 44940 ;; Return value:  Size  Location     Type
 44941 ;;                  4   68[COMRAM] unsigned char 
 44942 ;; Registers used:
 44943 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44944 ;; Tracked objects:
 44945 ;;		On entry : 0/0
 44946 ;;		On exit  : 0/0
 44947 ;;		Unchanged: 0/0
 44948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44950 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44952 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44953 ;;Total ram usage:       13 bytes
 44954 ;; Hardware stack levels used:    1
 44955 ;; Hardware stack levels required when called:    1
 44956 ;; This function calls:
 44957 ;;		i2___flmul
 44958 ;;		i2___lwdiv
 44959 ;;		i2___lwmod
 44960 ;; This function is called by:
 44961 ;;		i2__doprnt
 44962 ;; This function uses a non-reentrant model
 44963 ;;
 44964                           
 44965                           	psect	text187
 44966  01833A                     __ptext187:
 44967                           	opt callstack 0
 44968  01833A                     i2_fround:
 44969                           	opt callstack 12
 44970                           
 44971                           ;incstack = 0
 44972                           ;i2fround@prec stored from wreg
 44973  01833A  6E51               	movwf	i2fround@prec,c
 44974                           
 44975                           ;doprnt.c: 421: if(prec>=110)
 44976  01833C  0E6D               	movlw	109
 44977  01833E  6451               	cpfsgt	i2fround@prec,c
 44978  018340  D0B5               	goto	i2l19628
 44979                           
 44980                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 44981  018342  0E00               	movlw	0
 44982  018344  6E30               	movwf	i2___flmul@a,c
 44983  018346  0E00               	movlw	0
 44984  018348  6E31               	movwf	i2___flmul@a+1,c
 44985  01834A  0E00               	movlw	0
 44986  01834C  6E32               	movwf	i2___flmul@a+2,c
 44987  01834E  0E3F               	movlw	63
 44988  018350  6E33               	movwf	i2___flmul@a+3,c
 44989  018352  0E00               	movlw	0
 44990  018354  6E09               	movwf	i2___lwdiv@divisor+1,c
 44991  018356  0E64               	movlw	100
 44992  018358  6E08               	movwf	i2___lwdiv@divisor,c
 44993  01835A  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 44994  01835E  6A07               	clrf	i2___lwdiv@dividend+1,c
 44995  018360  EC8A  F0DD         	call	i2___lwdiv	;wreg free
 44996  018364  90D8               	bcf	status,0,c
 44997  018366  3606               	rlcf	?i2___lwdiv,f,c
 44998  018368  3607               	rlcf	?i2___lwdiv+1,f,c
 44999  01836A  90D8               	bcf	status,0,c
 45000  01836C  3606               	rlcf	?i2___lwdiv,f,c
 45001  01836E  3607               	rlcf	?i2___lwdiv+1,f,c
 45002  018370  0E48               	movlw	72
 45003  018372  2606               	addwf	?i2___lwdiv,f,c
 45004  018374  0E00               	movlw	0
 45005  018376  2207               	addwfc	?i2___lwdiv+1,f,c
 45006  018378  0E0F               	movlw	low __npowers_
 45007  01837A  2406               	addwf	?i2___lwdiv,w,c
 45008  01837C  6EF6               	movwf	tblptrl,c
 45009  01837E  0EE5               	movlw	high __npowers_
 45010  018380  2007               	addwfc	?i2___lwdiv+1,w,c
 45011  018382  6EF7               	movwf	tblptrh,c
 45012  018384                     	if	1	;There are 3 active tblptr bytes
 45013  018384  6AF8               	clrf	tblptru,c
 45014  018386  0E00               	movlw	low (__mediumconst shr (0+16))
 45015  018388  22F8               	addwfc	tblptru,f,c
 45016  01838A                     	endif
 45017  01838A  0009               	tblrd		*+
 45018  01838C  CFF5 F02C          	movff	tablat,i2___flmul@b
 45019  018390  0009               	tblrd		*+
 45020  018392  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 45021  018396  0009               	tblrd		*+
 45022  018398  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 45023  01839C  000A               	tblrd		*-
 45024  01839E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 45025  0183A2  EC94  F0B8         	call	i2___flmul	;wreg free
 45026  0183A6  C02C  F04D         	movff	?i2___flmul,i2_fround$6431
 45027  0183AA  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6431+1
 45028  0183AE  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6431+2
 45029  0183B2  C02F  F050         	movff	?i2___flmul+3,i2_fround$6431+3
 45030                           
 45031                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 45032  0183B6  0E00               	movlw	0
 45033  0183B8  6E09               	movwf	i2___lwdiv@divisor+1,c
 45034  0183BA  0E0A               	movlw	10
 45035  0183BC  6E08               	movwf	i2___lwdiv@divisor,c
 45036  0183BE  0E00               	movlw	0
 45037  0183C0  6E04               	movwf	i2___lwmod@divisor+1,c
 45038  0183C2  0E64               	movlw	100
 45039  0183C4  6E03               	movwf	i2___lwmod@divisor,c
 45040  0183C6  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 45041  0183CA  6A02               	clrf	i2___lwmod@dividend+1,c
 45042  0183CC  EC1B  F0E0         	call	i2___lwmod	;wreg free
 45043  0183D0  C001  F006         	movff	?i2___lwmod,i2___lwdiv@dividend
 45044  0183D4  C002  F007         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
 45045  0183D8  EC8A  F0DD         	call	i2___lwdiv	;wreg free
 45046  0183DC  90D8               	bcf	status,0,c
 45047  0183DE  3606               	rlcf	?i2___lwdiv,f,c
 45048  0183E0  3607               	rlcf	?i2___lwdiv+1,f,c
 45049  0183E2  90D8               	bcf	status,0,c
 45050  0183E4  3606               	rlcf	?i2___lwdiv,f,c
 45051  0183E6  3607               	rlcf	?i2___lwdiv+1,f,c
 45052  0183E8  0E24               	movlw	36
 45053  0183EA  2606               	addwf	?i2___lwdiv,f,c
 45054  0183EC  0E00               	movlw	0
 45055  0183EE  2207               	addwfc	?i2___lwdiv+1,f,c
 45056  0183F0  0E0F               	movlw	low __npowers_
 45057  0183F2  2406               	addwf	?i2___lwdiv,w,c
 45058  0183F4  6EF6               	movwf	tblptrl,c
 45059  0183F6  0EE5               	movlw	high __npowers_
 45060  0183F8  2007               	addwfc	?i2___lwdiv+1,w,c
 45061  0183FA  6EF7               	movwf	tblptrh,c
 45062  0183FC                     	if	1	;There are 3 active tblptr bytes
 45063  0183FC  6AF8               	clrf	tblptru,c
 45064  0183FE  0E00               	movlw	low (__mediumconst shr (0+16))
 45065  018400  22F8               	addwfc	tblptru,f,c
 45066  018402                     	endif
 45067  018402  0009               	tblrd		*+
 45068  018404  CFF5 F030          	movff	tablat,i2___flmul@a
 45069  018408  0009               	tblrd		*+
 45070  01840A  CFF5 F031          	movff	tablat,i2___flmul@a+1
 45071  01840E  0009               	tblrd		*+
 45072  018410  CFF5 F032          	movff	tablat,i2___flmul@a+2
 45073  018414  000A               	tblrd		*-
 45074  018416  CFF5 F033          	movff	tablat,i2___flmul@a+3
 45075  01841A  C04D  F02C         	movff	i2_fround$6431,i2___flmul@b
 45076  01841E  C04E  F02D         	movff	i2_fround$6431+1,i2___flmul@b+1
 45077  018422  C04F  F02E         	movff	i2_fround$6431+2,i2___flmul@b+2
 45078  018426  C050  F02F         	movff	i2_fround$6431+3,i2___flmul@b+3
 45079  01842A  EC94  F0B8         	call	i2___flmul	;wreg free
 45080  01842E  C02C  F049         	movff	?i2___flmul,i2_fround$6432
 45081  018432  C02D  F04A         	movff	?i2___flmul+1,i2_fround$6432+1
 45082  018436  C02E  F04B         	movff	?i2___flmul+2,i2_fround$6432+2
 45083  01843A  C02F  F04C         	movff	?i2___flmul+3,i2_fround$6432+3
 45084                           
 45085                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 45086  01843E  C049  F02C         	movff	i2_fround$6432,i2___flmul@b
 45087  018442  C04A  F02D         	movff	i2_fround$6432+1,i2___flmul@b+1
 45088  018446  C04B  F02E         	movff	i2_fround$6432+2,i2___flmul@b+2
 45089  01844A  C04C  F02F         	movff	i2_fround$6432+3,i2___flmul@b+3
 45090  01844E  0E00               	movlw	0
 45091  018450  6E04               	movwf	i2___lwmod@divisor+1,c
 45092  018452  0E0A               	movlw	10
 45093  018454  6E03               	movwf	i2___lwmod@divisor,c
 45094  018456  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 45095  01845A  6A02               	clrf	i2___lwmod@dividend+1,c
 45096  01845C  EC1B  F0E0         	call	i2___lwmod	;wreg free
 45097  018460  90D8               	bcf	status,0,c
 45098  018462  3601               	rlcf	?i2___lwmod,f,c
 45099  018464  3602               	rlcf	?i2___lwmod+1,f,c
 45100  018466  90D8               	bcf	status,0,c
 45101  018468  3601               	rlcf	?i2___lwmod,f,c
 45102  01846A  3602               	rlcf	?i2___lwmod+1,f,c
 45103  01846C  0E0F               	movlw	low __npowers_
 45104  01846E  2401               	addwf	?i2___lwmod,w,c
 45105  018470  6EF6               	movwf	tblptrl,c
 45106  018472  0EE5               	movlw	high __npowers_
 45107  018474  2002               	addwfc	?i2___lwmod+1,w,c
 45108  018476  6EF7               	movwf	tblptrh,c
 45109  018478                     	if	1	;There are 3 active tblptr bytes
 45110  018478  6AF8               	clrf	tblptru,c
 45111  01847A  0E00               	movlw	low (__mediumconst shr (0+16))
 45112  01847C  22F8               	addwfc	tblptru,f,c
 45113  01847E                     	endif
 45114  01847E  0009               	tblrd		*+
 45115  018480  CFF5 F030          	movff	tablat,i2___flmul@a
 45116  018484  0009               	tblrd		*+
 45117  018486  CFF5 F031          	movff	tablat,i2___flmul@a+1
 45118  01848A  0009               	tblrd		*+
 45119  01848C  CFF5 F032          	movff	tablat,i2___flmul@a+2
 45120  018490  000A               	tblrd		*-
 45121  018492  CFF5 F033          	movff	tablat,i2___flmul@a+3
 45122  018496  EC94  F0B8         	call	i2___flmul	;wreg free
 45123  01849A  C02C  F045         	movff	?i2___flmul,?i2_fround
 45124  01849E  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 45125  0184A2  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 45126  0184A6  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 45127  0184AA  0012               	return	
 45128  0184AC                     i2l19628:
 45129                           
 45130                           ;doprnt.c: 423: else if(prec > 10)
 45131  0184AC  0E0A               	movlw	10
 45132  0184AE  6451               	cpfsgt	i2fround@prec,c
 45133  0184B0  D071               	goto	i2l19634
 45134                           
 45135                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 45136  0184B2  0E00               	movlw	0
 45137  0184B4  6E30               	movwf	i2___flmul@a,c
 45138  0184B6  0E00               	movlw	0
 45139  0184B8  6E31               	movwf	i2___flmul@a+1,c
 45140  0184BA  0E00               	movlw	0
 45141  0184BC  6E32               	movwf	i2___flmul@a+2,c
 45142  0184BE  0E3F               	movlw	63
 45143  0184C0  6E33               	movwf	i2___flmul@a+3,c
 45144  0184C2  0E00               	movlw	0
 45145  0184C4  6E09               	movwf	i2___lwdiv@divisor+1,c
 45146  0184C6  0E0A               	movlw	10
 45147  0184C8  6E08               	movwf	i2___lwdiv@divisor,c
 45148  0184CA  C051  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 45149  0184CE  6A07               	clrf	i2___lwdiv@dividend+1,c
 45150  0184D0  EC8A  F0DD         	call	i2___lwdiv	;wreg free
 45151  0184D4  90D8               	bcf	status,0,c
 45152  0184D6  3606               	rlcf	?i2___lwdiv,f,c
 45153  0184D8  3607               	rlcf	?i2___lwdiv+1,f,c
 45154  0184DA  90D8               	bcf	status,0,c
 45155  0184DC  3606               	rlcf	?i2___lwdiv,f,c
 45156  0184DE  3607               	rlcf	?i2___lwdiv+1,f,c
 45157  0184E0  0E24               	movlw	36
 45158  0184E2  2606               	addwf	?i2___lwdiv,f,c
 45159  0184E4  0E00               	movlw	0
 45160  0184E6  2207               	addwfc	?i2___lwdiv+1,f,c
 45161  0184E8  0E0F               	movlw	low __npowers_
 45162  0184EA  2406               	addwf	?i2___lwdiv,w,c
 45163  0184EC  6EF6               	movwf	tblptrl,c
 45164  0184EE  0EE5               	movlw	high __npowers_
 45165  0184F0  2007               	addwfc	?i2___lwdiv+1,w,c
 45166  0184F2  6EF7               	movwf	tblptrh,c
 45167  0184F4                     	if	1	;There are 3 active tblptr bytes
 45168  0184F4  6AF8               	clrf	tblptru,c
 45169  0184F6  0E00               	movlw	low (__mediumconst shr (0+16))
 45170  0184F8  22F8               	addwfc	tblptru,f,c
 45171  0184FA                     	endif
 45172  0184FA  0009               	tblrd		*+
 45173  0184FC  CFF5 F02C          	movff	tablat,i2___flmul@b
 45174  018500  0009               	tblrd		*+
 45175  018502  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 45176  018506  0009               	tblrd		*+
 45177  018508  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 45178  01850C  000A               	tblrd		*-
 45179  01850E  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 45180  018512  EC94  F0B8         	call	i2___flmul	;wreg free
 45181  018516  C02C  F04D         	movff	?i2___flmul,i2_fround$6431
 45182  01851A  C02D  F04E         	movff	?i2___flmul+1,i2_fround$6431+1
 45183  01851E  C02E  F04F         	movff	?i2___flmul+2,i2_fround$6431+2
 45184  018522  C02F  F050         	movff	?i2___flmul+3,i2_fround$6431+3
 45185                           
 45186                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 45187  018526  C04D  F02C         	movff	i2_fround$6431,i2___flmul@b
 45188  01852A  C04E  F02D         	movff	i2_fround$6431+1,i2___flmul@b+1
 45189  01852E  C04F  F02E         	movff	i2_fround$6431+2,i2___flmul@b+2
 45190  018532  C050  F02F         	movff	i2_fround$6431+3,i2___flmul@b+3
 45191  018536  0E00               	movlw	0
 45192  018538  6E04               	movwf	i2___lwmod@divisor+1,c
 45193  01853A  0E0A               	movlw	10
 45194  01853C  6E03               	movwf	i2___lwmod@divisor,c
 45195  01853E  C051  F001         	movff	i2fround@prec,i2___lwmod@dividend
 45196  018542  6A02               	clrf	i2___lwmod@dividend+1,c
 45197  018544  EC1B  F0E0         	call	i2___lwmod	;wreg free
 45198  018548  90D8               	bcf	status,0,c
 45199  01854A  3601               	rlcf	?i2___lwmod,f,c
 45200  01854C  3602               	rlcf	?i2___lwmod+1,f,c
 45201  01854E  90D8               	bcf	status,0,c
 45202  018550  3601               	rlcf	?i2___lwmod,f,c
 45203  018552  3602               	rlcf	?i2___lwmod+1,f,c
 45204  018554  0E0F               	movlw	low __npowers_
 45205  018556  2401               	addwf	?i2___lwmod,w,c
 45206  018558  6EF6               	movwf	tblptrl,c
 45207  01855A  0EE5               	movlw	high __npowers_
 45208  01855C  2002               	addwfc	?i2___lwmod+1,w,c
 45209  01855E  6EF7               	movwf	tblptrh,c
 45210  018560                     	if	1	;There are 3 active tblptr bytes
 45211  018560  6AF8               	clrf	tblptru,c
 45212  018562  0E00               	movlw	low (__mediumconst shr (0+16))
 45213  018564  22F8               	addwfc	tblptru,f,c
 45214  018566                     	endif
 45215  018566  0009               	tblrd		*+
 45216  018568  CFF5 F030          	movff	tablat,i2___flmul@a
 45217  01856C  0009               	tblrd		*+
 45218  01856E  CFF5 F031          	movff	tablat,i2___flmul@a+1
 45219  018572  0009               	tblrd		*+
 45220  018574  CFF5 F032          	movff	tablat,i2___flmul@a+2
 45221  018578  000A               	tblrd		*-
 45222  01857A  CFF5 F033          	movff	tablat,i2___flmul@a+3
 45223  01857E  EC94  F0B8         	call	i2___flmul	;wreg free
 45224  018582  C02C  F045         	movff	?i2___flmul,?i2_fround
 45225  018586  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 45226  01858A  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 45227  01858E  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 45228  018592  0012               	return	
 45229  018594                     i2l19634:
 45230                           
 45231                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 45232  018594  5051               	movf	i2fround@prec,w,c
 45233  018596  0D04               	mullw	4
 45234  018598  0E0F               	movlw	low __npowers_
 45235  01859A  24F3               	addwf	prodl,w,c
 45236  01859C  6EF6               	movwf	tblptrl,c
 45237  01859E  0EE5               	movlw	high __npowers_
 45238  0185A0  20F4               	addwfc	prodh,w,c
 45239  0185A2  6EF7               	movwf	tblptrh,c
 45240  0185A4                     	if	1	;There are 3 active tblptr bytes
 45241  0185A4  6AF8               	clrf	tblptru,c
 45242  0185A6  0E00               	movlw	low (__mediumconst shr (0+16))
 45243  0185A8  22F8               	addwfc	tblptru,f,c
 45244  0185AA                     	endif
 45245  0185AA  0009               	tblrd		*+
 45246  0185AC  CFF5 F02C          	movff	tablat,i2___flmul@b
 45247  0185B0  0009               	tblrd		*+
 45248  0185B2  CFF5 F02D          	movff	tablat,i2___flmul@b+1
 45249  0185B6  0009               	tblrd		*+
 45250  0185B8  CFF5 F02E          	movff	tablat,i2___flmul@b+2
 45251  0185BC  000A               	tblrd		*-
 45252  0185BE  CFF5 F02F          	movff	tablat,i2___flmul@b+3
 45253  0185C2  0E00               	movlw	0
 45254  0185C4  6E30               	movwf	i2___flmul@a,c
 45255  0185C6  0E00               	movlw	0
 45256  0185C8  6E31               	movwf	i2___flmul@a+1,c
 45257  0185CA  0E00               	movlw	0
 45258  0185CC  6E32               	movwf	i2___flmul@a+2,c
 45259  0185CE  0E3F               	movlw	63
 45260  0185D0  6E33               	movwf	i2___flmul@a+3,c
 45261  0185D2  EC94  F0B8         	call	i2___flmul	;wreg free
 45262  0185D6  C02C  F045         	movff	?i2___flmul,?i2_fround
 45263  0185DA  C02D  F046         	movff	?i2___flmul+1,?i2_fround+1
 45264  0185DE  C02E  F047         	movff	?i2___flmul+2,?i2_fround+2
 45265  0185E2  C02F  F048         	movff	?i2___flmul+3,?i2_fround+3
 45266  0185E6  0012               	return		;funcret
 45267  0185E8                     __end_ofi2_fround:
 45268                           	opt callstack 0
 45269                           
 45270 ;; *************** function i2___lwmod *****************
 45271 ;; Defined at:
 45272 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 45273 ;; Parameters:    Size  Location     Type
 45274 ;;  dividend        2    0[COMRAM] unsigned int 
 45275 ;;  divisor         2    2[COMRAM] unsigned int 
 45276 ;; Auto vars:     Size  Location     Type
 45277 ;;  __lwmod         1    4[COMRAM] unsigned char 
 45278 ;; Return value:  Size  Location     Type
 45279 ;;                  2    0[COMRAM] unsigned int 
 45280 ;; Registers used:
 45281 ;;		wreg, status,2, status,0
 45282 ;; Tracked objects:
 45283 ;;		On entry : 0/0
 45284 ;;		On exit  : 0/0
 45285 ;;		Unchanged: 0/0
 45286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45290 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45291 ;;Total ram usage:        5 bytes
 45292 ;; Hardware stack levels used:    1
 45293 ;; This function calls:
 45294 ;;		Nothing
 45295 ;; This function is called by:
 45296 ;;		i2_fround
 45297 ;; This function uses a non-reentrant model
 45298 ;;
 45299                           
 45300                           	psect	text188
 45301  01C036                     __ptext188:
 45302                           	opt callstack 0
 45303  01C036                     i2___lwmod:
 45304                           	opt callstack 12
 45305                           
 45306                           ;incstack = 0
 45307  01C036  5003               	movf	i2___lwmod@divisor,w,c
 45308  01C038  1004               	iorwf	i2___lwmod@divisor+1,w,c
 45309  01C03A  B4D8               	btfsc	status,2,c
 45310  01C03C  D018               	goto	i2l3210
 45311  01C03E  0E01               	movlw	1
 45312  01C040  6E05               	movwf	i2___lwmod@counter,c
 45313  01C042  D004               	goto	i2l18962
 45314  01C044                     i2l18960:
 45315  01C044  90D8               	bcf	status,0,c
 45316  01C046  3603               	rlcf	i2___lwmod@divisor,f,c
 45317  01C048  3604               	rlcf	i2___lwmod@divisor+1,f,c
 45318  01C04A  2A05               	incf	i2___lwmod@counter,f,c
 45319  01C04C                     i2l18962:
 45320  01C04C  AE04               	btfss	i2___lwmod@divisor+1,7,c
 45321  01C04E  D7FA               	goto	i2l18960
 45322  01C050                     i2u2389_40:
 45323  01C050  5003               	movf	i2___lwmod@divisor,w,c
 45324  01C052  5C01               	subwf	i2___lwmod@dividend,w,c
 45325  01C054  5004               	movf	i2___lwmod@divisor+1,w,c
 45326  01C056  5802               	subwfb	i2___lwmod@dividend+1,w,c
 45327  01C058  A0D8               	btfss	status,0,c
 45328  01C05A  D004               	goto	i2l18968
 45329  01C05C  5003               	movf	i2___lwmod@divisor,w,c
 45330  01C05E  5E01               	subwf	i2___lwmod@dividend,f,c
 45331  01C060  5004               	movf	i2___lwmod@divisor+1,w,c
 45332  01C062  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 45333  01C064                     i2l18968:
 45334  01C064  90D8               	bcf	status,0,c
 45335  01C066  3204               	rrcf	i2___lwmod@divisor+1,f,c
 45336  01C068  3203               	rrcf	i2___lwmod@divisor,f,c
 45337  01C06A  2E05               	decfsz	i2___lwmod@counter,f,c
 45338  01C06C  D7F1               	goto	i2u2389_40
 45339  01C06E                     i2l3210:
 45340  01C06E  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 45341  01C072  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 45342  01C076  0012               	return		;funcret
 45343  01C078                     __end_ofi2___lwmod:
 45344                           	opt callstack 0
 45345                           
 45346 ;; *************** function i2___lwdiv *****************
 45347 ;; Defined at:
 45348 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 45349 ;; Parameters:    Size  Location     Type
 45350 ;;  dividend        2    5[COMRAM] unsigned int 
 45351 ;;  divisor         2    7[COMRAM] unsigned int 
 45352 ;; Auto vars:     Size  Location     Type
 45353 ;;  __lwdiv         2   10[COMRAM] unsigned int 
 45354 ;;  __lwdiv         1    9[COMRAM] unsigned char 
 45355 ;; Return value:  Size  Location     Type
 45356 ;;                  2    5[COMRAM] unsigned int 
 45357 ;; Registers used:
 45358 ;;		wreg, status,2, status,0
 45359 ;; Tracked objects:
 45360 ;;		On entry : 0/0
 45361 ;;		On exit  : 0/0
 45362 ;;		Unchanged: 0/0
 45363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45365 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45367 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45368 ;;Total ram usage:        7 bytes
 45369 ;; Hardware stack levels used:    1
 45370 ;; This function calls:
 45371 ;;		Nothing
 45372 ;; This function is called by:
 45373 ;;		i2_fround
 45374 ;; This function uses a non-reentrant model
 45375 ;;
 45376                           
 45377                           	psect	text189
 45378  01BB14                     __ptext189:
 45379                           	opt callstack 0
 45380  01BB14                     i2___lwdiv:
 45381                           	opt callstack 12
 45382                           
 45383                           ;incstack = 0
 45384  01BB14  0E00               	movlw	0
 45385  01BB16  6E0C               	movwf	i2___lwdiv@quotient+1,c
 45386  01BB18  0E00               	movlw	0
 45387  01BB1A  6E0B               	movwf	i2___lwdiv@quotient,c
 45388  01BB1C  5008               	movf	i2___lwdiv@divisor,w,c
 45389  01BB1E  1009               	iorwf	i2___lwdiv@divisor+1,w,c
 45390  01BB20  B4D8               	btfsc	status,2,c
 45391  01BB22  D01C               	goto	i2l3200
 45392  01BB24  0E01               	movlw	1
 45393  01BB26  6E0A               	movwf	i2___lwdiv@counter,c
 45394  01BB28  D004               	goto	i2l18942
 45395  01BB2A                     i2l18940:
 45396  01BB2A  90D8               	bcf	status,0,c
 45397  01BB2C  3608               	rlcf	i2___lwdiv@divisor,f,c
 45398  01BB2E  3609               	rlcf	i2___lwdiv@divisor+1,f,c
 45399  01BB30  2A0A               	incf	i2___lwdiv@counter,f,c
 45400  01BB32                     i2l18942:
 45401  01BB32  AE09               	btfss	i2___lwdiv@divisor+1,7,c
 45402  01BB34  D7FA               	goto	i2l18940
 45403  01BB36                     i2u2386_40:
 45404  01BB36  90D8               	bcf	status,0,c
 45405  01BB38  360B               	rlcf	i2___lwdiv@quotient,f,c
 45406  01BB3A  360C               	rlcf	i2___lwdiv@quotient+1,f,c
 45407  01BB3C  5008               	movf	i2___lwdiv@divisor,w,c
 45408  01BB3E  5C06               	subwf	i2___lwdiv@dividend,w,c
 45409  01BB40  5009               	movf	i2___lwdiv@divisor+1,w,c
 45410  01BB42  5807               	subwfb	i2___lwdiv@dividend+1,w,c
 45411  01BB44  A0D8               	btfss	status,0,c
 45412  01BB46  D005               	goto	i2l18952
 45413  01BB48  5008               	movf	i2___lwdiv@divisor,w,c
 45414  01BB4A  5E06               	subwf	i2___lwdiv@dividend,f,c
 45415  01BB4C  5009               	movf	i2___lwdiv@divisor+1,w,c
 45416  01BB4E  5A07               	subwfb	i2___lwdiv@dividend+1,f,c
 45417  01BB50  800B               	bsf	i2___lwdiv@quotient,0,c
 45418  01BB52                     i2l18952:
 45419  01BB52  90D8               	bcf	status,0,c
 45420  01BB54  3209               	rrcf	i2___lwdiv@divisor+1,f,c
 45421  01BB56  3208               	rrcf	i2___lwdiv@divisor,f,c
 45422  01BB58  2E0A               	decfsz	i2___lwdiv@counter,f,c
 45423  01BB5A  D7ED               	goto	i2u2386_40
 45424  01BB5C                     i2l3200:
 45425  01BB5C  C00B  F006         	movff	i2___lwdiv@quotient,?i2___lwdiv
 45426  01BB60  C00C  F007         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 45427  01BB64  0012               	return		;funcret
 45428  01BB66                     __end_ofi2___lwdiv:
 45429                           	opt callstack 0
 45430                           
 45431 ;; *************** function i2__tdiv_to_l_ *****************
 45432 ;; Defined at:
 45433 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
 45434 ;; Parameters:    Size  Location     Type
 45435 ;;  f1              4    0[COMRAM] float 
 45436 ;;  f2              4    4[COMRAM] float 
 45437 ;; Auto vars:     Size  Location     Type
 45438 ;;  _tdiv_to_l_     4   11[COMRAM] unsigned long 
 45439 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 45440 ;;  _tdiv_to_l_     1   15[COMRAM] unsigned char 
 45441 ;; Return value:  Size  Location     Type
 45442 ;;                  4    0[COMRAM] unsigned long 
 45443 ;; Registers used:
 45444 ;;		wreg, status,2, status,0
 45445 ;; Tracked objects:
 45446 ;;		On entry : 0/0
 45447 ;;		On exit  : 0/0
 45448 ;;		Unchanged: 0/0
 45449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45450 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45451 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45453 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45454 ;;Total ram usage:       17 bytes
 45455 ;; Hardware stack levels used:    1
 45456 ;; This function calls:
 45457 ;;		Nothing
 45458 ;; This function is called by:
 45459 ;;		i2__doprnt
 45460 ;; This function uses a non-reentrant model
 45461 ;;
 45462                           
 45463                           	psect	text190
 45464  01A2E8                     __ptext190:
 45465                           	opt callstack 0
 45466  01A2E8                     i2__tdiv_to_l_:
 45467                           	opt callstack 13
 45468                           
 45469                           ;incstack = 0
 45470  01A2E8  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 45471  01A2EC  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45472  01A2EE  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45473  01A2F0  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 45474  01A2F2  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45475  01A2F4  E301               	bnc	u2517_41
 45476  01A2F6  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45477  01A2F8                     u2517_41:
 45478  01A2F8  5009               	movf	??i2__tdiv_to_l_,w,c
 45479  01A2FA  6E11               	movwf	i2__tdiv_to_l_@exp1,c
 45480  01A2FC  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45481  01A2FE  A4D8               	btfss	status,2,c
 45482  01A300  D009               	goto	i2l19860
 45483  01A302                     i2u2518_40:
 45484  01A302  0E00               	movlw	0
 45485  01A304  6E01               	movwf	?i2__tdiv_to_l_,c
 45486  01A306  0E00               	movlw	0
 45487  01A308  6E02               	movwf	?i2__tdiv_to_l_+1,c
 45488  01A30A  0E00               	movlw	0
 45489  01A30C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 45490  01A30E  0E00               	movlw	0
 45491  01A310  6E04               	movwf	?i2__tdiv_to_l_+3,c
 45492  01A312  0012               	return	
 45493  01A314                     i2l19860:
 45494  01A314  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 45495  01A318  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 45496  01A31A  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 45497  01A31C  3406               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 45498  01A31E  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 45499  01A320  E301               	bnc	u2519_41
 45500  01A322  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 45501  01A324                     u2519_41:
 45502  01A324  5009               	movf	??i2__tdiv_to_l_,w,c
 45503  01A326  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45504  01A328  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45505  01A32A  B4D8               	btfsc	status,2,c
 45506  01A32C  D7EA               	goto	i2u2518_40
 45507  01A32E  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 45508  01A330  0EFF               	movlw	255
 45509  01A332  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 45510  01A334  0EFF               	movlw	255
 45511  01A336  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 45512  01A338  0E00               	movlw	0
 45513  01A33A  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 45514  01A33C  8E06               	bsf	i2__tdiv_to_l_@f2+1,7,c
 45515  01A33E  0EFF               	movlw	255
 45516  01A340  1605               	andwf	i2__tdiv_to_l_@f2,f,c
 45517  01A342  0EFF               	movlw	255
 45518  01A344  1606               	andwf	i2__tdiv_to_l_@f2+1,f,c
 45519  01A346  0E00               	movlw	0
 45520  01A348  1607               	andwf	i2__tdiv_to_l_@f2+2,f,c
 45521  01A34A  0E00               	movlw	0
 45522  01A34C  6E0C               	movwf	i2__tdiv_to_l_@quot,c
 45523  01A34E  0E00               	movlw	0
 45524  01A350  6E0D               	movwf	i2__tdiv_to_l_@quot+1,c
 45525  01A352  0E00               	movlw	0
 45526  01A354  6E0E               	movwf	i2__tdiv_to_l_@quot+2,c
 45527  01A356  0E00               	movlw	0
 45528  01A358  6E0F               	movwf	i2__tdiv_to_l_@quot+3,c
 45529  01A35A  0E7F               	movlw	127
 45530  01A35C  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45531  01A35E  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 45532  01A360  0F98               	addlw	152
 45533  01A362  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 45534  01A364  0E18               	movlw	24
 45535  01A366  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 45536  01A368                     i2l3052:
 45537  01A368  90D8               	bcf	status,0,c
 45538  01A36A  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45539  01A36C  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45540  01A36E  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45541  01A370  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45542  01A372  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45543  01A374  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 45544  01A376  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45545  01A378  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 45546  01A37A  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45547  01A37C  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 45548  01A37E  A0D8               	btfss	status,0,c
 45549  01A380  D007               	goto	i2l3053
 45550  01A382  5005               	movf	i2__tdiv_to_l_@f2,w,c
 45551  01A384  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 45552  01A386  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 45553  01A388  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 45554  01A38A  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 45555  01A38C  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 45556  01A38E  800C               	bsf	i2__tdiv_to_l_@quot,0,c
 45557  01A390                     i2l3053:
 45558  01A390  90D8               	bcf	status,0,c
 45559  01A392  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 45560  01A394  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 45561  01A396  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 45562  01A398  2E10               	decfsz	i2__tdiv_to_l_@cntr,f,c
 45563  01A39A  D7E6               	goto	i2l3052
 45564  01A39C  AE11               	btfss	i2__tdiv_to_l_@exp1,7,c
 45565  01A39E  D00D               	goto	i2l19900
 45566  01A3A0  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45567  01A3A2  0A80               	xorlw	128
 45568  01A3A4  0F97               	addlw	151
 45569  01A3A6  A0D8               	btfss	status,0,c
 45570  01A3A8  D7AC               	goto	i2u2518_40
 45571  01A3AA                     i2l19896:
 45572  01A3AA  90D8               	bcf	status,0,c
 45573  01A3AC  320F               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 45574  01A3AE  320E               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 45575  01A3B0  320D               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 45576  01A3B2  320C               	rrcf	i2__tdiv_to_l_@quot,f,c
 45577  01A3B4  3E11               	incfsz	i2__tdiv_to_l_@exp1,f,c
 45578  01A3B6  D7F9               	goto	i2l19896
 45579  01A3B8  D00D               	goto	i2u2525_40
 45580  01A3BA                     i2l19900:
 45581  01A3BA  0E17               	movlw	23
 45582  01A3BC  6411               	cpfsgt	i2__tdiv_to_l_@exp1,c
 45583  01A3BE  D007               	goto	i2l19908
 45584  01A3C0  D7A0               	goto	i2u2518_40
 45585  01A3C2                     i2l19906:
 45586  01A3C2  90D8               	bcf	status,0,c
 45587  01A3C4  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 45588  01A3C6  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 45589  01A3C8  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 45590  01A3CA  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 45591  01A3CC  0611               	decf	i2__tdiv_to_l_@exp1,f,c
 45592  01A3CE                     i2l19908:
 45593  01A3CE  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 45594  01A3D0  A4D8               	btfss	status,2,c
 45595  01A3D2  D7F7               	goto	i2l19906
 45596  01A3D4                     i2u2525_40:
 45597  01A3D4  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 45598  01A3D8  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 45599  01A3DC  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 45600  01A3E0  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 45601  01A3E4  0012               	return		;funcret
 45602  01A3E6                     __end_ofi2__tdiv_to_l_:
 45603                           	opt callstack 0
 45604                           
 45605 ;; *************** function i2__div_to_l_ *****************
 45606 ;; Defined at:
 45607 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
 45608 ;; Parameters:    Size  Location     Type
 45609 ;;  f1              4    0[COMRAM] unsigned long 
 45610 ;;  f2              4    4[COMRAM] unsigned long 
 45611 ;; Auto vars:     Size  Location     Type
 45612 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 45613 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 45614 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 45615 ;; Return value:  Size  Location     Type
 45616 ;;                  4    0[COMRAM] unsigned long 
 45617 ;; Registers used:
 45618 ;;		wreg, status,2, status,0
 45619 ;; Tracked objects:
 45620 ;;		On entry : 0/0
 45621 ;;		On exit  : 0/0
 45622 ;;		Unchanged: 0/0
 45623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45624 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45625 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45627 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45628 ;;Total ram usage:       14 bytes
 45629 ;; Hardware stack levels used:    1
 45630 ;; This function calls:
 45631 ;;		Nothing
 45632 ;; This function is called by:
 45633 ;;		i2__doprnt
 45634 ;; This function uses a non-reentrant model
 45635 ;;
 45636                           
 45637                           	psect	text191
 45638  01A4DC                     __ptext191:
 45639                           	opt callstack 0
 45640  01A4DC                     i2__div_to_l_:
 45641                           	opt callstack 13
 45642                           
 45643                           ;incstack = 0
 45644  01A4DC  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 45645  01A4DE  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 45646  01A4E0  6E0E               	movwf	i2__div_to_l_@exp1,c
 45647  01A4E2  500E               	movf	i2__div_to_l_@exp1,w,c
 45648  01A4E4  A4D8               	btfss	status,2,c
 45649  01A4E6  D009               	goto	i2l19710
 45650  01A4E8                     i2u2494_40:
 45651  01A4E8  0E00               	movlw	0
 45652  01A4EA  6E01               	movwf	?i2__div_to_l_,c
 45653  01A4EC  0E00               	movlw	0
 45654  01A4EE  6E02               	movwf	?i2__div_to_l_+1,c
 45655  01A4F0  0E00               	movlw	0
 45656  01A4F2  6E03               	movwf	?i2__div_to_l_+2,c
 45657  01A4F4  0E00               	movlw	0
 45658  01A4F6  6E04               	movwf	?i2__div_to_l_+3,c
 45659  01A4F8  0012               	return	
 45660  01A4FA                     i2l19710:
 45661  01A4FA  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 45662  01A4FC  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 45663  01A4FE  6E0D               	movwf	i2__div_to_l_@cntr,c
 45664  01A500  500D               	movf	i2__div_to_l_@cntr,w,c
 45665  01A502  B4D8               	btfsc	status,2,c
 45666  01A504  D7F1               	goto	i2u2494_40
 45667  01A506  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 45668  01A508  0EFF               	movlw	255
 45669  01A50A  1601               	andwf	i2__div_to_l_@f1,f,c
 45670  01A50C  0EFF               	movlw	255
 45671  01A50E  1602               	andwf	i2__div_to_l_@f1+1,f,c
 45672  01A510  0EFF               	movlw	255
 45673  01A512  1603               	andwf	i2__div_to_l_@f1+2,f,c
 45674  01A514  0E00               	movlw	0
 45675  01A516  1604               	andwf	i2__div_to_l_@f1+3,f,c
 45676  01A518  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 45677  01A51A  0EFF               	movlw	255
 45678  01A51C  1605               	andwf	i2__div_to_l_@f2,f,c
 45679  01A51E  0EFF               	movlw	255
 45680  01A520  1606               	andwf	i2__div_to_l_@f2+1,f,c
 45681  01A522  0EFF               	movlw	255
 45682  01A524  1607               	andwf	i2__div_to_l_@f2+2,f,c
 45683  01A526  0E00               	movlw	0
 45684  01A528  1608               	andwf	i2__div_to_l_@f2+3,f,c
 45685  01A52A  0E00               	movlw	0
 45686  01A52C  6E09               	movwf	i2__div_to_l_@quot,c
 45687  01A52E  0E00               	movlw	0
 45688  01A530  6E0A               	movwf	i2__div_to_l_@quot+1,c
 45689  01A532  0E00               	movlw	0
 45690  01A534  6E0B               	movwf	i2__div_to_l_@quot+2,c
 45691  01A536  0E00               	movlw	0
 45692  01A538  6E0C               	movwf	i2__div_to_l_@quot+3,c
 45693  01A53A  0E7F               	movlw	127
 45694  01A53C  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45695  01A53E  500D               	movf	i2__div_to_l_@cntr,w,c
 45696  01A540  0FA0               	addlw	160
 45697  01A542  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 45698  01A544  0E20               	movlw	32
 45699  01A546  6E0D               	movwf	i2__div_to_l_@cntr,c
 45700  01A548                     i2l19730:
 45701  01A548  90D8               	bcf	status,0,c
 45702  01A54A  3609               	rlcf	i2__div_to_l_@quot,f,c
 45703  01A54C  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45704  01A54E  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45705  01A550  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45706  01A552  5005               	movf	i2__div_to_l_@f2,w,c
 45707  01A554  5C01               	subwf	i2__div_to_l_@f1,w,c
 45708  01A556  5006               	movf	i2__div_to_l_@f2+1,w,c
 45709  01A558  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 45710  01A55A  5007               	movf	i2__div_to_l_@f2+2,w,c
 45711  01A55C  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 45712  01A55E  5008               	movf	i2__div_to_l_@f2+3,w,c
 45713  01A560  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 45714  01A562  A0D8               	btfss	status,0,c
 45715  01A564  D009               	goto	i2l19738
 45716  01A566  5005               	movf	i2__div_to_l_@f2,w,c
 45717  01A568  5E01               	subwf	i2__div_to_l_@f1,f,c
 45718  01A56A  5006               	movf	i2__div_to_l_@f2+1,w,c
 45719  01A56C  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 45720  01A56E  5007               	movf	i2__div_to_l_@f2+2,w,c
 45721  01A570  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 45722  01A572  5008               	movf	i2__div_to_l_@f2+3,w,c
 45723  01A574  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 45724  01A576  8009               	bsf	i2__div_to_l_@quot,0,c
 45725  01A578                     i2l19738:
 45726  01A578  90D8               	bcf	status,0,c
 45727  01A57A  3601               	rlcf	i2__div_to_l_@f1,f,c
 45728  01A57C  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 45729  01A57E  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 45730  01A580  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 45731  01A582  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 45732  01A584  D7E1               	goto	i2l19730
 45733  01A586  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 45734  01A588  D00D               	goto	i2l19754
 45735  01A58A  500E               	movf	i2__div_to_l_@exp1,w,c
 45736  01A58C  0A80               	xorlw	128
 45737  01A58E  0F9F               	addlw	159
 45738  01A590  A0D8               	btfss	status,0,c
 45739  01A592  D7AA               	goto	i2u2494_40
 45740  01A594                     i2l19750:
 45741  01A594  90D8               	bcf	status,0,c
 45742  01A596  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 45743  01A598  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 45744  01A59A  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 45745  01A59C  3209               	rrcf	i2__div_to_l_@quot,f,c
 45746  01A59E  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 45747  01A5A0  D7F9               	goto	i2l19750
 45748  01A5A2  D00D               	goto	i2u2500_40
 45749  01A5A4                     i2l19754:
 45750  01A5A4  0E1F               	movlw	31
 45751  01A5A6  640E               	cpfsgt	i2__div_to_l_@exp1,c
 45752  01A5A8  D007               	goto	i2l19762
 45753  01A5AA  D79E               	goto	i2u2494_40
 45754  01A5AC                     i2l19760:
 45755  01A5AC  90D8               	bcf	status,0,c
 45756  01A5AE  3609               	rlcf	i2__div_to_l_@quot,f,c
 45757  01A5B0  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 45758  01A5B2  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 45759  01A5B4  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 45760  01A5B6  060E               	decf	i2__div_to_l_@exp1,f,c
 45761  01A5B8                     i2l19762:
 45762  01A5B8  500E               	movf	i2__div_to_l_@exp1,w,c
 45763  01A5BA  A4D8               	btfss	status,2,c
 45764  01A5BC  D7F7               	goto	i2l19760
 45765  01A5BE                     i2u2500_40:
 45766  01A5BE  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 45767  01A5C2  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 45768  01A5C6  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 45769  01A5CA  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 45770  01A5CE  0012               	return		;funcret
 45771  01A5D0                     __end_ofi2__div_to_l_:
 45772                           	opt callstack 0
 45773                           
 45774 ;; *************** function i2___wmul *****************
 45775 ;; Defined at:
 45776 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 45777 ;; Parameters:    Size  Location     Type
 45778 ;;  multiplier      2    0[COMRAM] unsigned int 
 45779 ;;  multiplicand    2    2[COMRAM] unsigned int 
 45780 ;; Auto vars:     Size  Location     Type
 45781 ;;  __wmul          2    4[COMRAM] unsigned int 
 45782 ;; Return value:  Size  Location     Type
 45783 ;;                  2    0[COMRAM] unsigned int 
 45784 ;; Registers used:
 45785 ;;		wreg, status,2, status,0, prodl, prodh
 45786 ;; Tracked objects:
 45787 ;;		On entry : 0/0
 45788 ;;		On exit  : 0/0
 45789 ;;		Unchanged: 0/0
 45790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45795 ;;Total ram usage:        6 bytes
 45796 ;; Hardware stack levels used:    1
 45797 ;; This function calls:
 45798 ;;		Nothing
 45799 ;; This function is called by:
 45800 ;;		i2__doprnt
 45801 ;; This function uses a non-reentrant model
 45802 ;;
 45803                           
 45804                           	psect	text192
 45805  01C6C0                     __ptext192:
 45806                           	opt callstack 0
 45807  01C6C0                     i2___wmul:
 45808                           	opt callstack 13
 45809                           
 45810                           ;incstack = 0
 45811  01C6C0  5001               	movf	i2___wmul@multiplier,w,c
 45812  01C6C2  0203               	mulwf	i2___wmul@multiplicand,c
 45813  01C6C4  CFF3 F005          	movff	prodl,i2___wmul@product
 45814  01C6C8  CFF4 F006          	movff	prodh,i2___wmul@product+1
 45815  01C6CC  5001               	movf	i2___wmul@multiplier,w,c
 45816  01C6CE  0204               	mulwf	i2___wmul@multiplicand+1,c
 45817  01C6D0  50F3               	movf	prodl,w,c
 45818  01C6D2  2606               	addwf	i2___wmul@product+1,f,c
 45819  01C6D4  5002               	movf	i2___wmul@multiplier+1,w,c
 45820  01C6D6  0203               	mulwf	i2___wmul@multiplicand,c
 45821  01C6D8  50F3               	movf	prodl,w,c
 45822  01C6DA  2606               	addwf	i2___wmul@product+1,f,c
 45823  01C6DC  C005  F001         	movff	i2___wmul@product,?i2___wmul
 45824  01C6E0  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 45825  01C6E4  0012               	return		;funcret
 45826  01C6E6                     __end_ofi2___wmul:
 45827                           	opt callstack 0
 45828                           
 45829 ;; *************** function i2___llmod *****************
 45830 ;; Defined at:
 45831 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 45832 ;; Parameters:    Size  Location     Type
 45833 ;;  dividend        4   13[COMRAM] unsigned long 
 45834 ;;  divisor         4   17[COMRAM] unsigned long 
 45835 ;; Auto vars:     Size  Location     Type
 45836 ;;  __llmod         1   21[COMRAM] unsigned char 
 45837 ;; Return value:  Size  Location     Type
 45838 ;;                  4   13[COMRAM] unsigned long 
 45839 ;; Registers used:
 45840 ;;		wreg, status,2, status,0
 45841 ;; Tracked objects:
 45842 ;;		On entry : 0/0
 45843 ;;		On exit  : 0/0
 45844 ;;		Unchanged: 0/0
 45845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45849 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45850 ;;Total ram usage:        9 bytes
 45851 ;; Hardware stack levels used:    1
 45852 ;; This function calls:
 45853 ;;		Nothing
 45854 ;; This function is called by:
 45855 ;;		_heartbeatTimerHandler
 45856 ;;		i2__doprnt
 45857 ;; This function uses a non-reentrant model
 45858 ;;
 45859                           
 45860                           	psect	text193
 45861  01B7E0                     __ptext193:
 45862                           	opt callstack 0
 45863  01B7E0                     i2___llmod:
 45864                           	opt callstack 14
 45865                           
 45866                           ;incstack = 0
 45867  01B7E0  5012               	movf	i2___llmod@divisor,w,c
 45868  01B7E2  1013               	iorwf	i2___llmod@divisor+1,w,c
 45869  01B7E4  1014               	iorwf	i2___llmod@divisor+2,w,c
 45870  01B7E6  1015               	iorwf	i2___llmod@divisor+3,w,c
 45871  01B7E8  B4D8               	btfsc	status,2,c
 45872  01B7EA  D024               	goto	i2l3129
 45873  01B7EC  0E01               	movlw	1
 45874  01B7EE  6E16               	movwf	i2___llmod@counter,c
 45875  01B7F0  D006               	goto	i2l19916
 45876  01B7F2                     i2l19914:
 45877  01B7F2  90D8               	bcf	status,0,c
 45878  01B7F4  3612               	rlcf	i2___llmod@divisor,f,c
 45879  01B7F6  3613               	rlcf	i2___llmod@divisor+1,f,c
 45880  01B7F8  3614               	rlcf	i2___llmod@divisor+2,f,c
 45881  01B7FA  3615               	rlcf	i2___llmod@divisor+3,f,c
 45882  01B7FC  2A16               	incf	i2___llmod@counter,f,c
 45883  01B7FE                     i2l19916:
 45884  01B7FE  AE15               	btfss	i2___llmod@divisor+3,7,c
 45885  01B800  D7F8               	goto	i2l19914
 45886  01B802                     i2u2527_40:
 45887  01B802  5012               	movf	i2___llmod@divisor,w,c
 45888  01B804  5C0E               	subwf	i2___llmod@dividend,w,c
 45889  01B806  5013               	movf	i2___llmod@divisor+1,w,c
 45890  01B808  580F               	subwfb	i2___llmod@dividend+1,w,c
 45891  01B80A  5014               	movf	i2___llmod@divisor+2,w,c
 45892  01B80C  5810               	subwfb	i2___llmod@dividend+2,w,c
 45893  01B80E  5015               	movf	i2___llmod@divisor+3,w,c
 45894  01B810  5811               	subwfb	i2___llmod@dividend+3,w,c
 45895  01B812  A0D8               	btfss	status,0,c
 45896  01B814  D008               	goto	i2l19922
 45897  01B816  5012               	movf	i2___llmod@divisor,w,c
 45898  01B818  5E0E               	subwf	i2___llmod@dividend,f,c
 45899  01B81A  5013               	movf	i2___llmod@divisor+1,w,c
 45900  01B81C  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 45901  01B81E  5014               	movf	i2___llmod@divisor+2,w,c
 45902  01B820  5A10               	subwfb	i2___llmod@dividend+2,f,c
 45903  01B822  5015               	movf	i2___llmod@divisor+3,w,c
 45904  01B824  5A11               	subwfb	i2___llmod@dividend+3,f,c
 45905  01B826                     i2l19922:
 45906  01B826  90D8               	bcf	status,0,c
 45907  01B828  3215               	rrcf	i2___llmod@divisor+3,f,c
 45908  01B82A  3214               	rrcf	i2___llmod@divisor+2,f,c
 45909  01B82C  3213               	rrcf	i2___llmod@divisor+1,f,c
 45910  01B82E  3212               	rrcf	i2___llmod@divisor,f,c
 45911  01B830  2E16               	decfsz	i2___llmod@counter,f,c
 45912  01B832  D7E7               	goto	i2u2527_40
 45913  01B834                     i2l3129:
 45914  01B834  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 45915  01B838  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 45916  01B83C  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 45917  01B840  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 45918  01B844  0012               	return		;funcret
 45919  01B846                     __end_ofi2___llmod:
 45920                           	opt callstack 0
 45921                           
 45922 ;; *************** function i2___lldiv *****************
 45923 ;; Defined at:
 45924 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 45925 ;; Parameters:    Size  Location     Type
 45926 ;;  dividend        4    0[COMRAM] unsigned long 
 45927 ;;  divisor         4    4[COMRAM] unsigned long 
 45928 ;; Auto vars:     Size  Location     Type
 45929 ;;  __lldiv         4    8[COMRAM] unsigned long 
 45930 ;;  __lldiv         1   12[COMRAM] unsigned char 
 45931 ;; Return value:  Size  Location     Type
 45932 ;;                  4    0[COMRAM] unsigned long 
 45933 ;; Registers used:
 45934 ;;		wreg, status,2, status,0
 45935 ;; Tracked objects:
 45936 ;;		On entry : 0/0
 45937 ;;		On exit  : 0/0
 45938 ;;		Unchanged: 0/0
 45939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45940 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45941 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45943 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45944 ;;Total ram usage:       13 bytes
 45945 ;; Hardware stack levels used:    1
 45946 ;; This function calls:
 45947 ;;		Nothing
 45948 ;; This function is called by:
 45949 ;;		i2__doprnt
 45950 ;; This function uses a non-reentrant model
 45951 ;;
 45952                           
 45953                           	psect	text194
 45954  01B4E2                     __ptext194:
 45955                           	opt callstack 0
 45956  01B4E2                     i2___lldiv:
 45957                           	opt callstack 13
 45958                           
 45959                           ;incstack = 0
 45960  01B4E2  0E00               	movlw	0
 45961  01B4E4  6E09               	movwf	i2___lldiv@quotient,c
 45962  01B4E6  0E00               	movlw	0
 45963  01B4E8  6E0A               	movwf	i2___lldiv@quotient+1,c
 45964  01B4EA  0E00               	movlw	0
 45965  01B4EC  6E0B               	movwf	i2___lldiv@quotient+2,c
 45966  01B4EE  0E00               	movlw	0
 45967  01B4F0  6E0C               	movwf	i2___lldiv@quotient+3,c
 45968  01B4F2  5005               	movf	i2___lldiv@divisor,w,c
 45969  01B4F4  1006               	iorwf	i2___lldiv@divisor+1,w,c
 45970  01B4F6  1007               	iorwf	i2___lldiv@divisor+2,w,c
 45971  01B4F8  1008               	iorwf	i2___lldiv@divisor+3,w,c
 45972  01B4FA  B4D8               	btfsc	status,2,c
 45973  01B4FC  D02A               	goto	i2l2714
 45974  01B4FE  0E01               	movlw	1
 45975  01B500  6E0D               	movwf	i2___lldiv@counter,c
 45976  01B502  D006               	goto	i2l19690
 45977  01B504                     i2l19688:
 45978  01B504  90D8               	bcf	status,0,c
 45979  01B506  3605               	rlcf	i2___lldiv@divisor,f,c
 45980  01B508  3606               	rlcf	i2___lldiv@divisor+1,f,c
 45981  01B50A  3607               	rlcf	i2___lldiv@divisor+2,f,c
 45982  01B50C  3608               	rlcf	i2___lldiv@divisor+3,f,c
 45983  01B50E  2A0D               	incf	i2___lldiv@counter,f,c
 45984  01B510                     i2l19690:
 45985  01B510  AE08               	btfss	i2___lldiv@divisor+3,7,c
 45986  01B512  D7F8               	goto	i2l19688
 45987  01B514                     i2u2492_40:
 45988  01B514  90D8               	bcf	status,0,c
 45989  01B516  3609               	rlcf	i2___lldiv@quotient,f,c
 45990  01B518  360A               	rlcf	i2___lldiv@quotient+1,f,c
 45991  01B51A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 45992  01B51C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 45993  01B51E  5005               	movf	i2___lldiv@divisor,w,c
 45994  01B520  5C01               	subwf	i2___lldiv@dividend,w,c
 45995  01B522  5006               	movf	i2___lldiv@divisor+1,w,c
 45996  01B524  5802               	subwfb	i2___lldiv@dividend+1,w,c
 45997  01B526  5007               	movf	i2___lldiv@divisor+2,w,c
 45998  01B528  5803               	subwfb	i2___lldiv@dividend+2,w,c
 45999  01B52A  5008               	movf	i2___lldiv@divisor+3,w,c
 46000  01B52C  5804               	subwfb	i2___lldiv@dividend+3,w,c
 46001  01B52E  A0D8               	btfss	status,0,c
 46002  01B530  D009               	goto	i2l19700
 46003  01B532  5005               	movf	i2___lldiv@divisor,w,c
 46004  01B534  5E01               	subwf	i2___lldiv@dividend,f,c
 46005  01B536  5006               	movf	i2___lldiv@divisor+1,w,c
 46006  01B538  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 46007  01B53A  5007               	movf	i2___lldiv@divisor+2,w,c
 46008  01B53C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 46009  01B53E  5008               	movf	i2___lldiv@divisor+3,w,c
 46010  01B540  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 46011  01B542  8009               	bsf	i2___lldiv@quotient,0,c
 46012  01B544                     i2l19700:
 46013  01B544  90D8               	bcf	status,0,c
 46014  01B546  3208               	rrcf	i2___lldiv@divisor+3,f,c
 46015  01B548  3207               	rrcf	i2___lldiv@divisor+2,f,c
 46016  01B54A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 46017  01B54C  3205               	rrcf	i2___lldiv@divisor,f,c
 46018  01B54E  2E0D               	decfsz	i2___lldiv@counter,f,c
 46019  01B550  D7E1               	goto	i2u2492_40
 46020  01B552                     i2l2714:
 46021  01B552  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 46022  01B556  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 46023  01B55A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 46024  01B55E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 46025  01B562  0012               	return		;funcret
 46026  01B564                     __end_ofi2___lldiv:
 46027                           	opt callstack 0
 46028                           
 46029 ;; *************** function i2___fltol *****************
 46030 ;; Defined at:
 46031 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
 46032 ;; Parameters:    Size  Location     Type
 46033 ;;  f1              4   77[COMRAM] unsigned long 
 46034 ;; Auto vars:     Size  Location     Type
 46035 ;;  __fltol         1   86[COMRAM] unsigned char 
 46036 ;;  __fltol         1   85[COMRAM] unsigned char 
 46037 ;; Return value:  Size  Location     Type
 46038 ;;                  4   77[COMRAM] long 
 46039 ;; Registers used:
 46040 ;;		wreg, status,2, status,0
 46041 ;; Tracked objects:
 46042 ;;		On entry : 0/0
 46043 ;;		On exit  : 0/0
 46044 ;;		Unchanged: 0/0
 46045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46049 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46050 ;;Total ram usage:       10 bytes
 46051 ;; Hardware stack levels used:    1
 46052 ;; This function calls:
 46053 ;;		Nothing
 46054 ;; This function is called by:
 46055 ;;		i2__doprnt
 46056 ;; This function uses a non-reentrant model
 46057 ;;
 46058                           
 46059                           	psect	text195
 46060  01AC86                     __ptext195:
 46061                           	opt callstack 0
 46062  01AC86                     i2___fltol:
 46063                           	opt callstack 13
 46064                           
 46065                           ;incstack = 0
 46066  01AC86  3450               	rlcf	i2___fltol@f1+2,w,c
 46067  01AC88  3451               	rlcf	i2___fltol@f1+3,w,c
 46068  01AC8A  6E57               	movwf	i2___fltol@exp1,c
 46069  01AC8C  5057               	movf	i2___fltol@exp1,w,c
 46070  01AC8E  A4D8               	btfss	status,2,c
 46071  01AC90  D009               	goto	i2l19816
 46072  01AC92                     i2u2510_40:
 46073  01AC92  0E00               	movlw	0
 46074  01AC94  6E4E               	movwf	?i2___fltol,c
 46075  01AC96  0E00               	movlw	0
 46076  01AC98  6E4F               	movwf	?i2___fltol+1,c
 46077  01AC9A  0E00               	movlw	0
 46078  01AC9C  6E50               	movwf	?i2___fltol+2,c
 46079  01AC9E  0E00               	movlw	0
 46080  01ACA0  6E51               	movwf	?i2___fltol+3,c
 46081  01ACA2  0012               	return	
 46082  01ACA4                     i2l19816:
 46083  01ACA4  C04E  F052         	movff	i2___fltol@f1,??i2___fltol
 46084  01ACA8  C04F  F053         	movff	i2___fltol@f1+1,??i2___fltol+1
 46085  01ACAC  C050  F054         	movff	i2___fltol@f1+2,??i2___fltol+2
 46086  01ACB0  C051  F055         	movff	i2___fltol@f1+3,??i2___fltol+3
 46087  01ACB4  0E20               	movlw	32
 46088  01ACB6  D005               	goto	i2u2511_40
 46089  01ACB8                     i2u2511_45:
 46090  01ACB8  90D8               	bcf	status,0,c
 46091  01ACBA  3255               	rrcf	??i2___fltol+3,f,c
 46092  01ACBC  3254               	rrcf	??i2___fltol+2,f,c
 46093  01ACBE  3253               	rrcf	??i2___fltol+1,f,c
 46094  01ACC0  3252               	rrcf	??i2___fltol,f,c
 46095  01ACC2                     i2u2511_40:
 46096  01ACC2  2EE8               	decfsz	wreg,f,c
 46097  01ACC4  D7F9               	goto	i2u2511_45
 46098  01ACC6  5052               	movf	??i2___fltol,w,c
 46099  01ACC8  6E56               	movwf	i2___fltol@sign1,c
 46100  01ACCA  8E50               	bsf	i2___fltol@f1+2,7,c
 46101  01ACCC  0EFF               	movlw	255
 46102  01ACCE  164E               	andwf	i2___fltol@f1,f,c
 46103  01ACD0  0EFF               	movlw	255
 46104  01ACD2  164F               	andwf	i2___fltol@f1+1,f,c
 46105  01ACD4  0EFF               	movlw	255
 46106  01ACD6  1650               	andwf	i2___fltol@f1+2,f,c
 46107  01ACD8  0E00               	movlw	0
 46108  01ACDA  1651               	andwf	i2___fltol@f1+3,f,c
 46109  01ACDC  0E96               	movlw	150
 46110  01ACDE  5E57               	subwf	i2___fltol@exp1,f,c
 46111  01ACE0  AE57               	btfss	i2___fltol@exp1,7,c
 46112  01ACE2  D00D               	goto	i2l19836
 46113  01ACE4  5057               	movf	i2___fltol@exp1,w,c
 46114  01ACE6  0A80               	xorlw	128
 46115  01ACE8  0F97               	addlw	151
 46116  01ACEA  A0D8               	btfss	status,0,c
 46117  01ACEC  D7D2               	goto	i2u2510_40
 46118  01ACEE                     i2l19832:
 46119  01ACEE  90D8               	bcf	status,0,c
 46120  01ACF0  3251               	rrcf	i2___fltol@f1+3,f,c
 46121  01ACF2  3250               	rrcf	i2___fltol@f1+2,f,c
 46122  01ACF4  324F               	rrcf	i2___fltol@f1+1,f,c
 46123  01ACF6  324E               	rrcf	i2___fltol@f1,f,c
 46124  01ACF8  3E57               	incfsz	i2___fltol@exp1,f,c
 46125  01ACFA  D7F9               	goto	i2l19832
 46126  01ACFC  D00D               	goto	i2u2515_40
 46127  01ACFE                     i2l19836:
 46128  01ACFE  0E1F               	movlw	31
 46129  01AD00  6457               	cpfsgt	i2___fltol@exp1,c
 46130  01AD02  D007               	goto	i2l19844
 46131  01AD04  D7C6               	goto	i2u2510_40
 46132  01AD06                     i2l19842:
 46133  01AD06  90D8               	bcf	status,0,c
 46134  01AD08  364E               	rlcf	i2___fltol@f1,f,c
 46135  01AD0A  364F               	rlcf	i2___fltol@f1+1,f,c
 46136  01AD0C  3650               	rlcf	i2___fltol@f1+2,f,c
 46137  01AD0E  3651               	rlcf	i2___fltol@f1+3,f,c
 46138  01AD10  0657               	decf	i2___fltol@exp1,f,c
 46139  01AD12                     i2l19844:
 46140  01AD12  5057               	movf	i2___fltol@exp1,w,c
 46141  01AD14  A4D8               	btfss	status,2,c
 46142  01AD16  D7F7               	goto	i2l19842
 46143  01AD18                     i2u2515_40:
 46144  01AD18  5056               	movf	i2___fltol@sign1,w,c
 46145  01AD1A  B4D8               	btfsc	status,2,c
 46146  01AD1C  D008               	goto	i2l19850
 46147  01AD1E  1E51               	comf	i2___fltol@f1+3,f,c
 46148  01AD20  1E50               	comf	i2___fltol@f1+2,f,c
 46149  01AD22  1E4F               	comf	i2___fltol@f1+1,f,c
 46150  01AD24  6C4E               	negf	i2___fltol@f1,c
 46151  01AD26  0E00               	movlw	0
 46152  01AD28  224F               	addwfc	i2___fltol@f1+1,f,c
 46153  01AD2A  2250               	addwfc	i2___fltol@f1+2,f,c
 46154  01AD2C  2251               	addwfc	i2___fltol@f1+3,f,c
 46155  01AD2E                     i2l19850:
 46156  01AD2E  C04E  F04E         	movff	i2___fltol@f1,?i2___fltol
 46157  01AD32  C04F  F04F         	movff	i2___fltol@f1+1,?i2___fltol+1
 46158  01AD36  C050  F050         	movff	i2___fltol@f1+2,?i2___fltol+2
 46159  01AD3A  C051  F051         	movff	i2___fltol@f1+3,?i2___fltol+3
 46160  01AD3E  0012               	return		;funcret
 46161  01AD40                     __end_ofi2___fltol:
 46162                           	opt callstack 0
 46163                           
 46164 ;; *************** function i2___fleq *****************
 46165 ;; Defined at:
 46166 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
 46167 ;; Parameters:    Size  Location     Type
 46168 ;;  ff1             4    0[COMRAM] long 
 46169 ;;  ff2             4    4[COMRAM] long 
 46170 ;; Auto vars:     Size  Location     Type
 46171 ;;		None
 46172 ;; Return value:  Size  Location     Type
 46173 ;;		None               void
 46174 ;; Registers used:
 46175 ;;		wreg, status,2, status,0
 46176 ;; Tracked objects:
 46177 ;;		On entry : 0/0
 46178 ;;		On exit  : 0/0
 46179 ;;		Unchanged: 0/0
 46180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46181 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46184 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46185 ;;Total ram usage:       12 bytes
 46186 ;; Hardware stack levels used:    1
 46187 ;; This function calls:
 46188 ;;		Nothing
 46189 ;; This function is called by:
 46190 ;;		i2__doprnt
 46191 ;; This function uses a non-reentrant model
 46192 ;;
 46193                           
 46194                           	psect	text196
 46195  01B2CA                     __ptext196:
 46196                           	opt callstack 0
 46197  01B2CA                     i2___fleq:
 46198                           	opt callstack 13
 46199                           
 46200                           ;incstack = 0
 46201  01B2CA  0E00               	movlw	0
 46202  01B2CC  1401               	andwf	i2___fleq@ff1,w,c
 46203  01B2CE  6E09               	movwf	??i2___fleq& (0+255),c
 46204  01B2D0  0E00               	movlw	0
 46205  01B2D2  1402               	andwf	i2___fleq@ff1+1,w,c
 46206  01B2D4  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 46207  01B2D6  0E80               	movlw	128
 46208  01B2D8  1403               	andwf	i2___fleq@ff1+2,w,c
 46209  01B2DA  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 46210  01B2DC  0E7F               	movlw	127
 46211  01B2DE  1404               	andwf	i2___fleq@ff1+3,w,c
 46212  01B2E0  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 46213  01B2E2  5009               	movf	??i2___fleq,w,c
 46214  01B2E4  100A               	iorwf	??i2___fleq+1,w,c
 46215  01B2E6  100B               	iorwf	??i2___fleq+2,w,c
 46216  01B2E8  100C               	iorwf	??i2___fleq+3,w,c
 46217  01B2EA  A4D8               	btfss	status,2,c
 46218  01B2EC  D008               	goto	i2l19768
 46219  01B2EE  0E00               	movlw	0
 46220  01B2F0  6E01               	movwf	i2___fleq@ff1,c
 46221  01B2F2  0E00               	movlw	0
 46222  01B2F4  6E02               	movwf	i2___fleq@ff1+1,c
 46223  01B2F6  0E00               	movlw	0
 46224  01B2F8  6E03               	movwf	i2___fleq@ff1+2,c
 46225  01B2FA  0E00               	movlw	0
 46226  01B2FC  6E04               	movwf	i2___fleq@ff1+3,c
 46227  01B2FE                     i2l19768:
 46228  01B2FE  0E00               	movlw	0
 46229  01B300  1405               	andwf	i2___fleq@ff2,w,c
 46230  01B302  6E09               	movwf	??i2___fleq& (0+255),c
 46231  01B304  0E00               	movlw	0
 46232  01B306  1406               	andwf	i2___fleq@ff2+1,w,c
 46233  01B308  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 46234  01B30A  0E80               	movlw	128
 46235  01B30C  1407               	andwf	i2___fleq@ff2+2,w,c
 46236  01B30E  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 46237  01B310  0E7F               	movlw	127
 46238  01B312  1408               	andwf	i2___fleq@ff2+3,w,c
 46239  01B314  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 46240  01B316  5009               	movf	??i2___fleq,w,c
 46241  01B318  100A               	iorwf	??i2___fleq+1,w,c
 46242  01B31A  100B               	iorwf	??i2___fleq+2,w,c
 46243  01B31C  100C               	iorwf	??i2___fleq+3,w,c
 46244  01B31E  A4D8               	btfss	status,2,c
 46245  01B320  D008               	goto	i2l19772
 46246  01B322  0E00               	movlw	0
 46247  01B324  6E05               	movwf	i2___fleq@ff2,c
 46248  01B326  0E00               	movlw	0
 46249  01B328  6E06               	movwf	i2___fleq@ff2+1,c
 46250  01B32A  0E00               	movlw	0
 46251  01B32C  6E07               	movwf	i2___fleq@ff2+2,c
 46252  01B32E  0E00               	movlw	0
 46253  01B330  6E08               	movwf	i2___fleq@ff2+3,c
 46254  01B332                     i2l19772:
 46255  01B332  5005               	movf	i2___fleq@ff2,w,c
 46256  01B334  1801               	xorwf	i2___fleq@ff1,w,c
 46257  01B336  E10A               	bnz	i2u2503_40
 46258  01B338  5006               	movf	i2___fleq@ff2+1,w,c
 46259  01B33A  1802               	xorwf	i2___fleq@ff1+1,w,c
 46260  01B33C  E107               	bnz	i2u2503_40
 46261  01B33E  5007               	movf	i2___fleq@ff2+2,w,c
 46262  01B340  1803               	xorwf	i2___fleq@ff1+2,w,c
 46263  01B342  E104               	bnz	i2u2503_40
 46264  01B344  5008               	movf	i2___fleq@ff2+3,w,c
 46265  01B346  1804               	xorwf	i2___fleq@ff1+3,w,c
 46266  01B348  B4D8               	btfsc	status,2,c
 46267  01B34A  D002               	goto	i2l19776
 46268  01B34C                     i2u2503_40:
 46269  01B34C  90D8               	bcf	status,0,c
 46270  01B34E  0012               	return	
 46271  01B350                     i2l19776:
 46272  01B350  80D8               	bsf	status,0,c
 46273  01B352  0012               	return		;funcret
 46274  01B354                     __end_ofi2___fleq:
 46275                           	opt callstack 0
 46276                           
 46277 ;; *************** function _ADCC_ThresholdISR *****************
 46278 ;; Defined at:
 46279 ;;		line 298 in file "mcc_generated_files/adcc.c"
 46280 ;; Parameters:    Size  Location     Type
 46281 ;;		None
 46282 ;; Auto vars:     Size  Location     Type
 46283 ;;		None
 46284 ;; Return value:  Size  Location     Type
 46285 ;;                  1    wreg      void 
 46286 ;; Registers used:
 46287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 46288 ;; Tracked objects:
 46289 ;;		On entry : 0/0
 46290 ;;		On exit  : 0/0
 46291 ;;		Unchanged: 0/0
 46292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46297 ;;Total ram usage:        0 bytes
 46298 ;; Hardware stack levels used:    1
 46299 ;; Hardware stack levels required when called:    3
 46300 ;; This function calls:
 46301 ;;		Absolute function
 46302 ;;		_ADCC_DefaultInterruptHandler
 46303 ;;		_ADC_PostProcessingHandler
 46304 ;; This function is called by:
 46305 ;;		_INTERRUPT_InterruptManagerHigh
 46306 ;; This function uses a non-reentrant model
 46307 ;;
 46308                           
 46309                           	psect	text197
 46310  01C672                     __ptext197:
 46311                           	opt callstack 0
 46312  01C672                     _ADCC_ThresholdISR:
 46313                           	opt callstack 13
 46314                           
 46315                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 46316                           
 46317                           ;incstack = 0
 46318  01C672  010E               	movlb	14	; () banked
 46319  01C674  93CB               	bcf	203,1,b	;volatile
 46320                           
 46321                           ; BSR set to: 14
 46322                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 46323  01C676  0100               	movlb	0	; () banked
 46324  01C678  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 46325  01C67A  11CD               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 46326  01C67C  11CE               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 46327  01C67E  B4D8               	btfsc	status,2,c
 46328  01C680  0012               	return	
 46329                           
 46330                           ; BSR set to: 0
 46331                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 46332  01C682  D801               	call	i2u2762_48
 46333  01C684  0012               	return	
 46334  01C686                     i2u2762_48:
 46335  01C686  0005               	push	
 46336  01C688  6EFA               	movwf	pclath,c
 46337  01C68A  51CC               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 46338  01C68C  6EFD               	movwf	tosl,c
 46339  01C68E  51CD               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 46340  01C690  6EFE               	movwf	tosh,c
 46341  01C692  51CE               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 46342  01C694  6EFF               	movwf	tosu,c
 46343  01C696  50FA               	movf	pclath,w,c
 46344  01C698  0012               	return		;indir
 46345  01C69A                     __end_of_ADCC_ThresholdISR:
 46346                           	opt callstack 0
 46347                           
 46348 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 46349 ;; Defined at:
 46350 ;;		line 310 in file "mcc_generated_files/adcc.c"
 46351 ;; Parameters:    Size  Location     Type
 46352 ;;		None
 46353 ;; Auto vars:     Size  Location     Type
 46354 ;;		None
 46355 ;; Return value:  Size  Location     Type
 46356 ;;                  1    wreg      void 
 46357 ;; Registers used:
 46358 ;;		None
 46359 ;; Tracked objects:
 46360 ;;		On entry : 0/0
 46361 ;;		On exit  : 0/0
 46362 ;;		Unchanged: 0/0
 46363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46368 ;;Total ram usage:        0 bytes
 46369 ;; Hardware stack levels used:    1
 46370 ;; This function calls:
 46371 ;;		Nothing
 46372 ;; This function is called by:
 46373 ;;		_ADCC_Initialize
 46374 ;;		_ADCC_ThresholdISR
 46375 ;; This function uses a non-reentrant model
 46376 ;;
 46377                           
 46378                           	psect	text198
 46379  01CC4A                     __ptext198:
 46380                           	opt callstack 0
 46381  01CC4A                     _ADCC_DefaultInterruptHandler:
 46382                           	opt callstack 15
 46383                           
 46384                           ;incstack = 0
 46385  01CC4A  0012               	return		;funcret
 46386  01CC4C                     __end_of_ADCC_DefaultInterruptHandler:
 46387                           	opt callstack 0
 46388                           
 46389 ;; *************** function _ADC_PostProcessingHandler *****************
 46390 ;; Defined at:
 46391 ;;		line 13 in file "adc_postprocessing.c"
 46392 ;; Parameters:    Size  Location     Type
 46393 ;;		None
 46394 ;; Auto vars:     Size  Location     Type
 46395 ;;  i               1   26[BANK0 ] unsigned char 
 46396 ;;  i               1   25[BANK0 ] unsigned char 
 46397 ;;  current_adc_    1   24[BANK0 ] enum E9492
 46398 ;; Return value:  Size  Location     Type
 46399 ;;                  1    wreg      void 
 46400 ;; Registers used:
 46401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46402 ;; Tracked objects:
 46403 ;;		On entry : 0/0
 46404 ;;		On exit  : 0/0
 46405 ;;		Unchanged: 0/0
 46406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46408 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46410 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46411 ;;Total ram usage:       23 bytes
 46412 ;; Hardware stack levels used:    1
 46413 ;; Hardware stack levels required when called:    2
 46414 ;; This function calls:
 46415 ;;		_ADCC_GetConversionResult
 46416 ;;		_ADCC_GetCurrentCountofConversions
 46417 ;;		_ADCC_GetFilterValue
 46418 ;;		_ADCC_HasAccumulatorOverflowed
 46419 ;;		_ADCC_StopConversion
 46420 ;;		_TMR2_StartTimer
 46421 ;;		_fabs
 46422 ;;		i2___fladd
 46423 ;;		i2___fldiv
 46424 ;;		i2___flge
 46425 ;;		i2___flmul
 46426 ;;		i2___flsub
 46427 ;;		i2___xxtofl
 46428 ;; This function is called by:
 46429 ;;		_main
 46430 ;;		_ADCC_ThresholdISR
 46431 ;; This function uses a non-reentrant model
 46432 ;;
 46433                           
 46434                           	psect	text199
 46435  014082                     __ptext199:
 46436                           	opt callstack 0
 46437  014082                     _ADC_PostProcessingHandler:
 46438                           	opt callstack 13
 46439                           
 46440                           ;adc_postprocessing.c: 16: ADCC_StopConversion();
 46441                           
 46442                           ;incstack = 0
 46443  014082  EC18  F0E6         	call	_ADCC_StopConversion	;wreg free
 46444                           
 46445                           ;adc_postprocessing.c: 19: adcc_channel_t current_adc_channel = ADPCH;
 46446  014086  CF5F F078          	movff	3935,ADC_PostProcessingHandler@current_adc_channel	;volatile
 46447                           
 46448                           ;adc_postprocessing.c: 22: switch (current_adc_channel) {
 46449  01408A  EF52  F0A4         	goto	i2l21214
 46450  01408E                     i2l21130:
 46451                           
 46452                           ; BSR set to: 0
 46453                           ;adc_postprocessing.c: 26: adc_results.avss_adc_result = (ADCC_GetConversionResult()) * 
      +                          (5.0/1023.0);
 46454  01408E  EC12  F0E5         	call	_ADCC_GetConversionResult	;wreg free
 46455  014092  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46456  014096  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46457  01409A  6A07               	clrf	i2___xxtofl@val+2,c
 46458  01409C  6A08               	clrf	i2___xxtofl@val+3,c
 46459  01409E  0E00               	movlw	0
 46460  0140A0  ECC3  F0CF         	call	i2___xxtofl
 46461  0140A4  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46462  0140A8  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46463  0140AC  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46464  0140B0  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46465  0140B4  0E0A               	movlw	10
 46466  0140B6  6E30               	movwf	i2___flmul@a,c
 46467  0140B8  0E28               	movlw	40
 46468  0140BA  6E31               	movwf	i2___flmul@a+1,c
 46469  0140BC  0EA0               	movlw	160
 46470  0140BE  6E32               	movwf	i2___flmul@a+2,c
 46471  0140C0  0E3B               	movlw	59
 46472  0140C2  6E33               	movwf	i2___flmul@a+3,c
 46473  0140C4  EC94  F0B8         	call	i2___flmul	;wreg free
 46474  0140C8  C02C  F0DD         	movff	?i2___flmul,_adc_results
 46475  0140CC  C02D  F0DE         	movff	?i2___flmul+1,_adc_results+1
 46476  0140D0  C02E  F0DF         	movff	?i2___flmul+2,_adc_results+2
 46477  0140D4  C02F  F0E0         	movff	?i2___flmul+3,_adc_results+3
 46478                           
 46479                           ;adc_postprocessing.c: 28: next_adc_channel = channel_FVR_buf1;
 46480  0140D8  0E3F               	movlw	63
 46481  0140DA  D3DE               	goto	L51
 46482  0140DC                     i2l21134:
 46483                           
 46484                           ; BSR set to: 0
 46485                           ;adc_postprocessing.c: 35: adc_results.fvr_adc_result = (ADCC_GetConversionResult()) * (
      +                          5.0/1023.0) + adc_results.avss_adc_result;
 46486  0140DC  0E0A               	movlw	10
 46487  0140DE  6E30               	movwf	i2___flmul@a,c
 46488  0140E0  0E28               	movlw	40
 46489  0140E2  6E31               	movwf	i2___flmul@a+1,c
 46490  0140E4  0EA0               	movlw	160
 46491  0140E6  6E32               	movwf	i2___flmul@a+2,c
 46492  0140E8  0E3B               	movlw	59
 46493  0140EA  6E33               	movwf	i2___flmul@a+3,c
 46494  0140EC  EC12  F0E5         	call	_ADCC_GetConversionResult	;wreg free
 46495  0140F0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 46496  0140F4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 46497  0140F8  6A07               	clrf	i2___xxtofl@val+2,c
 46498  0140FA  6A08               	clrf	i2___xxtofl@val+3,c
 46499  0140FC  0E00               	movlw	0
 46500  0140FE  ECC3  F0CF         	call	i2___xxtofl
 46501  014102  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46502  014106  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46503  01410A  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46504  01410E  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46505  014112  EC94  F0B8         	call	i2___flmul	;wreg free
 46506  014116  C02C  F052         	movff	?i2___flmul,i2___fladd@b
 46507  01411A  C02D  F053         	movff	?i2___flmul+1,i2___fladd@b+1
 46508  01411E  C02E  F054         	movff	?i2___flmul+2,i2___fladd@b+2
 46509  014122  C02F  F055         	movff	?i2___flmul+3,i2___fladd@b+3
 46510  014126  C0DD  F056         	movff	_adc_results,i2___fladd@a
 46511  01412A  C0DE  F057         	movff	_adc_results+1,i2___fladd@a+1
 46512  01412E  C0DF  F058         	movff	_adc_results+2,i2___fladd@a+2
 46513  014132  C0E0  F059         	movff	_adc_results+3,i2___fladd@a+3
 46514  014136  EC4B  F0BD         	call	i2___fladd	;wreg free
 46515  01413A  C052  F0E1         	movff	?i2___fladd,_adc_results+4
 46516  01413E  C053  F0E2         	movff	?i2___fladd+1,_adc_results+5
 46517  014142  C054  F0E3         	movff	?i2___fladd+2,_adc_results+6
 46518  014146  C055  F0E4         	movff	?i2___fladd+3,_adc_results+7
 46519                           
 46520                           ;adc_postprocessing.c: 36: adc_result_scaling = 4.096/adc_results.fvr_adc_result;
 46521  01414A  0E6F               	movlw	111
 46522  01414C  6E13               	movwf	i2___fldiv@b,c
 46523  01414E  0E12               	movlw	18
 46524  014150  6E14               	movwf	i2___fldiv@b+1,c
 46525  014152  0E83               	movlw	131
 46526  014154  6E15               	movwf	i2___fldiv@b+2,c
 46527  014156  0E40               	movlw	64
 46528  014158  6E16               	movwf	i2___fldiv@b+3,c
 46529  01415A  C0E1  F017         	movff	_adc_results+4,i2___fldiv@a
 46530  01415E  C0E2  F018         	movff	_adc_results+5,i2___fldiv@a+1
 46531  014162  C0E3  F019         	movff	_adc_results+6,i2___fldiv@a+2
 46532  014166  C0E4  F01A         	movff	_adc_results+7,i2___fldiv@a+3
 46533  01416A  EC7E  F0C5         	call	i2___fldiv	;wreg free
 46534  01416E  C013  F0C1         	movff	?i2___fldiv,_adc_result_scaling
 46535  014172  C014  F0C2         	movff	?i2___fldiv+1,_adc_result_scaling+1
 46536  014176  C015  F0C3         	movff	?i2___fldiv+2,_adc_result_scaling+2
 46537  01417A  C016  F0C4         	movff	?i2___fldiv+3,_adc_result_scaling+3
 46538                           
 46539                           ;adc_postprocessing.c: 38: if (adc_results.fvr_adc_result > 5.0 || adc_results.fvr_adc_r
      +                          esult < 3.9) {
 46540  01417E  0E00               	movlw	0
 46541  014180  6E01               	movwf	i2___flge@ff1,c
 46542  014182  0E00               	movlw	0
 46543  014184  6E02               	movwf	i2___flge@ff1+1,c
 46544  014186  0EA0               	movlw	160
 46545  014188  6E03               	movwf	i2___flge@ff1+2,c
 46546  01418A  0E40               	movlw	64
 46547  01418C  6E04               	movwf	i2___flge@ff1+3,c
 46548  01418E  C0E1  F005         	movff	_adc_results+4,i2___flge@ff2
 46549  014192  C0E2  F006         	movff	_adc_results+5,i2___flge@ff2+1
 46550  014196  C0E3  F007         	movff	_adc_results+6,i2___flge@ff2+2
 46551  01419A  C0E4  F008         	movff	_adc_results+7,i2___flge@ff2+3
 46552  01419E  ECB6  F0D4         	call	i2___flge	;wreg free
 46553  0141A2  A0D8               	btfss	status,0,c
 46554  0141A4  D014               	goto	i2u2715_40
 46555  0141A6  C0E1  F001         	movff	_adc_results+4,i2___flge@ff1
 46556  0141AA  C0E2  F002         	movff	_adc_results+5,i2___flge@ff1+1
 46557  0141AE  C0E3  F003         	movff	_adc_results+6,i2___flge@ff1+2
 46558  0141B2  C0E4  F004         	movff	_adc_results+7,i2___flge@ff1+3
 46559  0141B6  0E9A               	movlw	154
 46560  0141B8  6E05               	movwf	i2___flge@ff2,c
 46561  0141BA  0E99               	movlw	153
 46562  0141BC  6E06               	movwf	i2___flge@ff2+1,c
 46563  0141BE  0E79               	movlw	121
 46564  0141C0  6E07               	movwf	i2___flge@ff2+2,c
 46565  0141C2  0E40               	movlw	64
 46566  0141C4  6E08               	movwf	i2___flge@ff2+3,c
 46567  0141C6  ECB6  F0D4         	call	i2___flge	;wreg free
 46568  0141CA  B0D8               	btfsc	status,0,c
 46569  0141CC  D003               	goto	i2l1581
 46570  0141CE                     i2u2715_40:
 46571                           
 46572                           ;adc_postprocessing.c: 40: error_handler.FVR_ADC_error_flag = 1;
 46573  0141CE  0E01               	movlw	1
 46574  0141D0  0100               	movlb	0	; () banked
 46575  0141D2  6FB9               	movwf	_error_handler& (0+255),b
 46576  0141D4                     i2l1581:
 46577                           
 46578                           ;adc_postprocessing.c: 42: };adc_postprocessing.c: 44: next_adc_channel = POS5_ADC;
 46579  0141D4  0E04               	movlw	4
 46580  0141D6  D360               	goto	L51
 46581  0141D8                     i2l21144:
 46582                           
 46583                           ; BSR set to: 0
 46584                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46585  0141D8  0E0A               	movlw	10
 46586  0141DA  6E30               	movwf	i2___flmul@a,c
 46587  0141DC  0E28               	movlw	40
 46588  0141DE  6E31               	movwf	i2___flmul@a+1,c
 46589  0141E0  0EA0               	movlw	160
 46590  0141E2  6E32               	movwf	i2___flmul@a+2,c
 46591  0141E4  0E3B               	movlw	59
 46592  0141E6  6E33               	movwf	i2___flmul@a+3,c
 46593  0141E8  EC08  F0E5         	call	_ADCC_GetFilterValue	;wreg free
 46594  0141EC  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46595  0141F0  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46596  0141F4  6A07               	clrf	i2___xxtofl@val+2,c
 46597  0141F6  6A08               	clrf	i2___xxtofl@val+3,c
 46598  0141F8  0E00               	movlw	0
 46599  0141FA  ECC3  F0CF         	call	i2___xxtofl
 46600  0141FE  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46601  014202  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46602  014206  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46603  01420A  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46604  01420E  EC94  F0B8         	call	i2___flmul	;wreg free
 46605  014212  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6426
 46606  014216  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6426+1
 46607  01421A  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6426+2
 46608  01421E  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6426+3
 46609                           
 46610                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46611  014222  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46612  014226  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46613  01422A  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46614  01422E  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46615  014232  0E00               	movlw	0
 46616  014234  6E30               	movwf	i2___flmul@a,c
 46617  014236  0E00               	movlw	0
 46618  014238  6E31               	movwf	i2___flmul@a+1,c
 46619  01423A  0E00               	movlw	0
 46620  01423C  6E32               	movwf	i2___flmul@a+2,c
 46621  01423E  0E40               	movlw	64
 46622  014240  6E33               	movwf	i2___flmul@a+3,c
 46623  014242  C07B  F02C         	movff	_ADC_PostProcessingHandler$6426,i2___flmul@b
 46624  014246  C07C  F02D         	movff	_ADC_PostProcessingHandler$6426+1,i2___flmul@b+1
 46625  01424A  C07D  F02E         	movff	_ADC_PostProcessingHandler$6426+2,i2___flmul@b+2
 46626  01424E  C07E  F02F         	movff	_ADC_PostProcessingHandler$6426+3,i2___flmul@b+3
 46627  014252  EC94  F0B8         	call	i2___flmul	;wreg free
 46628  014256  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46629  01425A  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46630  01425E  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46631  014262  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46632  014266  ECE7  F0DE         	call	i2___flsub	;wreg free
 46633  01426A  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6427
 46634  01426E  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6427+1
 46635  014272  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6427+2
 46636  014276  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6427+3
 46637                           
 46638                           ;adc_postprocessing.c: 49: adc_results.pos5_adc_result = (((ADCC_GetFilterValue()) * (5.
      +                          0/1023.0)) * 2.0 - adc_results.avss_adc_result) * adc_result_scaling;
 46639  01427A  C07F  F02C         	movff	_ADC_PostProcessingHandler$6427,i2___flmul@b
 46640  01427E  C080  F02D         	movff	_ADC_PostProcessingHandler$6427+1,i2___flmul@b+1
 46641  014282  C081  F02E         	movff	_ADC_PostProcessingHandler$6427+2,i2___flmul@b+2
 46642  014286  C082  F02F         	movff	_ADC_PostProcessingHandler$6427+3,i2___flmul@b+3
 46643  01428A  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46644  01428E  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46645  014292  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46646  014296  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46647  01429A  EC94  F0B8         	call	i2___flmul	;wreg free
 46648  01429E  C02C  F0E5         	movff	?i2___flmul,_adc_results+8
 46649  0142A2  C02D  F0E6         	movff	?i2___flmul+1,_adc_results+9
 46650  0142A6  C02E  F0E7         	movff	?i2___flmul+2,_adc_results+10
 46651  0142AA  C02F  F0E8         	movff	?i2___flmul+3,_adc_results+11
 46652                           
 46653                           ;adc_postprocessing.c: 51: next_adc_channel = POS12_ADC;
 46654  0142AE  0E00               	movlw	0
 46655  0142B0  D2F3               	goto	L51
 46656  0142B2                     i2l21148:
 46657                           
 46658                           ; BSR set to: 0
 46659                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46660  0142B2  0E00               	movlw	0
 46661  0142B4  6E17               	movwf	i2___fldiv@a,c
 46662  0142B6  0EC0               	movlw	192
 46663  0142B8  6E18               	movwf	i2___fldiv@a+1,c
 46664  0142BA  0E7F               	movlw	127
 46665  0142BC  6E19               	movwf	i2___fldiv@a+2,c
 46666  0142BE  0E44               	movlw	68
 46667  0142C0  6E1A               	movwf	i2___fldiv@a+3,c
 46668  0142C2  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46669  0142C6  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46670  0142CA  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46671  0142CE  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46672  0142D2  EC7E  F0C5         	call	i2___fldiv	;wreg free
 46673  0142D6  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46674  0142DA  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46675  0142DE  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46676  0142E2  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46677  0142E6  EC08  F0E5         	call	_ADCC_GetFilterValue	;wreg free
 46678  0142EA  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46679  0142EE  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46680  0142F2  6A07               	clrf	i2___xxtofl@val+2,c
 46681  0142F4  6A08               	clrf	i2___xxtofl@val+3,c
 46682  0142F6  0E00               	movlw	0
 46683  0142F8  ECC3  F0CF         	call	i2___xxtofl
 46684  0142FC  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46685  014300  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46686  014304  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46687  014308  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46688  01430C  EC94  F0B8         	call	i2___flmul	;wreg free
 46689  014310  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6426
 46690  014314  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6426+1
 46691  014318  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6426+2
 46692  01431C  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6426+3
 46693                           
 46694                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46695  014320  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46696  014324  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46697  014328  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46698  01432C  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46699  014330  0E6B               	movlw	107
 46700  014332  6E30               	movwf	i2___flmul@a,c
 46701  014334  0E7D               	movlw	125
 46702  014336  6E31               	movwf	i2___flmul@a+1,c
 46703  014338  0E3D               	movlw	61
 46704  01433A  6E32               	movwf	i2___flmul@a+2,c
 46705  01433C  0E40               	movlw	64
 46706  01433E  6E33               	movwf	i2___flmul@a+3,c
 46707  014340  C07B  F02C         	movff	_ADC_PostProcessingHandler$6426,i2___flmul@b
 46708  014344  C07C  F02D         	movff	_ADC_PostProcessingHandler$6426+1,i2___flmul@b+1
 46709  014348  C07D  F02E         	movff	_ADC_PostProcessingHandler$6426+2,i2___flmul@b+2
 46710  01434C  C07E  F02F         	movff	_ADC_PostProcessingHandler$6426+3,i2___flmul@b+3
 46711  014350  EC94  F0B8         	call	i2___flmul	;wreg free
 46712  014354  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46713  014358  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46714  01435C  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46715  014360  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46716  014364  ECE7  F0DE         	call	i2___flsub	;wreg free
 46717  014368  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6427
 46718  01436C  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6427+1
 46719  014370  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6427+2
 46720  014374  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6427+3
 46721                           
 46722                           ;adc_postprocessing.c: 55: adc_results.pos12_adc_result = (((ADCC_GetFilterValue()) * (a
      +                          dc_results.pos5_adc_result/1023.0)) * 2.96078 - adc_results.avss_adc_result) * adc_resul
      +                          t_scaling;
 46723  014378  C07F  F02C         	movff	_ADC_PostProcessingHandler$6427,i2___flmul@b
 46724  01437C  C080  F02D         	movff	_ADC_PostProcessingHandler$6427+1,i2___flmul@b+1
 46725  014380  C081  F02E         	movff	_ADC_PostProcessingHandler$6427+2,i2___flmul@b+2
 46726  014384  C082  F02F         	movff	_ADC_PostProcessingHandler$6427+3,i2___flmul@b+3
 46727  014388  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46728  01438C  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46729  014390  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46730  014394  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46731  014398  EC94  F0B8         	call	i2___flmul	;wreg free
 46732  01439C  C02C  F0E9         	movff	?i2___flmul,_adc_results+12
 46733  0143A0  C02D  F0EA         	movff	?i2___flmul+1,_adc_results+13
 46734  0143A4  C02E  F0EB         	movff	?i2___flmul+2,_adc_results+14
 46735  0143A8  C02F  F0EC         	movff	?i2___flmul+3,_adc_results+15
 46736                           
 46737                           ;adc_postprocessing.c: 57: next_adc_channel = POS12_ISNS_ADC;
 46738  0143AC  0E01               	movlw	1
 46739  0143AE  D274               	goto	L51
 46740  0143B0                     i2l21152:
 46741                           
 46742                           ; BSR set to: 0
 46743                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46744  0143B0  0E00               	movlw	0
 46745  0143B2  6E17               	movwf	i2___fldiv@a,c
 46746  0143B4  0EC0               	movlw	192
 46747  0143B6  6E18               	movwf	i2___fldiv@a+1,c
 46748  0143B8  0E7F               	movlw	127
 46749  0143BA  6E19               	movwf	i2___fldiv@a+2,c
 46750  0143BC  0E44               	movlw	68
 46751  0143BE  6E1A               	movwf	i2___fldiv@a+3,c
 46752  0143C0  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46753  0143C4  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46754  0143C8  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46755  0143CC  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46756  0143D0  EC7E  F0C5         	call	i2___fldiv	;wreg free
 46757  0143D4  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46758  0143D8  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46759  0143DC  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46760  0143E0  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46761  0143E4  EC08  F0E5         	call	_ADCC_GetFilterValue	;wreg free
 46762  0143E8  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46763  0143EC  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46764  0143F0  6A07               	clrf	i2___xxtofl@val+2,c
 46765  0143F2  6A08               	clrf	i2___xxtofl@val+3,c
 46766  0143F4  0E00               	movlw	0
 46767  0143F6  ECC3  F0CF         	call	i2___xxtofl
 46768  0143FA  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46769  0143FE  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46770  014402  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46771  014406  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46772  01440A  EC94  F0B8         	call	i2___flmul	;wreg free
 46773  01440E  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6426
 46774  014412  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6426+1
 46775  014416  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6426+2
 46776  01441A  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6426+3
 46777                           
 46778                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46779  01441E  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46780  014422  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46781  014426  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46782  01442A  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46783  01442E  0EAB               	movlw	171
 46784  014430  6E30               	movwf	i2___flmul@a,c
 46785  014432  0E41               	movlw	65
 46786  014434  6E31               	movwf	i2___flmul@a+1,c
 46787  014436  0E00               	movlw	0
 46788  014438  6E32               	movwf	i2___flmul@a+2,c
 46789  01443A  0E3F               	movlw	63
 46790  01443C  6E33               	movwf	i2___flmul@a+3,c
 46791  01443E  C07B  F02C         	movff	_ADC_PostProcessingHandler$6426,i2___flmul@b
 46792  014442  C07C  F02D         	movff	_ADC_PostProcessingHandler$6426+1,i2___flmul@b+1
 46793  014446  C07D  F02E         	movff	_ADC_PostProcessingHandler$6426+2,i2___flmul@b+2
 46794  01444A  C07E  F02F         	movff	_ADC_PostProcessingHandler$6426+3,i2___flmul@b+3
 46795  01444E  EC94  F0B8         	call	i2___flmul	;wreg free
 46796  014452  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46797  014456  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46798  01445A  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46799  01445E  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46800  014462  ECE7  F0DE         	call	i2___flsub	;wreg free
 46801  014466  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6427
 46802  01446A  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6427+1
 46803  01446E  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6427+2
 46804  014472  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6427+3
 46805                           
 46806                           ;adc_postprocessing.c: 62: pos12_isns_average_buffer[pos12_isns_average_index] = (((ADCC
      +                          _GetFilterValue()) * (adc_results.pos5_adc_result/1023.0)) * 0.501002004 - adc_results.a
      +                          vss_adc_result) * adc_result_scaling;
 46807  014476  C07F  F02C         	movff	_ADC_PostProcessingHandler$6427,i2___flmul@b
 46808  01447A  C080  F02D         	movff	_ADC_PostProcessingHandler$6427+1,i2___flmul@b+1
 46809  01447E  C081  F02E         	movff	_ADC_PostProcessingHandler$6427+2,i2___flmul@b+2
 46810  014482  C082  F02F         	movff	_ADC_PostProcessingHandler$6427+3,i2___flmul@b+3
 46811  014486  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46812  01448A  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46813  01448E  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46814  014492  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46815  014496  EC94  F0B8         	call	i2___flmul	;wreg free
 46816  01449A  0100               	movlb	0	; () banked
 46817  01449C  51D6               	movf	_pos12_isns_average_index& (0+255),w,b
 46818  01449E  0D04               	mullw	4
 46819  0144A0  0E40               	movlw	low _pos12_isns_average_buffer
 46820  0144A2  24F3               	addwf	prodl,w,c
 46821  0144A4  6ED9               	movwf	fsr2l,c
 46822  0144A6  0E04               	movlw	high _pos12_isns_average_buffer
 46823  0144A8  20F4               	addwfc	prodh,w,c
 46824  0144AA  6EDA               	movwf	fsr2h,c
 46825  0144AC  C02C  FFDE         	movff	?i2___flmul,postinc2
 46826  0144B0  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 46827  0144B4  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 46828  0144B8  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 46829                           
 46830                           ; BSR set to: 0
 46831                           ;adc_postprocessing.c: 63: pos12_isns_average_index++;
 46832  0144BC  2BD6               	incf	_pos12_isns_average_index& (0+255),f,b
 46833                           
 46834                           ; BSR set to: 0
 46835                           ;adc_postprocessing.c: 66: if (pos12_isns_average_index == 16) {
 46836  0144BE  0E10               	movlw	16
 46837  0144C0  19D6               	xorwf	_pos12_isns_average_index& (0+255),w,b
 46838  0144C2  A4D8               	btfss	status,2,c
 46839  0144C4  D057               	goto	i2l21174
 46840                           
 46841                           ; BSR set to: 0
 46842                           ;adc_postprocessing.c: 67: pos12_isns_average_index = 0;
 46843  0144C6  0E00               	movlw	0
 46844  0144C8  6FD6               	movwf	_pos12_isns_average_index& (0+255),b
 46845                           
 46846                           ;adc_postprocessing.c: 69: adc_results.pos12_isns_adc_result = 0.0;
 46847  0144CA  0E00               	movlw	0
 46848  0144CC  6FED               	movwf	(_adc_results+16)& (0+255),b
 46849  0144CE  0E00               	movlw	0
 46850  0144D0  6FEE               	movwf	(_adc_results+17)& (0+255),b
 46851  0144D2  0E00               	movlw	0
 46852  0144D4  6FEF               	movwf	(_adc_results+18)& (0+255),b
 46853  0144D6  0E00               	movlw	0
 46854  0144D8  6FF0               	movwf	(_adc_results+19)& (0+255),b
 46855                           
 46856                           ;adc_postprocessing.c: 70: for (uint8_t i = 0; i < 16; i++) {
 46857  0144DA  0E00               	movlw	0
 46858  0144DC  6F79               	movwf	ADC_PostProcessingHandler@i& (0+255),b
 46859  0144DE                     i2l21166:
 46860                           
 46861                           ; BSR set to: 0
 46862                           ;adc_postprocessing.c: 71: adc_results.pos12_isns_adc_result += fabs(pos12_isns_average_
      +                          buffer[i]);
 46863  0144DE  C0ED  F052         	movff	_adc_results+16,i2___fladd@b
 46864  0144E2  C0EE  F053         	movff	_adc_results+17,i2___fladd@b+1
 46865  0144E6  C0EF  F054         	movff	_adc_results+18,i2___fladd@b+2
 46866  0144EA  C0F0  F055         	movff	_adc_results+19,i2___fladd@b+3
 46867  0144EE  5179               	movf	ADC_PostProcessingHandler@i& (0+255),w,b
 46868  0144F0  0D04               	mullw	4
 46869  0144F2  0E40               	movlw	low _pos12_isns_average_buffer
 46870  0144F4  24F3               	addwf	prodl,w,c
 46871  0144F6  6ED9               	movwf	fsr2l,c
 46872  0144F8  0E04               	movlw	high _pos12_isns_average_buffer
 46873  0144FA  20F4               	addwfc	prodh,w,c
 46874  0144FC  6EDA               	movwf	fsr2h,c
 46875  0144FE  CFDE F005          	movff	postinc2,fabs@d
 46876  014502  CFDE F006          	movff	postinc2,fabs@d+1
 46877  014506  CFDE F007          	movff	postinc2,fabs@d+2
 46878  01450A  CFDE F008          	movff	postinc2,fabs@d+3
 46879  01450E  EC32  F0E1         	call	_fabs	;wreg free
 46880  014512  C005  F056         	movff	?_fabs,i2___fladd@a
 46881  014516  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 46882  01451A  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 46883  01451E  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 46884  014522  EC4B  F0BD         	call	i2___fladd	;wreg free
 46885  014526  C052  F0ED         	movff	?i2___fladd,_adc_results+16
 46886  01452A  C053  F0EE         	movff	?i2___fladd+1,_adc_results+17
 46887  01452E  C054  F0EF         	movff	?i2___fladd+2,_adc_results+18
 46888  014532  C055  F0F0         	movff	?i2___fladd+3,_adc_results+19
 46889  014536  0100               	movlb	0	; () banked
 46890  014538  2B79               	incf	ADC_PostProcessingHandler@i& (0+255),f,b
 46891                           
 46892                           ; BSR set to: 0
 46893  01453A  0E0F               	movlw	15
 46894  01453C  6579               	cpfsgt	ADC_PostProcessingHandler@i& (0+255),b
 46895  01453E  D7CF               	goto	i2l21166
 46896                           
 46897                           ; BSR set to: 0
 46898                           ;adc_postprocessing.c: 72: };adc_postprocessing.c: 73: adc_results.pos12_isns_adc_result
      +                           /= (float) 16;
 46899  014540  C0ED  F013         	movff	_adc_results+16,i2___fldiv@b
 46900  014544  C0EE  F014         	movff	_adc_results+17,i2___fldiv@b+1
 46901  014548  C0EF  F015         	movff	_adc_results+18,i2___fldiv@b+2
 46902  01454C  C0F0  F016         	movff	_adc_results+19,i2___fldiv@b+3
 46903  014550  0E00               	movlw	0
 46904  014552  6E17               	movwf	i2___fldiv@a,c
 46905  014554  0E00               	movlw	0
 46906  014556  6E18               	movwf	i2___fldiv@a+1,c
 46907  014558  0E80               	movlw	128
 46908  01455A  6E19               	movwf	i2___fldiv@a+2,c
 46909  01455C  0E41               	movlw	65
 46910  01455E  6E1A               	movwf	i2___fldiv@a+3,c
 46911  014560  EC7E  F0C5         	call	i2___fldiv	;wreg free
 46912  014564  C013  F0ED         	movff	?i2___fldiv,_adc_results+16
 46913  014568  C014  F0EE         	movff	?i2___fldiv+1,_adc_results+17
 46914  01456C  C015  F0EF         	movff	?i2___fldiv+2,_adc_results+18
 46915  014570  C016  F0F0         	movff	?i2___fldiv+3,_adc_results+19
 46916  014574                     i2l21174:
 46917                           
 46918                           ;adc_postprocessing.c: 74: };adc_postprocessing.c: 76: next_adc_channel = QI_ISNS_ADC;
 46919  014574  0E05               	movlw	5
 46920  014576  D190               	goto	L51
 46921  014578                     i2l21176:
 46922                           
 46923                           ; BSR set to: 0
 46924                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46925  014578  0E00               	movlw	0
 46926  01457A  6E17               	movwf	i2___fldiv@a,c
 46927  01457C  0EC0               	movlw	192
 46928  01457E  6E18               	movwf	i2___fldiv@a+1,c
 46929  014580  0E7F               	movlw	127
 46930  014582  6E19               	movwf	i2___fldiv@a+2,c
 46931  014584  0E44               	movlw	68
 46932  014586  6E1A               	movwf	i2___fldiv@a+3,c
 46933  014588  C0E5  F013         	movff	_adc_results+8,i2___fldiv@b
 46934  01458C  C0E6  F014         	movff	_adc_results+9,i2___fldiv@b+1
 46935  014590  C0E7  F015         	movff	_adc_results+10,i2___fldiv@b+2
 46936  014594  C0E8  F016         	movff	_adc_results+11,i2___fldiv@b+3
 46937  014598  EC7E  F0C5         	call	i2___fldiv	;wreg free
 46938  01459C  C013  F030         	movff	?i2___fldiv,i2___flmul@a
 46939  0145A0  C014  F031         	movff	?i2___fldiv+1,i2___flmul@a+1
 46940  0145A4  C015  F032         	movff	?i2___fldiv+2,i2___flmul@a+2
 46941  0145A8  C016  F033         	movff	?i2___fldiv+3,i2___flmul@a+3
 46942  0145AC  EC08  F0E5         	call	_ADCC_GetFilterValue	;wreg free
 46943  0145B0  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 46944  0145B4  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 46945  0145B8  6A07               	clrf	i2___xxtofl@val+2,c
 46946  0145BA  6A08               	clrf	i2___xxtofl@val+3,c
 46947  0145BC  0E00               	movlw	0
 46948  0145BE  ECC3  F0CF         	call	i2___xxtofl
 46949  0145C2  C005  F02C         	movff	?i2___xxtofl,i2___flmul@b
 46950  0145C6  C006  F02D         	movff	?i2___xxtofl+1,i2___flmul@b+1
 46951  0145CA  C007  F02E         	movff	?i2___xxtofl+2,i2___flmul@b+2
 46952  0145CE  C008  F02F         	movff	?i2___xxtofl+3,i2___flmul@b+3
 46953  0145D2  EC94  F0B8         	call	i2___flmul	;wreg free
 46954  0145D6  C02C  F07B         	movff	?i2___flmul,_ADC_PostProcessingHandler$6426
 46955  0145DA  C02D  F07C         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6426+1
 46956  0145DE  C02E  F07D         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6426+2
 46957  0145E2  C02F  F07E         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6426+3
 46958                           
 46959                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46960  0145E6  C0DD  F068         	movff	_adc_results,i2___flsub@a
 46961  0145EA  C0DE  F069         	movff	_adc_results+1,i2___flsub@a+1
 46962  0145EE  C0DF  F06A         	movff	_adc_results+2,i2___flsub@a+2
 46963  0145F2  C0E0  F06B         	movff	_adc_results+3,i2___flsub@a+3
 46964  0145F6  0E99               	movlw	153
 46965  0145F8  6E30               	movwf	i2___flmul@a,c
 46966  0145FA  0E83               	movlw	131
 46967  0145FC  6E31               	movwf	i2___flmul@a+1,c
 46968  0145FE  0E80               	movlw	128
 46969  014600  6E32               	movwf	i2___flmul@a+2,c
 46970  014602  0E3F               	movlw	63
 46971  014604  6E33               	movwf	i2___flmul@a+3,c
 46972  014606  C07B  F02C         	movff	_ADC_PostProcessingHandler$6426,i2___flmul@b
 46973  01460A  C07C  F02D         	movff	_ADC_PostProcessingHandler$6426+1,i2___flmul@b+1
 46974  01460E  C07D  F02E         	movff	_ADC_PostProcessingHandler$6426+2,i2___flmul@b+2
 46975  014612  C07E  F02F         	movff	_ADC_PostProcessingHandler$6426+3,i2___flmul@b+3
 46976  014616  EC94  F0B8         	call	i2___flmul	;wreg free
 46977  01461A  C02C  F064         	movff	?i2___flmul,i2___flsub@b
 46978  01461E  C02D  F065         	movff	?i2___flmul+1,i2___flsub@b+1
 46979  014622  C02E  F066         	movff	?i2___flmul+2,i2___flsub@b+2
 46980  014626  C02F  F067         	movff	?i2___flmul+3,i2___flsub@b+3
 46981  01462A  ECE7  F0DE         	call	i2___flsub	;wreg free
 46982  01462E  C064  F07F         	movff	?i2___flsub,_ADC_PostProcessingHandler$6427
 46983  014632  C065  F080         	movff	?i2___flsub+1,_ADC_PostProcessingHandler$6427+1
 46984  014636  C066  F081         	movff	?i2___flsub+2,_ADC_PostProcessingHandler$6427+2
 46985  01463A  C067  F082         	movff	?i2___flsub+3,_ADC_PostProcessingHandler$6427+3
 46986                           
 46987                           ;adc_postprocessing.c: 81: qi_isns_average_buffer[qi_isns_average_index] = (((ADCC_GetFi
      +                          lterValue()) * (adc_results.pos5_adc_result/1023.0)) * 1.004016064 - adc_results.avss_ad
      +                          c_result) * adc_result_scaling;
 46988  01463E  C07F  F02C         	movff	_ADC_PostProcessingHandler$6427,i2___flmul@b
 46989  014642  C080  F02D         	movff	_ADC_PostProcessingHandler$6427+1,i2___flmul@b+1
 46990  014646  C081  F02E         	movff	_ADC_PostProcessingHandler$6427+2,i2___flmul@b+2
 46991  01464A  C082  F02F         	movff	_ADC_PostProcessingHandler$6427+3,i2___flmul@b+3
 46992  01464E  C0C1  F030         	movff	_adc_result_scaling,i2___flmul@a
 46993  014652  C0C2  F031         	movff	_adc_result_scaling+1,i2___flmul@a+1
 46994  014656  C0C3  F032         	movff	_adc_result_scaling+2,i2___flmul@a+2
 46995  01465A  C0C4  F033         	movff	_adc_result_scaling+3,i2___flmul@a+3
 46996  01465E  EC94  F0B8         	call	i2___flmul	;wreg free
 46997  014662  0100               	movlb	0	; () banked
 46998  014664  51D5               	movf	_qi_isns_average_index& (0+255),w,b
 46999  014666  0D04               	mullw	4
 47000  014668  0E00               	movlw	low _qi_isns_average_buffer
 47001  01466A  24F3               	addwf	prodl,w,c
 47002  01466C  6ED9               	movwf	fsr2l,c
 47003  01466E  0E04               	movlw	high _qi_isns_average_buffer
 47004  014670  20F4               	addwfc	prodh,w,c
 47005  014672  6EDA               	movwf	fsr2h,c
 47006  014674  C02C  FFDE         	movff	?i2___flmul,postinc2
 47007  014678  C02D  FFDE         	movff	?i2___flmul+1,postinc2
 47008  01467C  C02E  FFDE         	movff	?i2___flmul+2,postinc2
 47009  014680  C02F  FFDE         	movff	?i2___flmul+3,postinc2
 47010                           
 47011                           ; BSR set to: 0
 47012                           ;adc_postprocessing.c: 82: qi_isns_average_index++;
 47013  014684  2BD5               	incf	_qi_isns_average_index& (0+255),f,b
 47014                           
 47015                           ; BSR set to: 0
 47016                           ;adc_postprocessing.c: 85: if (qi_isns_average_index == 16) {
 47017  014686  0E10               	movlw	16
 47018  014688  19D5               	xorwf	_qi_isns_average_index& (0+255),w,b
 47019  01468A  A4D8               	btfss	status,2,c
 47020  01468C  D057               	goto	i2l21198
 47021                           
 47022                           ; BSR set to: 0
 47023                           ;adc_postprocessing.c: 86: qi_isns_average_index = 0;
 47024  01468E  0E00               	movlw	0
 47025  014690  6FD5               	movwf	_qi_isns_average_index& (0+255),b
 47026                           
 47027                           ;adc_postprocessing.c: 88: adc_results.qi_isns_adc_result = 0.0;
 47028  014692  0E00               	movlw	0
 47029  014694  6FF1               	movwf	(_adc_results+20)& (0+255),b
 47030  014696  0E00               	movlw	0
 47031  014698  6FF2               	movwf	(_adc_results+21)& (0+255),b
 47032  01469A  0E00               	movlw	0
 47033  01469C  6FF3               	movwf	(_adc_results+22)& (0+255),b
 47034  01469E  0E00               	movlw	0
 47035  0146A0  6FF4               	movwf	(_adc_results+23)& (0+255),b
 47036                           
 47037                           ;adc_postprocessing.c: 89: for (uint8_t i = 0; i < 16; i++) {
 47038  0146A2  0E00               	movlw	0
 47039  0146A4  6F7A               	movwf	ADC_PostProcessingHandler@i_3557& (0+255),b
 47040  0146A6                     i2l21190:
 47041                           
 47042                           ; BSR set to: 0
 47043                           ;adc_postprocessing.c: 90: adc_results.qi_isns_adc_result += fabs(qi_isns_average_buffer
      +                          [i]);
 47044  0146A6  C0F1  F052         	movff	_adc_results+20,i2___fladd@b
 47045  0146AA  C0F2  F053         	movff	_adc_results+21,i2___fladd@b+1
 47046  0146AE  C0F3  F054         	movff	_adc_results+22,i2___fladd@b+2
 47047  0146B2  C0F4  F055         	movff	_adc_results+23,i2___fladd@b+3
 47048  0146B6  517A               	movf	ADC_PostProcessingHandler@i_3557& (0+255),w,b
 47049  0146B8  0D04               	mullw	4
 47050  0146BA  0E00               	movlw	low _qi_isns_average_buffer
 47051  0146BC  24F3               	addwf	prodl,w,c
 47052  0146BE  6ED9               	movwf	fsr2l,c
 47053  0146C0  0E04               	movlw	high _qi_isns_average_buffer
 47054  0146C2  20F4               	addwfc	prodh,w,c
 47055  0146C4  6EDA               	movwf	fsr2h,c
 47056  0146C6  CFDE F005          	movff	postinc2,fabs@d
 47057  0146CA  CFDE F006          	movff	postinc2,fabs@d+1
 47058  0146CE  CFDE F007          	movff	postinc2,fabs@d+2
 47059  0146D2  CFDE F008          	movff	postinc2,fabs@d+3
 47060  0146D6  EC32  F0E1         	call	_fabs	;wreg free
 47061  0146DA  C005  F056         	movff	?_fabs,i2___fladd@a
 47062  0146DE  C006  F057         	movff	?_fabs+1,i2___fladd@a+1
 47063  0146E2  C007  F058         	movff	?_fabs+2,i2___fladd@a+2
 47064  0146E6  C008  F059         	movff	?_fabs+3,i2___fladd@a+3
 47065  0146EA  EC4B  F0BD         	call	i2___fladd	;wreg free
 47066  0146EE  C052  F0F1         	movff	?i2___fladd,_adc_results+20
 47067  0146F2  C053  F0F2         	movff	?i2___fladd+1,_adc_results+21
 47068  0146F6  C054  F0F3         	movff	?i2___fladd+2,_adc_results+22
 47069  0146FA  C055  F0F4         	movff	?i2___fladd+3,_adc_results+23
 47070  0146FE  0100               	movlb	0	; () banked
 47071  014700  2B7A               	incf	ADC_PostProcessingHandler@i_3557& (0+255),f,b
 47072                           
 47073                           ; BSR set to: 0
 47074  014702  0E0F               	movlw	15
 47075  014704  657A               	cpfsgt	ADC_PostProcessingHandler@i_3557& (0+255),b
 47076  014706  D7CF               	goto	i2l21190
 47077                           
 47078                           ; BSR set to: 0
 47079                           ;adc_postprocessing.c: 91: };adc_postprocessing.c: 92: adc_results.qi_isns_adc_result /=
      +                           (float) 16;
 47080  014708  C0F1  F013         	movff	_adc_results+20,i2___fldiv@b
 47081  01470C  C0F2  F014         	movff	_adc_results+21,i2___fldiv@b+1
 47082  014710  C0F3  F015         	movff	_adc_results+22,i2___fldiv@b+2
 47083  014714  C0F4  F016         	movff	_adc_results+23,i2___fldiv@b+3
 47084  014718  0E00               	movlw	0
 47085  01471A  6E17               	movwf	i2___fldiv@a,c
 47086  01471C  0E00               	movlw	0
 47087  01471E  6E18               	movwf	i2___fldiv@a+1,c
 47088  014720  0E80               	movlw	128
 47089  014722  6E19               	movwf	i2___fldiv@a+2,c
 47090  014724  0E41               	movlw	65
 47091  014726  6E1A               	movwf	i2___fldiv@a+3,c
 47092  014728  EC7E  F0C5         	call	i2___fldiv	;wreg free
 47093  01472C  C013  F0F1         	movff	?i2___fldiv,_adc_results+20
 47094  014730  C014  F0F2         	movff	?i2___fldiv+1,_adc_results+21
 47095  014734  C015  F0F3         	movff	?i2___fldiv+2,_adc_results+22
 47096  014738  C016  F0F4         	movff	?i2___fldiv+3,_adc_results+23
 47097  01473C                     i2l21198:
 47098                           
 47099                           ;adc_postprocessing.c: 93: };adc_postprocessing.c: 95: next_adc_channel = channel_Temp;
 47100  01473C  0E3D               	movlw	61
 47101  01473E  D0AC               	goto	L51
 47102  014740                     i2l21200:
 47103                           
 47104                           ; BSR set to: 0
 47105                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47106  014740  0E00               	movlw	0
 47107  014742  6E30               	movwf	i2___flmul@a,c
 47108  014744  0E00               	movlw	0
 47109  014746  6E31               	movwf	i2___flmul@a+1,c
 47110  014748  0EA0               	movlw	160
 47111  01474A  6E32               	movwf	i2___flmul@a+2,c
 47112  01474C  0E3F               	movlw	63
 47113  01474E  6E33               	movwf	i2___flmul@a+3,c
 47114  014750  0E00               	movlw	0
 47115  014752  6E17               	movwf	i2___fldiv@a,c
 47116  014754  0EC0               	movlw	192
 47117  014756  6E18               	movwf	i2___fldiv@a+1,c
 47118  014758  0E7F               	movlw	127
 47119  01475A  6E19               	movwf	i2___fldiv@a+2,c
 47120  01475C  0E44               	movlw	68
 47121  01475E  6E1A               	movwf	i2___fldiv@a+3,c
 47122  014760  EC08  F0E5         	call	_ADCC_GetFilterValue	;wreg free
 47123  014764  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 47124  014768  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 47125  01476C  6A07               	clrf	i2___xxtofl@val+2,c
 47126  01476E  6A08               	clrf	i2___xxtofl@val+3,c
 47127  014770  0E00               	movlw	0
 47128  014772  ECC3  F0CF         	call	i2___xxtofl
 47129  014776  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 47130  01477A  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 47131  01477E  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 47132  014782  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 47133  014786  EC7E  F0C5         	call	i2___fldiv	;wreg free
 47134  01478A  C013  F068         	movff	?i2___fldiv,i2___flsub@a
 47135  01478E  C014  F069         	movff	?i2___fldiv+1,i2___flsub@a+1
 47136  014792  C015  F06A         	movff	?i2___fldiv+2,i2___flsub@a+2
 47137  014796  C016  F06B         	movff	?i2___fldiv+3,i2___flsub@a+3
 47138  01479A  0E00               	movlw	0
 47139  01479C  0100               	movlb	0	; () banked
 47140  01479E  6F64               	movwf	i2___flsub@b& (0+255),b
 47141  0147A0  0E00               	movlw	0
 47142  0147A2  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 47143  0147A4  0E80               	movlw	128
 47144  0147A6  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 47145  0147A8  0E3F               	movlw	63
 47146  0147AA  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 47147  0147AC  ECE7  F0DE         	call	i2___flsub	;wreg free
 47148  0147B0  C064  F02C         	movff	?i2___flsub,i2___flmul@b
 47149  0147B4  C065  F02D         	movff	?i2___flsub+1,i2___flmul@b+1
 47150  0147B8  C066  F02E         	movff	?i2___flsub+2,i2___flmul@b+2
 47151  0147BC  C067  F02F         	movff	?i2___flsub+3,i2___flmul@b+3
 47152  0147C0  EC94  F0B8         	call	i2___flmul	;wreg free
 47153  0147C4  C02C  F06C         	movff	?i2___flmul,_ADC_PostProcessingHandler$6428
 47154  0147C8  C02D  F06D         	movff	?i2___flmul+1,_ADC_PostProcessingHandler$6428+1
 47155  0147CC  C02E  F06E         	movff	?i2___flmul+2,_ADC_PostProcessingHandler$6428+2
 47156  0147D0  C02F  F06F         	movff	?i2___flmul+3,_ADC_PostProcessingHandler$6428+3
 47157                           
 47158                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47159  0147D4  0EDA               	movlw	218
 47160  0147D6  6E17               	movwf	i2___fldiv@a,c
 47161  0147D8  0E03               	movlw	3
 47162  0147DA  6E18               	movwf	i2___fldiv@a+1,c
 47163  0147DC  0EAD               	movlw	173
 47164  0147DE  6E19               	movwf	i2___fldiv@a+2,c
 47165  0147E0  0E3A               	movlw	58
 47166  0147E2  6E1A               	movwf	i2___fldiv@a+3,c
 47167  0147E4  C06C  F068         	movff	_ADC_PostProcessingHandler$6428,i2___flsub@a
 47168  0147E8  C06D  F069         	movff	_ADC_PostProcessingHandler$6428+1,i2___flsub@a+1
 47169  0147EC  C06E  F06A         	movff	_ADC_PostProcessingHandler$6428+2,i2___flsub@a+2
 47170  0147F0  C06F  F06B         	movff	_ADC_PostProcessingHandler$6428+3,i2___flsub@a+3
 47171  0147F4  0E39               	movlw	57
 47172  0147F6  0100               	movlb	0	; () banked
 47173  0147F8  6F64               	movwf	i2___flsub@b& (0+255),b
 47174  0147FA  0EB4               	movlw	180
 47175  0147FC  6F65               	movwf	(i2___flsub@b+1)& (0+255),b
 47176  0147FE  0E28               	movlw	40
 47177  014800  6F66               	movwf	(i2___flsub@b+2)& (0+255),b
 47178  014802  0E3F               	movlw	63
 47179  014804  6F67               	movwf	(i2___flsub@b+3)& (0+255),b
 47180  014806  ECE7  F0DE         	call	i2___flsub	;wreg free
 47181  01480A  C064  F013         	movff	?i2___flsub,i2___fldiv@b
 47182  01480E  C065  F014         	movff	?i2___flsub+1,i2___fldiv@b+1
 47183  014812  C066  F015         	movff	?i2___flsub+2,i2___fldiv@b+2
 47184  014816  C067  F016         	movff	?i2___flsub+3,i2___fldiv@b+3
 47185  01481A  EC7E  F0C5         	call	i2___fldiv	;wreg free
 47186  01481E  C013  F070         	movff	?i2___fldiv,_ADC_PostProcessingHandler$6429
 47187  014822  C014  F071         	movff	?i2___fldiv+1,_ADC_PostProcessingHandler$6429+1
 47188  014826  C015  F072         	movff	?i2___fldiv+2,_ADC_PostProcessingHandler$6429+2
 47189  01482A  C016  F073         	movff	?i2___fldiv+3,_ADC_PostProcessingHandler$6429+3
 47190                           
 47191                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47192  01482E  0E00               	movlw	0
 47193  014830  6E56               	movwf	i2___fladd@a,c
 47194  014832  0E00               	movlw	0
 47195  014834  6E57               	movwf	i2___fladd@a+1,c
 47196  014836  0E20               	movlw	32
 47197  014838  6E58               	movwf	i2___fladd@a+2,c
 47198  01483A  0EC2               	movlw	194
 47199  01483C  6E59               	movwf	i2___fladd@a+3,c
 47200  01483E  C070  F052         	movff	_ADC_PostProcessingHandler$6429,i2___fladd@b
 47201  014842  C071  F053         	movff	_ADC_PostProcessingHandler$6429+1,i2___fladd@b+1
 47202  014846  C072  F054         	movff	_ADC_PostProcessingHandler$6429+2,i2___fladd@b+2
 47203  01484A  C073  F055         	movff	_ADC_PostProcessingHandler$6429+3,i2___fladd@b+3
 47204  01484E  EC4B  F0BD         	call	i2___fladd	;wreg free
 47205  014852  C052  F074         	movff	?i2___fladd,_ADC_PostProcessingHandler$6430
 47206  014856  C053  F075         	movff	?i2___fladd+1,_ADC_PostProcessingHandler$6430+1
 47207  01485A  C054  F076         	movff	?i2___fladd+2,_ADC_PostProcessingHandler$6430+2
 47208  01485E  C055  F077         	movff	?i2___fladd+3,_ADC_PostProcessingHandler$6430+3
 47209                           
 47210                           ;adc_postprocessing.c: 99: adc_results.die_temp_adc_result = ((0.659 - (5.0 / 4.0) * (1.
      +                          0 - ADCC_GetFilterValue()/1023.0)) / .00132) - 40.0 + temp_adc_offset;
 47211  014862  C074  F052         	movff	_ADC_PostProcessingHandler$6430,i2___fladd@b
 47212  014866  C075  F053         	movff	_ADC_PostProcessingHandler$6430+1,i2___fladd@b+1
 47213  01486A  C076  F054         	movff	_ADC_PostProcessingHandler$6430+2,i2___fladd@b+2
 47214  01486E  C077  F055         	movff	_ADC_PostProcessingHandler$6430+3,i2___fladd@b+3
 47215  014872  0EB8               	movlw	184
 47216  014874  6E56               	movwf	i2___fladd@a,c
 47217  014876  0E0E               	movlw	14
 47218  014878  6E57               	movwf	i2___fladd@a+1,c
 47219  01487A  0EBC               	movlw	188
 47220  01487C  6E58               	movwf	i2___fladd@a+2,c
 47221  01487E  0E43               	movlw	67
 47222  014880  6E59               	movwf	i2___fladd@a+3,c
 47223  014882  EC4B  F0BD         	call	i2___fladd	;wreg free
 47224  014886  C052  F0F5         	movff	?i2___fladd,_adc_results+24
 47225  01488A  C053  F0F6         	movff	?i2___fladd+1,_adc_results+25
 47226  01488E  C054  F0F7         	movff	?i2___fladd+2,_adc_results+26
 47227  014892  C055  F0F8         	movff	?i2___fladd+3,_adc_results+27
 47228                           
 47229                           ;adc_postprocessing.c: 101: next_adc_channel = channel_VSS;
 47230  014896  0E3C               	movlw	60
 47231  014898                     L51:
 47232  014898  0100               	movlb	0	; () banked
 47233  01489A  6FFC               	movwf	_next_adc_channel& (0+255),b
 47234                           
 47235                           ;adc_postprocessing.c: 102: break;
 47236  01489C  D01C               	goto	i2l21216
 47237  01489E                     i2l21210:
 47238                           
 47239                           ; BSR set to: 0
 47240                           ;adc_postprocessing.c: 107: error_handler.ADC_general_error_flag = 1;
 47241  01489E  0E01               	movlw	1
 47242  0148A0  6FBA               	movwf	(_error_handler+1)& (0+255),b
 47243                           
 47244                           ;adc_postprocessing.c: 108: break;
 47245  0148A2  D019               	goto	i2l21216
 47246  0148A4                     i2l21214:
 47247  0148A4  0100               	movlb	0	; () banked
 47248  0148A6  5178               	movf	ADC_PostProcessingHandler@current_adc_channel& (0+255),w,b
 47249                           
 47250                           ; Switch size 1, requested type "simple"
 47251                           ; Number of cases is 7, Range of values is 0 to 63
 47252                           ; switch strategies available:
 47253                           ; Name         Instructions Cycles
 47254                           ; simple_byte           22    12 (average)
 47255                           ;	Chosen strategy is simple_byte
 47256  0148A8  0A00               	xorlw	0	; case 0
 47257  0148AA  B4D8               	btfsc	status,2,c
 47258  0148AC  D502               	goto	i2l21148
 47259  0148AE  0A01               	xorlw	1	; case 1
 47260  0148B0  B4D8               	btfsc	status,2,c
 47261  0148B2  D57E               	goto	i2l21152
 47262  0148B4  0A05               	xorlw	5	; case 4
 47263  0148B6  B4D8               	btfsc	status,2,c
 47264  0148B8  D48F               	goto	i2l21144
 47265  0148BA  0A01               	xorlw	1	; case 5
 47266  0148BC  B4D8               	btfsc	status,2,c
 47267  0148BE  D65C               	goto	i2l21176
 47268  0148C0  0A39               	xorlw	57	; case 60
 47269  0148C2  B4D8               	btfsc	status,2,c
 47270  0148C4  EF47  F0A0         	goto	i2l21130
 47271  0148C8  0A01               	xorlw	1	; case 61
 47272  0148CA  B4D8               	btfsc	status,2,c
 47273  0148CC  D739               	goto	i2l21200
 47274  0148CE  0A02               	xorlw	2	; case 63
 47275  0148D0  B4D8               	btfsc	status,2,c
 47276  0148D2  D404               	goto	i2l21134
 47277  0148D4  D7E4               	goto	i2l21210
 47278  0148D6                     i2l21216:
 47279                           
 47280                           ; BSR set to: 0
 47281                           ;adc_postprocessing.c: 112: if (ADCC_GetCurrentCountofConversions() != 255) {
 47282  0148D6  EC1A  F0E6         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 47283  0148DA  0AFF               	xorlw	255
 47284  0148DC  B4D8               	btfsc	status,2,c
 47285  0148DE  D003               	goto	i2l21220
 47286                           
 47287                           ;adc_postprocessing.c: 113: error_handler.ADC_general_error_flag = 1;
 47288  0148E0  0E01               	movlw	1
 47289  0148E2  0100               	movlb	0	; () banked
 47290  0148E4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 47291  0148E6                     i2l21220:
 47292                           
 47293                           ;adc_postprocessing.c: 114: };adc_postprocessing.c: 116: if (ADCC_HasAccumulatorOverflow
      +                          ed()) {
 47294  0148E6  ECD7  F0E5         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47295  0148EA  0900               	iorlw	0
 47296  0148EC  B4D8               	btfsc	status,2,c
 47297  0148EE  D003               	goto	i2l21224
 47298                           
 47299                           ;adc_postprocessing.c: 117: error_handler.ADC_general_error_flag = 1;
 47300  0148F0  0E01               	movlw	1
 47301  0148F2  0100               	movlb	0	; () banked
 47302  0148F4  6FBA               	movwf	(_error_handler+1)& (0+255),b
 47303  0148F6                     i2l21224:
 47304                           
 47305                           ;adc_postprocessing.c: 118: };adc_postprocessing.c: 121: adc_calculations.input_power = 
      +                          adc_results.pos12_adc_result * adc_results.pos12_isns_adc_result;
 47306  0148F6  C0E9  F02C         	movff	_adc_results+12,i2___flmul@b
 47307  0148FA  C0EA  F02D         	movff	_adc_results+13,i2___flmul@b+1
 47308  0148FE  C0EB  F02E         	movff	_adc_results+14,i2___flmul@b+2
 47309  014902  C0EC  F02F         	movff	_adc_results+15,i2___flmul@b+3
 47310  014906  C0ED  F030         	movff	_adc_results+16,i2___flmul@a
 47311  01490A  C0EE  F031         	movff	_adc_results+17,i2___flmul@a+1
 47312  01490E  C0EF  F032         	movff	_adc_results+18,i2___flmul@a+2
 47313  014912  C0F0  F033         	movff	_adc_results+19,i2___flmul@a+3
 47314  014916  EC94  F0B8         	call	i2___flmul	;wreg free
 47315  01491A  C02C  F2BE         	movff	?i2___flmul,_adc_calculations
 47316  01491E  C02D  F2BF         	movff	?i2___flmul+1,_adc_calculations+1
 47317  014922  C02E  F2C0         	movff	?i2___flmul+2,_adc_calculations+2
 47318  014926  C02F  F2C1         	movff	?i2___flmul+3,_adc_calculations+3
 47319                           
 47320                           ;adc_postprocessing.c: 122: adc_calculations.output_power = adc_results.pos5_adc_result 
      +                          * adc_results.qi_isns_adc_result;
 47321  01492A  C0E5  F02C         	movff	_adc_results+8,i2___flmul@b
 47322  01492E  C0E6  F02D         	movff	_adc_results+9,i2___flmul@b+1
 47323  014932  C0E7  F02E         	movff	_adc_results+10,i2___flmul@b+2
 47324  014936  C0E8  F02F         	movff	_adc_results+11,i2___flmul@b+3
 47325  01493A  C0F1  F030         	movff	_adc_results+20,i2___flmul@a
 47326  01493E  C0F2  F031         	movff	_adc_results+21,i2___flmul@a+1
 47327  014942  C0F3  F032         	movff	_adc_results+22,i2___flmul@a+2
 47328  014946  C0F4  F033         	movff	_adc_results+23,i2___flmul@a+3
 47329  01494A  EC94  F0B8         	call	i2___flmul	;wreg free
 47330  01494E  C02C  F2C2         	movff	?i2___flmul,_adc_calculations+4
 47331  014952  C02D  F2C3         	movff	?i2___flmul+1,_adc_calculations+5
 47332  014956  C02E  F2C4         	movff	?i2___flmul+2,_adc_calculations+6
 47333  01495A  C02F  F2C5         	movff	?i2___flmul+3,_adc_calculations+7
 47334                           
 47335                           ;adc_postprocessing.c: 123: adc_calculations.efficiency = (adc_calculations.output_power
      +                           / adc_calculations.input_power) * 100.0;
 47336  01495E  C2BE  F017         	movff	_adc_calculations,i2___fldiv@a
 47337  014962  C2BF  F018         	movff	_adc_calculations+1,i2___fldiv@a+1
 47338  014966  C2C0  F019         	movff	_adc_calculations+2,i2___fldiv@a+2
 47339  01496A  C2C1  F01A         	movff	_adc_calculations+3,i2___fldiv@a+3
 47340  01496E  C2C2  F013         	movff	_adc_calculations+4,i2___fldiv@b
 47341  014972  C2C3  F014         	movff	_adc_calculations+5,i2___fldiv@b+1
 47342  014976  C2C4  F015         	movff	_adc_calculations+6,i2___fldiv@b+2
 47343  01497A  C2C5  F016         	movff	_adc_calculations+7,i2___fldiv@b+3
 47344  01497E  EC7E  F0C5         	call	i2___fldiv	;wreg free
 47345  014982  C013  F02C         	movff	?i2___fldiv,i2___flmul@b
 47346  014986  C014  F02D         	movff	?i2___fldiv+1,i2___flmul@b+1
 47347  01498A  C015  F02E         	movff	?i2___fldiv+2,i2___flmul@b+2
 47348  01498E  C016  F02F         	movff	?i2___fldiv+3,i2___flmul@b+3
 47349  014992  0E00               	movlw	0
 47350  014994  6E30               	movwf	i2___flmul@a,c
 47351  014996  0E00               	movlw	0
 47352  014998  6E31               	movwf	i2___flmul@a+1,c
 47353  01499A  0EC8               	movlw	200
 47354  01499C  6E32               	movwf	i2___flmul@a+2,c
 47355  01499E  0E42               	movlw	66
 47356  0149A0  6E33               	movwf	i2___flmul@a+3,c
 47357  0149A2  EC94  F0B8         	call	i2___flmul	;wreg free
 47358  0149A6  C02C  F2C6         	movff	?i2___flmul,_adc_calculations+8
 47359  0149AA  C02D  F2C7         	movff	?i2___flmul+1,_adc_calculations+9
 47360  0149AE  C02E  F2C8         	movff	?i2___flmul+2,_adc_calculations+10
 47361  0149B2  C02F  F2C9         	movff	?i2___flmul+3,_adc_calculations+11
 47362                           
 47363                           ;adc_postprocessing.c: 126: if (adc_calculations.efficiency > 99.0) adc_calculations.eff
      +                          iciency = 99.0;
 47364  0149B6  0E00               	movlw	0
 47365  0149B8  6E01               	movwf	i2___flge@ff1,c
 47366  0149BA  0E00               	movlw	0
 47367  0149BC  6E02               	movwf	i2___flge@ff1+1,c
 47368  0149BE  0EC6               	movlw	198
 47369  0149C0  6E03               	movwf	i2___flge@ff1+2,c
 47370  0149C2  0E42               	movlw	66
 47371  0149C4  6E04               	movwf	i2___flge@ff1+3,c
 47372  0149C6  C2C6  F005         	movff	_adc_calculations+8,i2___flge@ff2
 47373  0149CA  C2C7  F006         	movff	_adc_calculations+9,i2___flge@ff2+1
 47374  0149CE  C2C8  F007         	movff	_adc_calculations+10,i2___flge@ff2+2
 47375  0149D2  C2C9  F008         	movff	_adc_calculations+11,i2___flge@ff2+3
 47376  0149D6  ECB6  F0D4         	call	i2___flge	;wreg free
 47377  0149DA  B0D8               	btfsc	status,0,c
 47378  0149DC  D009               	goto	i2l21234
 47379  0149DE  0E00               	movlw	0
 47380  0149E0  0102               	movlb	2	; () banked
 47381  0149E2  6FC6               	movwf	(_adc_calculations+8)& (0+255),b
 47382  0149E4  0E00               	movlw	0
 47383  0149E6  6FC7               	movwf	(_adc_calculations+9)& (0+255),b
 47384  0149E8  0EC6               	movlw	198
 47385  0149EA  6FC8               	movwf	(_adc_calculations+10)& (0+255),b
 47386  0149EC  0E42               	movlw	66
 47387  0149EE  6FC9               	movwf	(_adc_calculations+11)& (0+255),b
 47388  0149F0                     i2l21234:
 47389                           
 47390                           ;adc_postprocessing.c: 129: TMR2_StartTimer();
 47391  0149F0  EC03  F0E6         	call	_TMR2_StartTimer	;wreg free
 47392  0149F4  0012               	return		;funcret
 47393  0149F6                     __end_of_ADC_PostProcessingHandler:
 47394                           	opt callstack 0
 47395                           
 47396 ;; *************** function i2___xxtofl *****************
 47397 ;; Defined at:
 47398 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
 47399 ;; Parameters:    Size  Location     Type
 47400 ;;  sign            1    wreg     unsigned char 
 47401 ;;  val             4    4[COMRAM] long 
 47402 ;; Auto vars:     Size  Location     Type
 47403 ;;  sign            1   12[COMRAM] unsigned char 
 47404 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 47405 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 47406 ;; Return value:  Size  Location     Type
 47407 ;;                  4    4[COMRAM] unsigned char 
 47408 ;; Registers used:
 47409 ;;		wreg, status,2, status,0
 47410 ;; Tracked objects:
 47411 ;;		On entry : 0/0
 47412 ;;		On exit  : 0/0
 47413 ;;		Unchanged: 0/0
 47414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47416 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47418 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47419 ;;Total ram usage:       14 bytes
 47420 ;; Hardware stack levels used:    1
 47421 ;; This function calls:
 47422 ;;		Nothing
 47423 ;; This function is called by:
 47424 ;;		_ADC_PostProcessingHandler
 47425 ;;		i2__doprnt
 47426 ;; This function uses a non-reentrant model
 47427 ;;
 47428                           
 47429                           	psect	text200
 47430  019F86                     __ptext200:
 47431                           	opt callstack 0
 47432  019F86                     i2___xxtofl:
 47433                           	opt callstack 13
 47434                           
 47435                           ;incstack = 0
 47436                           ;i2___xxtofl@sign stored from wreg
 47437  019F86  6E0D               	movwf	i2___xxtofl@sign,c
 47438  019F88  500D               	movf	i2___xxtofl@sign,w,c
 47439  019F8A  A4D8               	btfss	status,2,c
 47440  019F8C  AE08               	btfss	i2___xxtofl@val+3,7,c
 47441  019F8E  D01A               	goto	i2l3364
 47442  019F90  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 47443  019F94  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 47444  019F98  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 47445  019F9C  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 47446  019FA0  1E09               	comf	??i2___xxtofl,f,c
 47447  019FA2  1E0A               	comf	??i2___xxtofl+1,f,c
 47448  019FA4  1E0B               	comf	??i2___xxtofl+2,f,c
 47449  019FA6  1E0C               	comf	??i2___xxtofl+3,f,c
 47450  019FA8  2A09               	incf	??i2___xxtofl,f,c
 47451  019FAA  0E00               	movlw	0
 47452  019FAC  220A               	addwfc	??i2___xxtofl+1,f,c
 47453  019FAE  220B               	addwfc	??i2___xxtofl+2,f,c
 47454  019FB0  220C               	addwfc	??i2___xxtofl+3,f,c
 47455  019FB2  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 47456  019FB6  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 47457  019FBA  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 47458  019FBE  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 47459  019FC2  D008               	goto	i2l19938
 47460  019FC4                     i2l3364:
 47461  019FC4  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 47462  019FC8  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 47463  019FCC  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 47464  019FD0  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 47465  019FD4                     i2l19938:
 47466  019FD4  5005               	movf	i2___xxtofl@val,w,c
 47467  019FD6  1006               	iorwf	i2___xxtofl@val+1,w,c
 47468  019FD8  1007               	iorwf	i2___xxtofl@val+2,w,c
 47469  019FDA  1008               	iorwf	i2___xxtofl@val+3,w,c
 47470  019FDC  A4D8               	btfss	status,2,c
 47471  019FDE  D009               	goto	i2l19944
 47472  019FE0  0E00               	movlw	0
 47473  019FE2  6E05               	movwf	?i2___xxtofl,c
 47474  019FE4  0E00               	movlw	0
 47475  019FE6  6E06               	movwf	?i2___xxtofl+1,c
 47476  019FE8  0E00               	movlw	0
 47477  019FEA  6E07               	movwf	?i2___xxtofl+2,c
 47478  019FEC  0E00               	movlw	0
 47479  019FEE  6E08               	movwf	?i2___xxtofl+3,c
 47480  019FF0  0012               	return	
 47481  019FF2                     i2l19944:
 47482  019FF2  0E96               	movlw	150
 47483  019FF4  6E0E               	movwf	i2___xxtofl@exp,c
 47484  019FF6  D006               	goto	i2l19948
 47485  019FF8                     i2l19946:
 47486  019FF8  2A0E               	incf	i2___xxtofl@exp,f,c
 47487  019FFA  90D8               	bcf	status,0,c
 47488  019FFC  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47489  019FFE  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47490  01A000  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47491  01A002  320F               	rrcf	i2___xxtofl@arg,f,c
 47492  01A004                     i2l19948:
 47493  01A004  0E00               	movlw	0
 47494  01A006  140F               	andwf	i2___xxtofl@arg,w,c
 47495  01A008  6E09               	movwf	??i2___xxtofl& (0+255),c
 47496  01A00A  0E00               	movlw	0
 47497  01A00C  1410               	andwf	i2___xxtofl@arg+1,w,c
 47498  01A00E  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47499  01A010  0E00               	movlw	0
 47500  01A012  1411               	andwf	i2___xxtofl@arg+2,w,c
 47501  01A014  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47502  01A016  0EFE               	movlw	254
 47503  01A018  1412               	andwf	i2___xxtofl@arg+3,w,c
 47504  01A01A  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47505  01A01C  5009               	movf	??i2___xxtofl,w,c
 47506  01A01E  100A               	iorwf	??i2___xxtofl+1,w,c
 47507  01A020  100B               	iorwf	??i2___xxtofl+2,w,c
 47508  01A022  100C               	iorwf	??i2___xxtofl+3,w,c
 47509  01A024  B4D8               	btfsc	status,2,c
 47510  01A026  D00D               	goto	i2l3371
 47511  01A028  D7E7               	goto	i2l19946
 47512  01A02A                     i2l19950:
 47513  01A02A  2A0E               	incf	i2___xxtofl@exp,f,c
 47514  01A02C  0E01               	movlw	1
 47515  01A02E  260F               	addwf	i2___xxtofl@arg,f,c
 47516  01A030  0E00               	movlw	0
 47517  01A032  2210               	addwfc	i2___xxtofl@arg+1,f,c
 47518  01A034  2211               	addwfc	i2___xxtofl@arg+2,f,c
 47519  01A036  2212               	addwfc	i2___xxtofl@arg+3,f,c
 47520  01A038  90D8               	bcf	status,0,c
 47521  01A03A  3212               	rrcf	i2___xxtofl@arg+3,f,c
 47522  01A03C  3211               	rrcf	i2___xxtofl@arg+2,f,c
 47523  01A03E  3210               	rrcf	i2___xxtofl@arg+1,f,c
 47524  01A040  320F               	rrcf	i2___xxtofl@arg,f,c
 47525  01A042                     i2l3371:
 47526  01A042  0E00               	movlw	0
 47527  01A044  140F               	andwf	i2___xxtofl@arg,w,c
 47528  01A046  6E09               	movwf	??i2___xxtofl& (0+255),c
 47529  01A048  0E00               	movlw	0
 47530  01A04A  1410               	andwf	i2___xxtofl@arg+1,w,c
 47531  01A04C  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 47532  01A04E  0E00               	movlw	0
 47533  01A050  1411               	andwf	i2___xxtofl@arg+2,w,c
 47534  01A052  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 47535  01A054  0EFF               	movlw	255
 47536  01A056  1412               	andwf	i2___xxtofl@arg+3,w,c
 47537  01A058  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 47538  01A05A  5009               	movf	??i2___xxtofl,w,c
 47539  01A05C  100A               	iorwf	??i2___xxtofl+1,w,c
 47540  01A05E  100B               	iorwf	??i2___xxtofl+2,w,c
 47541  01A060  100C               	iorwf	??i2___xxtofl+3,w,c
 47542  01A062  B4D8               	btfsc	status,2,c
 47543  01A064  D007               	goto	i2l19958
 47544  01A066  D7E1               	goto	i2l19950
 47545  01A068                     i2l19956:
 47546  01A068  060E               	decf	i2___xxtofl@exp,f,c
 47547  01A06A  90D8               	bcf	status,0,c
 47548  01A06C  360F               	rlcf	i2___xxtofl@arg,f,c
 47549  01A06E  3610               	rlcf	i2___xxtofl@arg+1,f,c
 47550  01A070  3611               	rlcf	i2___xxtofl@arg+2,f,c
 47551  01A072  3612               	rlcf	i2___xxtofl@arg+3,f,c
 47552  01A074                     i2l19958:
 47553  01A074  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 47554  01A076  D003               	goto	i2u2535_40
 47555  01A078  0E02               	movlw	2
 47556  01A07A  600E               	cpfslt	i2___xxtofl@exp,c
 47557  01A07C  D7F5               	goto	i2l19956
 47558  01A07E                     i2u2535_40:
 47559  01A07E  A00E               	btfss	i2___xxtofl@exp,0,c
 47560  01A080  9E11               	bcf	i2___xxtofl@arg+2,7,c
 47561  01A082  90D8               	bcf	status,0,c
 47562  01A084  320E               	rrcf	i2___xxtofl@exp,f,c
 47563  01A086  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 47564  01A08A  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 47565  01A08C  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 47566  01A08E  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 47567  01A090  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 47568  01A094  6A0B               	clrf	??i2___xxtofl+2,c
 47569  01A096  6A0A               	clrf	??i2___xxtofl+1,c
 47570  01A098  6A09               	clrf	??i2___xxtofl,c
 47571  01A09A  5009               	movf	??i2___xxtofl,w,c
 47572  01A09C  120F               	iorwf	i2___xxtofl@arg,f,c
 47573  01A09E  500A               	movf	??i2___xxtofl+1,w,c
 47574  01A0A0  1210               	iorwf	i2___xxtofl@arg+1,f,c
 47575  01A0A2  500B               	movf	??i2___xxtofl+2,w,c
 47576  01A0A4  1211               	iorwf	i2___xxtofl@arg+2,f,c
 47577  01A0A6  500C               	movf	??i2___xxtofl+3,w,c
 47578  01A0A8  1212               	iorwf	i2___xxtofl@arg+3,f,c
 47579  01A0AA  500D               	movf	i2___xxtofl@sign,w,c
 47580  01A0AC  A4D8               	btfss	status,2,c
 47581  01A0AE  AE08               	btfss	i2___xxtofl@val+3,7,c
 47582  01A0B0  D001               	goto	i2l19974
 47583  01A0B2  8E12               	bsf	i2___xxtofl@arg+3,7,c
 47584  01A0B4                     i2l19974:
 47585  01A0B4  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 47586  01A0B8  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 47587  01A0BC  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 47588  01A0C0  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 47589  01A0C4  0012               	return		;funcret
 47590  01A0C6                     __end_ofi2___xxtofl:
 47591                           	opt callstack 0
 47592                           
 47593 ;; *************** function i2___flsub *****************
 47594 ;; Defined at:
 47595 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47596 ;; Parameters:    Size  Location     Type
 47597 ;;  b               4    4[BANK0 ] unsigned char 
 47598 ;;  a               4    8[BANK0 ] unsigned char 
 47599 ;; Auto vars:     Size  Location     Type
 47600 ;;		None
 47601 ;; Return value:  Size  Location     Type
 47602 ;;                  4    4[BANK0 ] unsigned char 
 47603 ;; Registers used:
 47604 ;;		wreg, status,2, status,0, cstack
 47605 ;; Tracked objects:
 47606 ;;		On entry : 0/0
 47607 ;;		On exit  : 0/0
 47608 ;;		Unchanged: 0/0
 47609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47613 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47614 ;;Total ram usage:        8 bytes
 47615 ;; Hardware stack levels used:    1
 47616 ;; Hardware stack levels required when called:    1
 47617 ;; This function calls:
 47618 ;;		i2___fladd
 47619 ;; This function is called by:
 47620 ;;		_ADC_PostProcessingHandler
 47621 ;;		i2__doprnt
 47622 ;; This function uses a non-reentrant model
 47623 ;;
 47624                           
 47625                           	psect	text201
 47626  01BDCE                     __ptext201:
 47627                           	opt callstack 0
 47628  01BDCE                     i2___flsub:
 47629                           	opt callstack 12
 47630                           
 47631                           ;incstack = 0
 47632  01BDCE  0E00               	movlw	0
 47633  01BDD0  0100               	movlb	0	; () banked
 47634  01BDD2  1B68               	xorwf	i2___flsub@a& (0+255),f,b
 47635  01BDD4  0E00               	movlw	0
 47636  01BDD6  1B69               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 47637  01BDD8  0E00               	movlw	0
 47638  01BDDA  1B6A               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 47639  01BDDC  0E80               	movlw	128
 47640  01BDDE  1B6B               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 47641                           
 47642                           ; BSR set to: 0
 47643  01BDE0  C064  F052         	movff	i2___flsub@b,i2___fladd@b
 47644  01BDE4  C065  F053         	movff	i2___flsub@b+1,i2___fladd@b+1
 47645  01BDE8  C066  F054         	movff	i2___flsub@b+2,i2___fladd@b+2
 47646  01BDEC  C067  F055         	movff	i2___flsub@b+3,i2___fladd@b+3
 47647  01BDF0  C068  F056         	movff	i2___flsub@a,i2___fladd@a
 47648  01BDF4  C069  F057         	movff	i2___flsub@a+1,i2___fladd@a+1
 47649  01BDF8  C06A  F058         	movff	i2___flsub@a+2,i2___fladd@a+2
 47650  01BDFC  C06B  F059         	movff	i2___flsub@a+3,i2___fladd@a+3
 47651  01BE00  EC4B  F0BD         	call	i2___fladd	;wreg free
 47652  01BE04  C052  F064         	movff	?i2___fladd,?i2___flsub
 47653  01BE08  C053  F065         	movff	?i2___fladd+1,?i2___flsub+1
 47654  01BE0C  C054  F066         	movff	?i2___fladd+2,?i2___flsub+2
 47655  01BE10  C055  F067         	movff	?i2___fladd+3,?i2___flsub+3
 47656  01BE14  0012               	return		;funcret
 47657  01BE16                     __end_ofi2___flsub:
 47658                           	opt callstack 0
 47659                           
 47660 ;; *************** function i2___fladd *****************
 47661 ;; Defined at:
 47662 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 47663 ;; Parameters:    Size  Location     Type
 47664 ;;  b               4   81[COMRAM] unsigned char 
 47665 ;;  a               4   85[COMRAM] unsigned char 
 47666 ;; Auto vars:     Size  Location     Type
 47667 ;;  __fladd         1    3[BANK0 ] unsigned char 
 47668 ;;  __fladd         1    2[BANK0 ] unsigned char 
 47669 ;;  __fladd         1    1[BANK0 ] unsigned char 
 47670 ;;  __fladd         1    0[BANK0 ] unsigned char 
 47671 ;; Return value:  Size  Location     Type
 47672 ;;                  4   81[COMRAM] unsigned char 
 47673 ;; Registers used:
 47674 ;;		wreg, status,2, status,0
 47675 ;; Tracked objects:
 47676 ;;		On entry : 0/0
 47677 ;;		On exit  : 0/0
 47678 ;;		Unchanged: 0/0
 47679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47680 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47681 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47683 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47684 ;;Total ram usage:       16 bytes
 47685 ;; Hardware stack levels used:    1
 47686 ;; This function calls:
 47687 ;;		Nothing
 47688 ;; This function is called by:
 47689 ;;		_ADC_PostProcessingHandler
 47690 ;;		_heartbeatTimerHandler
 47691 ;;		i2__doprnt
 47692 ;;		i2___flsub
 47693 ;; This function uses a non-reentrant model
 47694 ;;
 47695                           
 47696                           	psect	text202
 47697  017A96                     __ptext202:
 47698                           	opt callstack 0
 47699  017A96                     i2___fladd:
 47700                           	opt callstack 14
 47701                           
 47702                           ;incstack = 0
 47703  017A96  5055               	movf	i2___fladd@b+3,w,c
 47704  017A98  0B80               	andlw	128
 47705  017A9A  0100               	movlb	0	; () banked
 47706  017A9C  6F60               	movwf	i2___fladd@signs& (0+255),b
 47707  017A9E  5055               	movf	i2___fladd@b+3,w,c
 47708  017AA0  2455               	addwf	i2___fladd@b+3,w,c
 47709  017AA2  6F62               	movwf	i2___fladd@bexp& (0+255),b
 47710                           
 47711                           ; BSR set to: 0
 47712  017AA4  BE54               	btfsc	i2___fladd@b+2,7,c
 47713                           
 47714                           ; BSR set to: 0
 47715  017AA6  8162               	bsf	i2___fladd@bexp& (0+255),0,b
 47716                           
 47717                           ; BSR set to: 0
 47718  017AA8  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47719  017AAA  B4D8               	btfsc	status,2,c
 47720  017AAC  D00D               	goto	i2l18988
 47721                           
 47722                           ; BSR set to: 0
 47723  017AAE  2962               	incf	i2___fladd@bexp& (0+255),w,b
 47724  017AB0  A4D8               	btfss	status,2,c
 47725  017AB2  D008               	goto	i2l18984
 47726                           
 47727                           ; BSR set to: 0
 47728  017AB4  0E00               	movlw	0
 47729  017AB6  6E52               	movwf	i2___fladd@b,c
 47730  017AB8  0E00               	movlw	0
 47731  017ABA  6E53               	movwf	i2___fladd@b+1,c
 47732  017ABC  0E00               	movlw	0
 47733  017ABE  6E54               	movwf	i2___fladd@b+2,c
 47734  017AC0  0E00               	movlw	0
 47735  017AC2  6E55               	movwf	i2___fladd@b+3,c
 47736  017AC4                     i2l18984:
 47737                           
 47738                           ; BSR set to: 0
 47739  017AC4  8E54               	bsf	i2___fladd@b+2,7,c
 47740  017AC6  D006               	goto	L52
 47741  017AC8                     i2l18988:
 47742                           
 47743                           ; BSR set to: 0
 47744  017AC8  0E00               	movlw	0
 47745  017ACA  6E52               	movwf	i2___fladd@b,c
 47746  017ACC  0E00               	movlw	0
 47747  017ACE  6E53               	movwf	i2___fladd@b+1,c
 47748  017AD0  0E00               	movlw	0
 47749  017AD2  6E54               	movwf	i2___fladd@b+2,c
 47750  017AD4                     L52:
 47751  017AD4  0E00               	movlw	0
 47752  017AD6  6E55               	movwf	i2___fladd@b+3,c
 47753                           
 47754                           ; BSR set to: 0
 47755  017AD8  5059               	movf	i2___fladd@a+3,w,c
 47756  017ADA  0B80               	andlw	128
 47757  017ADC  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47758                           
 47759                           ; BSR set to: 0
 47760  017ADE  5160               	movf	i2___fladd@signs& (0+255),w,b
 47761  017AE0  1961               	xorwf	i2___fladd@aexp& (0+255),w,b
 47762  017AE2  A4D8               	btfss	status,2,c
 47763                           
 47764                           ; BSR set to: 0
 47765  017AE4  8D60               	bsf	i2___fladd@signs& (0+255),6,b
 47766                           
 47767                           ; BSR set to: 0
 47768  017AE6  5059               	movf	i2___fladd@a+3,w,c
 47769  017AE8  2459               	addwf	i2___fladd@a+3,w,c
 47770  017AEA  6F61               	movwf	i2___fladd@aexp& (0+255),b
 47771                           
 47772                           ; BSR set to: 0
 47773  017AEC  BE58               	btfsc	i2___fladd@a+2,7,c
 47774                           
 47775                           ; BSR set to: 0
 47776  017AEE  8161               	bsf	i2___fladd@aexp& (0+255),0,b
 47777                           
 47778                           ; BSR set to: 0
 47779  017AF0  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47780  017AF2  B4D8               	btfsc	status,2,c
 47781  017AF4  D00D               	goto	i2l19012
 47782                           
 47783                           ; BSR set to: 0
 47784  017AF6  2961               	incf	i2___fladd@aexp& (0+255),w,b
 47785  017AF8  A4D8               	btfss	status,2,c
 47786  017AFA  D008               	goto	i2l19008
 47787                           
 47788                           ; BSR set to: 0
 47789  017AFC  0E00               	movlw	0
 47790  017AFE  6E56               	movwf	i2___fladd@a,c
 47791  017B00  0E00               	movlw	0
 47792  017B02  6E57               	movwf	i2___fladd@a+1,c
 47793  017B04  0E00               	movlw	0
 47794  017B06  6E58               	movwf	i2___fladd@a+2,c
 47795  017B08  0E00               	movlw	0
 47796  017B0A  6E59               	movwf	i2___fladd@a+3,c
 47797  017B0C                     i2l19008:
 47798                           
 47799                           ; BSR set to: 0
 47800  017B0C  8E58               	bsf	i2___fladd@a+2,7,c
 47801  017B0E  D006               	goto	L53
 47802  017B10                     i2l19012:
 47803                           
 47804                           ; BSR set to: 0
 47805  017B10  0E00               	movlw	0
 47806  017B12  6E56               	movwf	i2___fladd@a,c
 47807  017B14  0E00               	movlw	0
 47808  017B16  6E57               	movwf	i2___fladd@a+1,c
 47809  017B18  0E00               	movlw	0
 47810  017B1A  6E58               	movwf	i2___fladd@a+2,c
 47811  017B1C                     L53:
 47812  017B1C  0E00               	movlw	0
 47813  017B1E  6E59               	movwf	i2___fladd@a+3,c
 47814                           
 47815                           ; BSR set to: 0
 47816  017B20  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47817  017B22  5D61               	subwf	i2___fladd@aexp& (0+255),w,b
 47818  017B24  B0D8               	btfsc	status,0,c
 47819  017B26  D022               	goto	i2l19050
 47820                           
 47821                           ; BSR set to: 0
 47822  017B28  AD60               	btfss	i2___fladd@signs& (0+255),6,b
 47823  017B2A  D002               	goto	i2l19020
 47824                           
 47825                           ; BSR set to: 0
 47826  017B2C  0E80               	movlw	128
 47827  017B2E  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 47828  017B30                     i2l19020:
 47829                           
 47830                           ; BSR set to: 0
 47831  017B30  C062  F063         	movff	i2___fladd@bexp,i2___fladd@grs
 47832                           
 47833                           ; BSR set to: 0
 47834  017B34  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47835                           
 47836                           ; BSR set to: 0
 47837  017B38  C063  F061         	movff	i2___fladd@grs,i2___fladd@aexp
 47838                           
 47839                           ; BSR set to: 0
 47840  017B3C  C052  F063         	movff	i2___fladd@b,i2___fladd@grs
 47841                           
 47842                           ; BSR set to: 0
 47843  017B40  C056  F052         	movff	i2___fladd@a,i2___fladd@b
 47844                           
 47845                           ; BSR set to: 0
 47846  017B44  C063  F056         	movff	i2___fladd@grs,i2___fladd@a
 47847                           
 47848                           ; BSR set to: 0
 47849  017B48  C053  F063         	movff	i2___fladd@b+1,i2___fladd@grs
 47850                           
 47851                           ; BSR set to: 0
 47852  017B4C  C057  F053         	movff	i2___fladd@a+1,i2___fladd@b+1
 47853                           
 47854                           ; BSR set to: 0
 47855  017B50  C063  F057         	movff	i2___fladd@grs,i2___fladd@a+1
 47856                           
 47857                           ; BSR set to: 0
 47858  017B54  C054  F063         	movff	i2___fladd@b+2,i2___fladd@grs
 47859                           
 47860                           ; BSR set to: 0
 47861  017B58  C058  F054         	movff	i2___fladd@a+2,i2___fladd@b+2
 47862                           
 47863                           ; BSR set to: 0
 47864  017B5C  C063  F058         	movff	i2___fladd@grs,i2___fladd@a+2
 47865                           
 47866                           ; BSR set to: 0
 47867  017B60  C055  F063         	movff	i2___fladd@b+3,i2___fladd@grs
 47868                           
 47869                           ; BSR set to: 0
 47870  017B64  C059  F055         	movff	i2___fladd@a+3,i2___fladd@b+3
 47871                           
 47872                           ; BSR set to: 0
 47873  017B68  C063  F059         	movff	i2___fladd@grs,i2___fladd@a+3
 47874  017B6C                     i2l19050:
 47875                           
 47876                           ; BSR set to: 0
 47877  017B6C  0E00               	movlw	0
 47878  017B6E  6F63               	movwf	i2___fladd@grs& (0+255),b
 47879                           
 47880                           ; BSR set to: 0
 47881  017B70  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47882  017B72  C061  F05A         	movff	i2___fladd@aexp,??i2___fladd
 47883  017B76  6A5B               	clrf	(??i2___fladd+1)& (0+255),c
 47884  017B78  5E5A               	subwf	??i2___fladd,f,c
 47885  017B7A  0E00               	movlw	0
 47886  017B7C  5A5B               	subwfb	??i2___fladd+1,f,c
 47887  017B7E  BE5B               	btfsc	??i2___fladd+1,7,c
 47888  017B80  D02C               	goto	i2l3238
 47889  017B82  505B               	movf	??i2___fladd+1,w,c
 47890  017B84  E104               	bnz	i2u2400_40
 47891  017B86  0E1A               	movlw	26
 47892  017B88  5C5A               	subwf	??i2___fladd,w,c
 47893  017B8A  A0D8               	btfss	status,0,c
 47894  017B8C  D026               	goto	i2l3238
 47895  017B8E                     i2u2400_40:
 47896                           
 47897                           ; BSR set to: 0
 47898  017B8E  5052               	movf	i2___fladd@b,w,c
 47899  017B90  1053               	iorwf	i2___fladd@b+1,w,c
 47900  017B92  1054               	iorwf	i2___fladd@b+2,w,c
 47901  017B94  1055               	iorwf	i2___fladd@b+3,w,c
 47902  017B96  B4D8               	btfsc	status,2,c
 47903  017B98  D002               	goto	i2u2401_40
 47904  017B9A  0E01               	movlw	1
 47905  017B9C  D001               	goto	i2u2402_40
 47906  017B9E                     i2u2401_40:
 47907  017B9E  0E00               	movlw	0
 47908  017BA0                     i2u2402_40:
 47909  017BA0  6F63               	movwf	i2___fladd@grs& (0+255),b
 47910                           
 47911                           ; BSR set to: 0
 47912  017BA2  0E00               	movlw	0
 47913  017BA4  6E52               	movwf	i2___fladd@b,c
 47914  017BA6  0E00               	movlw	0
 47915  017BA8  6E53               	movwf	i2___fladd@b+1,c
 47916  017BAA  0E00               	movlw	0
 47917  017BAC  6E54               	movwf	i2___fladd@b+2,c
 47918  017BAE  0E00               	movlw	0
 47919  017BB0  6E55               	movwf	i2___fladd@b+3,c
 47920                           
 47921                           ; BSR set to: 0
 47922  017BB2  C061  F062         	movff	i2___fladd@aexp,i2___fladd@bexp
 47923  017BB6  D015               	goto	i2u2405_40
 47924  017BB8                     i2l3239:
 47925                           
 47926                           ; BSR set to: 0
 47927  017BB8  A163               	btfss	i2___fladd@grs& (0+255),0,b
 47928  017BBA  D005               	goto	i2l19062
 47929                           
 47930                           ; BSR set to: 0
 47931  017BBC  90D8               	bcf	status,0,c
 47932  017BBE  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 47933  017BC0  0901               	iorlw	1
 47934  017BC2  6F63               	movwf	i2___fladd@grs& (0+255),b
 47935  017BC4  D002               	goto	i2l19064
 47936  017BC6                     i2l19062:
 47937                           
 47938                           ; BSR set to: 0
 47939  017BC6  90D8               	bcf	status,0,c
 47940  017BC8  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 47941  017BCA                     i2l19064:
 47942                           
 47943                           ; BSR set to: 0
 47944  017BCA  B052               	btfsc	i2___fladd@b,0,c
 47945                           
 47946                           ; BSR set to: 0
 47947  017BCC  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 47948                           
 47949                           ; BSR set to: 0
 47950  017BCE  3455               	rlcf	i2___fladd@b+3,w,c
 47951  017BD0  3255               	rrcf	i2___fladd@b+3,f,c
 47952  017BD2  3254               	rrcf	i2___fladd@b+2,f,c
 47953  017BD4  3253               	rrcf	i2___fladd@b+1,f,c
 47954  017BD6  3252               	rrcf	i2___fladd@b,f,c
 47955                           
 47956                           ; BSR set to: 0
 47957  017BD8  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 47958  017BDA                     i2l3238:
 47959                           
 47960                           ; BSR set to: 0
 47961  017BDA  5161               	movf	i2___fladd@aexp& (0+255),w,b
 47962  017BDC  5D62               	subwf	i2___fladd@bexp& (0+255),w,b
 47963  017BDE  A0D8               	btfss	status,0,c
 47964  017BE0  D7EB               	goto	i2l3239
 47965  017BE2                     i2u2405_40:
 47966                           
 47967                           ; BSR set to: 0
 47968  017BE2  BD60               	btfsc	i2___fladd@signs& (0+255),6,b
 47969  017BE4  D028               	goto	i2l19096
 47970                           
 47971                           ; BSR set to: 0
 47972  017BE6  5162               	movf	i2___fladd@bexp& (0+255),w,b
 47973  017BE8  A4D8               	btfss	status,2,c
 47974  017BEA  D009               	goto	i2l19078
 47975                           
 47976                           ; BSR set to: 0
 47977  017BEC  0E00               	movlw	0
 47978  017BEE  6E52               	movwf	?i2___fladd,c
 47979  017BF0  0E00               	movlw	0
 47980  017BF2  6E53               	movwf	?i2___fladd+1,c
 47981  017BF4  0E00               	movlw	0
 47982  017BF6  6E54               	movwf	?i2___fladd+2,c
 47983  017BF8  0E00               	movlw	0
 47984  017BFA  6E55               	movwf	?i2___fladd+3,c
 47985  017BFC  0012               	return	
 47986  017BFE                     i2l19078:
 47987                           
 47988                           ; BSR set to: 0
 47989  017BFE  5056               	movf	i2___fladd@a,w,c
 47990  017C00  2652               	addwf	i2___fladd@b,f,c
 47991  017C02  5057               	movf	i2___fladd@a+1,w,c
 47992  017C04  2253               	addwfc	i2___fladd@b+1,f,c
 47993  017C06  5058               	movf	i2___fladd@a+2,w,c
 47994  017C08  2254               	addwfc	i2___fladd@b+2,f,c
 47995  017C0A  5059               	movf	i2___fladd@a+3,w,c
 47996  017C0C  2255               	addwfc	i2___fladd@b+3,f,c
 47997                           
 47998                           ; BSR set to: 0
 47999  017C0E  A055               	btfss	i2___fladd@b+3,0,c
 48000  017C10  D071               	goto	i2u2418_40
 48001                           
 48002                           ; BSR set to: 0
 48003  017C12  A163               	btfss	i2___fladd@grs& (0+255),0,b
 48004  017C14  D005               	goto	i2l19086
 48005                           
 48006                           ; BSR set to: 0
 48007  017C16  90D8               	bcf	status,0,c
 48008  017C18  3163               	rrcf	i2___fladd@grs& (0+255),w,b
 48009  017C1A  0901               	iorlw	1
 48010  017C1C  6F63               	movwf	i2___fladd@grs& (0+255),b
 48011  017C1E  D002               	goto	i2l19088
 48012  017C20                     i2l19086:
 48013                           
 48014                           ; BSR set to: 0
 48015  017C20  90D8               	bcf	status,0,c
 48016  017C22  3363               	rrcf	i2___fladd@grs& (0+255),f,b
 48017  017C24                     i2l19088:
 48018                           
 48019                           ; BSR set to: 0
 48020  017C24  B052               	btfsc	i2___fladd@b,0,c
 48021                           
 48022                           ; BSR set to: 0
 48023  017C26  8F63               	bsf	i2___fladd@grs& (0+255),7,b
 48024                           
 48025                           ; BSR set to: 0
 48026  017C28  3455               	rlcf	i2___fladd@b+3,w,c
 48027  017C2A  3255               	rrcf	i2___fladd@b+3,f,c
 48028  017C2C  3254               	rrcf	i2___fladd@b+2,f,c
 48029  017C2E  3253               	rrcf	i2___fladd@b+1,f,c
 48030  017C30  3252               	rrcf	i2___fladd@b,f,c
 48031                           
 48032                           ; BSR set to: 0
 48033  017C32  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 48034  017C34  D05F               	goto	i2u2418_40
 48035  017C36                     i2l19096:
 48036                           
 48037                           ; BSR set to: 0
 48038  017C36  5056               	movf	i2___fladd@a,w,c
 48039  017C38  5C52               	subwf	i2___fladd@b,w,c
 48040  017C3A  5057               	movf	i2___fladd@a+1,w,c
 48041  017C3C  5853               	subwfb	i2___fladd@b+1,w,c
 48042  017C3E  5058               	movf	i2___fladd@a+2,w,c
 48043  017C40  5854               	subwfb	i2___fladd@b+2,w,c
 48044  017C42  5055               	movf	i2___fladd@b+3,w,c
 48045  017C44  0A80               	xorlw	128
 48046  017C46  6E5A               	movwf	??i2___fladd& (0+255),c
 48047  017C48  5059               	movf	i2___fladd@a+3,w,c
 48048  017C4A  0A80               	xorlw	128
 48049  017C4C  585A               	subwfb	??i2___fladd& (0+255),w,c
 48050  017C4E  B0D8               	btfsc	status,0,c
 48051  017C50  D025               	goto	i2l19106
 48052                           
 48053                           ; BSR set to: 0
 48054  017C52  5052               	movf	i2___fladd@b,w,c
 48055  017C54  5C56               	subwf	i2___fladd@a,w,c
 48056  017C56  6E5A               	movwf	??i2___fladd& (0+255),c
 48057  017C58  5053               	movf	i2___fladd@b+1,w,c
 48058  017C5A  5857               	subwfb	i2___fladd@a+1,w,c
 48059  017C5C  6E5B               	movwf	(??i2___fladd+1)& (0+255),c
 48060  017C5E  5054               	movf	i2___fladd@b+2,w,c
 48061  017C60  5858               	subwfb	i2___fladd@a+2,w,c
 48062  017C62  6E5C               	movwf	(??i2___fladd+2)& (0+255),c
 48063  017C64  5055               	movf	i2___fladd@b+3,w,c
 48064  017C66  5859               	subwfb	i2___fladd@a+3,w,c
 48065  017C68  6E5D               	movwf	(??i2___fladd+3)& (0+255),c
 48066  017C6A  0EFF               	movlw	255
 48067  017C6C  245A               	addwf	??i2___fladd,w,c
 48068  017C6E  6E52               	movwf	i2___fladd@b,c
 48069  017C70  0EFF               	movlw	255
 48070  017C72  205B               	addwfc	??i2___fladd+1,w,c
 48071  017C74  6E53               	movwf	i2___fladd@b+1,c
 48072  017C76  0EFF               	movlw	255
 48073  017C78  205C               	addwfc	??i2___fladd+2,w,c
 48074  017C7A  6E54               	movwf	i2___fladd@b+2,c
 48075  017C7C  0EFF               	movlw	255
 48076  017C7E  205D               	addwfc	??i2___fladd+3,w,c
 48077  017C80  6E55               	movwf	i2___fladd@b+3,c
 48078  017C82  0E80               	movlw	128
 48079  017C84  1B60               	xorwf	i2___fladd@signs& (0+255),f,b
 48080                           
 48081                           ; BSR set to: 0
 48082  017C86  6D63               	negf	i2___fladd@grs& (0+255),b
 48083                           
 48084                           ; BSR set to: 0
 48085  017C88  5163               	movf	i2___fladd@grs& (0+255),w,b
 48086  017C8A  A4D8               	btfss	status,2,c
 48087  017C8C  D00F               	goto	i2l3254
 48088                           
 48089                           ; BSR set to: 0
 48090  017C8E  0E01               	movlw	1
 48091  017C90  2652               	addwf	i2___fladd@b,f,c
 48092  017C92  0E00               	movlw	0
 48093  017C94  2253               	addwfc	i2___fladd@b+1,f,c
 48094  017C96  2254               	addwfc	i2___fladd@b+2,f,c
 48095  017C98  2255               	addwfc	i2___fladd@b+3,f,c
 48096  017C9A  D008               	goto	i2l3254
 48097  017C9C                     i2l19106:
 48098                           
 48099                           ; BSR set to: 0
 48100  017C9C  5056               	movf	i2___fladd@a,w,c
 48101  017C9E  5E52               	subwf	i2___fladd@b,f,c
 48102  017CA0  5057               	movf	i2___fladd@a+1,w,c
 48103  017CA2  5A53               	subwfb	i2___fladd@b+1,f,c
 48104  017CA4  5058               	movf	i2___fladd@a+2,w,c
 48105  017CA6  5A54               	subwfb	i2___fladd@b+2,f,c
 48106  017CA8  5059               	movf	i2___fladd@a+3,w,c
 48107  017CAA  5A55               	subwfb	i2___fladd@b+3,f,c
 48108  017CAC                     i2l3254:
 48109                           
 48110                           ; BSR set to: 0
 48111  017CAC  5052               	movf	i2___fladd@b,w,c
 48112  017CAE  1053               	iorwf	i2___fladd@b+1,w,c
 48113  017CB0  1054               	iorwf	i2___fladd@b+2,w,c
 48114  017CB2  1055               	iorwf	i2___fladd@b+3,w,c
 48115  017CB4  A4D8               	btfss	status,2,c
 48116  017CB6  D01C               	goto	i2l19130
 48117                           
 48118                           ; BSR set to: 0
 48119  017CB8  5163               	movf	i2___fladd@grs& (0+255),w,b
 48120  017CBA  A4D8               	btfss	status,2,c
 48121  017CBC  D019               	goto	i2l19130
 48122                           
 48123                           ; BSR set to: 0
 48124  017CBE  0E00               	movlw	0
 48125  017CC0  6E52               	movwf	?i2___fladd,c
 48126  017CC2  0E00               	movlw	0
 48127  017CC4  6E53               	movwf	?i2___fladd+1,c
 48128  017CC6  0E00               	movlw	0
 48129  017CC8  6E54               	movwf	?i2___fladd+2,c
 48130  017CCA  0E00               	movlw	0
 48131  017CCC  6E55               	movwf	?i2___fladd+3,c
 48132  017CCE  0012               	return	
 48133  017CD0                     i2l19114:
 48134                           
 48135                           ; BSR set to: 0
 48136  017CD0  90D8               	bcf	status,0,c
 48137  017CD2  3652               	rlcf	i2___fladd@b,f,c
 48138  017CD4  3653               	rlcf	i2___fladd@b+1,f,c
 48139  017CD6  3654               	rlcf	i2___fladd@b+2,f,c
 48140  017CD8  3655               	rlcf	i2___fladd@b+3,f,c
 48141                           
 48142                           ; BSR set to: 0
 48143  017CDA  BF63               	btfsc	i2___fladd@grs& (0+255),7,b
 48144                           
 48145                           ; BSR set to: 0
 48146  017CDC  8052               	bsf	i2___fladd@b,0,c
 48147                           
 48148                           ; BSR set to: 0
 48149  017CDE  A163               	btfss	i2___fladd@grs& (0+255),0,b
 48150  017CE0  D002               	goto	i2l19124
 48151                           
 48152                           ; BSR set to: 0
 48153  017CE2  80D8               	bsf	status,0,c
 48154  017CE4  D001               	goto	L54
 48155  017CE6                     i2l19124:
 48156                           
 48157                           ; BSR set to: 0
 48158  017CE6  90D8               	bcf	status,0,c
 48159  017CE8                     L54:
 48160  017CE8  3763               	rlcf	i2___fladd@grs& (0+255),f,b
 48161                           
 48162                           ; BSR set to: 0
 48163  017CEA  5162               	movf	i2___fladd@bexp& (0+255),w,b
 48164  017CEC  A4D8               	btfss	status,2,c
 48165                           
 48166                           ; BSR set to: 0
 48167  017CEE  0762               	decf	i2___fladd@bexp& (0+255),f,b
 48168  017CF0                     i2l19130:
 48169                           
 48170                           ; BSR set to: 0
 48171  017CF0  AE54               	btfss	i2___fladd@b+2,7,c
 48172  017CF2  D7EE               	goto	i2l19114
 48173  017CF4                     i2u2418_40:
 48174                           
 48175                           ; BSR set to: 0
 48176  017CF4  0E00               	movlw	0
 48177  017CF6  6F61               	movwf	i2___fladd@aexp& (0+255),b
 48178                           
 48179                           ; BSR set to: 0
 48180  017CF8  AF63               	btfss	i2___fladd@grs& (0+255),7,b
 48181  017CFA  D00B               	goto	i2l3263
 48182                           
 48183                           ; BSR set to: 0
 48184  017CFC  C063  F05A         	movff	i2___fladd@grs,??i2___fladd
 48185  017D00  0E7F               	movlw	127
 48186  017D02  165A               	andwf	??i2___fladd,f,c
 48187  017D04  B4D8               	btfsc	status,2,c
 48188  017D06  D003               	goto	i2l3264
 48189  017D08                     i2u2420_40:
 48190                           
 48191                           ; BSR set to: 0
 48192  017D08  0E01               	movlw	1
 48193  017D0A  6F61               	movwf	i2___fladd@aexp& (0+255),b
 48194  017D0C  D002               	goto	i2l3263
 48195  017D0E                     i2l3264:
 48196                           
 48197                           ; BSR set to: 0
 48198  017D0E  B052               	btfsc	i2___fladd@b,0,c
 48199  017D10  D7FB               	goto	i2u2420_40
 48200  017D12                     i2l3263:
 48201                           
 48202                           ; BSR set to: 0
 48203  017D12  5161               	movf	i2___fladd@aexp& (0+255),w,b
 48204  017D14  B4D8               	btfsc	status,2,c
 48205  017D16  D020               	goto	i2l19150
 48206                           
 48207                           ; BSR set to: 0
 48208  017D18  0E01               	movlw	1
 48209  017D1A  2652               	addwf	i2___fladd@b,f,c
 48210  017D1C  0E00               	movlw	0
 48211  017D1E  2253               	addwfc	i2___fladd@b+1,f,c
 48212  017D20  2254               	addwfc	i2___fladd@b+2,f,c
 48213  017D22  2255               	addwfc	i2___fladd@b+3,f,c
 48214                           
 48215                           ; BSR set to: 0
 48216  017D24  A055               	btfss	i2___fladd@b+3,0,c
 48217  017D26  D018               	goto	i2l19150
 48218                           
 48219                           ; BSR set to: 0
 48220  017D28  C052  F05A         	movff	i2___fladd@b,??i2___fladd
 48221  017D2C  C053  F05B         	movff	i2___fladd@b+1,??i2___fladd+1
 48222  017D30  C054  F05C         	movff	i2___fladd@b+2,??i2___fladd+2
 48223  017D34  C055  F05D         	movff	i2___fladd@b+3,??i2___fladd+3
 48224  017D38  345D               	rlcf	??i2___fladd+3,w,c
 48225  017D3A  325D               	rrcf	??i2___fladd+3,f,c
 48226  017D3C  325C               	rrcf	??i2___fladd+2,f,c
 48227  017D3E  325B               	rrcf	??i2___fladd+1,f,c
 48228  017D40  325A               	rrcf	??i2___fladd,f,c
 48229  017D42  C05A  F052         	movff	??i2___fladd,i2___fladd@b
 48230  017D46  C05B  F053         	movff	??i2___fladd+1,i2___fladd@b+1
 48231  017D4A  C05C  F054         	movff	??i2___fladd+2,i2___fladd@b+2
 48232  017D4E  C05D  F055         	movff	??i2___fladd+3,i2___fladd@b+3
 48233  017D52  2962               	incf	i2___fladd@bexp& (0+255),w,b
 48234  017D54  A4D8               	btfss	status,2,c
 48235                           
 48236                           ; BSR set to: 0
 48237  017D56  2B62               	incf	i2___fladd@bexp& (0+255),f,b
 48238  017D58                     i2l19150:
 48239                           
 48240                           ; BSR set to: 0
 48241  017D58  2962               	incf	i2___fladd@bexp& (0+255),w,b
 48242  017D5A  B4D8               	btfsc	status,2,c
 48243  017D5C  D003               	goto	i2u2426_40
 48244                           
 48245                           ; BSR set to: 0
 48246  017D5E  5162               	movf	i2___fladd@bexp& (0+255),w,b
 48247  017D60  A4D8               	btfss	status,2,c
 48248  017D62  D00D               	goto	i2l19158
 48249  017D64                     i2u2426_40:
 48250                           
 48251                           ; BSR set to: 0
 48252  017D64  0E00               	movlw	0
 48253  017D66  6E52               	movwf	i2___fladd@b,c
 48254  017D68  0E00               	movlw	0
 48255  017D6A  6E53               	movwf	i2___fladd@b+1,c
 48256  017D6C  0E00               	movlw	0
 48257  017D6E  6E54               	movwf	i2___fladd@b+2,c
 48258  017D70  0E00               	movlw	0
 48259  017D72  6E55               	movwf	i2___fladd@b+3,c
 48260  017D74  5162               	movf	i2___fladd@bexp& (0+255),w,b
 48261  017D76  A4D8               	btfss	status,2,c
 48262  017D78  D002               	goto	i2l19158
 48263                           
 48264                           ; BSR set to: 0
 48265  017D7A  0E00               	movlw	0
 48266  017D7C  6F60               	movwf	i2___fladd@signs& (0+255),b
 48267  017D7E                     i2l19158:
 48268                           
 48269                           ; BSR set to: 0
 48270  017D7E  A162               	btfss	i2___fladd@bexp& (0+255),0,b
 48271  017D80  D002               	goto	i2l19162
 48272                           
 48273                           ; BSR set to: 0
 48274  017D82  8E54               	bsf	i2___fladd@b+2,7,c
 48275  017D84  D001               	goto	i2l19164
 48276  017D86                     i2l19162:
 48277                           
 48278                           ; BSR set to: 0
 48279  017D86  9E54               	bcf	i2___fladd@b+2,7,c
 48280  017D88                     i2l19164:
 48281                           
 48282                           ; BSR set to: 0
 48283  017D88  90D8               	bcf	status,0,c
 48284  017D8A  3162               	rrcf	i2___fladd@bexp& (0+255),w,b
 48285  017D8C  6E55               	movwf	i2___fladd@b+3,c
 48286                           
 48287                           ; BSR set to: 0
 48288  017D8E  BF60               	btfsc	i2___fladd@signs& (0+255),7,b
 48289                           
 48290                           ; BSR set to: 0
 48291  017D90  8E55               	bsf	i2___fladd@b+3,7,c
 48292                           
 48293                           ; BSR set to: 0
 48294  017D92  C052  F052         	movff	i2___fladd@b,?i2___fladd
 48295  017D96  C053  F053         	movff	i2___fladd@b+1,?i2___fladd+1
 48296  017D9A  C054  F054         	movff	i2___fladd@b+2,?i2___fladd+2
 48297  017D9E  C055  F055         	movff	i2___fladd@b+3,?i2___fladd+3
 48298                           
 48299                           ; BSR set to: 0
 48300  017DA2  0012               	return		;funcret
 48301  017DA4                     __end_ofi2___fladd:
 48302                           	opt callstack 0
 48303                           
 48304 ;; *************** function i2___flmul *****************
 48305 ;; Defined at:
 48306 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
 48307 ;; Parameters:    Size  Location     Type
 48308 ;;  b               4   43[COMRAM] unsigned char 
 48309 ;;  a               4   47[COMRAM] unsigned char 
 48310 ;; Auto vars:     Size  Location     Type
 48311 ;;  __flmul         4   62[COMRAM] struct .
 48312 ;;  __flmul         4   57[COMRAM] unsigned long 
 48313 ;;  __flmul         2   66[COMRAM] struct .
 48314 ;;  __flmul         1   61[COMRAM] unsigned char 
 48315 ;;  __flmul         1   56[COMRAM] unsigned char 
 48316 ;;  __flmul         1   55[COMRAM] unsigned char 
 48317 ;; Return value:  Size  Location     Type
 48318 ;;                  4   43[COMRAM] unsigned char 
 48319 ;; Registers used:
 48320 ;;		wreg, status,2, status,0, prodl, prodh
 48321 ;; Tracked objects:
 48322 ;;		On entry : 0/0
 48323 ;;		On exit  : 0/0
 48324 ;;		Unchanged: 0/0
 48325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48327 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48329 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48330 ;;Total ram usage:       25 bytes
 48331 ;; Hardware stack levels used:    1
 48332 ;; This function calls:
 48333 ;;		Nothing
 48334 ;; This function is called by:
 48335 ;;		_ADC_PostProcessingHandler
 48336 ;;		i2_fround
 48337 ;;		i2_scale
 48338 ;;		i2__doprnt
 48339 ;; This function uses a non-reentrant model
 48340 ;;
 48341                           
 48342                           	psect	text203
 48343  017128                     __ptext203:
 48344                           	opt callstack 0
 48345  017128                     i2___flmul:
 48346                           	opt callstack 12
 48347                           
 48348                           ; BSR set to: 0
 48349                           ;incstack = 0
 48350  017128  502F               	movf	i2___flmul@b+3,w,c
 48351  01712A  0B80               	andlw	128
 48352  01712C  6E38               	movwf	i2___flmul@sign,c
 48353  01712E  502F               	movf	i2___flmul@b+3,w,c
 48354  017130  242F               	addwf	i2___flmul@b+3,w,c
 48355  017132  6E3E               	movwf	i2___flmul@bexp,c
 48356  017134  BE2E               	btfsc	i2___flmul@b+2,7,c
 48357  017136  803E               	bsf	i2___flmul@bexp,0,c
 48358  017138  503E               	movf	i2___flmul@bexp,w,c
 48359  01713A  B4D8               	btfsc	status,2,c
 48360  01713C  D00D               	goto	i2l19188
 48361  01713E  283E               	incf	i2___flmul@bexp,w,c
 48362  017140  A4D8               	btfss	status,2,c
 48363  017142  D008               	goto	i2l19186
 48364  017144  0E00               	movlw	0
 48365  017146  6E2C               	movwf	i2___flmul@b,c
 48366  017148  0E00               	movlw	0
 48367  01714A  6E2D               	movwf	i2___flmul@b+1,c
 48368  01714C  0E00               	movlw	0
 48369  01714E  6E2E               	movwf	i2___flmul@b+2,c
 48370  017150  0E00               	movlw	0
 48371  017152  6E2F               	movwf	i2___flmul@b+3,c
 48372  017154                     i2l19186:
 48373  017154  8E2E               	bsf	i2___flmul@b+2,7,c
 48374  017156  D008               	goto	i2l19190
 48375  017158                     i2l19188:
 48376  017158  0E00               	movlw	0
 48377  01715A  6E2C               	movwf	i2___flmul@b,c
 48378  01715C  0E00               	movlw	0
 48379  01715E  6E2D               	movwf	i2___flmul@b+1,c
 48380  017160  0E00               	movlw	0
 48381  017162  6E2E               	movwf	i2___flmul@b+2,c
 48382  017164  0E00               	movlw	0
 48383  017166  6E2F               	movwf	i2___flmul@b+3,c
 48384  017168                     i2l19190:
 48385  017168  5033               	movf	i2___flmul@a+3,w,c
 48386  01716A  0B80               	andlw	128
 48387  01716C  1A38               	xorwf	i2___flmul@sign,f,c
 48388  01716E  5033               	movf	i2___flmul@a+3,w,c
 48389  017170  2433               	addwf	i2___flmul@a+3,w,c
 48390  017172  6E39               	movwf	i2___flmul@aexp,c
 48391  017174  BE32               	btfsc	i2___flmul@a+2,7,c
 48392  017176  8039               	bsf	i2___flmul@aexp,0,c
 48393  017178  5039               	movf	i2___flmul@aexp,w,c
 48394  01717A  B4D8               	btfsc	status,2,c
 48395  01717C  D00D               	goto	i2l19206
 48396  01717E  2839               	incf	i2___flmul@aexp,w,c
 48397  017180  A4D8               	btfss	status,2,c
 48398  017182  D008               	goto	i2l19204
 48399  017184  0E00               	movlw	0
 48400  017186  6E30               	movwf	i2___flmul@a,c
 48401  017188  0E00               	movlw	0
 48402  01718A  6E31               	movwf	i2___flmul@a+1,c
 48403  01718C  0E00               	movlw	0
 48404  01718E  6E32               	movwf	i2___flmul@a+2,c
 48405  017190  0E00               	movlw	0
 48406  017192  6E33               	movwf	i2___flmul@a+3,c
 48407  017194                     i2l19204:
 48408  017194  8E32               	bsf	i2___flmul@a+2,7,c
 48409  017196  D008               	goto	i2l3323
 48410  017198                     i2l19206:
 48411  017198  0E00               	movlw	0
 48412  01719A  6E30               	movwf	i2___flmul@a,c
 48413  01719C  0E00               	movlw	0
 48414  01719E  6E31               	movwf	i2___flmul@a+1,c
 48415  0171A0  0E00               	movlw	0
 48416  0171A2  6E32               	movwf	i2___flmul@a+2,c
 48417  0171A4  0E00               	movlw	0
 48418  0171A6  6E33               	movwf	i2___flmul@a+3,c
 48419  0171A8                     i2l3323:
 48420  0171A8  5039               	movf	i2___flmul@aexp,w,c
 48421  0171AA  B4D8               	btfsc	status,2,c
 48422  0171AC  D003               	goto	i2u2437_40
 48423  0171AE  503E               	movf	i2___flmul@bexp,w,c
 48424  0171B0  A4D8               	btfss	status,2,c
 48425  0171B2  D009               	goto	i2l19214
 48426  0171B4                     i2u2437_40:
 48427  0171B4  0E00               	movlw	0
 48428  0171B6  6E2C               	movwf	?i2___flmul,c
 48429  0171B8  0E00               	movlw	0
 48430  0171BA  6E2D               	movwf	?i2___flmul+1,c
 48431  0171BC  0E00               	movlw	0
 48432  0171BE  6E2E               	movwf	?i2___flmul+2,c
 48433  0171C0  0E00               	movlw	0
 48434  0171C2  6E2F               	movwf	?i2___flmul+3,c
 48435  0171C4  0012               	return	
 48436  0171C6                     i2l19214:
 48437  0171C6  5032               	movf	i2___flmul@a+2,w,c
 48438  0171C8  022C               	mulwf	i2___flmul@b,c
 48439  0171CA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48440  0171CE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48441  0171D2  5043               	movf	i2___flmul@temp,w,c
 48442  0171D4  6E3A               	movwf	i2___flmul@grs,c
 48443  0171D6  6A3B               	clrf	i2___flmul@grs+1,c
 48444  0171D8  6A3C               	clrf	i2___flmul@grs+2,c
 48445  0171DA  6A3D               	clrf	i2___flmul@grs+3,c
 48446  0171DC  5044               	movf	i2___flmul@temp+1,w,c
 48447  0171DE  6E3F               	movwf	i2___flmul@prod,c
 48448  0171E0  6A40               	clrf	i2___flmul@prod+1,c
 48449  0171E2  6A41               	clrf	i2___flmul@prod+2,c
 48450  0171E4  6A42               	clrf	i2___flmul@prod+3,c
 48451  0171E6  5031               	movf	i2___flmul@a+1,w,c
 48452  0171E8  022D               	mulwf	i2___flmul@b+1,c
 48453  0171EA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48454  0171EE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48455  0171F2  5043               	movf	i2___flmul@temp,w,c
 48456  0171F4  263A               	addwf	i2___flmul@grs,f,c
 48457  0171F6  0E00               	movlw	0
 48458  0171F8  223B               	addwfc	i2___flmul@grs+1,f,c
 48459  0171FA  223C               	addwfc	i2___flmul@grs+2,f,c
 48460  0171FC  223D               	addwfc	i2___flmul@grs+3,f,c
 48461  0171FE  5044               	movf	i2___flmul@temp+1,w,c
 48462  017200  263F               	addwf	i2___flmul@prod,f,c
 48463  017202  0E00               	movlw	0
 48464  017204  2240               	addwfc	i2___flmul@prod+1,f,c
 48465  017206  2241               	addwfc	i2___flmul@prod+2,f,c
 48466  017208  2242               	addwfc	i2___flmul@prod+3,f,c
 48467  01720A  5030               	movf	i2___flmul@a,w,c
 48468  01720C  022E               	mulwf	i2___flmul@b+2,c
 48469  01720E  CFF3 F043          	movff	prodl,i2___flmul@temp
 48470  017212  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48471  017216  5043               	movf	i2___flmul@temp,w,c
 48472  017218  263A               	addwf	i2___flmul@grs,f,c
 48473  01721A  0E00               	movlw	0
 48474  01721C  223B               	addwfc	i2___flmul@grs+1,f,c
 48475  01721E  223C               	addwfc	i2___flmul@grs+2,f,c
 48476  017220  223D               	addwfc	i2___flmul@grs+3,f,c
 48477  017222  5044               	movf	i2___flmul@temp+1,w,c
 48478  017224  263F               	addwf	i2___flmul@prod,f,c
 48479  017226  0E00               	movlw	0
 48480  017228  2240               	addwfc	i2___flmul@prod+1,f,c
 48481  01722A  2241               	addwfc	i2___flmul@prod+2,f,c
 48482  01722C  2242               	addwfc	i2___flmul@prod+3,f,c
 48483  01722E  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48484  017232  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48485  017236  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48486  01723A  6A3A               	clrf	i2___flmul@grs,c
 48487  01723C  5030               	movf	i2___flmul@a,w,c
 48488  01723E  022D               	mulwf	i2___flmul@b+1,c
 48489  017240  CFF3 F043          	movff	prodl,i2___flmul@temp
 48490  017244  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48491  017248  5043               	movf	i2___flmul@temp,w,c
 48492  01724A  263A               	addwf	i2___flmul@grs,f,c
 48493  01724C  5044               	movf	i2___flmul@temp+1,w,c
 48494  01724E  223B               	addwfc	i2___flmul@grs+1,f,c
 48495  017250  0E00               	movlw	0
 48496  017252  223C               	addwfc	i2___flmul@grs+2,f,c
 48497  017254  0E00               	movlw	0
 48498  017256  223D               	addwfc	i2___flmul@grs+3,f,c
 48499  017258  5031               	movf	i2___flmul@a+1,w,c
 48500  01725A  022C               	mulwf	i2___flmul@b,c
 48501  01725C  CFF3 F043          	movff	prodl,i2___flmul@temp
 48502  017260  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48503  017264  5043               	movf	i2___flmul@temp,w,c
 48504  017266  263A               	addwf	i2___flmul@grs,f,c
 48505  017268  5044               	movf	i2___flmul@temp+1,w,c
 48506  01726A  223B               	addwfc	i2___flmul@grs+1,f,c
 48507  01726C  0E00               	movlw	0
 48508  01726E  223C               	addwfc	i2___flmul@grs+2,f,c
 48509  017270  0E00               	movlw	0
 48510  017272  223D               	addwfc	i2___flmul@grs+3,f,c
 48511  017274  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48512  017278  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48513  01727C  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48514  017280  6A3A               	clrf	i2___flmul@grs,c
 48515  017282  5030               	movf	i2___flmul@a,w,c
 48516  017284  022C               	mulwf	i2___flmul@b,c
 48517  017286  CFF3 F043          	movff	prodl,i2___flmul@temp
 48518  01728A  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48519  01728E  5043               	movf	i2___flmul@temp,w,c
 48520  017290  263A               	addwf	i2___flmul@grs,f,c
 48521  017292  5044               	movf	i2___flmul@temp+1,w,c
 48522  017294  223B               	addwfc	i2___flmul@grs+1,f,c
 48523  017296  0E00               	movlw	0
 48524  017298  223C               	addwfc	i2___flmul@grs+2,f,c
 48525  01729A  0E00               	movlw	0
 48526  01729C  223D               	addwfc	i2___flmul@grs+3,f,c
 48527  01729E  5032               	movf	i2___flmul@a+2,w,c
 48528  0172A0  022D               	mulwf	i2___flmul@b+1,c
 48529  0172A2  CFF3 F043          	movff	prodl,i2___flmul@temp
 48530  0172A6  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48531  0172AA  5043               	movf	i2___flmul@temp,w,c
 48532  0172AC  263F               	addwf	i2___flmul@prod,f,c
 48533  0172AE  5044               	movf	i2___flmul@temp+1,w,c
 48534  0172B0  2240               	addwfc	i2___flmul@prod+1,f,c
 48535  0172B2  0E00               	movlw	0
 48536  0172B4  2241               	addwfc	i2___flmul@prod+2,f,c
 48537  0172B6  0E00               	movlw	0
 48538  0172B8  2242               	addwfc	i2___flmul@prod+3,f,c
 48539  0172BA  5031               	movf	i2___flmul@a+1,w,c
 48540  0172BC  022E               	mulwf	i2___flmul@b+2,c
 48541  0172BE  CFF3 F043          	movff	prodl,i2___flmul@temp
 48542  0172C2  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48543  0172C6  5043               	movf	i2___flmul@temp,w,c
 48544  0172C8  263F               	addwf	i2___flmul@prod,f,c
 48545  0172CA  5044               	movf	i2___flmul@temp+1,w,c
 48546  0172CC  2240               	addwfc	i2___flmul@prod+1,f,c
 48547  0172CE  0E00               	movlw	0
 48548  0172D0  2241               	addwfc	i2___flmul@prod+2,f,c
 48549  0172D2  0E00               	movlw	0
 48550  0172D4  2242               	addwfc	i2___flmul@prod+3,f,c
 48551  0172D6  5032               	movf	i2___flmul@a+2,w,c
 48552  0172D8  022E               	mulwf	i2___flmul@b+2,c
 48553  0172DA  CFF3 F043          	movff	prodl,i2___flmul@temp
 48554  0172DE  CFF4 F044          	movff	prodh,i2___flmul@temp+1
 48555  0172E2  5043               	movf	i2___flmul@temp,w,c
 48556  0172E4  6E34               	movwf	??i2___flmul& (0+255),c
 48557  0172E6  5044               	movf	i2___flmul@temp+1,w,c
 48558  0172E8  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48559  0172EA  6A36               	clrf	(??i2___flmul+2)& (0+255),c
 48560  0172EC  6A37               	clrf	(??i2___flmul+3)& (0+255),c
 48561  0172EE  C036  F037         	movff	??i2___flmul+2,??i2___flmul+3
 48562  0172F2  C035  F036         	movff	??i2___flmul+1,??i2___flmul+2
 48563  0172F6  C034  F035         	movff	??i2___flmul,??i2___flmul+1
 48564  0172FA  6A34               	clrf	??i2___flmul,c
 48565  0172FC  5034               	movf	??i2___flmul,w,c
 48566  0172FE  263F               	addwf	i2___flmul@prod,f,c
 48567  017300  5035               	movf	??i2___flmul+1,w,c
 48568  017302  2240               	addwfc	i2___flmul@prod+1,f,c
 48569  017304  5036               	movf	??i2___flmul+2,w,c
 48570  017306  2241               	addwfc	i2___flmul@prod+2,f,c
 48571  017308  5037               	movf	??i2___flmul+3,w,c
 48572  01730A  2242               	addwfc	i2___flmul@prod+3,f,c
 48573  01730C  C03A  F034         	movff	i2___flmul@grs,??i2___flmul
 48574  017310  C03B  F035         	movff	i2___flmul@grs+1,??i2___flmul+1
 48575  017314  C03C  F036         	movff	i2___flmul@grs+2,??i2___flmul+2
 48576  017318  C03D  F037         	movff	i2___flmul@grs+3,??i2___flmul+3
 48577  01731C  0E19               	movlw	25
 48578  01731E  D005               	goto	i2u2438_40
 48579  017320                     i2u2438_45:
 48580  017320  90D8               	bcf	status,0,c
 48581  017322  3237               	rrcf	??i2___flmul+3,f,c
 48582  017324  3236               	rrcf	??i2___flmul+2,f,c
 48583  017326  3235               	rrcf	??i2___flmul+1,f,c
 48584  017328  3234               	rrcf	??i2___flmul,f,c
 48585  01732A                     i2u2438_40:
 48586  01732A  2EE8               	decfsz	wreg,f,c
 48587  01732C  D7F9               	goto	i2u2438_45
 48588  01732E  5034               	movf	??i2___flmul,w,c
 48589  017330  263F               	addwf	i2___flmul@prod,f,c
 48590  017332  5035               	movf	??i2___flmul+1,w,c
 48591  017334  2240               	addwfc	i2___flmul@prod+1,f,c
 48592  017336  5036               	movf	??i2___flmul+2,w,c
 48593  017338  2241               	addwfc	i2___flmul@prod+2,f,c
 48594  01733A  5037               	movf	??i2___flmul+3,w,c
 48595  01733C  2242               	addwfc	i2___flmul@prod+3,f,c
 48596  01733E  C03C  F03D         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 48597  017342  C03B  F03C         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 48598  017346  C03A  F03B         	movff	i2___flmul@grs,i2___flmul@grs+1
 48599  01734A  6A3A               	clrf	i2___flmul@grs,c
 48600  01734C  5039               	movf	i2___flmul@aexp,w,c
 48601  01734E  C03E  F034         	movff	i2___flmul@bexp,??i2___flmul
 48602  017352  6A35               	clrf	(??i2___flmul+1)& (0+255),c
 48603  017354  2634               	addwf	??i2___flmul,f,c
 48604  017356  0E00               	movlw	0
 48605  017358  2235               	addwfc	??i2___flmul+1,f,c
 48606  01735A  0E82               	movlw	130
 48607  01735C  2434               	addwf	??i2___flmul,w,c
 48608  01735E  6E43               	movwf	i2___flmul@temp,c
 48609  017360  0EFF               	movlw	255
 48610  017362  2035               	addwfc	??i2___flmul+1,w,c
 48611  017364  6E44               	movwf	i2___flmul@temp+1,c
 48612  017366  D00F               	goto	i2l19262
 48613  017368                     i2l19256:
 48614  017368  90D8               	bcf	status,0,c
 48615  01736A  363F               	rlcf	i2___flmul@prod,f,c
 48616  01736C  3640               	rlcf	i2___flmul@prod+1,f,c
 48617  01736E  3641               	rlcf	i2___flmul@prod+2,f,c
 48618  017370  3642               	rlcf	i2___flmul@prod+3,f,c
 48619  017372  BE3D               	btfsc	i2___flmul@grs+3,7,c
 48620  017374  803F               	bsf	i2___flmul@prod,0,c
 48621  017376  90D8               	bcf	status,0,c
 48622  017378  363A               	rlcf	i2___flmul@grs,f,c
 48623  01737A  363B               	rlcf	i2___flmul@grs+1,f,c
 48624  01737C  363C               	rlcf	i2___flmul@grs+2,f,c
 48625  01737E  363D               	rlcf	i2___flmul@grs+3,f,c
 48626  017380  0643               	decf	i2___flmul@temp,f,c
 48627  017382  A0D8               	btfss	status,0,c
 48628  017384  0644               	decf	i2___flmul@temp+1,f,c
 48629  017386                     i2l19262:
 48630  017386  AE41               	btfss	i2___flmul@prod+2,7,c
 48631  017388  D7EF               	goto	i2l19256
 48632  01738A  0E00               	movlw	0
 48633  01738C  6E39               	movwf	i2___flmul@aexp,c
 48634  01738E  AE3D               	btfss	i2___flmul@grs+3,7,c
 48635  017390  D017               	goto	i2l3332
 48636  017392  0EFF               	movlw	255
 48637  017394  143A               	andwf	i2___flmul@grs,w,c
 48638  017396  6E34               	movwf	??i2___flmul& (0+255),c
 48639  017398  0EFF               	movlw	255
 48640  01739A  143B               	andwf	i2___flmul@grs+1,w,c
 48641  01739C  6E35               	movwf	(??i2___flmul+1)& (0+255),c
 48642  01739E  0EFF               	movlw	255
 48643  0173A0  143C               	andwf	i2___flmul@grs+2,w,c
 48644  0173A2  6E36               	movwf	(??i2___flmul+2)& (0+255),c
 48645  0173A4  0E7F               	movlw	127
 48646  0173A6  143D               	andwf	i2___flmul@grs+3,w,c
 48647  0173A8  6E37               	movwf	(??i2___flmul+3)& (0+255),c
 48648  0173AA  5034               	movf	??i2___flmul,w,c
 48649  0173AC  1035               	iorwf	??i2___flmul+1,w,c
 48650  0173AE  1036               	iorwf	??i2___flmul+2,w,c
 48651  0173B0  1037               	iorwf	??i2___flmul+3,w,c
 48652  0173B2  B4D8               	btfsc	status,2,c
 48653  0173B4  D003               	goto	i2l3333
 48654  0173B6                     i2u2442_40:
 48655  0173B6  0E01               	movlw	1
 48656  0173B8  6E39               	movwf	i2___flmul@aexp,c
 48657  0173BA  D002               	goto	i2l3332
 48658  0173BC                     i2l3333:
 48659  0173BC  B03F               	btfsc	i2___flmul@prod,0,c
 48660  0173BE  D7FB               	goto	i2u2442_40
 48661  0173C0                     i2l3332:
 48662  0173C0  5039               	movf	i2___flmul@aexp,w,c
 48663  0173C2  B4D8               	btfsc	status,2,c
 48664  0173C4  D01F               	goto	i2l19282
 48665  0173C6  0E01               	movlw	1
 48666  0173C8  263F               	addwf	i2___flmul@prod,f,c
 48667  0173CA  0E00               	movlw	0
 48668  0173CC  2240               	addwfc	i2___flmul@prod+1,f,c
 48669  0173CE  2241               	addwfc	i2___flmul@prod+2,f,c
 48670  0173D0  2242               	addwfc	i2___flmul@prod+3,f,c
 48671  0173D2  A042               	btfss	i2___flmul@prod+3,0,c
 48672  0173D4  D017               	goto	i2l19282
 48673  0173D6  C03F  F034         	movff	i2___flmul@prod,??i2___flmul
 48674  0173DA  C040  F035         	movff	i2___flmul@prod+1,??i2___flmul+1
 48675  0173DE  C041  F036         	movff	i2___flmul@prod+2,??i2___flmul+2
 48676  0173E2  C042  F037         	movff	i2___flmul@prod+3,??i2___flmul+3
 48677  0173E6  3437               	rlcf	??i2___flmul+3,w,c
 48678  0173E8  3237               	rrcf	??i2___flmul+3,f,c
 48679  0173EA  3236               	rrcf	??i2___flmul+2,f,c
 48680  0173EC  3235               	rrcf	??i2___flmul+1,f,c
 48681  0173EE  3234               	rrcf	??i2___flmul,f,c
 48682  0173F0  C034  F03F         	movff	??i2___flmul,i2___flmul@prod
 48683  0173F4  C035  F040         	movff	??i2___flmul+1,i2___flmul@prod+1
 48684  0173F8  C036  F041         	movff	??i2___flmul+2,i2___flmul@prod+2
 48685  0173FC  C037  F042         	movff	??i2___flmul+3,i2___flmul@prod+3
 48686  017400  4A43               	infsnz	i2___flmul@temp,f,c
 48687  017402  2A44               	incf	i2___flmul@temp+1,f,c
 48688  017404                     i2l19282:
 48689  017404  BE44               	btfsc	i2___flmul@temp+1,7,c
 48690  017406  D00D               	goto	i2l19286
 48691  017408  5044               	movf	i2___flmul@temp+1,w,c
 48692  01740A  E103               	bnz	i2u2446_40
 48693  01740C  2843               	incf	i2___flmul@temp,w,c
 48694  01740E  A0D8               	btfss	status,0,c
 48695  017410  D008               	goto	i2l19286
 48696  017412                     i2u2446_40:
 48697  017412  0E00               	movlw	0
 48698  017414  6E3F               	movwf	i2___flmul@prod,c
 48699  017416  0E00               	movlw	0
 48700  017418  6E40               	movwf	i2___flmul@prod+1,c
 48701  01741A  0E80               	movlw	128
 48702  01741C  6E41               	movwf	i2___flmul@prod+2,c
 48703  01741E  0E7F               	movlw	127
 48704  017420  D020               	goto	L55
 48705  017422                     i2l19286:
 48706  017422  BE44               	btfsc	i2___flmul@temp+1,7,c
 48707  017424  D005               	goto	i2u2447_40
 48708  017426  5044               	movf	i2___flmul@temp+1,w,c
 48709  017428  E10E               	bnz	i2l3340
 48710  01742A  0443               	decf	i2___flmul@temp,w,c
 48711  01742C  B0D8               	btfsc	status,0,c
 48712  01742E  D00B               	goto	i2l3340
 48713  017430                     i2u2447_40:
 48714  017430  0E00               	movlw	0
 48715  017432  6E3F               	movwf	i2___flmul@prod,c
 48716  017434  0E00               	movlw	0
 48717  017436  6E40               	movwf	i2___flmul@prod+1,c
 48718  017438  0E00               	movlw	0
 48719  01743A  6E41               	movwf	i2___flmul@prod+2,c
 48720  01743C  0E00               	movlw	0
 48721  01743E  6E42               	movwf	i2___flmul@prod+3,c
 48722  017440  0E00               	movlw	0
 48723  017442  6E38               	movwf	i2___flmul@sign,c
 48724  017444  D00F               	goto	i2l19298
 48725  017446                     i2l3340:
 48726  017446  C043  F03E         	movff	i2___flmul@temp,i2___flmul@bexp
 48727  01744A  0EFF               	movlw	255
 48728  01744C  163F               	andwf	i2___flmul@prod,f,c
 48729  01744E  0EFF               	movlw	255
 48730  017450  1640               	andwf	i2___flmul@prod+1,f,c
 48731  017452  0E7F               	movlw	127
 48732  017454  1641               	andwf	i2___flmul@prod+2,f,c
 48733  017456  0E00               	movlw	0
 48734  017458  1642               	andwf	i2___flmul@prod+3,f,c
 48735  01745A  B03E               	btfsc	i2___flmul@bexp,0,c
 48736  01745C  8E41               	bsf	i2___flmul@prod+2,7,c
 48737  01745E  90D8               	bcf	status,0,c
 48738  017460  303E               	rrcf	i2___flmul@bexp,w,c
 48739  017462                     L55:
 48740  017462  6E42               	movwf	i2___flmul@prod+3,c
 48741  017464                     i2l19298:
 48742  017464  5038               	movf	i2___flmul@sign,w,c
 48743  017466  1242               	iorwf	i2___flmul@prod+3,f,c
 48744  017468  C03F  F02C         	movff	i2___flmul@prod,?i2___flmul
 48745  01746C  C040  F02D         	movff	i2___flmul@prod+1,?i2___flmul+1
 48746  017470  C041  F02E         	movff	i2___flmul@prod+2,?i2___flmul+2
 48747  017474  C042  F02F         	movff	i2___flmul@prod+3,?i2___flmul+3
 48748  017478  0012               	return		;funcret
 48749  01747A                     __end_ofi2___flmul:
 48750                           	opt callstack 0
 48751                           
 48752 ;; *************** function i2___flge *****************
 48753 ;; Defined at:
 48754 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 48755 ;; Parameters:    Size  Location     Type
 48756 ;;  ff1             4    0[COMRAM] unsigned char 
 48757 ;;  ff2             4    4[COMRAM] unsigned char 
 48758 ;; Auto vars:     Size  Location     Type
 48759 ;;		None
 48760 ;; Return value:  Size  Location     Type
 48761 ;;		None               void
 48762 ;; Registers used:
 48763 ;;		wreg, status,2, status,0
 48764 ;; Tracked objects:
 48765 ;;		On entry : 0/0
 48766 ;;		On exit  : 0/0
 48767 ;;		Unchanged: 0/0
 48768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48769 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48772 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48773 ;;Total ram usage:       12 bytes
 48774 ;; Hardware stack levels used:    1
 48775 ;; This function calls:
 48776 ;;		Nothing
 48777 ;; This function is called by:
 48778 ;;		_ADC_PostProcessingHandler
 48779 ;;		i2__doprnt
 48780 ;; This function uses a non-reentrant model
 48781 ;;
 48782                           
 48783                           	psect	text204
 48784  01A96C                     __ptext204:
 48785                           	opt callstack 0
 48786  01A96C                     i2___flge:
 48787                           	opt callstack 13
 48788                           
 48789                           ;incstack = 0
 48790  01A96C  0E00               	movlw	0
 48791  01A96E  1401               	andwf	i2___flge@ff1,w,c
 48792  01A970  6E09               	movwf	??i2___flge& (0+255),c
 48793  01A972  0E00               	movlw	0
 48794  01A974  1402               	andwf	i2___flge@ff1+1,w,c
 48795  01A976  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48796  01A978  0E80               	movlw	128
 48797  01A97A  1403               	andwf	i2___flge@ff1+2,w,c
 48798  01A97C  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48799  01A97E  0E7F               	movlw	127
 48800  01A980  1404               	andwf	i2___flge@ff1+3,w,c
 48801  01A982  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48802  01A984  5009               	movf	??i2___flge,w,c
 48803  01A986  100A               	iorwf	??i2___flge+1,w,c
 48804  01A988  100B               	iorwf	??i2___flge+2,w,c
 48805  01A98A  100C               	iorwf	??i2___flge+3,w,c
 48806  01A98C  A4D8               	btfss	status,2,c
 48807  01A98E  D008               	goto	i2l19784
 48808  01A990  0E00               	movlw	0
 48809  01A992  6E01               	movwf	i2___flge@ff1,c
 48810  01A994  0E00               	movlw	0
 48811  01A996  6E02               	movwf	i2___flge@ff1+1,c
 48812  01A998  0E00               	movlw	0
 48813  01A99A  6E03               	movwf	i2___flge@ff1+2,c
 48814  01A99C  0E00               	movlw	0
 48815  01A99E  6E04               	movwf	i2___flge@ff1+3,c
 48816  01A9A0                     i2l19784:
 48817  01A9A0  0E00               	movlw	0
 48818  01A9A2  1405               	andwf	i2___flge@ff2,w,c
 48819  01A9A4  6E09               	movwf	??i2___flge& (0+255),c
 48820  01A9A6  0E00               	movlw	0
 48821  01A9A8  1406               	andwf	i2___flge@ff2+1,w,c
 48822  01A9AA  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 48823  01A9AC  0E80               	movlw	128
 48824  01A9AE  1407               	andwf	i2___flge@ff2+2,w,c
 48825  01A9B0  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 48826  01A9B2  0E7F               	movlw	127
 48827  01A9B4  1408               	andwf	i2___flge@ff2+3,w,c
 48828  01A9B6  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 48829  01A9B8  5009               	movf	??i2___flge,w,c
 48830  01A9BA  100A               	iorwf	??i2___flge+1,w,c
 48831  01A9BC  100B               	iorwf	??i2___flge+2,w,c
 48832  01A9BE  100C               	iorwf	??i2___flge+3,w,c
 48833  01A9C0  A4D8               	btfss	status,2,c
 48834  01A9C2  D008               	goto	i2l19788
 48835  01A9C4  0E00               	movlw	0
 48836  01A9C6  6E05               	movwf	i2___flge@ff2,c
 48837  01A9C8  0E00               	movlw	0
 48838  01A9CA  6E06               	movwf	i2___flge@ff2+1,c
 48839  01A9CC  0E00               	movlw	0
 48840  01A9CE  6E07               	movwf	i2___flge@ff2+2,c
 48841  01A9D0  0E00               	movlw	0
 48842  01A9D2  6E08               	movwf	i2___flge@ff2+3,c
 48843  01A9D4                     i2l19788:
 48844  01A9D4  AE04               	btfss	i2___flge@ff1+3,7,c
 48845  01A9D6  D009               	goto	i2l19792
 48846  01A9D8  6C01               	negf	i2___flge@ff1,c
 48847  01A9DA  1E02               	comf	i2___flge@ff1+1,f,c
 48848  01A9DC  B0D8               	btfsc	status,0,c
 48849  01A9DE  2A02               	incf	i2___flge@ff1+1,f,c
 48850  01A9E0  1E03               	comf	i2___flge@ff1+2,f,c
 48851  01A9E2  B0D8               	btfsc	status,0,c
 48852  01A9E4  2A03               	incf	i2___flge@ff1+2,f,c
 48853  01A9E6  0E80               	movlw	128
 48854  01A9E8  5604               	subfwb	i2___flge@ff1+3,f,c
 48855  01A9EA                     i2l19792:
 48856  01A9EA  AE08               	btfss	i2___flge@ff2+3,7,c
 48857  01A9EC  D009               	goto	i2l2965
 48858  01A9EE  6C05               	negf	i2___flge@ff2,c
 48859  01A9F0  1E06               	comf	i2___flge@ff2+1,f,c
 48860  01A9F2  B0D8               	btfsc	status,0,c
 48861  01A9F4  2A06               	incf	i2___flge@ff2+1,f,c
 48862  01A9F6  1E07               	comf	i2___flge@ff2+2,f,c
 48863  01A9F8  B0D8               	btfsc	status,0,c
 48864  01A9FA  2A07               	incf	i2___flge@ff2+2,f,c
 48865  01A9FC  0E80               	movlw	128
 48866  01A9FE  5608               	subfwb	i2___flge@ff2+3,f,c
 48867  01AA00                     i2l2965:
 48868  01AA00  0E00               	movlw	0
 48869  01AA02  1A01               	xorwf	i2___flge@ff1,f,c
 48870  01AA04  0E00               	movlw	0
 48871  01AA06  1A02               	xorwf	i2___flge@ff1+1,f,c
 48872  01AA08  0E00               	movlw	0
 48873  01AA0A  1A03               	xorwf	i2___flge@ff1+2,f,c
 48874  01AA0C  0E80               	movlw	128
 48875  01AA0E  1A04               	xorwf	i2___flge@ff1+3,f,c
 48876  01AA10  0E00               	movlw	0
 48877  01AA12  1A05               	xorwf	i2___flge@ff2,f,c
 48878  01AA14  0E00               	movlw	0
 48879  01AA16  1A06               	xorwf	i2___flge@ff2+1,f,c
 48880  01AA18  0E00               	movlw	0
 48881  01AA1A  1A07               	xorwf	i2___flge@ff2+2,f,c
 48882  01AA1C  0E80               	movlw	128
 48883  01AA1E  1A08               	xorwf	i2___flge@ff2+3,f,c
 48884  01AA20  5005               	movf	i2___flge@ff2,w,c
 48885  01AA22  5C01               	subwf	i2___flge@ff1,w,c
 48886  01AA24  5006               	movf	i2___flge@ff2+1,w,c
 48887  01AA26  5802               	subwfb	i2___flge@ff1+1,w,c
 48888  01AA28  5007               	movf	i2___flge@ff2+2,w,c
 48889  01AA2A  5803               	subwfb	i2___flge@ff1+2,w,c
 48890  01AA2C  5008               	movf	i2___flge@ff2+3,w,c
 48891  01AA2E  5804               	subwfb	i2___flge@ff1+3,w,c
 48892  01AA30  B0D8               	btfsc	status,0,c
 48893  01AA32  D002               	goto	i2l19798
 48894  01AA34  90D8               	bcf	status,0,c
 48895  01AA36  0012               	return	
 48896  01AA38                     i2l19798:
 48897  01AA38  80D8               	bsf	status,0,c
 48898  01AA3A  0012               	return		;funcret
 48899  01AA3C                     __end_ofi2___flge:
 48900                           	opt callstack 0
 48901                           
 48902 ;; *************** function i2___fldiv *****************
 48903 ;; Defined at:
 48904 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 48905 ;; Parameters:    Size  Location     Type
 48906 ;;  b               4   18[COMRAM] unsigned char 
 48907 ;;  a               4   22[COMRAM] unsigned char 
 48908 ;; Auto vars:     Size  Location     Type
 48909 ;;  __fldiv         4   37[COMRAM] unsigned long 
 48910 ;;  __fldiv         4   30[COMRAM] unsigned long 
 48911 ;;  __fldiv         2   35[COMRAM] int 
 48912 ;;  __fldiv         1   42[COMRAM] unsigned char 
 48913 ;;  __fldiv         1   41[COMRAM] unsigned char 
 48914 ;;  __fldiv         1   34[COMRAM] unsigned char 
 48915 ;; Return value:  Size  Location     Type
 48916 ;;                  4   18[COMRAM] unsigned char 
 48917 ;; Registers used:
 48918 ;;		wreg, status,2, status,0
 48919 ;; Tracked objects:
 48920 ;;		On entry : 0/0
 48921 ;;		On exit  : 0/0
 48922 ;;		Unchanged: 0/0
 48923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48924 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48925 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48927 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48928 ;;Total ram usage:       25 bytes
 48929 ;; Hardware stack levels used:    1
 48930 ;; This function calls:
 48931 ;;		Nothing
 48932 ;; This function is called by:
 48933 ;;		_ADC_PostProcessingHandler
 48934 ;; This function uses a non-reentrant model
 48935 ;;
 48936                           
 48937                           	psect	text205
 48938  018AFC                     __ptext205:
 48939                           	opt callstack 0
 48940  018AFC                     i2___fldiv:
 48941                           	opt callstack 14
 48942                           
 48943                           ;incstack = 0
 48944  018AFC  5016               	movf	i2___fldiv@b+3,w,c
 48945  018AFE  0B80               	andlw	128
 48946  018B00  6E23               	movwf	i2___fldiv@sign,c
 48947  018B02  5016               	movf	i2___fldiv@b+3,w,c
 48948  018B04  2416               	addwf	i2___fldiv@b+3,w,c
 48949  018B06  6E2A               	movwf	i2___fldiv@bexp,c
 48950  018B08  BE15               	btfsc	i2___fldiv@b+2,7,c
 48951  018B0A  802A               	bsf	i2___fldiv@bexp,0,c
 48952  018B0C  502A               	movf	i2___fldiv@bexp,w,c
 48953  018B0E  B4D8               	btfsc	status,2,c
 48954  018B10  D00D               	goto	i2l14824
 48955  018B12  282A               	incf	i2___fldiv@bexp,w,c
 48956  018B14  A4D8               	btfss	status,2,c
 48957  018B16  D008               	goto	i2l14820
 48958  018B18  0E00               	movlw	0
 48959  018B1A  6E13               	movwf	i2___fldiv@b,c
 48960  018B1C  0E00               	movlw	0
 48961  018B1E  6E14               	movwf	i2___fldiv@b+1,c
 48962  018B20  0E00               	movlw	0
 48963  018B22  6E15               	movwf	i2___fldiv@b+2,c
 48964  018B24  0E00               	movlw	0
 48965  018B26  6E16               	movwf	i2___fldiv@b+3,c
 48966  018B28                     i2l14820:
 48967  018B28  8E15               	bsf	i2___fldiv@b+2,7,c
 48968  018B2A  D006               	goto	L56
 48969  018B2C                     i2l14824:
 48970  018B2C  0E00               	movlw	0
 48971  018B2E  6E13               	movwf	i2___fldiv@b,c
 48972  018B30  0E00               	movlw	0
 48973  018B32  6E14               	movwf	i2___fldiv@b+1,c
 48974  018B34  0E00               	movlw	0
 48975  018B36  6E15               	movwf	i2___fldiv@b+2,c
 48976  018B38                     L56:
 48977  018B38  0E00               	movlw	0
 48978  018B3A  6E16               	movwf	i2___fldiv@b+3,c
 48979  018B3C  501A               	movf	i2___fldiv@a+3,w,c
 48980  018B3E  0B80               	andlw	128
 48981  018B40  1A23               	xorwf	i2___fldiv@sign,f,c
 48982  018B42  501A               	movf	i2___fldiv@a+3,w,c
 48983  018B44  241A               	addwf	i2___fldiv@a+3,w,c
 48984  018B46  6E2B               	movwf	i2___fldiv@aexp,c
 48985  018B48  BE19               	btfsc	i2___fldiv@a+2,7,c
 48986  018B4A  802B               	bsf	i2___fldiv@aexp,0,c
 48987  018B4C  502B               	movf	i2___fldiv@aexp,w,c
 48988  018B4E  B4D8               	btfsc	status,2,c
 48989  018B50  D00D               	goto	i2l14844
 48990  018B52  282B               	incf	i2___fldiv@aexp,w,c
 48991  018B54  A4D8               	btfss	status,2,c
 48992  018B56  D008               	goto	i2l14840
 48993  018B58  0E00               	movlw	0
 48994  018B5A  6E17               	movwf	i2___fldiv@a,c
 48995  018B5C  0E00               	movlw	0
 48996  018B5E  6E18               	movwf	i2___fldiv@a+1,c
 48997  018B60  0E00               	movlw	0
 48998  018B62  6E19               	movwf	i2___fldiv@a+2,c
 48999  018B64  0E00               	movlw	0
 49000  018B66  6E1A               	movwf	i2___fldiv@a+3,c
 49001  018B68                     i2l14840:
 49002  018B68  8E19               	bsf	i2___fldiv@a+2,7,c
 49003  018B6A  D006               	goto	L57
 49004  018B6C                     i2l14844:
 49005  018B6C  0E00               	movlw	0
 49006  018B6E  6E17               	movwf	i2___fldiv@a,c
 49007  018B70  0E00               	movlw	0
 49008  018B72  6E18               	movwf	i2___fldiv@a+1,c
 49009  018B74  0E00               	movlw	0
 49010  018B76  6E19               	movwf	i2___fldiv@a+2,c
 49011  018B78                     L57:
 49012  018B78  0E00               	movlw	0
 49013  018B7A  6E1A               	movwf	i2___fldiv@a+3,c
 49014  018B7C  5017               	movf	i2___fldiv@a,w,c
 49015  018B7E  1018               	iorwf	i2___fldiv@a+1,w,c
 49016  018B80  1019               	iorwf	i2___fldiv@a+2,w,c
 49017  018B82  101A               	iorwf	i2___fldiv@a+3,w,c
 49018  018B84  A4D8               	btfss	status,2,c
 49019  018B86  D017               	goto	i2l14858
 49020  018B88  0E00               	movlw	0
 49021  018B8A  6E13               	movwf	i2___fldiv@b,c
 49022  018B8C  0E00               	movlw	0
 49023  018B8E  6E14               	movwf	i2___fldiv@b+1,c
 49024  018B90  0E00               	movlw	0
 49025  018B92  6E15               	movwf	i2___fldiv@b+2,c
 49026  018B94  0E00               	movlw	0
 49027  018B96  6E16               	movwf	i2___fldiv@b+3,c
 49028  018B98  0E80               	movlw	128
 49029  018B9A  1215               	iorwf	i2___fldiv@b+2,f,c
 49030  018B9C  0E7F               	movlw	127
 49031  018B9E  1216               	iorwf	i2___fldiv@b+3,f,c
 49032  018BA0                     i2l14852:
 49033  018BA0  5023               	movf	i2___fldiv@sign,w,c
 49034  018BA2  1216               	iorwf	i2___fldiv@b+3,f,c
 49035  018BA4  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 49036  018BA8  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 49037  018BAC  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 49038  018BB0  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 49039  018BB4  0012               	return	
 49040  018BB6                     i2l14858:
 49041  018BB6  502A               	movf	i2___fldiv@bexp,w,c
 49042  018BB8  A4D8               	btfss	status,2,c
 49043  018BBA  D009               	goto	i2l14866
 49044  018BBC  0E00               	movlw	0
 49045  018BBE  6E13               	movwf	?i2___fldiv,c
 49046  018BC0  0E00               	movlw	0
 49047  018BC2  6E14               	movwf	?i2___fldiv+1,c
 49048  018BC4  0E00               	movlw	0
 49049  018BC6  6E15               	movwf	?i2___fldiv+2,c
 49050  018BC8  0E00               	movlw	0
 49051  018BCA  6E16               	movwf	?i2___fldiv+3,c
 49052  018BCC  0012               	return	
 49053  018BCE                     i2l14866:
 49054  018BCE  502B               	movf	i2___fldiv@aexp,w,c
 49055  018BD0  C02A  F01B         	movff	i2___fldiv@bexp,??i2___fldiv
 49056  018BD4  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 49057  018BD6  5E1B               	subwf	??i2___fldiv,f,c
 49058  018BD8  0E00               	movlw	0
 49059  018BDA  5A1C               	subwfb	??i2___fldiv+1,f,c
 49060  018BDC  0E7F               	movlw	127
 49061  018BDE  241B               	addwf	??i2___fldiv,w,c
 49062  018BE0  6E24               	movwf	i2___fldiv@new_exp,c
 49063  018BE2  0E00               	movlw	0
 49064  018BE4  201C               	addwfc	??i2___fldiv+1,w,c
 49065  018BE6  6E25               	movwf	i2___fldiv@new_exp+1,c
 49066  018BE8  C013  F01F         	movff	i2___fldiv@b,i2___fldiv@rem
 49067  018BEC  C014  F020         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 49068  018BF0  C015  F021         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 49069  018BF4  C016  F022         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 49070  018BF8  0E00               	movlw	0
 49071  018BFA  6E13               	movwf	i2___fldiv@b,c
 49072  018BFC  0E00               	movlw	0
 49073  018BFE  6E14               	movwf	i2___fldiv@b+1,c
 49074  018C00  0E00               	movlw	0
 49075  018C02  6E15               	movwf	i2___fldiv@b+2,c
 49076  018C04  0E00               	movlw	0
 49077  018C06  6E16               	movwf	i2___fldiv@b+3,c
 49078  018C08  0E00               	movlw	0
 49079  018C0A  6E26               	movwf	i2___fldiv@grs,c
 49080  018C0C  0E00               	movlw	0
 49081  018C0E  6E27               	movwf	i2___fldiv@grs+1,c
 49082  018C10  0E00               	movlw	0
 49083  018C12  6E28               	movwf	i2___fldiv@grs+2,c
 49084  018C14  0E00               	movlw	0
 49085  018C16  6E29               	movwf	i2___fldiv@grs+3,c
 49086  018C18  0E00               	movlw	0
 49087  018C1A  6E2B               	movwf	i2___fldiv@aexp,c
 49088  018C1C  D028               	goto	i2l3293
 49089  018C1E                     i2l14876:
 49090  018C1E  502B               	movf	i2___fldiv@aexp,w,c
 49091  018C20  B4D8               	btfsc	status,2,c
 49092  018C22  D011               	goto	i2l14884
 49093  018C24  90D8               	bcf	status,0,c
 49094  018C26  361F               	rlcf	i2___fldiv@rem,f,c
 49095  018C28  3620               	rlcf	i2___fldiv@rem+1,f,c
 49096  018C2A  3621               	rlcf	i2___fldiv@rem+2,f,c
 49097  018C2C  3622               	rlcf	i2___fldiv@rem+3,f,c
 49098  018C2E  90D8               	bcf	status,0,c
 49099  018C30  3613               	rlcf	i2___fldiv@b,f,c
 49100  018C32  3614               	rlcf	i2___fldiv@b+1,f,c
 49101  018C34  3615               	rlcf	i2___fldiv@b+2,f,c
 49102  018C36  3616               	rlcf	i2___fldiv@b+3,f,c
 49103  018C38  BE29               	btfsc	i2___fldiv@grs+3,7,c
 49104  018C3A  8013               	bsf	i2___fldiv@b,0,c
 49105  018C3C  90D8               	bcf	status,0,c
 49106  018C3E  3626               	rlcf	i2___fldiv@grs,f,c
 49107  018C40  3627               	rlcf	i2___fldiv@grs+1,f,c
 49108  018C42  3628               	rlcf	i2___fldiv@grs+2,f,c
 49109  018C44  3629               	rlcf	i2___fldiv@grs+3,f,c
 49110  018C46                     i2l14884:
 49111  018C46  5017               	movf	i2___fldiv@a,w,c
 49112  018C48  5C1F               	subwf	i2___fldiv@rem,w,c
 49113  018C4A  5018               	movf	i2___fldiv@a+1,w,c
 49114  018C4C  5820               	subwfb	i2___fldiv@rem+1,w,c
 49115  018C4E  5019               	movf	i2___fldiv@a+2,w,c
 49116  018C50  5821               	subwfb	i2___fldiv@rem+2,w,c
 49117  018C52  501A               	movf	i2___fldiv@a+3,w,c
 49118  018C54  5822               	subwfb	i2___fldiv@rem+3,w,c
 49119  018C56  A0D8               	btfss	status,0,c
 49120  018C58  D009               	goto	i2l14890
 49121  018C5A  8C29               	bsf	i2___fldiv@grs+3,6,c
 49122  018C5C  5017               	movf	i2___fldiv@a,w,c
 49123  018C5E  5E1F               	subwf	i2___fldiv@rem,f,c
 49124  018C60  5018               	movf	i2___fldiv@a+1,w,c
 49125  018C62  5A20               	subwfb	i2___fldiv@rem+1,f,c
 49126  018C64  5019               	movf	i2___fldiv@a+2,w,c
 49127  018C66  5A21               	subwfb	i2___fldiv@rem+2,f,c
 49128  018C68  501A               	movf	i2___fldiv@a+3,w,c
 49129  018C6A  5A22               	subwfb	i2___fldiv@rem+3,f,c
 49130  018C6C                     i2l14890:
 49131  018C6C  2A2B               	incf	i2___fldiv@aexp,f,c
 49132  018C6E                     i2l3293:
 49133  018C6E  0E19               	movlw	25
 49134  018C70  642B               	cpfsgt	i2___fldiv@aexp,c
 49135  018C72  D7D5               	goto	i2l14876
 49136  018C74  501F               	movf	i2___fldiv@rem,w,c
 49137  018C76  1020               	iorwf	i2___fldiv@rem+1,w,c
 49138  018C78  1021               	iorwf	i2___fldiv@rem+2,w,c
 49139  018C7A  1022               	iorwf	i2___fldiv@rem+3,w,c
 49140  018C7C  B4D8               	btfsc	status,2,c
 49141  018C7E  D011               	goto	i2l14902
 49142  018C80  8026               	bsf	i2___fldiv@grs,0,c
 49143  018C82  D00F               	goto	i2l14902
 49144  018C84                     i2l14896:
 49145  018C84  90D8               	bcf	status,0,c
 49146  018C86  3613               	rlcf	i2___fldiv@b,f,c
 49147  018C88  3614               	rlcf	i2___fldiv@b+1,f,c
 49148  018C8A  3615               	rlcf	i2___fldiv@b+2,f,c
 49149  018C8C  3616               	rlcf	i2___fldiv@b+3,f,c
 49150  018C8E  BE29               	btfsc	i2___fldiv@grs+3,7,c
 49151  018C90  8013               	bsf	i2___fldiv@b,0,c
 49152  018C92  90D8               	bcf	status,0,c
 49153  018C94  3626               	rlcf	i2___fldiv@grs,f,c
 49154  018C96  3627               	rlcf	i2___fldiv@grs+1,f,c
 49155  018C98  3628               	rlcf	i2___fldiv@grs+2,f,c
 49156  018C9A  3629               	rlcf	i2___fldiv@grs+3,f,c
 49157  018C9C  0624               	decf	i2___fldiv@new_exp,f,c
 49158  018C9E  A0D8               	btfss	status,0,c
 49159  018CA0  0625               	decf	i2___fldiv@new_exp+1,f,c
 49160  018CA2                     i2l14902:
 49161  018CA2  AE15               	btfss	i2___fldiv@b+2,7,c
 49162  018CA4  D7EF               	goto	i2l14896
 49163  018CA6  0E00               	movlw	0
 49164  018CA8  6E2B               	movwf	i2___fldiv@aexp,c
 49165  018CAA  AE29               	btfss	i2___fldiv@grs+3,7,c
 49166  018CAC  D017               	goto	i2l3304
 49167  018CAE  0EFF               	movlw	255
 49168  018CB0  1426               	andwf	i2___fldiv@grs,w,c
 49169  018CB2  6E1B               	movwf	??i2___fldiv& (0+255),c
 49170  018CB4  0EFF               	movlw	255
 49171  018CB6  1427               	andwf	i2___fldiv@grs+1,w,c
 49172  018CB8  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 49173  018CBA  0EFF               	movlw	255
 49174  018CBC  1428               	andwf	i2___fldiv@grs+2,w,c
 49175  018CBE  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 49176  018CC0  0E7F               	movlw	127
 49177  018CC2  1429               	andwf	i2___fldiv@grs+3,w,c
 49178  018CC4  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 49179  018CC6  501B               	movf	??i2___fldiv,w,c
 49180  018CC8  101C               	iorwf	??i2___fldiv+1,w,c
 49181  018CCA  101D               	iorwf	??i2___fldiv+2,w,c
 49182  018CCC  101E               	iorwf	??i2___fldiv+3,w,c
 49183  018CCE  B4D8               	btfsc	status,2,c
 49184  018CD0  D003               	goto	i2l3305
 49185  018CD2                     i2u1796_40:
 49186  018CD2  0E01               	movlw	1
 49187  018CD4  6E2B               	movwf	i2___fldiv@aexp,c
 49188  018CD6  D002               	goto	i2l3304
 49189  018CD8                     i2l3305:
 49190  018CD8  B013               	btfsc	i2___fldiv@b,0,c
 49191  018CDA  D7FB               	goto	i2u1796_40
 49192  018CDC                     i2l3304:
 49193  018CDC  502B               	movf	i2___fldiv@aexp,w,c
 49194  018CDE  B4D8               	btfsc	status,2,c
 49195  018CE0  D01F               	goto	i2l14922
 49196  018CE2  0E01               	movlw	1
 49197  018CE4  2613               	addwf	i2___fldiv@b,f,c
 49198  018CE6  0E00               	movlw	0
 49199  018CE8  2214               	addwfc	i2___fldiv@b+1,f,c
 49200  018CEA  2215               	addwfc	i2___fldiv@b+2,f,c
 49201  018CEC  2216               	addwfc	i2___fldiv@b+3,f,c
 49202  018CEE  A016               	btfss	i2___fldiv@b+3,0,c
 49203  018CF0  D017               	goto	i2l14922
 49204  018CF2  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 49205  018CF6  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 49206  018CFA  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 49207  018CFE  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 49208  018D02  341E               	rlcf	??i2___fldiv+3,w,c
 49209  018D04  321E               	rrcf	??i2___fldiv+3,f,c
 49210  018D06  321D               	rrcf	??i2___fldiv+2,f,c
 49211  018D08  321C               	rrcf	??i2___fldiv+1,f,c
 49212  018D0A  321B               	rrcf	??i2___fldiv,f,c
 49213  018D0C  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 49214  018D10  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 49215  018D14  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 49216  018D18  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 49217  018D1C  4A24               	infsnz	i2___fldiv@new_exp,f,c
 49218  018D1E  2A25               	incf	i2___fldiv@new_exp+1,f,c
 49219  018D20                     i2l14922:
 49220  018D20  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 49221  018D22  D010               	goto	i2l14926
 49222  018D24  5025               	movf	i2___fldiv@new_exp+1,w,c
 49223  018D26  E103               	bnz	i2u1800_40
 49224  018D28  2824               	incf	i2___fldiv@new_exp,w,c
 49225  018D2A  A0D8               	btfss	status,0,c
 49226  018D2C  D00B               	goto	i2l14926
 49227  018D2E                     i2u1800_40:
 49228  018D2E  0E00               	movlw	0
 49229  018D30  6E25               	movwf	i2___fldiv@new_exp+1,c
 49230  018D32  6824               	setf	i2___fldiv@new_exp,c
 49231  018D34  0E00               	movlw	0
 49232  018D36  6E13               	movwf	i2___fldiv@b,c
 49233  018D38  0E00               	movlw	0
 49234  018D3A  6E14               	movwf	i2___fldiv@b+1,c
 49235  018D3C  0E00               	movlw	0
 49236  018D3E  6E15               	movwf	i2___fldiv@b+2,c
 49237  018D40  0E00               	movlw	0
 49238  018D42  6E16               	movwf	i2___fldiv@b+3,c
 49239  018D44                     i2l14926:
 49240  018D44  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 49241  018D46  D005               	goto	i2u1801_40
 49242  018D48  5025               	movf	i2___fldiv@new_exp+1,w,c
 49243  018D4A  E111               	bnz	i2l14930
 49244  018D4C  0424               	decf	i2___fldiv@new_exp,w,c
 49245  018D4E  B0D8               	btfsc	status,0,c
 49246  018D50  D00E               	goto	i2l14930
 49247  018D52                     i2u1801_40:
 49248  018D52  0E00               	movlw	0
 49249  018D54  6E25               	movwf	i2___fldiv@new_exp+1,c
 49250  018D56  0E00               	movlw	0
 49251  018D58  6E24               	movwf	i2___fldiv@new_exp,c
 49252  018D5A  0E00               	movlw	0
 49253  018D5C  6E13               	movwf	i2___fldiv@b,c
 49254  018D5E  0E00               	movlw	0
 49255  018D60  6E14               	movwf	i2___fldiv@b+1,c
 49256  018D62  0E00               	movlw	0
 49257  018D64  6E15               	movwf	i2___fldiv@b+2,c
 49258  018D66  0E00               	movlw	0
 49259  018D68  6E16               	movwf	i2___fldiv@b+3,c
 49260  018D6A  0E00               	movlw	0
 49261  018D6C  6E23               	movwf	i2___fldiv@sign,c
 49262  018D6E                     i2l14930:
 49263  018D6E  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 49264  018D72  A02A               	btfss	i2___fldiv@bexp,0,c
 49265  018D74  D002               	goto	i2l14936
 49266  018D76  8E15               	bsf	i2___fldiv@b+2,7,c
 49267  018D78  D001               	goto	i2l14938
 49268  018D7A                     i2l14936:
 49269  018D7A  9E15               	bcf	i2___fldiv@b+2,7,c
 49270  018D7C                     i2l14938:
 49271  018D7C  90D8               	bcf	status,0,c
 49272  018D7E  302A               	rrcf	i2___fldiv@bexp,w,c
 49273  018D80  6E16               	movwf	i2___fldiv@b+3,c
 49274  018D82  D70E               	goto	i2l14852
 49275  018D84                     __end_ofi2___fldiv:
 49276                           	opt callstack 0
 49277                           
 49278 ;; *************** function _fabs *****************
 49279 ;; Defined at:
 49280 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fabs.c"
 49281 ;; Parameters:    Size  Location     Type
 49282 ;;  d               4    4[COMRAM] unsigned char 
 49283 ;; Auto vars:     Size  Location     Type
 49284 ;;		None
 49285 ;; Return value:  Size  Location     Type
 49286 ;;                  4    4[COMRAM] unsigned char 
 49287 ;; Registers used:
 49288 ;;		wreg, status,2, status,0, cstack
 49289 ;; Tracked objects:
 49290 ;;		On entry : 0/0
 49291 ;;		On exit  : 0/0
 49292 ;;		Unchanged: 0/0
 49293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49298 ;;Total ram usage:        4 bytes
 49299 ;; Hardware stack levels used:    1
 49300 ;; Hardware stack levels required when called:    1
 49301 ;; This function calls:
 49302 ;;		i2___flneg
 49303 ;; This function is called by:
 49304 ;;		_ADC_PostProcessingHandler
 49305 ;; This function uses a non-reentrant model
 49306 ;;
 49307                           
 49308                           	psect	text206
 49309  01C264                     __ptext206:
 49310                           	opt callstack 0
 49311  01C264                     _fabs:
 49312                           	opt callstack 13
 49313                           
 49314                           ;incstack = 0
 49315  01C264  AE08               	btfss	fabs@d+3,7,c
 49316  01C266  D013               	goto	i2l3387
 49317  01C268  C005  F001         	movff	fabs@d,i2___flneg@f1
 49318  01C26C  C006  F002         	movff	fabs@d+1,i2___flneg@f1+1
 49319  01C270  C007  F003         	movff	fabs@d+2,i2___flneg@f1+2
 49320  01C274  C008  F004         	movff	fabs@d+3,i2___flneg@f1+3
 49321  01C278  EC7E  F0E2         	call	i2___flneg	;wreg free
 49322  01C27C  C001  F005         	movff	?i2___flneg,?_fabs
 49323  01C280  C002  F006         	movff	?i2___flneg+1,?_fabs+1
 49324  01C284  C003  F007         	movff	?i2___flneg+2,?_fabs+2
 49325  01C288  C004  F008         	movff	?i2___flneg+3,?_fabs+3
 49326  01C28C  0012               	return	
 49327  01C28E                     i2l3387:
 49328  01C28E  C005  F005         	movff	fabs@d,?_fabs
 49329  01C292  C006  F006         	movff	fabs@d+1,?_fabs+1
 49330  01C296  C007  F007         	movff	fabs@d+2,?_fabs+2
 49331  01C29A  C008  F008         	movff	fabs@d+3,?_fabs+3
 49332  01C29E  0012               	return		;funcret
 49333  01C2A0                     __end_of_fabs:
 49334                           	opt callstack 0
 49335                           
 49336 ;; *************** function i2___flneg *****************
 49337 ;; Defined at:
 49338 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
 49339 ;; Parameters:    Size  Location     Type
 49340 ;;  f1              4    0[COMRAM] unsigned char 
 49341 ;; Auto vars:     Size  Location     Type
 49342 ;;		None
 49343 ;; Return value:  Size  Location     Type
 49344 ;;                  4    0[COMRAM] unsigned char 
 49345 ;; Registers used:
 49346 ;;		wreg, status,2, status,0
 49347 ;; Tracked objects:
 49348 ;;		On entry : 0/0
 49349 ;;		On exit  : 0/0
 49350 ;;		Unchanged: 0/0
 49351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49356 ;;Total ram usage:        4 bytes
 49357 ;; Hardware stack levels used:    1
 49358 ;; This function calls:
 49359 ;;		Nothing
 49360 ;; This function is called by:
 49361 ;;		_fabs
 49362 ;;		i2__doprnt
 49363 ;; This function uses a non-reentrant model
 49364 ;;
 49365                           
 49366                           	psect	text207
 49367  01C4FC                     __ptext207:
 49368                           	opt callstack 0
 49369  01C4FC                     i2___flneg:
 49370                           	opt callstack 13
 49371                           
 49372                           ;incstack = 0
 49373  01C4FC  5001               	movf	i2___flneg@f1,w,c
 49374  01C4FE  1002               	iorwf	i2___flneg@f1+1,w,c
 49375  01C500  1003               	iorwf	i2___flneg@f1+2,w,c
 49376  01C502  1004               	iorwf	i2___flneg@f1+3,w,c
 49377  01C504  B4D8               	btfsc	status,2,c
 49378  01C506  D008               	goto	i2l19806
 49379  01C508  0E00               	movlw	0
 49380  01C50A  1A01               	xorwf	i2___flneg@f1,f,c
 49381  01C50C  0E00               	movlw	0
 49382  01C50E  1A02               	xorwf	i2___flneg@f1+1,f,c
 49383  01C510  0E00               	movlw	0
 49384  01C512  1A03               	xorwf	i2___flneg@f1+2,f,c
 49385  01C514  0E80               	movlw	128
 49386  01C516  1A04               	xorwf	i2___flneg@f1+3,f,c
 49387  01C518                     i2l19806:
 49388  01C518  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 49389  01C51C  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 49390  01C520  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 49391  01C524  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 49392  01C528  0012               	return		;funcret
 49393  01C52A                     __end_ofi2___flneg:
 49394                           	opt callstack 0
 49395                           
 49396 ;; *************** function _TMR2_StartTimer *****************
 49397 ;; Defined at:
 49398 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 49399 ;; Parameters:    Size  Location     Type
 49400 ;;		None
 49401 ;; Auto vars:     Size  Location     Type
 49402 ;;		None
 49403 ;; Return value:  Size  Location     Type
 49404 ;;                  1    wreg      void 
 49405 ;; Registers used:
 49406 ;;		cstack
 49407 ;; Tracked objects:
 49408 ;;		On entry : 0/0
 49409 ;;		On exit  : 0/0
 49410 ;;		Unchanged: 0/0
 49411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49416 ;;Total ram usage:        0 bytes
 49417 ;; Hardware stack levels used:    1
 49418 ;; Hardware stack levels required when called:    1
 49419 ;; This function calls:
 49420 ;;		_TMR2_Start
 49421 ;; This function is called by:
 49422 ;;		_ADC_PostProcessingHandler
 49423 ;; This function uses a non-reentrant model
 49424 ;;
 49425                           
 49426                           	psect	text208
 49427  01CC06                     __ptext208:
 49428                           	opt callstack 0
 49429  01CC06                     _TMR2_StartTimer:
 49430                           	opt callstack 13
 49431                           
 49432                           ;tmr2.c: 116: TMR2_Start();
 49433                           
 49434                           ;incstack = 0
 49435  01CC06  EC16  F0E6         	call	_TMR2_Start	;wreg free
 49436  01CC0A  0012               	return		;funcret
 49437  01CC0C                     __end_of_TMR2_StartTimer:
 49438                           	opt callstack 0
 49439                           
 49440 ;; *************** function _TMR2_Start *****************
 49441 ;; Defined at:
 49442 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 49443 ;; Parameters:    Size  Location     Type
 49444 ;;		None
 49445 ;; Auto vars:     Size  Location     Type
 49446 ;;		None
 49447 ;; Return value:  Size  Location     Type
 49448 ;;                  1    wreg      void 
 49449 ;; Registers used:
 49450 ;;		None
 49451 ;; Tracked objects:
 49452 ;;		On entry : 0/0
 49453 ;;		On exit  : 0/0
 49454 ;;		Unchanged: 0/0
 49455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49460 ;;Total ram usage:        0 bytes
 49461 ;; Hardware stack levels used:    1
 49462 ;; This function calls:
 49463 ;;		Nothing
 49464 ;; This function is called by:
 49465 ;;		_TMR2_StartTimer
 49466 ;; This function uses a non-reentrant model
 49467 ;;
 49468                           
 49469                           	psect	text209
 49470  01CC2C                     __ptext209:
 49471                           	opt callstack 0
 49472  01CC2C                     _TMR2_Start:
 49473                           	opt callstack 13
 49474                           
 49475                           ;tmr2.c: 111: T2CONbits.TMR2ON = 1;
 49476                           
 49477                           ;incstack = 0
 49478  01CC2C  8EBD               	bsf	4029,7,c	;volatile
 49479  01CC2E  0012               	return		;funcret
 49480  01CC30                     __end_of_TMR2_Start:
 49481                           	opt callstack 0
 49482                           
 49483 ;; *************** function _ADCC_StopConversion *****************
 49484 ;; Defined at:
 49485 ;;		line 162 in file "mcc_generated_files/adcc.c"
 49486 ;; Parameters:    Size  Location     Type
 49487 ;;		None
 49488 ;; Auto vars:     Size  Location     Type
 49489 ;;		None
 49490 ;; Return value:  Size  Location     Type
 49491 ;;                  1    wreg      void 
 49492 ;; Registers used:
 49493 ;;		None
 49494 ;; Tracked objects:
 49495 ;;		On entry : 0/0
 49496 ;;		On exit  : 0/0
 49497 ;;		Unchanged: 0/0
 49498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49503 ;;Total ram usage:        0 bytes
 49504 ;; Hardware stack levels used:    1
 49505 ;; This function calls:
 49506 ;;		Nothing
 49507 ;; This function is called by:
 49508 ;;		_ADC_PostProcessingHandler
 49509 ;; This function uses a non-reentrant model
 49510 ;;
 49511                           
 49512                           	psect	text210
 49513  01CC30                     __ptext210:
 49514                           	opt callstack 0
 49515  01CC30                     _ADCC_StopConversion:
 49516                           	opt callstack 14
 49517                           
 49518                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 49519                           
 49520                           ;incstack = 0
 49521  01CC30  9060               	bcf	3936,0,c	;volatile
 49522  01CC32  0012               	return		;funcret
 49523  01CC34                     __end_of_ADCC_StopConversion:
 49524                           	opt callstack 0
 49525                           
 49526 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 49527 ;; Defined at:
 49528 ;;		line 216 in file "mcc_generated_files/adcc.c"
 49529 ;; Parameters:    Size  Location     Type
 49530 ;;		None
 49531 ;; Auto vars:     Size  Location     Type
 49532 ;;		None
 49533 ;; Return value:  Size  Location     Type
 49534 ;;                  1    wreg      unsigned char 
 49535 ;; Registers used:
 49536 ;;		wreg
 49537 ;; Tracked objects:
 49538 ;;		On entry : 0/0
 49539 ;;		On exit  : 0/0
 49540 ;;		Unchanged: 0/0
 49541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49546 ;;Total ram usage:        0 bytes
 49547 ;; Hardware stack levels used:    1
 49548 ;; This function calls:
 49549 ;;		Nothing
 49550 ;; This function is called by:
 49551 ;;		_ADC_PostProcessingHandler
 49552 ;; This function uses a non-reentrant model
 49553 ;;
 49554                           
 49555                           	psect	text211
 49556  01CBAE                     __ptext211:
 49557                           	opt callstack 0
 49558  01CBAE                     _ADCC_HasAccumulatorOverflowed:
 49559                           	opt callstack 14
 49560                           
 49561                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 49562                           
 49563                           ;incstack = 0
 49564  01CBAE  AE65               	btfss	3941,7,c	;volatile
 49565  01CBB0  D002               	goto	i2u1613_40
 49566  01CBB2  0E01               	movlw	1
 49567  01CBB4  0012               	return	
 49568  01CBB6                     i2u1613_40:
 49569  01CBB6  0E00               	movlw	0
 49570  01CBB8  0012               	return		;funcret
 49571  01CBBA                     __end_of_ADCC_HasAccumulatorOverflowed:
 49572                           	opt callstack 0
 49573                           
 49574 ;; *************** function _ADCC_GetFilterValue *****************
 49575 ;; Defined at:
 49576 ;;		line 222 in file "mcc_generated_files/adcc.c"
 49577 ;; Parameters:    Size  Location     Type
 49578 ;;		None
 49579 ;; Auto vars:     Size  Location     Type
 49580 ;;		None
 49581 ;; Return value:  Size  Location     Type
 49582 ;;                  2    0[COMRAM] unsigned int 
 49583 ;; Registers used:
 49584 ;;		wreg, status,2, status,0
 49585 ;; Tracked objects:
 49586 ;;		On entry : 0/0
 49587 ;;		On exit  : 0/0
 49588 ;;		Unchanged: 0/0
 49589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49594 ;;Total ram usage:        4 bytes
 49595 ;; Hardware stack levels used:    1
 49596 ;; This function calls:
 49597 ;;		Nothing
 49598 ;; This function is called by:
 49599 ;;		_ADC_PostProcessingHandler
 49600 ;; This function uses a non-reentrant model
 49601 ;;
 49602                           
 49603                           	psect	text212
 49604  01CA10                     __ptext212:
 49605                           	opt callstack 0
 49606  01CA10                     _ADCC_GetFilterValue:
 49607                           	opt callstack 14
 49608                           
 49609                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 49610                           
 49611                           ;incstack = 0
 49612  01CA10  5073               	movf	3955,w,c	;volatile
 49613  01CA12  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 49614  01CA14  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 49615  01CA16  5072               	movf	3954,w,c	;volatile
 49616  01CA18  2403               	addwf	??_ADCC_GetFilterValue,w,c
 49617  01CA1A  6E01               	movwf	?_ADCC_GetFilterValue,c
 49618  01CA1C  0E00               	movlw	0
 49619  01CA1E  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 49620  01CA20  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 49621  01CA22  0012               	return		;funcret
 49622  01CA24                     __end_of_ADCC_GetFilterValue:
 49623                           	opt callstack 0
 49624                           
 49625 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 49626 ;; Defined at:
 49627 ;;		line 198 in file "mcc_generated_files/adcc.c"
 49628 ;; Parameters:    Size  Location     Type
 49629 ;;		None
 49630 ;; Auto vars:     Size  Location     Type
 49631 ;;		None
 49632 ;; Return value:  Size  Location     Type
 49633 ;;                  1    wreg      unsigned char 
 49634 ;; Registers used:
 49635 ;;		wreg, status,2
 49636 ;; Tracked objects:
 49637 ;;		On entry : 0/0
 49638 ;;		On exit  : 0/0
 49639 ;;		Unchanged: 0/0
 49640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49645 ;;Total ram usage:        0 bytes
 49646 ;; Hardware stack levels used:    1
 49647 ;; This function calls:
 49648 ;;		Nothing
 49649 ;; This function is called by:
 49650 ;;		_ADC_PostProcessingHandler
 49651 ;; This function uses a non-reentrant model
 49652 ;;
 49653                           
 49654                           	psect	text213
 49655  01CC34                     __ptext213:
 49656                           	opt callstack 0
 49657  01CC34                     _ADCC_GetCurrentCountofConversions:
 49658                           	opt callstack 14
 49659                           
 49660                           ;adcc.c: 201: return ADCNT;
 49661                           
 49662                           ;incstack = 0
 49663  01CC34  5067               	movf	3943,w,c	;volatile
 49664  01CC36  0012               	return		;funcret
 49665  01CC38                     __end_of_ADCC_GetCurrentCountofConversions:
 49666                           	opt callstack 0
 49667                           
 49668 ;; *************** function _ADCC_GetConversionResult *****************
 49669 ;; Defined at:
 49670 ;;		line 130 in file "mcc_generated_files/adcc.c"
 49671 ;; Parameters:    Size  Location     Type
 49672 ;;		None
 49673 ;; Auto vars:     Size  Location     Type
 49674 ;;		None
 49675 ;; Return value:  Size  Location     Type
 49676 ;;                  2    0[COMRAM] unsigned int 
 49677 ;; Registers used:
 49678 ;;		wreg, status,2, status,0
 49679 ;; Tracked objects:
 49680 ;;		On entry : 0/0
 49681 ;;		On exit  : 0/0
 49682 ;;		Unchanged: 0/0
 49683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 49684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49687 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 49688 ;;Total ram usage:        4 bytes
 49689 ;; Hardware stack levels used:    1
 49690 ;; This function calls:
 49691 ;;		Nothing
 49692 ;; This function is called by:
 49693 ;;		_ADC_PostProcessingHandler
 49694 ;; This function uses a non-reentrant model
 49695 ;;
 49696                           
 49697                           	psect	text214
 49698  01CA24                     __ptext214:
 49699                           	opt callstack 0
 49700  01CA24                     _ADCC_GetConversionResult:
 49701                           	opt callstack 14
 49702                           
 49703                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 49704                           
 49705                           ;incstack = 0
 49706  01CA24  5064               	movf	3940,w,c	;volatile
 49707  01CA26  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 49708  01CA28  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 49709  01CA2A  5063               	movf	3939,w,c	;volatile
 49710  01CA2C  2403               	addwf	??_ADCC_GetConversionResult,w,c
 49711  01CA2E  6E01               	movwf	?_ADCC_GetConversionResult,c
 49712  01CA30  0E00               	movlw	0
 49713  01CA32  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 49714  01CA34  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 49715  01CA36  0012               	return		;funcret
 49716  01CA38                     __end_of_ADCC_GetConversionResult:
 49717                           	opt callstack 0
 49718                           
 49719                           	psect	text215
 49720  000000                     __ptext215:
 49721                           	opt callstack 0
 49722                           
 49723                           	psect	rparam
 49724  0000                     
 49725                           	psect	temp
 49726  00005F                     btemp:
 49727                           	opt callstack 0
 49728  00005F                     	ds	1
 49729  0000                     int$flags	set	btemp
 49730  0000                     wtemp8	set	btemp+1
 49731  0000                     ttemp5	set	btemp+1
 49732  0000                     ttemp6	set	btemp+4
 49733  0000                     ttemp7	set	btemp+8
 49734                           tosu	equ	0xFFF
 49735                           tosh	equ	0xFFE
 49736                           tosl	equ	0xFFD
 49737                           stkptr	equ	0xFFC
 49738                           pclatu	equ	0xFFB
 49739                           pclath	equ	0xFFA
 49740                           pcl	equ	0xFF9
 49741                           tblptru	equ	0xFF8
 49742                           tblptrh	equ	0xFF7
 49743                           tblptrl	equ	0xFF6
 49744                           tablat	equ	0xFF5
 49745                           prodh	equ	0xFF4
 49746                           prodl	equ	0xFF3
 49747                           indf0	equ	0xFEF
 49748                           postinc0	equ	0xFEE
 49749                           postdec0	equ	0xFED
 49750                           preinc0	equ	0xFEC
 49751                           plusw0	equ	0xFEB
 49752                           fsr0h	equ	0xFEA
 49753                           fsr0l	equ	0xFE9
 49754                           wreg	equ	0xFE8
 49755                           indf1	equ	0xFE7
 49756                           postinc1	equ	0xFE6
 49757                           postdec1	equ	0xFE5
 49758                           preinc1	equ	0xFE4
 49759                           plusw1	equ	0xFE3
 49760                           fsr1h	equ	0xFE2
 49761                           fsr1l	equ	0xFE1
 49762                           bsr	equ	0xFE0
 49763                           indf2	equ	0xFDF
 49764                           postinc2	equ	0xFDE
 49765                           postdec2	equ	0xFDD
 49766                           preinc2	equ	0xFDC
 49767                           plusw2	equ	0xFDB
 49768                           fsr2h	equ	0xFDA
 49769                           fsr2l	equ	0xFD9
 49770                           status	equ	0xFD8


Data Sizes:
    Strings     6000
    Constant    948
    Data        38
    BSS         647
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     89     158
    BANK1           256     97     184
    BANK2           256    190     256
    BANK3           256     47     256
    BANK4           256      0     256
    BANK5           256     24      24
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2printf@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> i2_putch(), putch(), Absolute function(), 

    i2printf@pb.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.pTrFlag	PTR enum E9433 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    OLED_updateHandler$6043	PTR const unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_310(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK5[16]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK5[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 68
		 -> line(BANK3[64]), OLED_RAM_Buffer.line3(BANK3[17]), OLED_RAM_Buffer.line2(BANK3[17]), OLED_RAM_Buffer.line1(BANK3[17]), 
		 -> OLED_RAM_Buffer.line0(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_190(CODE[12]), STR_189(CODE[13]), STR_188(CODE[16]), STR_187(CODE[14]), 
		 -> STR_186(CODE[15]), STR_185(CODE[16]), STR_184(CODE[10]), STR_183(CODE[16]), 
		 -> STR_181(CODE[13]), STR_179(CODE[11]), STR_178(CODE[2]), STR_177(CODE[2]), 
		 -> STR_176(CODE[16]), STR_175(CODE[2]), STR_174(CODE[2]), STR_172(CODE[13]), 
		 -> STR_171(CODE[15]), STR_170(CODE[2]), STR_169(CODE[2]), STR_167(CODE[13]), 
		 -> STR_166(CODE[15]), STR_165(CODE[2]), STR_164(CODE[2]), STR_162(CODE[2]), 
		 -> STR_161(CODE[2]), STR_160(CODE[13]), STR_159(CODE[2]), STR_153(CODE[13]), 
		 -> STR_152(CODE[2]), STR_151(CODE[2]), STR_149(CODE[2]), STR_137(CODE[14]), 
		 -> STR_136(CODE[2]), STR_135(CODE[2]), STR_133(CODE[11]), STR_132(CODE[13]), 
		 -> STR_131(CODE[2]), STR_130(CODE[2]), STR_129(CODE[9]), STR_128(CODE[11]), 
		 -> STR_127(CODE[14]), STR_126(CODE[2]), STR_125(CODE[2]), STR_123(CODE[12]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_119(CODE[14]), STR_118(CODE[2]), 
		 -> STR_117(CODE[2]), STR_115(CODE[10]), STR_114(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[9]), STR_110(CODE[2]), STR_109(CODE[2]), STR_107(CODE[13]), 
		 -> STR_106(CODE[12]), STR_105(CODE[2]), STR_104(CODE[2]), STR_102(CODE[13]), 
		 -> STR_101(CODE[14]), STR_100(CODE[2]), STR_99(CODE[2]), STR_97(CODE[13]), 
		 -> STR_96(CODE[2]), STR_95(CODE[2]), STR_93(CODE[13]), STR_92(CODE[12]), 
		 -> STR_91(CODE[2]), STR_90(CODE[2]), STR_88(CODE[14]), STR_87(CODE[2]), 
		 -> STR_86(CODE[2]), STR_84(CODE[13]), STR_83(CODE[2]), STR_82(CODE[2]), 
		 -> STR_80(CODE[14]), STR_79(CODE[2]), STR_78(CODE[2]), STR_77(CODE[15]), 
		 -> STR_76(CODE[16]), STR_75(CODE[14]), STR_74(CODE[11]), STR_73(CODE[14]), 
		 -> STR_72(CODE[15]), STR_71(CODE[16]), STR_70(CODE[10]), STR_69(CODE[16]), 
		 -> OLED_updateHandler@rev_id_str(BANK3[17]), STR_67(CODE[13]), OLED_updateHandler@dev_id_str(BANK3[17]), STR_65(CODE[11]), 
		 -> STR_64(CODE[16]), STR_63(CODE[16]), STR_62(CODE[14]), STR_42(CODE[10]), 
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), STR_38(CODE[11]), 
		 -> STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[10]), 
		 -> STR_33(CODE[10]), STR_22(CODE[10]), STR_21(CODE[6]), STR_20(CODE[14]), 
		 -> STR_19(CODE[9]), STR_18(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_228(CODE[5]), STR_226(CODE[25]), STR_222(CODE[22]), STR_221(CODE[14]), 
		 -> STR_219(CODE[18]), STR_217(CODE[17]), STR_215(CODE[17]), STR_199(CODE[15]), 
		 -> STR_197(CODE[6]), STR_194(CODE[6]), STR_191(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_338(CODE[2]), STR_337(CODE[3]), STR_336(CODE[3]), STR_335(CODE[3]), 
		 -> STR_334(CODE[3]), STR_333(CODE[3]), STR_332(CODE[3]), STR_331(CODE[3]), 
		 -> STR_330(CODE[3]), STR_329(CODE[3]), STR_328(CODE[2]), STR_327(CODE[3]), 
		 -> STR_326(CODE[3]), STR_325(CODE[3]), STR_324(CODE[3]), STR_323(CODE[3]), 
		 -> STR_322(CODE[3]), STR_321(CODE[3]), STR_320(CODE[3]), STR_319(CODE[3]), 
		 -> STR_318(CODE[2]), STR_317(CODE[2]), STR_316(CODE[2]), STR_315(CODE[2]), 
		 -> STR_314(CODE[2]), STR_313(CODE[2]), STR_312(CODE[2]), STR_311(CODE[2]), 
		 -> getStringSecondsAsTime@buff(BANK3[20]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK5[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK5[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_365(CODE[11]), STR_304(CODE[5]), STR_303(CODE[9]), STR_302(CODE[9]), 
		 -> STR_301(CODE[9]), STR_300(CODE[8]), STR_299(CODE[9]), STR_298(CODE[9]), 
		 -> STR_182(CODE[7]), STR_180(CODE[5]), STR_173(CODE[4]), STR_168(CODE[4]), 
		 -> STR_163(CODE[11]), STR_158(CODE[11]), STR_157(CODE[11]), STR_156(CODE[11]), 
		 -> STR_155(CODE[11]), STR_154(CODE[9]), STR_150(CODE[11]), STR_148(CODE[11]), 
		 -> STR_147(CODE[11]), STR_146(CODE[11]), STR_145(CODE[11]), STR_144(CODE[9]), 
		 -> STR_143(CODE[11]), STR_142(CODE[9]), STR_141(CODE[8]), STR_140(CODE[9]), 
		 -> STR_139(CODE[8]), STR_138(CODE[9]), STR_134(CODE[5]), STR_124(CODE[8]), 
		 -> STR_120(CODE[8]), STR_116(CODE[8]), STR_112(CODE[8]), STR_108(CODE[9]), 
		 -> STR_103(CODE[8]), STR_98(CODE[8]), STR_94(CODE[8]), STR_89(CODE[8]), 
		 -> STR_85(CODE[8]), STR_81(CODE[8]), STR_68(CODE[7]), STR_66(CODE[5]), 
		 -> STR_59(CODE[11]), STR_58(CODE[10]), STR_57(CODE[13]), STR_56(CODE[12]), 
		 -> STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[10]), STR_52(CODE[9]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK3[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 653
		 -> STR_362(CODE[60]), STR_361(CODE[24]), STR_360(CODE[24]), STR_359(CODE[24]), 
		 -> STR_358(CODE[27]), STR_357(CODE[20]), STR_356(CODE[35]), STR_355(CODE[34]), 
		 -> STR_354(CODE[37]), STR_353(CODE[34]), STR_352(CODE[36]), STR_351(CODE[35]), 
		 -> STR_350(CODE[33]), STR_349(CODE[35]), STR_348(CODE[20]), STR_347(CODE[23]), 
		 -> STR_346(CODE[20]), STR_345(CODE[22]), STR_344(CODE[21]), STR_343(CODE[19]), 
		 -> STR_342(CODE[21]), STR_341(CODE[27]), STR_340(CODE[18]), STR_339(CODE[11]), 
		 -> terminalTextAttributes@print_string(BANK5[16]), STR_309(CODE[4]), STR_308(CODE[4]), STR_307(CODE[4]), 
		 -> STR_306(CODE[4]), STR_305(CODE[5]), STR_297(CODE[3]), STR_296(CODE[39]), 
		 -> STR_295(CODE[96]), STR_294(CODE[62]), STR_293(CODE[34]), STR_292(CODE[3]), 
		 -> STR_291(CODE[50]), STR_290(CODE[56]), STR_289(CODE[55]), STR_288(CODE[27]), 
		 -> STR_287(CODE[3]), STR_286(CODE[58]), STR_285(CODE[40]), STR_284(CODE[63]), 
		 -> STR_283(CODE[42]), STR_282(CODE[36]), STR_281(CODE[3]), STR_280(CODE[61]), 
		 -> STR_279(CODE[3]), STR_278(CODE[59]), STR_277(CODE[3]), STR_276(CODE[45]), 
		 -> STR_275(CODE[3]), STR_274(CODE[58]), STR_273(CODE[59]), STR_272(CODE[20]), 
		 -> STR_271(CODE[3]), STR_270(CODE[54]), STR_269(CODE[52]), STR_268(CODE[23]), 
		 -> STR_267(CODE[3]), STR_266(CODE[43]), STR_265(CODE[44]), STR_264(CODE[23]), 
		 -> STR_263(CODE[48]), STR_262(CODE[3]), STR_261(CODE[50]), STR_260(CODE[58]), 
		 -> STR_259(CODE[35]), STR_258(CODE[32]), STR_257(CODE[64]), STR_256(CODE[30]), 
		 -> STR_255(CODE[31]), STR_254(CODE[63]), STR_253(CODE[33]), STR_252(CODE[35]), 
		 -> STR_251(CODE[37]), STR_250(CODE[40]), STR_249(CODE[28]), STR_248(CODE[46]), 
		 -> STR_247(CODE[31]), STR_246(CODE[52]), STR_245(CODE[14]), STR_244(CODE[28]), 
		 -> STR_243(CODE[50]), STR_242(CODE[29]), STR_241(CODE[36]), STR_240(CODE[45]), 
		 -> STR_239(CODE[88]), STR_238(CODE[37]), STR_237(CODE[3]), STR_236(CODE[30]), 
		 -> STR_235(CODE[46]), STR_234(CODE[39]), STR_233(CODE[62]), STR_232(CODE[57]), 
		 -> STR_231(CODE[653]), STR_230(CODE[22]), STR_229(CODE[3]), STR_227(CODE[29]), 
		 -> STR_225(CODE[3]), STR_224(CODE[47]), STR_223(CODE[3]), STR_220(CODE[24]), 
		 -> STR_218(CODE[23]), STR_216(CODE[23]), STR_214(CODE[3]), STR_213(CODE[3]), 
		 -> STR_212(CODE[54]), STR_211(CODE[3]), STR_210(CODE[56]), STR_209(CODE[3]), 
		 -> STR_208(CODE[60]), STR_207(CODE[61]), STR_206(CODE[3]), STR_205(CODE[62]), 
		 -> STR_204(CODE[3]), STR_203(CODE[50]), STR_202(CODE[3]), STR_201(CODE[45]), 
		 -> STR_200(CODE[3]), STR_198(CODE[54]), STR_196(CODE[4]), STR_195(CODE[5]), 
		 -> STR_193(CODE[4]), STR_192(CODE[5]), STR_12(CODE[26]), STR_11(CODE[23]), 
		 -> STR_10(CODE[47]), STR_9(CODE[30]), STR_8(CODE[46]), STR_7(CODE[39]), 
		 -> STR_6(CODE[62]), STR_5(CODE[57]), STR_4(CODE[39]), STR_3(CODE[44]), 
		 -> STR_2(CODE[52]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK3[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), printf@ap(BANK3[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), ?_printf(BANK3[2]), ftoa@buf(BANK3[17]), STR_363(CODE[7]), 
		 -> _doprnt@c(BANK2[1]), freqMeasConvert@qi_period(BANK1[4]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), 
		 -> OLED_updateHandler@dev_id_str(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), getStringSecondsAsTime@return_string(BANK3[40]), 
		 -> STR_49(CODE[10]), STR_48(CODE[13]), STR_47(CODE[13]), STR_46(CODE[12]), 
		 -> STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), STR_32(CODE[16]), 
		 -> STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), STR_28(CODE[41]), 
		 -> STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), STR_24(CODE[15]), 
		 -> STR_23(CODE[16]), STR_17(CODE[10]), STR_16(CODE[6]), STR_15(CODE[14]), 
		 -> STR_14(CODE[9]), STR_13(CODE[5]), LM73Convert@Ambient_Conv(BANK2[2]), LM73Convert@POS5_Conv(BANK2[2]), 
		 -> LM73Convert@QI_Conv(BANK2[2]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 653
		 -> STR_365(CODE[11]), STR_362(CODE[60]), STR_361(CODE[24]), STR_360(CODE[24]), 
		 -> STR_359(CODE[24]), STR_358(CODE[27]), STR_357(CODE[20]), STR_356(CODE[35]), 
		 -> STR_355(CODE[34]), STR_354(CODE[37]), STR_353(CODE[34]), STR_352(CODE[36]), 
		 -> STR_351(CODE[35]), STR_350(CODE[33]), STR_349(CODE[35]), STR_348(CODE[20]), 
		 -> STR_347(CODE[23]), STR_346(CODE[20]), STR_345(CODE[22]), STR_344(CODE[21]), 
		 -> STR_343(CODE[19]), STR_342(CODE[21]), STR_341(CODE[27]), STR_340(CODE[18]), 
		 -> STR_339(CODE[11]), terminalTextAttributes@print_string(BANK5[16]), STR_309(CODE[4]), STR_308(CODE[4]), 
		 -> STR_307(CODE[4]), STR_306(CODE[4]), STR_305(CODE[5]), STR_304(CODE[5]), 
		 -> STR_303(CODE[9]), STR_302(CODE[9]), STR_301(CODE[9]), STR_300(CODE[8]), 
		 -> STR_299(CODE[9]), STR_298(CODE[9]), STR_297(CODE[3]), STR_296(CODE[39]), 
		 -> STR_295(CODE[96]), STR_294(CODE[62]), STR_293(CODE[34]), STR_292(CODE[3]), 
		 -> STR_291(CODE[50]), STR_290(CODE[56]), STR_289(CODE[55]), STR_288(CODE[27]), 
		 -> STR_287(CODE[3]), STR_286(CODE[58]), STR_285(CODE[40]), STR_284(CODE[63]), 
		 -> STR_283(CODE[42]), STR_282(CODE[36]), STR_281(CODE[3]), STR_280(CODE[61]), 
		 -> STR_279(CODE[3]), STR_278(CODE[59]), STR_277(CODE[3]), STR_276(CODE[45]), 
		 -> STR_275(CODE[3]), STR_274(CODE[58]), STR_273(CODE[59]), STR_272(CODE[20]), 
		 -> STR_271(CODE[3]), STR_270(CODE[54]), STR_269(CODE[52]), STR_268(CODE[23]), 
		 -> STR_267(CODE[3]), STR_266(CODE[43]), STR_265(CODE[44]), STR_264(CODE[23]), 
		 -> STR_263(CODE[48]), STR_262(CODE[3]), STR_261(CODE[50]), STR_260(CODE[58]), 
		 -> STR_259(CODE[35]), STR_258(CODE[32]), STR_257(CODE[64]), STR_256(CODE[30]), 
		 -> STR_255(CODE[31]), STR_254(CODE[63]), STR_253(CODE[33]), STR_252(CODE[35]), 
		 -> STR_251(CODE[37]), STR_250(CODE[40]), STR_249(CODE[28]), STR_248(CODE[46]), 
		 -> STR_247(CODE[31]), STR_246(CODE[52]), STR_245(CODE[14]), STR_244(CODE[28]), 
		 -> STR_243(CODE[50]), STR_242(CODE[29]), STR_241(CODE[36]), STR_240(CODE[45]), 
		 -> STR_239(CODE[88]), STR_238(CODE[37]), STR_237(CODE[3]), STR_236(CODE[30]), 
		 -> STR_235(CODE[46]), STR_234(CODE[39]), STR_233(CODE[62]), STR_232(CODE[57]), 
		 -> STR_231(CODE[653]), STR_230(CODE[22]), STR_229(CODE[3]), STR_227(CODE[29]), 
		 -> STR_225(CODE[3]), STR_224(CODE[47]), STR_223(CODE[3]), STR_220(CODE[24]), 
		 -> STR_218(CODE[23]), STR_216(CODE[23]), STR_214(CODE[3]), STR_213(CODE[3]), 
		 -> STR_212(CODE[54]), STR_211(CODE[3]), STR_210(CODE[56]), STR_209(CODE[3]), 
		 -> STR_208(CODE[60]), STR_207(CODE[61]), STR_206(CODE[3]), STR_205(CODE[62]), 
		 -> STR_204(CODE[3]), STR_203(CODE[50]), STR_202(CODE[3]), STR_201(CODE[45]), 
		 -> STR_200(CODE[3]), STR_198(CODE[54]), STR_196(CODE[4]), STR_195(CODE[5]), 
		 -> STR_193(CODE[4]), STR_192(CODE[5]), STR_182(CODE[7]), STR_180(CODE[5]), 
		 -> STR_173(CODE[4]), STR_168(CODE[4]), STR_163(CODE[11]), STR_158(CODE[11]), 
		 -> STR_157(CODE[11]), STR_156(CODE[11]), STR_155(CODE[11]), STR_154(CODE[9]), 
		 -> STR_150(CODE[11]), STR_148(CODE[11]), STR_147(CODE[11]), STR_146(CODE[11]), 
		 -> STR_145(CODE[11]), STR_144(CODE[9]), STR_143(CODE[11]), STR_142(CODE[9]), 
		 -> STR_141(CODE[8]), STR_140(CODE[9]), STR_139(CODE[8]), STR_138(CODE[9]), 
		 -> STR_134(CODE[5]), STR_124(CODE[8]), STR_120(CODE[8]), STR_116(CODE[8]), 
		 -> STR_112(CODE[8]), STR_108(CODE[9]), STR_103(CODE[8]), STR_98(CODE[8]), 
		 -> STR_94(CODE[8]), STR_89(CODE[8]), STR_85(CODE[8]), STR_81(CODE[8]), 
		 -> STR_68(CODE[7]), STR_66(CODE[5]), STR_59(CODE[11]), STR_58(CODE[10]), 
		 -> STR_57(CODE[13]), STR_56(CODE[12]), STR_55(CODE[11]), STR_54(CODE[10]), 
		 -> STR_53(CODE[10]), STR_52(CODE[9]), STR_51(CODE[11]), STR_50(CODE[10]), 
		 -> STR_12(CODE[26]), STR_11(CODE[23]), STR_10(CODE[47]), STR_9(CODE[30]), 
		 -> STR_8(CODE[46]), STR_7(CODE[39]), STR_6(CODE[62]), STR_5(CODE[57]), 
		 -> STR_4(CODE[39]), STR_3(CODE[44]), STR_2(CODE[52]), STR_1(CODE[4]), 

    S4929__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4929__prbuf$ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), floatToEngineeringFormat@result(BANK3[20]), OLED_updateHandler@rev_id_str(BANK3[17]), OLED_updateHandler@dev_id_str(BANK3[17]), 
		 -> OLED_RAM_Buffer(BANK3[68]), getStringSecondsAsTime@buff(BANK3[20]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(BANK2[5]), printf@pb(BANK3[5]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 16
		 -> terminalTextAttributes@print_string(BANK5[16]), 

    floatToEngineeringFormat@res	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__floatToEngineeringFormat	PTR unsigned char  size(2) Largest target is 20
		 -> floatToEngineeringFormat@result(BANK3[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_RAM_Buffer(BANK3[68]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), OLED_RAM_Buffer(BANK3[68]), STR_61(CODE[1]), STR_60(CODE[1]), 
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__getStringSecondsAsTime	PTR unsigned char  size(2) Largest target is 40
		 -> getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> terminalTextAttributes@print_string(BANK5[16]), getStringSecondsAsTime@return_string(BANK3[40]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_49(CODE[10]), STR_48(CODE[13]), STR_47(CODE[13]), STR_46(CODE[12]), 
		 -> STR_45(CODE[12]), STR_44(CODE[13]), STR_43(CODE[12]), 

    sp__getCauseOfResetStringSmall	PTR inline unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[10]), STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), 
		 -> STR_38(CODE[11]), STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), 
		 -> STR_34(CODE[10]), STR_33(CODE[10]), 

    getCauseOfResetStringSmall@strings	PTR unsigned char [9] size(2) Largest target is 15
		 -> STR_41(CODE[11]), STR_40(CODE[11]), STR_39(CODE[15]), STR_38(CODE[11]), 
		 -> STR_37(CODE[10]), STR_36(CODE[11]), STR_35(CODE[10]), STR_34(CODE[10]), 
		 -> STR_33(CODE[10]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), STR_28(CODE[41]), 
		 -> STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), STR_24(CODE[15]), 
		 -> STR_23(CODE[16]), 

    sp__getNXQChargeStateStringCaps	PTR unsigned char  size(2) Largest target is 14
		 -> STR_22(CODE[10]), STR_21(CODE[6]), STR_20(CODE[14]), STR_19(CODE[9]), 
		 -> STR_18(CODE[5]), 

    sp__getNXQChargeStateString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[10]), STR_16(CODE[6]), STR_15(CODE[14]), STR_14(CODE[9]), 
		 -> STR_13(CODE[5]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_32(CODE[16]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[27]), 
		 -> STR_28(CODE[41]), STR_27(CODE[32]), STR_26(CODE[19]), STR_25(CODE[16]), 
		 -> STR_24(CODE[15]), STR_23(CODE[16]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIErrorTimerHandler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIErrorTimerHandler(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    I2C2_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterTRBInsert@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 18
		 -> LM73_temp_results(BANK2[18]), 

    F10007.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_MasterWrite@pflag	PTR enum E9433 size(2) Largest target is 1
		 -> I2C_STATUS(BANK1[1]), 

    I2C2_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73TempSensorInitialize@output_data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    F10002.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S2089$pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pbuffer	PTR unsigned char  size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    p_i2c2_current.pTrFlag	PTR enum E9433 size(2) Largest target is 18
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), LM73_temp_results(BANK2[18]), 
		 -> LM73TempSensorInitialize@output_data_array(BANK2[2]), I2C_STATUS(BANK1[1]), NULL(NULL[0]), 

    S2093$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), NULL(NULL[0]), 

    S2104$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    S2104$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    i2c2_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c2_tr_queue(BANK1[5]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleChargedTimerHandler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_acquisitionTimerHandler(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerHandler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIChargeIOCHandler(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> QIIdleIOCHandler(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rightCapTouchHandler(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> leftCapTouchHandler(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR1_ISR->i2_TMR1_WriteTimer
    _TMR0_ISR->_heartbeatTimerHandler
    _heartbeatTimerHandler->i2___fladd
    i2_TMR1_Reload->i2_TMR1_WriteTimer
    i2_TMR3_Reload->i2_TMR3_WriteTimer
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2___awdiv->i2___awmod
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___lwdiv->i2___lwmod
    i2___llmod->i2___lldiv
    i2___fltol->i2_scale
    _ADC_PostProcessingHandler->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___flsub->i2___fladd
    i2___fladd->i2_fround
    i2___flmul->i2___fldiv
    i2___fldiv->i2___xxtofl
    _fabs->i2___flneg

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _heartbeatTimerHandler->i2___fladd
    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADC_PostProcessingHandler
    _ADC_PostProcessingHandler->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _INTERRUPT_InterruptManagerLow->_CCP2_CaptureISR
    _TMR3_ISR->i1_TMR3_WriteTimer
    i1_TMR3_Reload->i1_TMR3_WriteTimer
    _ADC_acquisitionTimerHandler->_ADCC_StartConversion
    _I2C2_ISR->_I2C2_Stop
    _CCP2_CaptureISR->_CCP2_CallBack
    _CCP2_CallBack->_freqMeasConvert
    _freqMeasConvert->i1___flmul
    i1___flmul->i1___fldiv
    i1___fldiv->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes
    _getStringSecondsAsTime->_sprintf
    _getUserID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _clearUARTErrors->_updateErrorLEDs
    _clearI2CErrors->_updateErrorLEDs
    _clearADCErrors->_updateErrorLEDs
    _printf->_floatToEngineeringFormat
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_updateHandler->_floatToEngineeringFormat
    _strcpy->_getCauseOfResetStringSmall
    _getYearsFromOnTime->___lldiv
    _getSecondsFromOnTime->___lldiv
    _getMinutesFromOnTime->___lldiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getHoursFromOnTime->___lldiv
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _getDaysFromOnTime->___lldiv
    _floatToEngineeringFormat->_sprintf
    _sprintf->__doprnt
    __doprnt->___flge
    _scale->___flmul
    ___awdiv->___awmod
    _putch->_EUSART2_Write
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___xxtofl
    ___fladd->_fround
    ___flge->___xxtofl
    _abs->___fltol
    ___fldiv->___flmul
    _OLED_UpdateFromRAMBuffer->_OLED_WriteString
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C2_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C2_MasterWrite
    _LM73TempSensorInitialize->_I2C2_MasterWrite
    _LM73AcquisitionHandler->_LM73Convert
    _LM73Convert->___xxtofl
    ___xxtofl->_abs
    ___flmul->___awdiv
    _I2C2_MasterWrite->_I2C2_MasterWriteTRBBuild
    _I2C2_MasterRead->_I2C2_MasterReadTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_printf
    _printErrorHandlerStatus->_printf
    _printCurrentMeasurements->_printf
    _terminalTextAttributesReset->_printf
    _terminalTextAttributes->_printf
    _terminalSetCursorHome->_printf
    _terminalClearScreen->_printf
    _printf->_getStringSecondsAsTime

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_terminal_ringBufferPull
    _ringBufferLUT->_terminalTextAttributes
    _printErrorHandlerStatus->_terminalTextAttributes
    _printCurrentMeasurements->_terminalTextAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 2370526
                                             45 BANK3      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
             _LM73AcquisitionHandler
           _LM73TempSensorInitialize
                         _OLED_Clear
                          _OLED_Init
                 _OLED_updateHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
           _TMR2_SetInterruptHandler
                        _TMR3_Reload
           _TMR3_SetInterruptHandler
                     _TMR3_StopTimer
                     _TMR5_StopTimer
                    _TMR5_WriteTimer
              _freqMeasStartCaptures
                    _getCauseOfReset
              _getCauseOfResetString
           _printCurrentMeasurements
                             _printf
                _terminalClearScreen
              _terminalSetCursorHome
             _terminalTextAttributes
        _terminalTextAttributesReset
            _terminal_ringBufferPull
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              7     7      0 1140064
                                            189 BANK2      1     1      0
                                             18 BANK5      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        6     4      2 1138886
                                            187 BANK2      2     0      2
                                             41 BANK3      4     4      0
                     _clearADCErrors
                     _clearI2CErrors
                    _clearUARTErrors
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
             _getStringSecondsAsTime
                          _getUserID
           _printCurrentMeasurements
            _printErrorHandlerStatus
                             _printf
                             _strcmp
                             _strlen
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4    2113
                                              0 BANK2      7     3      4
 ---------------------------------------------------------------------------------
 (3) _printErrorHandlerStatus                              0     0      0  275626
                        _getADCError
                        _getI2CError
                       _getUARTError
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _printCurrentMeasurements                             0     0      0  481958
                             ___flge
           _floatToEngineeringFormat
            _getNXQChargeStateString
             _getStringSecondsAsTime
                             _printf
             _terminalTextAttributes
        _terminalTextAttributesReset
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributesReset                          0     0      0   84837
                             _printf
 ---------------------------------------------------------------------------------
 (3) _terminalTextAttributes                              20    18      2  105952
                                            185 BANK2      2     0      2
                                              0 BANK5     18    18      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     472
                                              0 BANK2      8     2      6
 ---------------------------------------------------------------------------------
 (4) _getStringSecondsAsTime                              35    31      4   98510
                                            163 BANK2      8     4      4
                                              0 BANK3     26    26      0
                            ___lldiv
                             ___wmul
                            _sprintf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    6083
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (4) _getNXQChargeStateString                              2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             11 BANK2      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                    4     2      2     121
                                             13 BANK2      4     2      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (3) _clearUARTErrors                                      0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearI2CErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      1     1      0       0
                                              0 BANK2      1     1      0
                        _getADCError
                        _getI2CError
                       _getUARTError
 ---------------------------------------------------------------------------------
 (2) _getUARTError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getI2CError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminalSetCursorHome                                0     0      0   84837
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminalClearScreen                                  0     0      0   84837
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              15     7      8   84837
                                             26 BANK3     15     7      8
                            __doprnt
           _floatToEngineeringFormat (ARG)
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
            _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      58
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _freqMeasStartCaptures                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR5_WriteTimer                                      2     0      2     304
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_Reload                                          0     0      0     269
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0     269
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     269
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2141
                    _ADCC_Initialize
                    _CCP2_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     211
                                              3 BANK2      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                              0 BANK2      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_updateHandler                                  38    38      0  259785
                                            185 BANK2      2     2      0
                                              0 BANK3     36    36      0
           _OLED_UpdateFromRAMBuffer
           _floatToEngineeringFormat
         _getCauseOfResetStringSmall
                  _getDaysFromOnTime
                        _getDeviceID
                 _getHoursFromOnTime
                 _getMajorRevisionID
                 _getMinorRevisionID
               _getMinutesFromOnTime
        _getNXQChargeStateStringCaps
               _getSecondsFromOnTime
                 _getYearsFromOnTime
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4   18109
                                              3 BANK2      6     2      4
         _getCauseOfResetStringSmall (ARG)
        _getNXQChargeStateStringCaps (ARG)
 ---------------------------------------------------------------------------------
 (2) _getYearsFromOnTime                                   5     1      4    4325
                                             13 BANK2      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _getSecondsFromOnTime                                13     9      4    8199
                                             13 BANK2     13     9      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getNXQChargeStateStringCaps                          2     0      2       0
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getMinutesFromOnTime                                12     8      4    8041
                                             13 BANK2     12     8      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             11 BANK2      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             11 BANK2      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _getHoursFromOnTime                                  11     7      4    7883
                                             13 BANK2     11     7      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             11 BANK2      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                              4 BANK2      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDaysFromOnTime                                   10     6      4    7635
                                             13 BANK2     10     6      4
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _getCauseOfResetStringSmall                           3     1      2      62
                                              0 BANK2      3     1      2
 ---------------------------------------------------------------------------------
 (4) _floatToEngineeringFormat                            22    18      4  105066
                                            163 BANK2     22    18      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             19     7     12   82216
                                            144 BANK2     19     7     12
                            ___fldiv (ARG)
                            __doprnt
                  _getDaysFromOnTime (ARG)
                        _getDeviceID (ARG)
                 _getHoursFromOnTime (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
               _getMinutesFromOnTime (ARG)
               _getSecondsFromOnTime (ARG)
                 _getYearsFromOnTime (ARG)
 ---------------------------------------------------------------------------------
 (5) __doprnt                                             57    51      6   71602
                                             88 BANK2     56    50      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                9     5      4   13098
                                             39 BANK2      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1513
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1705
                                              6 BANK2      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              1 BANK2      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Write                                        1     1      0      62
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                              0 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              13     9      4   11574
                                             39 BANK2     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     912
                                              0 BANK2      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1061
                                              5 BANK2      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         17     9      8     634
                                              0 BANK2     17     9      8
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          14     6      8     634
                                              0 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3152
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8    1062
                                             13 BANK2      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    4201
                                              0 BANK2     13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1295
                                             48 BANK2     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5515
                                             76 BANK2      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    4322
                                             52 BANK2     16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     284
                                              0 BANK2      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2756
                                             76 BANK2     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     950
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     633
                                             58 BANK2      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4113
                                             39 BANK2     25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OLED_UpdateFromRAMBuffer                             4     4      0   14918
                                             35 BANK2      4     4      0
                   _OLED_WriteString
                            _OLED_YX
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     940
                                              0 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (3) _OLED_YX                                              5     4      1    6177
                                             20 BANK2      5     4      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_WriteString                                     2     0      2    7405
                                             33 BANK2      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    5724
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (4) _OLED_Command                                         4     4      0    5724
                                             16 BANK2      4     4      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    6756
                                             33 BANK2      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (4) _OLED_PutChar                                        17    17      0    6620
                                             16 BANK2     17    17      0
                   _I2C2_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (5) _memmove                                             12     6      6     791
                                              0 BANK2     12     6      6
 ---------------------------------------------------------------------------------
 (1) _LM73TempSensorInitialize                             3     3      0    6046
                                             16 BANK2      3     3      0
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LM73AcquisitionHandler                               0     0      0   19891
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
                        _LM73Convert
 ---------------------------------------------------------------------------------
 (2) _LM73Convert                                          9     9      0   11966
                                             76 BANK2      9     9      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    2160
                                             62 BANK2     14    10      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    9251
                                             14 BANK2     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _I2C2_MasterWrite                                     7     0      7    5567
                                              9 BANK2      7     0      7
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterWriteTRBBuild                             9     2      7     546
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterRead                                      7     0      7    2358
                                              9 BANK2      7     0      7
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (6) _I2C2_MasterTRBInsert                                 6     2      4     546
                                              0 BANK2      6     2      4
   _I2C2_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (7) _I2C2_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              9     2      7     577
                                              0 BANK2      9     2      7
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        9     9      0    5634
                                             88 BANK1      9     9      0
                    _CCP2_CaptureISR
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR3_ISR                                            0     0      0     280
                   Absolute function *
          _QIIdleChargedTimerHandler *
       _TMR3_DefaultInterruptHandler *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _QIIdleChargedTimerHandler                           0     0      0     140
                      i1_TMR3_Reload
                   i1_TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_Reload                                       0     0      0     140
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i1_TMR3_WriteTimer                                   2     0      2     140
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
        _ADC_acquisitionTimerHandler *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_acquisitionTimerHandler                         0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR2_StopTimer                                      0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (13) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_ISR                                            2     2      0      31
                                              3 BANK1      2     2      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C2_Stop                                           3     3      0      31
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C2_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C2_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _CCP2_CaptureISR                                     2     2      0    5301
                                             86 BANK1      2     2      0
                      _CCP2_CallBack
 ---------------------------------------------------------------------------------
 (11) _CCP2_CallBack                                       2     0      2    5254
                                             84 BANK1      2     0      2
                    _freqMeasConvert
 ---------------------------------------------------------------------------------
 (12) _freqMeasConvert                                     4     4      0    5156
                                             80 BANK1      4     4      0
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (13) i1___xxtofl                                         14    10      4     348
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (13) i1___flmul                                          25    17      8    1518
                                             55 BANK1     25    17      8
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fldiv                                          25    17      8    1225
                                             30 BANK1     25    17      8
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___fladd                                          16     8      8    2036
                                             14 BANK1     16     8      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     12    12      0   60547
                                             77 BANK0     12    12      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     280
                   Absolute function *
                _QIErrorTimerHandler *
       _TMR1_DefaultInterruptHandler *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _QIErrorTimerHandler                                 0     0      0     140
                      i2_TMR1_Reload
                   i2_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0    4154
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
              _heartbeatTimerHandler *
 ---------------------------------------------------------------------------------
 (16) _heartbeatTimerHandler                               1     1      0    4154
                                             93 COMRAM     1     1      0
                          i2___fladd
                          i2___llmod
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0     368
                         _IOCBF2_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCBF3_ISR                                          0     0      0     254
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                 _QIChargeIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIChargeIOCHandler                                  0     0      0     254
                    _TMR3_StartTimer
                      i2_TMR1_Reload
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_Reload                                       0     0      0     140
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _IOCBF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _IOCBF2_ISR                                          0     0      0     114
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                   _QIIdleIOCHandler *
 ---------------------------------------------------------------------------------
 (17) _QIIdleIOCHandler                                    0     0      0     114
                    _TMR1_StartTimer
                    _TMR3_StartTimer
                      i2_TMR3_Reload
 ---------------------------------------------------------------------------------
 (18) i2_TMR3_Reload                                       0     0      0     114
                  i2_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR3_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _IOCBF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
               _rightCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _rightCapTouchHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                _leftCapTouchHandler *
 ---------------------------------------------------------------------------------
 (17) _leftCapTouchHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0   39568
                           i2_printf
 ---------------------------------------------------------------------------------
 (16) i2_printf                                            9     7      2   39568
                                             68 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (17) i2__doprnt                                          57    51      6   39040
                                             12 BANK0     56    50      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (18) i2_scale                                             9     5      4    6850
                                             68 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (19) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) i2_fround                                           13     9      4    5676
                                             68 COMRAM    13     9      4
                          i2___flmul
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     442
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     451
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (18) i2__tdiv_to_l_                                      17     9      8     524
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (18) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (18) i2___wmul                                            6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     582
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (18) i2___fltol                                          10     6      4     442
                                             77 COMRAM    10     6      4
                          i2___flmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fleq                                           12     4      8     270
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (15) _ADCC_ThresholdISR                                   0     0      0   16177
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADC_PostProcessingHandler *
 ---------------------------------------------------------------------------------
 (16) _ADC_PostProcessingHandler                          23    23      0   16177
                                             12 BANK0     23    23      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                    _TMR2_StartTimer
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flsub
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     756
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flsub                                           8     0      8    4127
                                              4 BANK0      8     0      8
                _ADCC_GetFilterValue (ARG)
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fladd                                          16     8      8    3572
                                             81 COMRAM    12     4      8
                                              0 BANK0      4     4      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                               _fabs (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    4433
                                             43 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___flge                                           12     4      8     686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2___fldiv                                          25    17      8    1589
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _fabs                                                4     0      4     408
                                              4 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) i2___flneg                                           4     0      4     135
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (17) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (18) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _IOCBF2_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _LM73AcquisitionHandler
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
     _LM73Convert
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
   _LM73TempSensorInitialize
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _OLED_Clear
     _OLED_PutChar
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
   _OLED_updateHandler
     _OLED_UpdateFromRAMBuffer
       _OLED_WriteString
         _OLED_PutChar
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
           _memmove
       _OLED_YX
         _OLED_Command
           _I2C2_MasterWrite
             _I2C2_MasterTRBInsert
               _I2C2_WaitForLastPacketToComplete
             _I2C2_MasterWriteTRBBuild
       _strlen
     _floatToEngineeringFormat
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       ___fleq
       ___flge
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetStringSmall
     _getDaysFromOnTime
       ___lldiv
       ___wmul
     _getDeviceID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getHoursFromOnTime
       ___lldiv
       ___wmul
     _getMajorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinutesFromOnTime
       ___lldiv
       ___wmul
     _getNXQChargeStateStringCaps
     _getSecondsFromOnTime
       ___lldiv
       ___wmul
     _getYearsFromOnTime
       ___lldiv
     _sprintf
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _getDaysFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getHoursFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinutesFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getSecondsFromOnTime (ARG)
         ___lldiv
         ___wmul
       _getYearsFromOnTime (ARG)
         ___lldiv
     _strcpy
       _getCauseOfResetStringSmall (ARG)
       _getNXQChargeStateStringCaps (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _CCP2_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _FVR_Initialize
     _I2C2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Reload
     _TMR1_WriteTimer
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _TMR2_SetInterruptHandler
   _TMR3_Reload
     _TMR3_WriteTimer
   _TMR3_SetInterruptHandler
   _TMR3_StopTimer
   _TMR5_StopTimer
   _TMR5_WriteTimer
   _freqMeasStartCaptures
   _getCauseOfReset
   _getCauseOfResetString
   _printCurrentMeasurements
     ___flge
       ___fltol (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
     _floatToEngineeringFormat
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       ___fleq
       ___flge
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getNXQChargeStateString
     _getStringSecondsAsTime
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _terminalTextAttributes
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           ___fleq
           ___flge
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
     _terminalTextAttributesReset
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           ___fleq
           ___flge
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
   _printf
     __doprnt
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___fladd *
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq *
       ___flge *
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg *
       ___flsub *
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
       ___fltol *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___wmul *
       ___xxtofl *
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit *
       _putch *
         _EUSART2_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     _floatToEngineeringFormat (ARG)
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
       ___fleq
       ___flge
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___xxtofl
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _abs (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
       _abs
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
     _getCauseOfResetString (ARG)
     _getDeviceID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getDeviceIDString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _getMajorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getNXQChargeStateString (ARG)
     _getStringSecondsAsTime (ARG)
       ___lldiv
       ___wmul
       _sprintf
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _getDaysFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getHoursFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinutesFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getSecondsFromOnTime (ARG)
           ___lldiv
           ___wmul
         _getYearsFromOnTime (ARG)
           ___lldiv
       _strcat
       _strlen
     _getUserID (ARG)
       _FLASH_ReadWord
         _FLASH_ReadByte
   _terminalClearScreen
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalSetCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminalTextAttributes
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _strcat
     _strncpy
   _terminalTextAttributesReset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq *
         ___flge *
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg *
         ___flsub *
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       _floatToEngineeringFormat (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___fleq
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         ___xxtofl
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _abs
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getNXQChargeStateString (ARG)
       _getStringSecondsAsTime (ARG)
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _clearADCErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearI2CErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _clearUARTErrors
         _updateErrorLEDs
           _getADCError
           _getI2CError
           _getUARTError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getStringSecondsAsTime
         ___lldiv
         ___wmul
         _sprintf
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _getDaysFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getHoursFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinutesFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getSecondsFromOnTime (ARG)
             ___lldiv
             ___wmul
           _getYearsFromOnTime (ARG)
             ___lldiv
         _strcat
         _strlen
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printCurrentMeasurements
         ___flge
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
         _floatToEngineeringFormat
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           ___fleq
           ___flge
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getNXQChargeStateString
         _getStringSecondsAsTime
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printErrorHandlerStatus
         _getADCError
         _getI2CError
         _getUARTError
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _terminalTextAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
         _terminalTextAttributesReset
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _floatToEngineeringFormat (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               ___fleq
               ___flge
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getNXQChargeStateString (ARG)
             _getStringSecondsAsTime (ARG)
               ___lldiv
               ___wmul
               _sprintf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___awdiv *
                     ___awmod (ARG)
                   ___fladd *
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___fleq *
                   ___flge *
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   ___flmul *
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___flneg *
                   ___flsub *
                     ___fladd
                       _fround (ARG)
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         ___lwdiv
                           ___lwmod (ARG)
                         ___lwmod
                     ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                           ___flmul (ARG)
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                           _scale (ARG)
                             ___awdiv
                               ___awmod (ARG)
                             ___awmod
                             ___flmul
                               ___awdiv (ARG)
                                 ___awmod (ARG)
                               ___awmod (ARG)
                               ___lwdiv (ARG)
                                 ___lwmod (ARG)
                               ___lwmod (ARG)
                   ___fltol *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___lldiv *
                   ___llmod *
                     ___lldiv (ARG)
                   ___wmul *
                   ___xxtofl *
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   __div_to_l_ *
                   __tdiv_to_l_ *
                   _fround *
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                   _isdigit *
                   _putch *
                     _EUSART2_Write
                   _scale *
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _getDaysFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getDeviceID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getHoursFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getMajorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinorRevisionID (ARG)
                   _FLASH_ReadWord
                     _FLASH_ReadByte
                 _getMinutesFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getSecondsFromOnTime (ARG)
                   ___lldiv
                   ___wmul
                 _getYearsFromOnTime (ARG)
                   ___lldiv
               _strcat
               _strlen
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___fleq *
           ___flge *
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___flneg *
           ___flsub *
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
         _floatToEngineeringFormat (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
           ___fleq
           ___flge
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           ___xxtofl
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _abs (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
           _abs
             ___fltol (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getNXQChargeStateString (ARG)
         _getStringSecondsAsTime (ARG)
           ___lldiv
           ___wmul
           _sprintf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___fleq *
               ___flge *
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___flneg *
               ___flsub *
                 ___fladd
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             _getDaysFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getHoursFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinutesFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getSecondsFromOnTime (ARG)
               ___lldiv
               ___wmul
             _getYearsFromOnTime (ARG)
               ___lldiv
           _strcat
           _strlen
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcmp
       _strlen
       _terminalTextAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminalTextAttributesReset
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
             ___fleq *
             ___flge *
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___flneg *
             ___flsub *
               ___fladd
                 _fround (ARG)
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
           _floatToEngineeringFormat (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
             ___fleq
             ___flge
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
             ___xxtofl
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _abs (ARG)
                 ___fltol (ARG)
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
             _abs
               ___fltol (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getNXQChargeStateString (ARG)
           _getStringSecondsAsTime (ARG)
             ___lldiv
             ___wmul
             _sprintf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___awdiv *
                   ___awmod (ARG)
                 ___fladd *
                   _fround (ARG)
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___lwdiv
                       ___lwmod (ARG)
                     ___lwmod
                 ___fleq *
                 ___flge *
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 ___flmul *
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                 ___flneg *
                 ___flsub *
                   ___fladd
                     _fround (ARG)
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       ___lwdiv
                         ___lwmod (ARG)
                       ___lwmod
                   ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                         ___flmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                         _scale (ARG)
                           ___awdiv
                             ___awmod (ARG)
                           ___awmod
                           ___flmul
                             ___awdiv (ARG)
                               ___awmod (ARG)
                             ___awmod (ARG)
                             ___lwdiv (ARG)
                               ___lwmod (ARG)
                             ___lwmod (ARG)
                 ___fltol *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                 ___lldiv *
                 ___llmod *
                   ___lldiv (ARG)
                 ___wmul *
                 ___xxtofl *
                   ___flmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___fltol (ARG)
                     ___flmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___lwdiv (ARG)
                         ___lwmod (ARG)
                       ___lwmod (ARG)
                     _scale (ARG)
                       ___awdiv
                         ___awmod (ARG)
                       ___awmod
                       ___flmul
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                       ___flmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___lwdiv (ARG)
                           ___lwmod (ARG)
                         ___lwmod (ARG)
                       _scale (ARG)
                         ___awdiv
                           ___awmod (ARG)
                         ___awmod
                         ___flmul
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___lwdiv (ARG)
                             ___lwmod (ARG)
                           ___lwmod (ARG)
                 __div_to_l_ *
                 __tdiv_to_l_ *
                 _fround *
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
                   ___lwdiv
                     ___lwmod (ARG)
                   ___lwmod
                 _isdigit *
                 _putch *
                   _EUSART2_Write
                 _scale *
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___lwdiv (ARG)
                       ___lwmod (ARG)
                     ___lwmod (ARG)
               _getDaysFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getHoursFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinutesFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getSecondsFromOnTime (ARG)
                 ___lldiv
                 ___wmul
               _getYearsFromOnTime (ARG)
                 ___lldiv
             _strcat
             _strlen
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
     _strlen
   _updateErrorLEDs
     _getADCError
     _getI2CError
     _getUARTError

 _INTERRUPT_InterruptManagerLow (ROOT)
   _CCP2_CaptureISR
     _CCP2_CallBack
       _freqMeasConvert
         i1___fladd
           i1___xxtofl (ARG)
         i1___fldiv
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___flmul
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___fldiv (ARG)
             i1___fladd (ARG)
               i1___xxtofl (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___xxtofl
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop
   _TMR2_ISR
     Absolute function(Fake) *
     _ADC_acquisitionTimerHandler *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion
       _TMR2_StopTimer
         _TMR2_Stop
     _TMR2_DefaultInterruptHandler *
   _TMR3_ISR
     Absolute function(Fake) *
     _QIIdleChargedTimerHandler *
       i1_TMR3_Reload
         i1_TMR3_WriteTimer
       i1_TMR3_StopTimer
     _TMR3_DefaultInterruptHandler *
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_PostProcessingHandler *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _TMR2_StartTimer
         _TMR2_Start
       _fabs
         i2___flneg
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           _fabs (ARG)
             i2___flneg
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___fleq *
         i2___flge *
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
         i2___flsub *
           _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             _fabs (ARG)
               i2___flneg
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___lwdiv (ARG)
                   i2___lwmod (ARG)
                 i2___lwmod (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv
                 i2___lwmod (ARG)
               i2___lwmod
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _EUSART2_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _leftCapTouchHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       _rightCapTouchHandler *
   _PIN_MANAGER_IOC *
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _QIIdleIOCHandler *
         _TMR1_StartTimer
         _TMR3_StartTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _QIChargeIOCHandler *
         _TMR3_StartTimer
         i2_TMR1_Reload
           i2_TMR1_WriteTimer
         i2_TMR3_Reload
           i2_TMR3_WriteTimer
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _heartbeatTimerHandler *
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         _fabs (ARG)
           i2___flneg
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___llmod
         i2___lldiv (ARG)
   _TMR1_ISR *
     Absolute function(Fake) *
     _QIErrorTimerHandler *
       i2_TMR1_Reload
         i2_TMR1_WriteTimer
       i2_TMR1_StopTimer
     _TMR1_DefaultInterruptHandler *
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     18      18      16        9.4%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     2F     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     BE     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     61      B8       8       71.9%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     59      9E       5       98.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4CC       6        0.0%
DATA                 0      0     4CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 17:22:32 2019

                              _temp_adc_offset E88B               __end_of_TMR2_SetInterruptHandler CAD4  
                                 ___fldiv@aexp 023F                                   ___fldiv@bexp 023E  
                                  i1___fladd@a 0112                                    i1___fladd@b 010E  
             ??_IOCBF3_DefaultInterruptHandler 0001                ?_IOCBF3_DefaultInterruptHandler 0001  
                                 ___fldiv@sign 0237                           ??_OLED_updateHandler 02B9  
                    _QIIdleChargedTimerHandler C812                          __end_ofi1_TMR3_Reload CB60  
                                  i1___fldiv@a 0122                                    i1___fldiv@b 011E  
                                  __CFG_CP$OFF 000000                          ?_I2C2_MasterTRBInsert 0200  
                                 ___awdiv@sign 020B                                    i1___flmul@a 013B  
                                  i1___flmul@b 0137                         __end_of_FVR_Initialize CBA2  
                        _freqMeasStartCaptures CBBA                 __size_of_heartbeatTimerHandler 015E  
                                           bsr 000FE0                            ___wmul@multiplicand 0202  
                           i2___lwdiv@dividend 0006                  __end_of_heartbeatTimerHandler 9BAE  
                            ??_TMR5_WriteTimer 0202                 I2C2_MasterReadTRBBuild@address 0205  
                                   i1___xxtofl 9E42                                            l122 BEA8  
                                          l115 C0BA                                            l124 BEBE  
                                          _PR2 000FBC                                   __CFG_CPD$OFF 000000  
                     ?_printErrorHandlerStatus 0001                                    i2___fladd@a 0056  
                                  i2___fladd@b 0052                      _pos12_isns_average_buffer 0440  
                              _timer1ReloadVal 0189                                            _abs C554  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString B116                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 0205              __size_of_LM73TempSensorInitialize 0238  
                       ??_rightCapTouchHandler 0001                                   __CFG_IDLOC0$ 00000D  
                                   i2___xxtofl 9F86                                   __CFG_IDLOC1$ 00000E  
                                 __CFG_IDLOC2$ 00000A                                   __CFG_IDLOC3$ 00000D  
                                 __CFG_IDLOC4$ 00000B                                   __CFG_IDLOC5$ 00000E  
                                 __CFG_IDLOC6$ 00000E                                   __CFG_IDLOC7$ 00000F  
                              _TMR2_Initialize C3AA                                            prod 000FF3  
                    ?_LM73TempSensorInitialize 0001                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0030  
                                i1___fladd@grs 011D                                    i2___flmul@b 002C  
                                  i2___flsub@a 0068                                    i2___flsub@b 0064  
                 __end_of_getSecondsFromOnTime 9A50                                   ___flmul@aexp 021B  
                                 ___flmul@bexp 0220                       __end_of_OLED_WriteString BA6E  
                             OLED_Command@temp 0210                                   ___flmul@sign 021A  
                                 ___flmul@temp 0225                                   ___flmul@prod 0221  
                                 __CFG_LVP$OFF 000000                                  _INT1_CallBack C70A  
                                 __CFG_ZCD$OFF 000000                                  i1___fldiv@grs 0131  
                                i1___fldiv@rem 012A                               __end_of_I2C2_ISR 927E  
                                 ___fltol@exp1 0239                                           ?_abs 023A  
                                         l2042 3644                                           l2211 9744  
                                         l2300 A66A                                           l1340 7FE8  
                                         l2231 5942                                           l3200 BAB8  
                                         l3210 BF20                                           l2226 5664  
                                         l2218 9820                                           l1339 7EF4  
                              _timer3ReloadVal 018D                                           l3052 A26A  
                                         l2260 502E                                           l3053 A292  
                                         l2501 099C                                           l2229 56BA  
                                         l2503 096A                                           l2239 59E8  
                                         l1392 939E                                           l3304 87CA  
                                         l3305 87C6                                           l3129 B69C  
                                         l1641 B9E4                                           l1633 B9C4  
                                         l3323 6B02                                           l1643 B9EC  
                                         l1635 B9CC                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l3340 6DA0                                           l3332 6D1A  
                                         l2620 12E2                                           l3333 6D16  
                                         l1645 B9F4                                           l1637 B9D4  
                                         l3254 7690                                           l3238 75BE  
                                         l3263 76F6                                           l3239 759C  
                                         l2535 0B8A                                           l1639 B9DC  
                                         l3264 76F2                                           l2537 0B58  
                                         l2714 B44C                                           l2618 1314  
                                         l3371 9DBE                                           l3364 9D40  
                                         l2652 14FC                                           l3293 875C  
                                         l2654 14CA                           _ADCC_StartConversion CB60  
                                         l3383 C574                                           l2568 0D78  
                                         l1972 AB1C                                           l2589 10B4  
                                         l2965 A930                          __size_ofi2__div_to_l_ 00F4  
                                         STR_1 FFC7                                           STR_2 F14C  
                                         STR_3 F3B8                                           STR_4 F4D9  
                                         STR_5 EF62                                           STR_6 ED0E  
                                         STR_7 F500                                           STR_8 F304  
                                         STR_9 F7D5                                __end_of_OLED_YX BF6E  
                                  ?_OLED_Clear 0001                                           _LATA 000F83  
                                         _LATB 000F84                                           _LATC 000F85  
                                         _T2PR 000FBC                                           _PMD0 000EE1  
                                         _PMD1 000EE2                                           _PMD2 000EE3  
                                         _PMD3 000EE4                                           _PMD4 000EE5  
                                         _PMD5 000EE6                                           _TMR2 000FBB  
                        ??_leftCapTouchHandler 0001                                           _WPUA 000F10  
                                         _WPUB 000F18                                           _WPUC 000F20  
                                         _WPUE 000F2D                                  _INT2_CallBack C6E6  
                        ??_EUSART2_Receive_ISR 005E                                   i2___flge@ff1 0001  
                                 i2___flge@ff2 0005                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write BEA2                ??_ADCC_HasAccumulatorOverflowed 0001  
                     ??_LM73AcquisitionHandler 0255                                   i2___fleq@ff1 0001  
                                 i2___fleq@ff2 0005                                           abs@a 023A  
                                         _fabs C264                           __end_of_getUARTError CBFA  
                      __end_of_CCP2_Initialize C750                                           _main 7DA4  
                                  i2__doprnt@c 00A3                                           _line 0344  
                                  i2__doprnt@f 006E                                  i1___flmul@grs 0144  
                       OLED_Command@data_array 0212                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                           i2___lwdiv@quotient 000B                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                   i2___flneg@f1 0001  
                              _OLED_RAM_Buffer 0300              __size_of_INT2_SetInterruptHandler 000E  
                  I2C2_MasterReadTRBBuild@ptrb 0200                  __end_of_ADCC_ClearAccumulator CC06  
                               _clearI2CErrors C870                      ?_INT2_SetInterruptHandler 0200  
                   __size_ofi2_TMR3_WriteTimer 001C                                           prodh 000FF4  
                                         prodl 000FF3                                 i1___fladd@aexp 011B  
                           _QIChargeIOCHandler C8A8                                 i1___fladd@bexp 011C  
                                         start 00A2                                _timer5ReloadVal 018B  
                            ??_clearUARTErrors 0201                                   i2___fltol@f1 004E  
                               _clearADCErrors CA6C                                ___fldiv@new_exp 0238  
                              __end_ofi2_scale 6374                   __end_of_EUSART2_Transmit_ISR C40E  
                              _TMR3_Initialize BBB6                                __end_ofi2_putch CBEC  
                   ??_TMR1_SetInterruptHandler 0203                                  __CFG_CSWEN$ON 000000  
                          _QIErrorTimerHandler C992                                   ___param_bank 000000  
                      __end_of_updateErrorLEDs BE5C                           __size_of_getI2CError 0028  
                                __CFG_SCANE$ON 000000                          __end_ofi2_TMR1_Reload CB7C  
                         __size_of_getADCError 0016                       __size_ofi2_EUSART2_Write 0042  
                          ?_QIChargeIOCHandler 0001                                          ??_abs 023C  
                           __size_of_OLED_Init 0098                          __end_ofi2_TMR3_Reload CB8A  
                      __end_of_TMR0_Initialize C554                       ?_getNXQChargeStateString 0200  
                             __end_of_INT1_ISR CBE2                               __end_of_INT2_ISR CBD8  
                               i1___fldiv@aexp 0136                                 i1___fldiv@bexp 0135  
                                   _i2c2_state 00DB                 ??_TMR0_DefaultInterruptHandler 0001  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0211  
               __size_of_OSCILLATOR_Initialize 0018                                 i1___fldiv@sign 012E  
                          __size_of_IOCBF2_ISR 002A                            __size_of_IOCBF3_ISR 002A  
                __end_of_OSCILLATOR_Initialize C97C                                          l20100 B08A  
                                        l20112 B09E                                          l20040 563A  
                                        l20130 B0BC                                          l20106 B094  
                                        l20050 58D0                                          l20210 9768  
                                        l20028 C434                                          l20124 B0B2  
                                        l20060 5980                                          l20036 5612  
                                        l20220 97C8                                          l20212 978A  
                                        l21030 BCE8                                          l21110 B986  
                                        l21006 C7A6                                          l20118 B0A8  
                                        l20062 599E                                          l20206 972E  
                                        l21104 B97A                                          l22000 33CE  
                                        l20232 980A                                          l20224 97DE  
                                        l22002 33F2                                          l21042 C7C6  
                                        l20138 B0C6                                          l20242 98B2  
                                        l20180 BA18                                          l21116 B992  
                                        l21124 B99E                                          l22012 3426  
                                        l20068 59BE                                          l20228 97F4  
                                        l20236 9844                                          l21054 8E04  
                                        l20094 B080                                          l20238 9866  
                                        l20190 BB70                                          l20184 BA44  
                                        l22200 3D06                                          l22104 36B8  
                      _I2C2_MasterReadTRBBuild BAC2                                          l21082 8FAC  
                                        l21330 A0DA                                          l22210 3D7C  
                                        l22106 36F2                                          l21402 50B6  
                                        l21068 8ED8                                          l21340 A0F6  
                                        l21244 C494                                          l21092 B962  
                                        l22220 3DB2                                          l22132 3954  
                                        l22124 37F2                                          l22116 3726  
                                        l22060 357C                                          l22044 350A  
                                        l22028 3498                                          l20188 BB68  
                                        l21342 A108                                          l21334 A0E2  
                                        l22150 3A4E                                          l21406 50F6  
                                        l22320 9310                                          l22304 92B8  
                                        l21352 A124                                          l22208 3D42  
                                        l22128 38A4                                          l22144 3A44  
                                        l21432 52FA                                          l21416 51F4  
                                        l21424 52BA                                          l21370 A16C  
                                        l21354 A136                                          l21346 A110  
                                        l21098 B96E                                          l22138 39E4  
                                        l21434 5300                                          l22410 A5E0  
                                        l22500 9648                                          l21364 A152  
                                        l22236 3E22                                          l22180 3C5A  
                                        l22164 3BA4                                          l22076 35EE  
                                        l21444 5342                                          l22334 9346  
                                        l22318 92EE                                          l21366 A164  
                                        l21358 A13E                                          l21390 BD00  
                                        l22190 3CD0                                          l22174 3C50  
                                        l22158 3B16                                          l22094 3678  
                                        l22086 362E                                          l21462 5406  
                                        l21454 5384                                          l22422 A62C  
                                        l22432 94BC                                          l22352 93C8  
                                        l22336 9368                                          l21376 A180  
                                        l21392 BD0A                                          l22272 3F40  
                                        l22256 3EDE                                          l22168 3BF2  
                                        l22424 A64C                                          l22530 96D6  
                                        l22514 967E                                          l22450 951E  
                                        l22290 3FA8                                          l20842 C0BC  
                                        l21482 55BC                                          l21474 5466  
                                        l21458 53A8                                          l22418 A60E  
                                        l22516 96A0                                          l22452 9540  
                                        l22436 94E8                                          l22188 3C96  
                                        l21820 2EB2                                          l21804 2E40  
                                        l20852 C0E4                                          l22382 9456  
                                        l22366 93FE                                          l22294 3FB4  
                                        l21478 5558                                          l21398 507A  
                                        l22384 9478                                          l22368 9420  
                                        l22288 3FA2                                          l21920 3186  
                                        l21904 3114                                          l21840 2F6E  
                                        l21728 C786                                          l18010 AFC4  
                                        l22482 95CE                                          l22466 9576  
                                        l22298 9284                                          l21754 B9FC  
                                        l18004 AFA4                                          l22484 95F0  
                                        l22468 9598                                          l17204 7514  
                                        l17140 BEAA                                          l18100 0328  
                                        l22398 94AE                                          l18110 03A2  
                                        l18030 008A                                          l18008 AFB8  
                                        l21792 C184                                          l17152 BEDE  
                                        l18104 0364                                          l18032 0090  
                                        l18024 004A                                          l21944 3234  
                                        l21936 31F8                                          l21872 3032  
                                        l21856 2FD0                                          l22728 8072  
                                        l22498 9626                                          l21786 C17C  
                                        l17314 76D4                                          l17234 7550  
                                        l17154 BEE0                                          l18210 0890  
                                        l18130 04A0                                          l18122 0456  
                                        l18034 0096                                          l18018 0004  
                                        l21946 3258                                          l17308 76CA  
                                        l17172 74AC                                          l18204 0814  
                                        l18124 046A                                          l18116 0406  
                                        l18108 038E                                          l18060 01D4  
                                        l18028 0078                                          l21980 333A  
                                        l21972 32FE                                          l21956 328C  
                                        l22852 B0E6                                          l22692 7FF4  
                                        l17342 7762                                          l17334 773C  
                                        l17270 7604                                          l17262 75E2  
                                        l17246 75AA                                          l17510 B398  
                                        l17502 B37A                                          l18310 0BE6  
                                        l18230 0912                                          l18222 08CE  
                                        l18150 0590                                          l18142 0532  
                                        l18126 048E                                          l18070 0262  
                                        l18134 04A6                                          l18046 010C  
                                        l18038 009E                                          l21982 335E  
                                        l22854 B0FC                                          l22678 7EE6  
                                        l17440 6CC2                                          l17272 7608  
                                        l17280 761A                                          l17248 75AE  
                                        l17192 74F0                                          l17168 74A8  
                                        l17520 B3B8                                          l18320 0CDA  
                                        l18240 093C                                          l18208 088C  
                                        l18136 051C                                          l18072 0266  
                                        l18064 0228                                          l21992 3392  
                                        l21888 30A2                                          l22856 B10C  
                                        l17370 6AAE                                          l17346 776A  
                                        l17290 7680                                          l17602 BF16  
                                        l18330 0D4C                                          l18322 0CE6  
                                        l18306 0BCA                                          l18226 08F8  
                                        l18082 02A6                                          l18074 026A  
                                        l18066 0254                                          l17372 6AB2  
                                        l17348 776C                                          l17196 74F4  
                                        l17620 81F8                                          l17508 B390  
                                        l17524 B3C2                                          l17540 B57A  
                                        l18500 13C4                                          l18420 117E  
                                        l18404 1138                                          l18332 0D54  
                                        l18260 0A08                                          l18084 02B0  
                                        l18076 026E                                          l17470 6D7C  
                                        l17446 6CE0                                          l17390 6AF2  
                                        l17374 6AC2                                          l17550 B59C  
                                        l18406 113C                                          l18350 0DF0  
                                        l18326 0D22                                          l18318 0CAE  
                                        l18246 0976                                          l18270 0A76  
                                        l18190 0780                                          l18182 0714  
                                        l18174 069C                                          l18166 061C  
                                        l18094 0308                                          l18086 02B6  
                                        l17528 B3D0                                          l17560 B5BE  
                                        l17544 B586                                          l17640 5C68  
                                        l18512 143C                                          l18504 13EE  
                                        l18440 11F2                                          l18280 0AEE  
                                        l18272 0A88                                          l18264 0A44  
                                        l18256 09DC                                          l17482 6DBE  
                                        l17466 6D5E                                          l17298 76B4  
                                        l17810 B40A                                          l17722 A2AC  
                                        l17626 82E6                                          l17650 5D48  
                                        l18530 14D6                                          l18506 13F8  
                                        l18450 1234                                          l18418 117A  
                                        l18434 11BC                                          l18362 0F1A  
                                        l18354 0E52                                          l18346 0DC6  
                                        l18338 0D7C                                          l18290 0B2A  
                                        l18258 09F8                                          l18282 0AF6  
                                        l18194 07AE                                          l18178 06CA  
                                        l18098 031E                                          l18602 C98E  
                                        l19410 B91E                                          l19330 67B4  
                                        l19322 675C                                          l19314 6724  
                                        ?_fabs 0005                                          l17388 6AEE  
                                        l17820 B43E                                          l17732 A2C4  
                                        l17564 B5CC                                          l17556 B5B4  
                                        l17548 B594                                          l18540 153C  
                                        l18524 149C                                          l18516 1466  
                                        l18444 1212                                          l18436 11D2  
                                        l18372 0FE2                                          l18364 0F46  
                                        l18276 0AC4                                          l18268 0A6E  
                                        l18380 101E                                          l19404 B912  
                                        l19500 66DC                                          l19332 67CA  
                                        l19324 6772                                          l19340 6820  
                                        l17398 6B20                                          l18710 8616  
                                        l17910 AC58                                          l17902 AC44  
                                        l17742 A406                                          l17734 A2D0  
                                        l17726 A2BC                                          l17574 BA86  
                                        l17646 5D18                                          l18462 1282  
                                        l18366 0F9A                                          l19422 B936  
                                        l19430 B942                                          l19502 66F8  
                                        l19350 6898                                          l19342 6838  
                                        l19334 67E0                                          l19326 6788  
                                        l18632 C4D8                                          l17808 B3FE  
                                        l17576 BA8E                                          l17496 B36A  
                                        l17664 5F2C                                          l18560 16BE  
                                        l18552 1650                                          l18544 155A  
                                        l18480 12EE                                          l18464 128A  
                                        l18456 1256                                          l18376 100C  
                                        l18368 0FA6                                          l18296 0B64  
                                        l19416 B92A                                          l19504 670E  
                                        l19352 68B0                                          l19344 6850  
                                        l19328 679E                                          l18634 C4DE  
                                        l18730 8656                                          l18714 861A  
                                        l17842 B2C6                                          l17834 B274  
                                        l17850 A8D0                                          l17770 A484  
                                        l17762 A454                                          l17586 BAAE  
                                        l17594 BEF6                                          l17658 5E7C  
                                        l18546 15DC                                          l18554 1666  
                                        l18562 16CC                                          l18490 1354  
                                        l18474 12B4                                          l18458 125E  
                                        l18386 1068                                          l18378 1014  
                                        l19610 4FF0                                          l18626 C5F6  
                                        l18650 B8B0                                          l19434 637C  
                                        l19370 698A                                          l19354 68C8  
                                        l19346 6868                                          l19362 6910  
                                        l19338 67F6                                          l19516 B7A8  
                                        l18820 885C                                          l18812 880E  
                                        l17916 AC74                                          l17908 AC4C  
                                        l17932 B68E                                          l17924 B65A  
                                        l17596 BEFE                                          l17676 C76A  
                                        l18492 1370                                          l18396 10EA  
                                        l18388 109A                                          l19604 4F08  
                                        l18652 B8B6                                          l19460 6564  
                                        l19380 69F8                                          l19372 69A0  
                                        l19356 68E0                                          l19348 6880  
                                        l19364 6946                                          l18590 BC98  
                                        l17950 9D74                                          l17942 9D50  
                                        l18742 868E                                          l18734 865A  
                                        l17838 B2A8                                          l17854 A904  
                                        l17926 B666                                          l17782 A4A0  
                                        l17686 A216                                          l18558 16A2  
                                        l18494 137E                                          l18398 111E  
                                        l18654 B8C6                                          l19470 65C2  
                                        l19462 6580                                          l19438 6390  
                                        l19382 6A0E                                          l19374 69B6  
                                        l19366 695E                                          l19358 68F8  
                                        l17960 9DE4                                          l17952 9D80  
                                        l18664 AD86                                          l19544 AB92  
                                        l18816 8832                                          l17864 A968  
                                        l17872 C4BC                                          l17792 A4B8  
                                        l18656 B8D0                                          l19480 6620  
                                        l19472 65DE                                          l19464 6596  
                                        l19376 69CC                                          l19368 6974  
                                        l17962 9DF0                                          l17954 9DA6  
                                        l18826 8868                                          l17858 A91A  
                                        l17882 ABEA                                          l17794 A4C4  
                                        l17786 A4B0                                          l19570 4A60  
                                        l19490 667E                                          l19482 663C  
                                        l19474 65F4                                          l18690 B6E6  
                                        l19378 69E2                                          l19386 6A24  
                                        l17948 9D6E                                          l18668 ADBC  
                                        l18828 886A                                          l18780 875A  
                                        l18756 86BC                                          l18748 86A4  
                                        l19580 4B68                                          l19572 4A70  
                                        l19492 669A                                          l19484 6652  
                                        l18692 B6F2                                          l18684 B6B8  
                                        l19388 6A5A                                          l18774 8734  
                                        l18766 870C                                          l19566 4A3E  
                                        l19398 B906                                          l19494 66B0  
                                ___fltol@sign1 0238                                          l18792 8790  
                                        l19592 4D38                                          l18696 B702  
                                        l17978 9E30                                          l18786 8772  
                                        l17898 AC34                                          l19586 4C50  
                                        l19598 4E20                     __size_of_getDaysFromOnTime 0090  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                __end_of___fladd 7788  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 8872                                          _ADREF 000F58  
                              __end_of___awdiv B3DA                                __end_of___flneg C4CE  
                                        _ADPRE 000F5E                                          STR_10 F2A7  
                                        STR_11 F9D7                                          STR_20 FCC5  
                                        STR_12 F8D1                                          STR_13 FFAE  
                                        STR_21 FF84                                          STR_14 FF31  
                                        STR_22 FEBA                                          STR_30 FA70  
                                        STR_15 FCD3                                          STR_31 FA30  
                                        STR_23 FBA2                                          STR_32 FBA2  
                                        STR_16 FF8A                                          STR_40 FE3E  
                                        STR_24 FC1C                                          STR_17 FEC4  
                                        STR_41 FE49                                          STR_33 FEBA  
                                        STR_25 FBB2                                          STR_42 FEBA  
                                        STR_18 FFA9                                          STR_50 FE7E  
                                        STR_34 FEB0                                          STR_26 FAE8  
                                        STR_19 FD26                                          STR_51 FE1D  
                                        STR_43 FDC4                                          STR_35 FEA6  
                                        STR_27 F442                                          STR_52 FF28  
                                        STR_44 FD63                                          STR_36 FE54  
                                        STR_28 F439                                __end_of___awmod B5D6  
                                        STR_53 FE92                                          STR_45 FDAC  
                                        STR_37 FE60                                          STR_29 F8B6  
                                        STR_54 FE88                                          STR_70 FE74  
                                        STR_46 FDB8                                          STR_62 FC47  
                                        STR_38 FE5F                                          STR_55 FE28  
                                        STR_47 FD49                                          STR_71 FB92  
                                        STR_63 FB82                                          STR_39 FC0D  
                                        STR_56 FDA0                                          STR_48 FD56  
                                        STR_80 FC55                                          STR_72 FBFE  
                                        STR_64 FB72                                          _ADRPT 000F66  
                                        STR_49 FEBA                                          STR_81 FF52  
                                        STR_65 FDE6                                          STR_57 FD3C  
                                        STR_73 FCA9                                          STR_90 FDAA  
                                        STR_82 FDAA                                          STR_66 FF9F  
                                        STR_58 FE9C                                          STR_74 FDF1  
                                        STR_91 FDAA                                          STR_83 FDAA  
                                        STR_59 FE33                                          STR_67 FCE1  
                                        STR_75 FCB7                                          STR_68 FF71  
                                        STR_92 FD88                                          STR_84 FCEE  
                                        STR_76 FB52                                          STR_85 FF52  
                                        STR_93 FD22                                          STR_77 FBE0  
                                        STR_69 FB62                              __end_of_I2C2_Stop BFB2  
                                        STR_86 FDAA                                          STR_78 FDAA  
                                        STR_94 FF42                                          STR_95 FDAA  
                                        STR_87 FDAA                                          STR_79 FDAA  
                                        STR_96 FDAA                                          STR_88 FC9B  
                              __end_of___flmul 6DD4                                          STR_89 FF42  
                                        STR_97 FD15                                          STR_98 FF5A  
                                        STR_99 FDAA                                __end_of___flsub BDCE  
                              __end_of___fltol AC86                                _TMR1_StartTimer CC28  
                              __end_of___lldiv B45E                                          _T1CLK 000FD2  
                                        u21010 6B0E                                          u21100 6D6C  
                                        u21020 6C84                                ___awdiv@divisor 0208  
                                        u21110 6D8A                                          u22000 0156  
                                        _T1CON 000FCF                                          u21025 6C7A  
                              __end_of___llmod B6AE                                          u22010 0192  
                                        u21060 6D10                                          u21220 B5A0  
                                        u22100 02EA                                          u22020 019A  
                                        u22030 01BC                                          u22007 014C  
                                        _T3CLK 000FCC                                          u21160 B39C  
                                        u22200 0440                                          _T2CON 000FBD  
                                        u22017 0188                                          u22050 020C  
                                        u21411 A1FA                                          u21500 A3F4  
                                        u21420 A204                                          u21260 BA92  
                                        u22300 06DA                                          u22220 04D6  
                                        u22060 024A                                          u22037 01B2  
                                        u22310 0726                                          u21431 A226  
                                        u22207 0436                                          u20640 7572  
                                        u23120 1476                                          u23008 12CC  
                                        _T3CON 000FC9                                          u22057 0202  
                                        u20650 7582                                          u21290 BF02  
                                        u22090 02E4                                          u22227 04CC  
                                        u22067 0240                                          u21620 B2C2  
                                        u20900 7748                                          u20820 76D8  
                                        u20660 7584                                          u21700 AC08  
                                        u22340 0780                                          u23230 16DE  
                                        u23118 1426                                          u22190 03FC  
                                        u22158 034E                                          _T5CLK 000FC6  
                                        u20840 76EC                                          u21560 A4CA  
                                        u23240 170E                                          u23208 1526  
                                        u23048 133E                                          u21705 ABFE  
                                        u22097 02DA                                          u20690 75C6  
                                        u21490 A2D6                                          u23250 171A  
                                        u23090 1400                                          u23330 C5F2  
                                        u21740 AC5E                                          u21580 B40E  
                                        u23228 168C                                          u22540 0B04  
                                        u22508 0A2E                                          u22188 03C8  
                                        _T2HLT 000FBE                                          u22197 03F2  
                                        u22189 03FE                                          u23078 13AE  
                                        u23247 1704                                          u23168 14B4  
                                        u22448 0954                                          u23280 C98A  
                                        u23360 B8FA                                          _T5CON 000FC3  
                                        u21850 9DFA                                          u21690 ABD8  
                                        u21770 B66A                                          u22538 0AAE  
                                        u22628 0BB4                                          u23630 87C0  
                                        u23367 B8F0                                          u22728 0DB0  
                                        u22680 0D62                                          u22648 0C96  
                                        u22488 09C6                                          u21960 00C0  
                                        u22690 0D72                                          u22748 0F02  
                                        u22588 0B42                                          u21980 00FA  
                                        u25500 59AE                                          u23670 881C  
                                        u22678 0D0C                                          u21958 0034  
                               __CFG_DEBUG$OFF 000000                                          u21967 00B6  
                                        u23680 8840                                          u27105 8E62  
                                        u22778 0FCC                                          u21987 00F0  
                                        u24740 ABC2                                          u24660 B7D8  
                                        u25540 BA3A                                          u27125 8F36  
                                        u25525 C218                                          u25550 BA66  
                                        u25535 BF58                                          u24680 AB18  
                                        u25480 5970                                          u28210 9398  
                                        u25547 BA30                                __end_of___lwdiv BAC2  
                                        u25580 BBAA                                          u27085 8D8E  
                                        u25557 BA5C                                          u28150 9340  
                                        u27430 5236                                          u28400 A604  
                   _ADCC_ADTI_InterruptHandler 00CC                                          u28330 9450  
                                        u28090 92E8                                          u27370 BD34  
                                        u28500 9518                                          u28270 93F8  
                                        u27377 BD2A                                          u28620 95C8  
                                        _T2TMR 000FBB                 __size_of_I2C2_FunctionComplete 001A  
                                        u28390 94A8                                          u27910 3616  
                                        u28800 96D0                                          u28560 9570  
                                        i1l250 007A                                          u27850 C19C  
                                        u27930 36A0                                          _T2RST 000FC0  
                                        i1l251 0070                                          u28740 9678  
                                        u27860 C1AE                                          i1l245 004C  
                                        u29277 7DB8                                          u27950 3806  
                                        i1l247 0058                                          u29287 5458  
                                        u28680 9620                                          u27960 38B6  
                                        i1l249 0064                                __end_of___lwmod BF2A  
                                        i2l122 BFF8                                          u27970 3964  
                                        i2l124 C00E                                          u27980 3A7A  
                                        i2l230 A824                                          u27990 3B26  
                                        i2l144 AEE8                                          i2l136 C408  
                                        i2l232 A830                                          i2l224 A7F0  
                                        i2l234 A83C                                          i2l226 A7FC  
                                        i2l235 A866                                          i2l236 A85C  
                                        i2l228 A808                                          i1l940 90A2  
                                        i1l943 90AE                                          i1l953 9168  
                                        i1l937 9042                                          i1l971 9214  
                                        i1l963 91AA                                          i1l948 90EA  
                                        i1l949 90FC                                          i1l966 91C6  
                                        i1l967 91DC                                          i1l959 9176  
                              ___awdiv@counter 020A                  __end_of_I2C2_FunctionComplete C94A  
                                        _OSCEN 000EDC                                          _TMR0H 000FD4  
                                        _TMR1H 000FCE                                          _TMR0L 000FD3  
                     _OLED_UpdateFromRAMBuffer A0C6                                          _TMR3H 000FC8  
                                        _TMR1L 000FCD                                          _TMR3L 000FC7  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                 i2__div_to_l_ A4DC                                __end_of__doprnt 1724  
                                        _TRISA 000F88                                          _TRISB 000F89  
                                        _TRISC 000F8A              __size_of_TMR0_SetInterruptHandler 000E  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000              __size_of_TMR3_SetInterruptHandler 000E  
                    ?_TMR0_SetInterruptHandler 0200                        terminalTextAttributes@i 0511  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                         ?_QIErrorTimerHandler 0001                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 0063                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                    ?_TMR3_SetInterruptHandler 0200                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                             __end_of_TMR0_ISR C672                                 __CFG_EBTR7$OFF 000000  
                             __end_of_TMR1_ISR C3AA                               __end_of_TMR2_ISR C64A  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR C376  
                         _getMinutesFromOnTime 9BAE                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                       __end_of_QIIdleIOCHandler CA10  
                               ?_INT1_CallBack 0001                               ?_CCP2_CaptureISR 0001  
                       __size_of_CCP2_CallBack 0040                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 02BD  
               ??_TMR3_DefaultInterruptHandler 0100                        __end_of_PIN_MANAGER_IOC C9FC  
                              __end_of_dpowers E88B                             __size_of_TMR2_Stop 0004  
                                  ?_TMR2_Start 0001                                          fabs@d 0005  
                                   i2scale@scl 004D                 ??_INT1_DefaultInterruptHandler 0001  
                               i1___flmul@aexp 0148                                 i1___flmul@bexp 0149  
                                 i2__doprnt@ap 0070                                   i2__doprnt@cp 008B  
                        ?_ADCC_StartConversion 0001                           ??_QIChargeIOCHandler 0003  
                                 i2__doprnt@pb 006C                                          _scale 5B28  
                              __end_of_isdigit C772                                __end_of_memmove ADEE  
                                i2___fldiv@grs 0026                             __CFG_MCLRE$EXTMCLR 000000  
                                i2___fldiv@rem 001F                                 i1___flmul@sign 0143  
                               i1___flmul@temp 014E                                 i1___flmul@prod 014A  
                                        _putch C9D4                                 ?_INT2_CallBack 0001  
                 I2C2_MasterReadTRBBuild@pdata 0202                       _INT1_SetInterruptHandler CB1A  
                      __end_of_TMR1_Initialize BC56                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                               __end_ofi2___flge AA3C  
                             __end_ofi2___fleq B354                                          tablat 000FF5  
                     __end_ofi1_TMR3_StopTimer CC1C                         __end_of_clearI2CErrors C88C  
                             __end_ofi2___wmul C6E6                                          plusw2 000FDB  
                               ??_EUSART2_Read 0200                   __size_of_ADCC_GetFilterValue 0014  
                                        ttemp5 0060                                          ttemp6 0063  
                                        ttemp7 0067                                          status 000FD8  
                      __end_of_temp_adc_offset E88F                         __end_of_clearADCErrors CA7C  
                                        wtemp8 0060                                __end_of_sprintf BD86  
                           __size_ofi1___fladd 030E                    getCauseOfResetStringSmall@r 0202  
                           __size_ofi1___fldiv 028A                                  i2___flmul@grs 003A  
                              _TMR2_StartTimer CC06                                i1___fladd@signs 011A  
                           __size_ofi1___flmul 0354                                __end_of_strncpy B714  
                             __end_ofi2_fround 85E8                                _TMR1_WriteTimer C7B2  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___fladd 030E  
                           __size_ofi2___fldiv 0288                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0212                             __size_ofi2___flmul 0352  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00BA  
                           __size_ofi2___lldiv 0082                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf C264                             __size_ofi2___lwdiv 0052  
                           __size_ofi2___lwmod 0042                   ??_getCauseOfResetStringSmall 0202  
        __end_of_EUSART2_SetTxInterruptHandler CB36         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler CB28                                _TMR5_Initialize C1B0  
                            ??_I2C2_MasterRead 0210                             __size_ofi2__doprnt 1718  
                            ??_I2C2_Initialize 0200                                __initialization ADEE  
               __size_of_terminalSetCursorHome 0010                        getStringSecondsAsTime@i 03E5  
                __end_of_terminalSetCursorHome CA8C                              i2___lldiv@divisor 0005  
                                 __end_of_fabs C2A0                                   __end_of_main 8078  
                       ??_I2C2_MasterTRBInsert 0204                              i2___lldiv@counter 000D  
                                   i2printf@ap 00A6                                     i2printf@pb 00A8  
                       ?_freqMeasStartCaptures 0001                          __end_of_ringBufferLUT 55E8  
                      FLASH_ReadByte@flashAddr 0200                        __end_of_TMR2_Initialize C3DC  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont E863                            __size_of_OLED_Clear 003E  
              getYearsFromOnTime@input_seconds 020D                                         ??_fabs 0009  
             __end_of_I2C2_MasterWriteTRBBuild BEA2                       _TMR2_SetInterruptHandler CAC6  
                                       ??_main 03FE                                    ?i1___xxtofl 0100  
                                  _i2c2_object 0161                                _TMR3_StartTimer CC24  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                        _TMR3_InterruptHandler 0171                           __size_of_LM73Convert 0284  
                      __size_of_FLASH_ReadWord 0042                       ??_getStringSecondsAsTime 02A7  
                   __size_of_getDeviceIDString 0098                           __size_of__tdiv_to_l_ 0100  
                        ??_QIErrorTimerHandler 0003                                    ?i2___xxtofl 0005  
                 ?_getNXQChargeStateStringCaps 0200                                      ??_OLED_YX 0215  
                        ?_getMinutesFromOnTime 020D                    __size_of_getYearsFromOnTime 0030  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize B77A                   ??_IOCBF2_SetInterruptHandler 0203  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 0193                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                               ___llmod@dividend 020D  
                                       _ADLTHH 000F6B                                         ?_scale 0227  
                                       STR_100 FDAA                                         _ADLTHL 000F6A  
                                       STR_101 FC8D                                         STR_110 FDAA  
                                       STR_102 FD22                                         STR_103 FF5A  
                                       STR_111 FF04                                         STR_200 F9EB  
                                       STR_104 FDAA                                         STR_120 FF4A  
                                       STR_112 FF4A                                         STR_121 FDAA  
                                       STR_113 FDAA                                         STR_105 FDAA  
                                       STR_201 F35F                                         STR_202 F9EB  
                                       STR_130 FDAA                                         STR_122 FDAA  
                                       STR_114 FDAA                                         STR_106 FD94  
                                       STR_210 EFD3                                         _ADRESH 000F64  
                                       STR_211 F9EB                                         STR_131 FDAA  
                                       STR_107 FD22                                         STR_115 FE6A  
                                       STR_123 FD7C                                         STR_203 F180  
                                       STR_204 F9EB                                         STR_124 FF4A  
                                       STR_116 FF4A                                         STR_300 FF3A  
                                       STR_140 FF16                                         STR_108 FEFB  
                                       STR_132 FD08                                         STR_220 F94C  
                                       STR_212 F078                                         STR_213 F9EB  
                                       STR_125 FDAA                                         STR_117 FDAA  
                                       STR_109 FDAA                                         STR_133 FDFC  
                                       STR_141 FF62                                         STR_301 FEE0  
                                       STR_221 FC39                                         STR_205 ECD0  
                                       STR_214 F9EB                                         STR_206 F9EB  
                                       STR_126 FDAA                                         STR_118 FDAA  
                                       STR_150 FE07                                         STR_142 FF16  
                                       STR_310 FFF8                                         STR_134 FFA4  
                                       STR_302 FEF2                                         STR_222 FA1A  
                                       STR_230 FA04                                         _ADRESL 000F63  
                                       STR_223 F9EB                                         STR_151 FDAA  
                                       STR_135 FDAA                                         STR_311 FFCC  
                                       STR_303 FEE9                                         STR_143 FE12  
                                       STR_127 FC7F                                         STR_119 FC71  
                                       STR_215 FB41                                         STR_207 ED4C  
                                       STR_231 E88F                                         STR_240 F2A9  
                                       STR_232 EF62                                         STR_152 FDAA  
                                       STR_136 FDAA                                         STR_312 FFCF  
                                       STR_160 FD22                                         STR_144 FF16  
                                       STR_320 FFCE                                         STR_304 FF90  
                                       STR_128 FDFC                                         STR_216 F9A9  
                                       STR_224 F278                                         STR_208 EE02  
                                       STR_225 F9EB                                         STR_209 F9EB  
                                       STR_233 ED0E                                         STR_161 FDAA  
                                       STR_313 FFE1                                         STR_305 FF95  
                                       STR_145 FE12                                         STR_321 FFD4  
                                       STR_129 FF1F                                         STR_153 FCFB  
                                       STR_137 FC63                                         STR_217 FB30  
                                       STR_241 F5DE                                         STR_234 F500  
                                       STR_170 FDAA                                         STR_162 FDAA  
                                       STR_314 FFE7                                         STR_306 FFBB  
                                       STR_154 FF16                                         STR_322 FFDA  
                                       STR_330 FFD1                                         STR_138 FF0D  
                                       STR_146 FE07                                         STR_218 F9C0  
                                       STR_226 F8EB                                         STR_242 F7F3  
                                       STR_250 F48A                                         STR_235 F304  
                                       STR_315 FFF3                                         STR_163 FE07  
                                       STR_155 FE12                                         STR_147 FE12  
                                       STR_323 FFE0                                         STR_331 FFD7  
                                       STR_139 FF62                                         STR_171 FBEF  
                                       STR_219 FB0D                                         STR_227 F810  
                                       STR_251 F571                                         STR_243 F1B2  
                                       STR_236 F7D5                                         STR_164 FDAA  
                                       STR_180 FF9F                                         STR_172 FD22  
                                       STR_156 FE07                                         STR_148 FE07  
                                       STR_316 FFFB                                         STR_324 FFE6  
                                       STR_332 FFDD                                         STR_308 FFB3  
                                       STR_228 FF9A                                         STR_340 FAFB  
                                       STR_244 F849                                         STR_252 F68E  
                                       STR_260 EEB4                                         STR_237 F9EB  
                                       STR_229 F9EB                                         STR_165 FDAA  
                                       STR_149 FDAA                                         STR_317 FFCC  
                                       STR_181 FCE1                                         STR_157 FE12  
                                       STR_325 FFEC                                         STR_333 FFE3  
                                       STR_173 FFC3                                         STR_309 FFB7  
                                       STR_245 FC2B                                         STR_341 F865  
                                       STR_253 F738                                         STR_261 F216  
                                       STR_262 F9EB                                         STR_174 FDAA  
                                       STR_182 FF71                                         STR_158 FE07  
                                       STR_318 FFFD                                         STR_326 FFF2  
                                       STR_334 FFE9                                         STR_190 FD70  
                                       STR_166 FBD1                                         STR_342 FA46  
                                       STR_350 F717                                         STR_238 F54C  
                                       STR_246 F0E4                                         STR_270 F0AE  
                                       STR_254 EC14                                         STR_271 F9EB  
                                       STR_175 FDAA                                         STR_159 FDAA  
                                       STR_327 FFF2                                         STR_183 FB62  
                                       STR_167 FD22                                         STR_191 FE43  
                                       STR_335 FFEF                                         STR_319 FFCB  
                                       STR_343 FAD5                                         STR_247 F798  
                                       STR_255 F779                                         STR_351 F648  
                                       STR_263 F248                                         STR_239 EB7C  
                                       STR_176 FB72                                         STR_328 FFFD  
                                       STR_184 FE74                                         STR_336 FFF5  
                                       STR_168 FFBF                                         STR_192 FF95  
                                       STR_272 FAC1                                         STR_344 FA5B  
                                       STR_264 F97B                                         STR_360 F91C  
                                       STR_256 F7B7                                         STR_352 F596  
                                       STR_248 F2D6                                         STR_280 ED89  
                                       STR_281 F9EB                                         STR_177 FDAA  
                                       STR_169 FDAA                                         STR_337 FDB5  
                                       STR_329 FDB5                                         STR_185 FB92  
                                       STR_193 FFBB                                         STR_345 F9EE  
                                       STR_361 F904                                         STR_249 F82D  
                                       STR_353 F6B1                                         STR_265 F38C  
                                       STR_273 EE79                                         STR_257 EBD4  
                                       STR_178 FDAA                                         STR_338 FEE7  
                                       STR_186 FBFE                                         STR_194 FF7E  
                                       STR_346 FA99                                         STR_258 F759  
                                       STR_282 F5BA                                         STR_354 F527  
                                       STR_266 F3E4                                         STR_290 EF9B  
                                       STR_274 EEEE                                         STR_362 EDC6  
                                       STR_275 F9EB                                         STR_267 F9EB  
                                       STR_187 FC47                                         STR_179 FDE6  
                                       STR_195 FF95                                         STR_363 FF6A  
                                       STR_339 FDDB                                         STR_347 F964  
                                       STR_355 F6D3                                         STR_259 F66B  
                                       STR_283 F40F                                         STR_291 F1E4  
                                       STR_292 F9EB                                         STR_196 FFBB  
                                       STR_188 FB82                                         STR_364 FB1F  
                                       STR_348 FAAD                                         STR_268 F992  
                                       STR_356 F602                                         STR_276 F332  
                                       STR_284 EC53                                         _CCPR2H 000FA7  
                                       STR_277 F9EB                                         STR_197 FF78  
                                       STR_365 FDD0                                         STR_189 FD2F  
                                       STR_357 FA85                                         STR_293 F6F5  
                                       STR_349 F625                                         STR_285 F462  
                                       STR_269 F118                                         STR_358 F880  
                                       STR_198 F042                                         STR_286 EF28  
                                       STR_278 EE3E                                         STR_294 EC92  
                                       STR_287 F9EB                                         STR_279 F9EB  
                                       STR_199 FBC2                                         STR_359 F934  
                                       STR_295 EB1C                                         STR_288 F89B  
                                       STR_296 F4B2                                         _CCPR2L 000FA6  
                                       STR_297 F9EB                                         STR_289 F00B  
                                       STR_298 FECE                                         STR_299 FED7  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 0206                                         _ADUTHL 000F6C  
                                       _ANSELA 000F11                                         ?_putch 0001  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                                       _T0CON0 000FD5                                         _T0CON1 000FD6  
                                       _T1GATE 000FD1                                         _T1GCON 000FD0  
                                       _T3GATE 000FCB                                         _T3GCON 000FCA  
                            __end_of_OLED_Init B1AE                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _RC2REG 000E99  
                                       _RB4PPS 000EF3                                         _RC2STA 000E9D  
                                       _RB5PPS 000EF4                        TMR1_WriteTimer@timerVal 0200  
                                       _RC4PPS 000EFB                   __end_of_I2C2_BusCollisionISR CBAE  
                                       i1l1069 C08A                                         _ODCONA 000F0F  
                                       _ODCONB 000F17                                         i1l1515 C81C  
                                       _ODCONC 000F1F                                         i1l3304 8A54  
                                       i1l3305 8A50                                         i1l3323 6E56  
                                       i1l3340 70F4                                         i1l3332 706E  
                                       i1l3333 706A                                         i1l3254 799E  
                                       i1l3238 78CC                                         i1l3263 7A04  
                                       i1l3239 78AA                                         i1l3264 7A00  
     __end_of_I2C2_WaitForLastPacketToComplete CBCE      __size_of_I2C2_WaitForLastPacketToComplete 000A  
            ?_I2C2_WaitForLastPacketToComplete 0001             ??_I2C2_WaitForLastPacketToComplete 0200  
             _I2C2_WaitForLastPacketToComplete CBC4                                         i1l3371 9F02  
                                       i1l3364 9E84                        __end_of_TMR3_Initialize BC06  
                                       i1l3293 89E6                                         i2l3200 BB5C  
                                       i2l3210 C06E                                         i2l3052 A368  
                                       i2l3053 A390                                         i2l2501 20BA  
                                       i2l1621 C9CE                                         i2l2503 2088  
                                       i2l3304 8CDC                                         i2l3305 8CD8  
                                       i2l3129 B834                                         i2l1625 C9B8  
                                       i2l3323 71A8                                         i2l3340 7446  
                                       i2l3332 73C0                                         i2l2620 29FC  
                                       i2l3333 73BC                                         i2l1581 41D4  
                                       i2l3254 7CAC                                         i2l3238 7BDA  
                                       i2l3263 7D12                                         i2l3239 7BB8  
                                       i2l2535 22A8                                         i2l3264 7D0E  
                                       i2l1808 9B5E                                         i2l2537 2276  
                                       i2l1809 9B98                                         i2l2714 B552  
                                       i2l2618 2A2E                                         i2l3371 A042  
                                       i2l3364 9FC4                                         i2l2652 2C16  
                                       i2l3293 8C6E                                         i2l2654 2BE4  
                                       i2l2568 2494                                         i2l3387 C28E  
                                       i2l2589 27CE                                         i2l2965 AA00  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000F31                                      ??i2_scale 0049  
                  ?_getCauseOfResetStringSmall 0200                                         _OSCFRQ 000EDE  
                              ?_clearI2CErrors 0001                                  ?_OLED_Command 0001  
                                       _NVMDAT 000F80                                      ??i2_putch 0002  
                                       _RX2PPS 000E8D                               _adc_calculations 02BE  
                                       _TX2REG 000E9A                                         _TX2STA 000E9E  
              __size_of_LM73AcquisitionHandler 022C                               ?_CCP2_Initialize 0001  
                              ?_clearADCErrors 0001                                _freqMeasConvert AA3C  
                             __end_of___xxtofl 9E42                          I2C2_MasterRead@length 020B  
                    __size_ofi2_TMR1_StopTimer 0004          __end_of_ADCC_DischargeSampleCapacitor CBF4  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor CBEC  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 00FE  
                              _TMR3_WriteTimer C792                                 i2___fladd@aexp 0061  
                               i2___fladd@bexp 0062                                  ?_OLED_PutChar 0001  
        __end_of_ADCC_HasAccumulatorOverflowed CBBA         __size_of_ADCC_HasAccumulatorOverflowed 000C  
                _ADCC_HasAccumulatorOverflowed CBAE                                 __CFG_XINST$OFF 000000  
                                 __doprnt$6048 0262                                   __doprnt$4990 0269  
                                 __doprnt$4991 026B                                   __doprnt$4992 026D  
                                 __doprnt$4993 026F                                   __doprnt$4994 0271  
                                 __doprnt$4995 0273                                   __doprnt$4996 0275  
                                 __doprnt$4989 0267                               __end_of__powers_ E50F  
                                 i2_scale$6433 0049           __end_of_TMR1_DefaultInterruptHandler CC40  
        __size_of_TMR1_DefaultInterruptHandler 0002                   _TMR1_DefaultInterruptHandler CC3E  
                                _CCP2_CallBack C078                __end_of_terminal_ringBufferPull A6C2  
                         _getSecondsFromOnTime 98D6                                         ___flge A89A  
                                       ___fleq B23E                               ?_updateErrorLEDs 0001  
                      __end_of_TMR1_StartTimer CC2C                                   ?_TMR1_Reload 0001  
                            _ADCC_ThresholdISR C672                                      ??___fladd 023C  
                                       ___wmul C5FA                                      ??___fldiv 022F  
                                    ??___awdiv 020A                                      ??___flneg 0204  
                               _p_i2c2_current 00D1                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 0204                              __end_of_TMR2_Stop CC20  
                                    ??___flmul 0216                      ??_I2C2_MasterReadTRBBuild 0207  
                                    ??___flsub 0254                                      ??___fltol 0234  
                                    ??___lldiv 0208                                      ??___llmod 0215  
                                 ?_TMR3_Reload 0001                                      ??___lwdiv 0209  
                                    ??___lwmod 0204                            __size_of_TMR2_Start 0004  
                    i2TMR3_WriteTimer@timerVal 0001                                      ??__doprnt 025E  
                             ?_TMR0_Initialize 0001                             ?_ADCC_ThresholdISR 0001  
                                i2__doprnt@idx 007A                                         _fround 8078  
                                i2__doprnt@len 008D                                      ?_I2C2_ISR 0001  
                                i2__doprnt@val 0099                                         clear_0 AE4E  
                                       clear_1 AE60                                         clear_2 AE6C  
                                       clear_3 AE78                                         clear_4 AE88  
                         _eusart2RxStringReady 07E8                               ___awdiv@quotient 020C  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0202                                 i2___fldiv@sign 0023  
                                 __doprnt@flag 028D                       I2C2_Stop@completion_code 0102  
                              ___awmod@counter 0204                                         _printf C0F6  
                                 __doprnt@eexp 027B                                   __doprnt@fval 0281  
          __size_of_IOCBF2_SetInterruptHandler 000E                                   __doprnt@prec 028B  
                                       _strcat B8A6                                         _strcmp BB66  
                I2C2_MasterReadTRBBuild@length 0204                                         _strcpy BCF6  
                                       _strlen C4CE                                 i2___awdiv@sign 000C  
                            __end_ofi1___fladd 7A96                   getCauseOfResetString@strings 01A6  
                            __end_ofi1___fldiv 8AFC                                _ADCC_Initialize B846  
                            __end_ofi1___flmul 7128                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize C88C           __end_of_INT2_DefaultInterruptHandler CC48  
        __size_of_INT2_DefaultInterruptHandler 0002                   _INT2_DefaultInterruptHandler CC46  
                      FLASH_ReadWord@flashAddr 0204                              __end_ofi2___fladd 7DA4  
                                    ??_isdigit 0200                                      ??_memmove 0206  
                            __end_ofi2___fldiv 8D84                              __end_ofi2___awdiv B4E2  
                            __end_ofi2___flneg C52A                                ??_INT1_CallBack 0001  
                            __end_ofi2___awmod B646                              __end_ofi2___flmul 747A  
                            __end_ofi2___flsub BE16                              __end_ofi2___fltol AD40  
                            __end_ofi2___lldiv B564                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod B846                              __end_ofi2___lwdiv BB66  
                                 __mediumconst E4DA                              __end_ofi2___lwmod C078  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion CC30  
                         _EUSART2_Transmit_ISR C3DC                              __end_ofi2__doprnt 2E3C  
                       ??_ADCC_StartConversion 0100                                ??_INT2_CallBack 0001  
                               i2___awmod@sign 0006                          __size_of_getUARTError 0006  
                      __end_of_TMR2_StartTimer CC0C                                ??_EUSART2_Write 0200  
     TMR1_SetInterruptHandler@InterruptHandler 0200       TMR3_SetInterruptHandler@InterruptHandler 0200  
     TMR2_SetInterruptHandler@InterruptHandler 0200       TMR0_SetInterruptHandler@InterruptHandler 0200  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0200     IOCBF3_SetInterruptHandler@InterruptHandler 0200  
   IOCBF2_SetInterruptHandler@InterruptHandler 0200       INT2_SetInterruptHandler@InterruptHandler 0200  
     INT1_SetInterruptHandler@InterruptHandler 0200                               ?_PIN_MANAGER_IOC 0001  
                                    ??_sprintf 029C                        __end_of_TMR1_WriteTimer C7D2  
                               i2___flmul@aexp 0039                                 i2___flmul@bexp 003E  
                                    ??_strncpy 0206                                   ??_IOCBF2_ISR 0003  
                               i2___flmul@sign 0038                                 i2___flmul@temp 0043  
                                 ??_IOCBF3_ISR 0003                                 i2___flmul@prod 003F  
                __size_of_INTERRUPT_Initialize 0020                                _eusart2RxBuffer 0480  
                             _OLED_update_flag 02D6                                     ___flge@ff1 024C  
                                   ___flge@ff2 0250                                 ??_OLED_Command 0210  
                             ?_TMR1_Initialize 0001                        __end_of_TMR5_Initialize C1EC  
                                 ___xxtofl@arg 0248                              __end_ofi2_isdigit C870  
                                 ___xxtofl@exp 0247                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00AD                               _OLED_update_time 00FB  
                            _SYSTEM_Initialize C134                                   ___xxtofl@val 023E  
                                   ___fleq@ff1 0200                                     ___fleq@ff2 0204  
                              _eusart2TxBuffer 04C0                                     __accesstop 0060  
                      __end_of__initialization AE8E                                 i2___fltol@exp1 0057  
                                    ?_INT1_ISR 0001                                     ___flneg@f1 0200  
                                    ?_INT2_ISR 0001                         _qi_isns_average_buffer 0400  
                           ?_SYSTEM_Initialize 0001                            __size_ofi1___xxtofl 0144  
                                ___rparam_used 000001      __end_of_ADCC_GetCurrentCountofConversions CC38  
   __size_of_ADCC_GetCurrentCountofConversions 0004            ??_ADCC_GetCurrentCountofConversions 0001  
           ?_ADCC_GetCurrentCountofConversions 0001              _ADCC_GetCurrentCountofConversions CC34  
                                   ___fltol@f1 0230                              ?_I2C2_MasterWrite 0209  
                              _TMR5_WriteTimer C772                                 ??_OLED_PutChar 0210  
                           i2__tdiv_to_l_@exp1 0011                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 0010                      __end_of_ADCC_ThresholdISR C69A  
                               ?_CCP2_CallBack 0154      LM73TempSensorInitialize@output_data_array 0210  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000C              terminal_ringBufferPull@charNumber 0512  
                          __size_ofi2___xxtofl 0140                          ?_getSecondsFromOnTime 020D  
                 ?_ADC_acquisitionTimerHandler 0001                             ??_I2C2_MasterWrite 0210  
                   __end_of_getMajorRevisionID C228                             i2___lwmod@dividend 0001  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
             __end_of_LM73TempSensorInitialize 94B6                    __size_of_getHoursFromOnTime 00F0  
                                 __pidataBANK0 CC38                                   __pidataBANK1 CA38  
                                 __pidataBANK2 CA4A                            ??_SYSTEM_Initialize 0205  
                      __end_of_TMR3_StartTimer CC28                                      ?_TMR0_ISR 0001  
                                    ?_TMR1_ISR 0001                                      ?_TMR2_ISR 0001  
                ?_TMR1_DefaultInterruptHandler 0001                                      ?_TMR3_ISR 0001  
                                __end_of_scale 5F5C                 ?_EUSART2_SetTxInterruptHandler 0200  
                               _i2c2_trb_count 00DA                                  __end_of_putch C9E8  
                                   ??_I2C2_ISR 0103                               ?_TMR2_Initialize 0001  
                     __size_of_getCauseOfReset 005A                                 _QI_charge_time 02D2  
                       __end_of_PMD_Initialize C8A8                         _LM73AcquisitionHandler 94B6  
                        _getCauseOfResetString C40E                             __end_of_IOCBF2_ISR C5D2  
                                    ?i2___flge 0001                             __end_of_IOCBF3_ISR C5A8  
                                    ?i2___fleq 0001                           __end_of_EUSART2_Read C0F6  
                                 _getUARTError CBF4                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ A2E8                    __size_of_EXT_INT_Initialize 0038  
                                   __div_to_l_ A3E6                         ??_getMinutesFromOnTime 0211  
                     _printCurrentMeasurements 55E8                __size_of_getStringSecondsAsTime 03A6  
                           __size_of_getUserID 0034                                      ?i2_fround 0045  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
             __end_of_INT2_SetInterruptHandler CB1A                    __end_of_terminalClearScreen CA9C  
                     _I2C2_MasterWriteTRBBuild BE5C                  ?_INT2_DefaultInterruptHandler 0001  
                                    ?i2_printf 00A4         __end_of_IOCBF3_DefaultInterruptHandler CC44  
      __size_of_IOCBF3_DefaultInterruptHandler 0002                 _IOCBF3_DefaultInterruptHandler CC42  
                  ADCC_StartConversion@channel 0100                              ?_OLED_WriteString 0221  
                              _clearUARTErrors CB8A                                     __doprnt@ap 025C  
                                   __doprnt@cp 0277                   I2C2_MasterWriteTRBBuild@ptrb 0200  
                                   __doprnt@pb 0258                        __end_of_freqMeasConvert AB06  
                              __div_to_l_@exp1 020D                                __div_to_l_@cntr 020C  
                                      ??_scale 022B                      __end_of_SYSTEM_Initialize C172  
                              __div_to_l_@quot 0208                        __end_of_TMR3_WriteTimer C7B2  
                                      ??_putch 0201                             i2___lldiv@quotient 0009  
                                 ??_OLED_Clear 0221                             ??_OLED_WriteString 0223  
                                _eusart2RxHead 00DC                                  _eusart2TxHead 0195  
                                   __pbssBANK0 00B9                                     __pbssBANK1 0161  
                                   __pbssBANK2 02BE                                     __pbssBANK3 0300  
                                   __pbssBANK4 0400                                  _eusart2RxTail 0192  
                                _eusart2TxTail 0194                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0005                               ?_TMR3_Initialize 0001  
             __size_of_printErrorHandlerStatus 01F4                getHoursFromOnTime@input_seconds 020D  
                                   ??_INT1_ISR 0001                                     ??_INT2_ISR 0001  
                               i1___xxtofl@arg 010A                       _floatToEngineeringFormat 49F6  
                               i1___xxtofl@exp 0109                                 i1___xxtofl@val 0100  
                                __div_to_l_@f1 0200                                  __div_to_l_@f2 0204  
                            _freq_meas_results 0168                          EUSART2_Read@readValue 0200  
                        ??_ADCC_StopConversion 0001           __size_of_getNXQChargeStateStringCaps 005C  
                             ??_FVR_Initialize 0200                      getMinutesFromOnTime@hours 0218  
                                _error_handler 00B9                      getMinutesFromOnTime@years 0216  
                                      ?___flge 024C                                        ?___fleq 0200  
             __end_of_TMR0_SetInterruptHandler CAF0                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_4754 0514                     ??_OLED_UpdateFromRAMBuffer 0223  
             __end_of_TMR3_SetInterruptHandler CAC6                                        ?___wmul 0200  
                             ?_TMR1_StartTimer 0001                                     ??_TMR0_ISR 005F  
                                   ??_TMR1_ISR 0003                                __CFG_PPS1WAY$ON 000000  
                                   ??_TMR2_ISR 0101                                     ??_TMR3_ISR 0102  
                      __end_of_ADCC_Initialize B8A6                    __size_of_OLED_updateHandler 1246  
                                      _CCP2CAP 000FA9                                        _CCP2CON 000FA8  
               ?_ADCC_HasAccumulatorOverflowed 0001                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                        _CCP2PPS 000EB0  
                                      ?_fround 0227                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler CB52  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler CB44  
           OLED_UpdateFromRAMBuffer@char_index 0223                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                           _I2C2_BusCollisionISR CBA2  
                                      ?_printf 03EB                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue CA10              getCauseOfResetStringSmall@strings 02ED  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 0009  
                           __end_of_OLED_Clear C1B0                                     ??i2___fleq 0009  
                                      ?_strcat 0200                                        ?_strcmp 0200  
                                      ?_strcpy 0203                                        ?_strlen 0200  
                               _FLASH_ReadByte C8FC                        __size_of_TMR1_StopTimer 0004  
                                   ??i2___wmul 0005                                 _FLASH_ReadWord BFB2  
                        _heartbeatTimerHandler 9A50                                        i1l21024 C944  
                                      i1l21016 BFAC                     ??_INT1_SetInterruptHandler 0203  
                                      i1l13034 C846                                        i1l13500 79D8  
                                      i1l13440 78BC                                        i1l13360 77B6  
                                      i1l13600 8918                                        i1l13506 79E2  
                                      i1l13426 785E                                        i1l15202 C07A  
                                      i1l13540 7A7A                                        i1l13364 77BA  
                                      i1l15212 C0A6                                        i1l21604 912E  
                                      i1l13534 7A70                                        i1l13526 7A4A  
                                      i1l13462 7912                                        i1l13454 78F0  
                                      i1l13438 78B8                                        i1l13614 8946  
                                      i1l13606 892E                                        i1l13710 6E16  
                                      i1l13464 7916                                        i1l13472 7928  
                                      i1l13384 77FE                                        i1l13632 89BE  
                                      i1l13624 8996                                        i1l21632 918C  
                                      i1l13538 7A78                                        i1l13490 79C2  
                                      i1l13482 798E                                        i1l13650 8A1A  
                                      i1l13802 70B2                                        i1l13706 6E02  
                                      i1l21642 91B0                                        i1l13396 7822  
                                      i1l13388 7802                                        i1l13644 89FC  
                                      i1l13572 88A4                                        i1l13724 6E42  
                                      i1l13708 6E06                                        i1l21572 9092  
                                      i1l13670 8A98                                        i1l13638 89E4  
                                      i1l13806 70D0                                        i1l13734 6E74  
                                      i1l13726 6E46                                        i1l13830 9E94  
                                      i1l21670 921C                                        i1l21654 91E6  
                                      i1l21590 90E4                                        i1l15318 C828  
                                      i1l13592 88E4                                        i1l13568 88A0  
                                      i1l13840 9EC4                                        i1l21672 9222  
                                      i1l21584 90C0                                        i1l21576 90A6  
                                      i1l21680 9236                                        i1l13674 8ABC  
                                      i1l13818 7112                                        i1l13850 9F34  
                                      i1l13842 9EEA                                        i1l21674 922A  
                                      i1l21658 91F0                                        i1l13684 8AF2  
                                      i1l13588 88E0                                        i1l13836 9EB2  
                                      i1l13686 8AF4                                        i1l13678 8AE6  
                                      i1l13782 7034                                        i1l13838 9EB8  
                                      i1l13776 7016                                        i1l13848 9F28  
                                      i1l13866 9F74                                        _INT1PPS 000EA2  
                                      i2l20300 1986                                        u2517_41 A2F8  
                                      i2l20310 19C6                                        i2l20302 198A  
                                      i2l21200 4740                                        i2l20312 19D0  
                                      i2l20304 198E                                        i2l12232 C8F2  
                                      i2l21210 489E                                        i2l21130 408E  
                                      i2l20410 1E32                                        i2l20402 1DB8  
                                      i2l20322 1A28                                        i2l20314 19D6  
                                      _INT2PPS 000EA3                                        i2l21220 48E6  
                                      i2l20500 21A6                                        i2l20332 1A84  
                                      i2l20260 17B4                                        i2l20252 176E  
                                      i2l21134 40DC                                        i2l21214 48A4  
                                      i2l20510 2214                                        i2l20422 1ECC  
                                      i2l20406 1DE6                                        i2l20350 1B76  
                                      i2l20326 1A3E                                        i2l20262 17BA  
                                      i2l20246 1728                                        i2l12246 C8D6  
                                      i2l21224 48F6                                        i2l21152 43B0  
                                      i2l21144 41D8                                        i2l21216 48D6  
                                      i2l20600 26FC                                        i2l20504 21E2  
                                      i2l20432 1F34                                        i2l20352 1B8A  
                                      i2l20344 1B26                                        i2l20328 1A48  
                                      i2l20336 1AAE                                        i2l20256 179C  
                                      i2l21234 49F0                                        i2l20442 1FB0  
                                      i2l20418 1E9E                                        i2l20370 1C52  
                                      i2l20354 1BAE                                        i2l20338 1AC2  
                                      i2l20362 1BC6                                        i2l20274 1830  
                                      i2l20258 17AE                                        i2l20266 17C2  
                                      i2l21148 42B2                                        i2l20604 2726  
                                      i2l20524 2282                                        i2l20508 220C  
                                      i2l20436 1FAC                                        i2l20364 1C3C  
                                      i2l20292 1948                                        u2519_41 A324  
                                      i2l21190 46A6                                        i2l21166 44DE  
                                      i2l21174 4574                                        i2l20702 29CE  
                                      i2l20614 2782                                        i2l20606 272E  
                                      i2l20550 2402                                        i2l20534 22E8  
                                      i2l20518 2248                                        i2l20454 2016  
                                      i2l20358 1BC0                                        i2l20294 1974  
                                      i2l21270 9B4C                                        i2l21262 9AF4  
                                      i2l21254 9A9C                                        i2l21176 4578  
                                      i2l20720 2A8A                                        i2l20632 2852  
                                      i2l20624 2804                                        i2l20616 27B4  
                                      i2l20560 2470                                        i2l20608 2738  
                                      i2l20288 18F6                                        i2l21520 AEEC  
                                      i2l21512 AEC6                                        i2l21504 AEA8  
                                      i2l21264 9B06                                        i2l21256 9AAE  
                                      i2l20722 2A98                                        i2l20626 2838  
                                      i2l20554 243E                                        i2l20546 23CA  
                                      i2l20538 2304                                        i2l20474 2094  
                                      i2l20458 2030                                        i2l20394 1D3A  
                                      i2l20378 1CB0                                        i2l20298 1982  
                                      i2l14058 C8B6                                        i2l20740 2B56  
                                      i2l20732 2B08                                        i2l20708 2A08  
                                      i2l20652 2898                                        i2l20548 23F6  
                                      i2l20492 2162                                        i2l20484 20FA  
                                      i2l20468 205A                                        i2l21198 473C  
                                      i2l20718 2A6E                                        i2l20734 2B12  
                                      i2l20646 2894                                        i2l20638 2856  
                                      i2l20662 28D6                                        i2l20590 2634  
                                      i2l20582 256E                                        i2l20574 24E2  
                                      i2l20566 2498                                        i2l20558 2468  
                                      i2l20486 2116                                        i2l21534 AF34  
                                      i2l20752 2BB6                                        i2l20744 2B80  
                                      i2l20728 2ADE                                        i2l20672 292C  
                                      i2l20664 28EC                                        i2l20592 2660  
                                      i2l20496 218C                                        i2l20488 2126  
                                      i2l20690 299C                                        i2l20594 26B4  
                                      i2l20578 250C                                        i2l20498 2194  
                                      i2l20780 2D68                                        i2l20772 2C74  
                                      i2l20692 29A4                                        i2l20684 2970  
                                      i2l20668 290C                                        i2l20596 26C0  
                                      i2l20774 2CF4                                        i2l20782 2D7E  
                                      i2l20758 2BF0                                        i2l20790 2DE4  
                                      i2l20686 2978                                        i2l20678 294E  
                                      i2l15326 C99E                                        i2l20768 2C56  
                                      i2l20786 2DBA                                        i2l14820 8B28  
                                      i2l20788 2DD6                                        i2l14902 8CA2  
                                      i2l14840 8B68                                        i2l14824 8B2C  
                                      i2l14930 8D6E                                        i2l14922 8D20  
                                      i2l14852 8BA0                                        i2l14844 8B6C  
                                      i2l19020 7B30                                        i2l19012 7B10  
                                      i2l14926 8D44                                        i2l15726 C404  
                                      i2l14936 8D7A                                        i2l19008 7B0C  
                                      i2l14938 8D7C                                        i2l14890 8C6C  
                                      i2l14866 8BCE                                        i2l14858 8BB6  
                                      i2l19114 7CD0                                        i2l19130 7CF0  
                                      i2l19106 7C9C                                        i2l19050 7B6C  
                                      i2l14884 8C46                                        i2l14876 8C1E  
                                      i2l19204 7194                                        i2l19124 7CE6  
                                      i2l19214 71C6                                        i2l19206 7198  
                                      i2l19150 7D58                                        i2l19062 7BC6  
                                      i2l14896 8C84                                        i2l19064 7BCA  
                                      i2l19162 7D86                                        i2l19164 7D88  
                                      i2l19262 7386                                        i2l19190 7168  
                                      i2l19158 7D7E                                        i2l19086 7C20  
                                      i2l19078 7BFE                                        i2l19256 7368  
                                      i2l19088 7C24                                        i2l19096 7C36  
                                      i2l19282 7404                                        i2l19186 7154  
                                      i2l19188 7158                                        i2l19700 B544  
                                      i2l19286 7422                                        i2l19710 A4FA  
                                      i2l18910 B5F6                   ?_terminalTextAttributesReset 0001  
                                      i2l19298 7464                                        i2l19730 A548  
                                      i2l19634 8594                                        i2l18850 C02E  
                                      i2l18930 B63C                                        i2l18922 B624  
                                      i2l18914 B604                                        i2l18906 B5EA  
                                      i2l19900 A3BA                                        i2l18940 BB2A  
                                      i2l19628 84AC                                        i2l18852 C030  
                                      i2l18916 B60C                                        i2l19806 C518  
                                      i2l19750 A594                                        i2l18942 BB32  
                                      i2l18838 BFFA                                        i2l18862 B472  
                                      i2l18926 B62E                                        i2l19654 613C  
                                      i2l19832 ACEE                                        i2l19816 ACA4  
                                      i2l19760 A5AC                                        i2l18952 BB52  
                                      i2l18960 C044                                        i2l19672 6344  
                                      i2l19648 6090                                        i2l19850 AD2E  
                                      i2l19842 AD06                                        i2l19690 B510  
                                      i2l19922 B826                                        i2l19914 B7F2  
                                      i2l19762 A5B8                                        i2l19754 A5A4  
                                      i2l19738 A578                                        i2l19906 A3C2  
                                      i2l18962 C04C                                        i2l18874 B498  
                                      i2l18890 B4CA                                        i2l19666 6298  
                                      i2l19658 616C                                        i2l19772 B332  
                                      i2l19844 AD12                                        i2l19836 ACFE  
                                      i2l19916 B7FE                                        i2l19908 A3CE  
                                      i2l19860 A314                                        i2l18876 B4A0  
                                      i2l18868 B482                                        i2l19950 A02A  
                                      i2l18894 B4D8                                        i2l18886 B4C0  
                                      i2l19792 A9EA                                        i2l19784 A9A0  
                                      i2l18984 7AC4                                        i2l19944 9FF2  
                                      i2l19776 B350                                        i2l19768 B2FE  
                                      i2l19688 B504                                        i2l18968 C064  
                                      i2l19946 9FF8                                        i2l19938 9FD4  
                                      i2l19788 A9D4                                        i2l18988 7AC8  
                                      i2l19956 A068                                        i2l19948 A004  
                                      i2l19798 AA38                                        i2l19974 A0B4  
                                      i2l19958 A074                                        i2l19896 A3AA  
                                      i2l19986 C868                                      ?___xxtofl 023E  
            I2C2_ISR@i2c_10bit_address_restart 00D8                                        _SP2BRGH 000E9C  
                                   ??i2_fround 0049                                        _SP2BRGL 000E9B  
                                      _OLED_YX BF2A                    __end_of_leftCapTouchHandler C9D4  
                                      _OSCCON1 000ED8                                        _OSCCON3 000EDA  
                       I2C2_MasterRead@address 020C                    __end_of_EUSART2_Receive_ISR AF3C  
           __end_of_IOCBF2_SetInterruptHandler CB0C                     _IOCBF2_SetInterruptHandler CAFE  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                      _I2C2_Stop BF6E  
                _live_measurement_request_flag 02D9                                     ??i2_printf 005E  
                                      _NVMADRH 000F7F                                        _NVMADRL 000F7E  
                                      _OSCTUNE 000EDD                                        _NVMCON2 000F82  
                                      _SSP2ADD 000E93                  __size_of_rightCapTouchHandler 0016  
                     getMinutesFromOnTime@days 0217                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                                      _SSP2BUF 000E92                                   ??_TMR2_Start 0001  
                      __size_of_TMR2_StopTimer 0006                              ?_QIIdleIOCHandler 0001  
             __size_of_getNXQChargeStateString 005C                               ?_TMR2_StartTimer 0001  
                getStringSecondsAsTime@minutes 03EA                  getStringSecondsAsTime@seconds 03E6  
                              _I2C2_MasterRead BCA6                               ?_TMR1_WriteTimer 0200  
                      __end_of_TMR5_WriteTimer C792                                _I2C2_Initialize C2D8  
                           ??_QIIdleIOCHandler 0003                         __size_ofi1_TMR3_Reload 000E  
                                      i2_scale 5F5C                               ?_TMR5_Initialize 0001  
                       I2C2_MasterRead@trBlock 0196                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch CBE2                              ?i1_TMR3_StopTimer 0001  
                      __size_of_TMR3_StopTimer 0004                               i2_TMR1_StopTimer CC20  
                              ??_CCP2_CallBack 0156                                i2___fladd@signs 0060  
                       _getStringSecondsAsTime 6374                                  ??_getI2CError 0200  
                           ??i1_TMR3_StopTimer 0100            getStringSecondsAsTime@input_seconds 02A3  
                       ??_getSecondsFromOnTime 0211                                  ??_getADCError 0200  
                            __end_of__npowers_ E543                                        __Hparam 0000  
                      ??_freqMeasStartCaptures 0200                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$6047 022B                                        __Lparam 0000  
                            __end_of_getUserID C342                          _ADCC_ClearAccumulator CC00  
                   ??_TMR2_SetInterruptHandler 0203                       ??_terminalTextAttributes 02BB  
                   __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                __size_of___flge 00D2  
                              __size_of___fleq 008C                                        ___fladd 747A  
                                      ___fldiv 85E8                        getHoursFromOnTime@hours 0215  
                                      ___awdiv B354                                        ___flneg C49E  
                                      ___awmod B564                                 i2__doprnt$6434 0076  
                                      ___flmul 6A80                               ?_TMR3_StartTimer 0001  
                               i2__doprnt$4990 007D                                 i2__doprnt$4991 007F  
                               i2__doprnt$4992 0081                                        ___flsub BD86  
                               i2__doprnt$4993 0083                                 i2__doprnt$4994 0085  
                                      ___fltol ABCA                                 i2__doprnt$4995 0087  
                               i2__doprnt$4996 0089                                 i2__doprnt$4989 007B  
                                      ___lldiv B3DA                                __size_of___wmul 0028  
                      getHoursFromOnTime@years 0216                                        ___llmod B646  
                                      ___lwdiv BA6E                                        ___lwmod BEE6  
                       __end_of_FLASH_ReadByte C916                                        __doprnt 0000  
                       ?_getCauseOfResetString 0200                             __end_of_TMR2_Start CC30  
                        ?_I2C2_BusCollisionISR 0001                           __size_of_TMR1_Reload 000E  
                       __end_of_FLASH_ReadWord BFF4                                        __pcinit ADEE  
                              __size_of_fround 02C2                                        __ramtop 0F00  
                         __end_of_OLED_Command B7E0                       _LM73TempSensorInitialize 927E  
                    I2C2_MasterTRBInsert@count 0205                           __size_of_TMR3_Reload 000E  
                                 ??i1___xxtofl 0104                                        __ptext0 7DA4  
                                      __ptext1 A5D0                                        __ptext2 503A  
                                      __ptext3 BB66                                        __ptext4 96E2  
                                      __ptext5 55E8                                        __ptext6 CA5C  
                                      __ptext7 671A                                        __ptext8 B6AE  
                                      __ptext9 6374                      I2C2_MasterTRBInsert@pflag 0202  
                              __size_of_printf 003E                        __end_of_clearUARTErrors CB96  
               ??_TMR1_DefaultInterruptHandler 0001                  ?_ADCC_SetADTIInterruptHandler 0200  
                      __size_of_TMR5_StopTimer 0004                                __size_of_strcat 005E  
                              __size_of_strcmp 0050                                  i2_fround$6431 004D  
                                i2_fround$6432 0049                                __size_of_strcpy 0048  
                              __size_of_strlen 002E                              __end_of_hexpowers E563  
                                    _T1CONbits 000FCF                         getCauseOfResetString@r 0202  
                                  ?__div_to_l_ 0200                                        _dpowers E863  
                        _OSCILLATOR_Initialize C964                         ??_EUSART2_Transmit_ISR 0001  
                                    _T2CONbits 000FBD                                   __size_of_abs 002A  
                                 i2fround@prec 0051                                        _isdigit C750  
                               i2__doprnt@flag 00A1                                   ??i2___xxtofl 0009  
                                      _memmove AD40                                 i2__doprnt@eexp 008F  
                                   ??___xxtofl 0242                                      _T3CONbits 000FC9  
                               i2__doprnt@fval 0095                               ___awmod@dividend 0200  
                               i2__doprnt@prec 009F              __size_of_TMR1_SetInterruptHandler 000E  
                         __end_of_OLED_PutChar ABCA                       ??_PIN_MANAGER_Initialize 0203  
                    ?_TMR1_SetInterruptHandler 0200                                      _T2HLTbits 000FBE  
                                    _IOCBFbits 000F12                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0200                                     ?_I2C2_Stop 0001  
                              _LM73_start_flag 02D8                                      _IOCBNbits 000F13  
                        _I2C2_FunctionComplete C930                  ??_terminalTextAttributesReset 02B9  
                                    _IOCBPbits 000F14           __size_of_ADC_acquisitionTimerHandler 001A  
                             ??_clearI2CErrors 0201                               ??_clearADCErrors 0201  
                   __size_of_SYSTEM_Initialize 003E                               ?_freqMeasConvert 0001  
                                      _sprintf BD3E                                  __doprnt@width 0289  
                _floatToEngineeringFormat$6044 02B5                  _floatToEngineeringFormat$4720 02AB  
                _floatToEngineeringFormat$4719 02A7                          i2EUSART2_Write@txData 0001  
                  __size_of_QIChargeIOCHandler 001C                                 __pintcode_body A7B2  
                                      _strncpy B6AE                           end_of_initialization AE8E  
                             ?_TMR3_WriteTimer 0200                                        ftoa@buf 03C0  
                       __size_ofi2_TMR1_Reload 000E                                      _T2RSTbits 000FC0  
                     _INT2_SetInterruptHandler CB0C                 ??_INT2_DefaultInterruptHandler 0001  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                       __size_ofi2_TMR3_Reload 000E                                        int_func A7B2  
                                    i1u1520_20 7890                            i2___wmul@multiplier 0001  
                                    i1u1521_20 7892                                      i1u1524_20 78D4  
                                    i1u1519_20 7880                                      i1u1545_20 7A56  
                                    i1u1537_20 79E6                                      i1u1570_20 8ACA  
                                    i1u1539_20 79FA                                      i1u1580_20 6FD8  
                                    i1u1580_25 6FCE                                      i1u1565_20 8A4A  
                                    i1u1900_28 C362                                      i1u1584_20 7064  
                     __size_of_CCP2_CaptureISR 001A                                      i1u1569_20 8AA6  
                                    i1u1579_20 6E62                                      i1u1588_20 70C0  
                                    i1u1589_20 70DE                                      i1u1597_20 9F3E  
                               i2___xxtofl@arg 000F                                      _OLED_Init B116  
                                    i1u1885_28 C636                                 i2___xxtofl@exp 000E  
                                    i2u2400_40 7B8E                                      i2u2401_40 7B9E  
                               i2___xxtofl@val 0005                                      i2u2402_40 7BA0  
                                    i2u2420_40 7D08                                      i2u2500_40 A5BE  
                                    i2u1613_40 CBB6                                      i2u2405_40 7BE2  
                                    i2u2510_40 AC92                                      i2u2503_40 B34C  
                                    i2u2511_40 ACC2                                      i2u2511_45 ACB8  
                                    i2u1800_40 8D2E                                      i2u1801_40 8D52  
                                    i2u2442_40 73B6                                      i2u2426_40 7D64  
                                    i2u2418_40 7CF4                                      i2u2610_40 1E9E  
                                    i2u2515_40 AD18                                      i2u1810_48 C5B8  
                                    i2u1810_49 C5CC                                      i2u2700_40 2E26  
                                    i2u2700_47 2E1C                                      i2u2437_40 71B4  
                                    i2u2525_40 A3D4                                      i2u2701_40 2E32  
                                    i2u2620_48 2072                                      i2u2613_40 1FEC  
                                    i2u1804_48 C71A                                      i2u1812_48 C58E  
                                    i2u1812_49 C5A2                                      i2u2446_40 7412  
                                    i2u2438_40 732A                                      i2u2518_40 A302  
                                    i2u2382_40 B610                                      i2u2630_40 2222  
                                    i2u2606_40 1DF8                                      i2u2438_45 7320  
                                    i2u2447_40 7430                                      i2u2535_40 A07E  
                                    i2u2527_40 B802                                      i2u2607_40 1E44  
                                    i2u1806_48 C6F6                                      i2u2376_40 B4A4  
                                    i2u2640_48 23B2                                      i2u2624_48 20E4  
                                    i2u2386_40 BB36                                      i2u2730_40 9B16  
                                    i2u2715_40 41CE                                      i2u2650_48 261C  
                                    i2u2634_48 2260                                      i2u2626_48 214C  
                                    i2u2492_40 B514                                      i2u2644_40 247E  
                                    i2u2643_48 2428                                      i2u2572_40 17E4  
                                    i2u2571_48 1758                                      i2u2724_40 9A58  
                                    i2u2724_46 9A5A                                      i2u2572_47 17DA  
                                    i2u2389_40 C050                                      i2u2645_40 248E  
                                    i2u2581_40 192C                                      i2u2581_47 1922  
                                    i2u2494_40 A4E8                                      i2u2653_48 26E6  
                                    i2u2629_48 21CC                                      i2u2582_40 196A  
                                    i2u2574_40 181E                                      i2u2726_40 9A8C  
                                    i2u2582_47 1960                                      i2u2574_47 1814  
                                    i2u2638_48 22D2                                      i2u2591_48 1A6E  
                                    i2u2576_40 1878                                      i2u2728_40 9ABE  
                                    i2u2576_47 186E                                      i2u2680_48 2A58  
                                    i2u2648_48 24CC                                      i2u2585_40 1A04  
                                    i2u2577_40 18B4                                      i2u2760_48 C65E  
                                    i2u2585_47 19FA                                      i2u2577_47 18AA  
                                    i2u2586_40 1A0A                                      i2u2578_40 18BC  
                              ___lldiv@divisor 0204                                      i2u2762_48 C686  
                                    i2u2595_40 1B1C                                      i2u2594_48 1AE8  
                                    i2u2579_40 18DE                                      i2u2594_49 1B1E  
                                    i2u2595_47 1B12                                      i2u2579_47 18D4  
                                    i2u1796_40 8CD2                                      i2u2683_48 2AC8  
                                    i2u2596_40 1B60                                      i2u2756_40 AEDC  
                           __end_ofi1___xxtofl 9F86                                      i2u2596_47 1B56  
                                    i2u2692_48 2BCE                                      i2u2685_40 2B1A  
                                    i2u2676_48 29E6                                      i2u2598_40 1BF6  
                                    i2u1877_48 C396                                      i2u2598_47 1BEC  
                                    i2u2688_40 2B90                                      i2u2687_48 2B40  
                                    i2u2696_48 2C40                                      i2u2699_40 2DF6  
                                    i2u2698_48 2DA4                                      i2u2896_48 A846  
                                    i2u2889_48 A812                                ___lldiv@counter 020C  
                           _EUSART2_Initialize B714                    getDeviceIDString@inputDevID 020D  
                              i2_EUSART2_Write BFF4                                  ??_getDeviceID 020D  
                        I2C2_MasterWrite@pdata 0209                             _p_i2c2_trb_current 00D3  
                        I2C2_MasterWrite@pflag 020E                                        printf@f 03EB  
                           __end_ofi2___xxtofl A0C6                                        postdec1 000FE5  
                                      postdec2 000FDD                         I2C2_ISR@i2c_bytes_left 00D9  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 003E                ADC_PostProcessingHandler@i_3557 007A  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0200  
                               __tdiv_to_l_@f2 0204                          _terminalSetCursorHome CA7C  
                          __end_of_getI2CError C5FA                                ??i2__tdiv_to_l_ 0009  
                __size_of_I2C2_MasterTRBInsert 00A2                                        strcmp@r 0206  
                  __end_of_QIErrorTimerHandler C9A8                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0200                            ?_EUSART2_Initialize 0001  
                                i1_TMR3_Reload CB52                                  ??_LM73Convert 024C  
                          __end_of_getADCError C992                                        strlen@s 0200  
                 terminal_ringBufferPull@index 0516                                  ??__tdiv_to_l_ 0208  
                              ?_FLASH_ReadWord 0204                       _TMR0_SetInterruptHandler CAE2  
                       ?_heartbeatTimerHandler 0001                     CCP2_CallBack@capturedValue 0154  
                        _INT1_InterruptHandler 0186                                      _PORTBbits 000F8E  
                                    _TMR2_Stop CC1C                       _TMR3_SetInterruptHandler CAB8  
                           LM73Convert@QI_Conv 024F                         getDaysFromOnTime@years 0216  
                            __size_of_I2C2_ISR 0276                     __end_of_getYearsFromOnTime C46E  
                     ?_terminal_ringBufferPull 0001                        __end_of_I2C2_MasterRead BCF6  
                                  ___fladd@grs 0243                        _IOCBF2_InterruptHandler 017A  
                      __end_of_I2C2_Initialize C30E                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 0246                                      i1___fladd 7788  
                                    i1___fldiv 8872                               _next_adc_channel 00FC  
                                    i1___flmul 6DD4                                    ___fldiv@grs 023A  
                                  ___fldiv@rem 0233                                i2___fltol@sign1 0056  
                 ??_IOCBF3_SetInterruptHandler 0203                                      i2___fladd 7A96  
                                    i2___fldiv 8AFC                                      i2___awdiv B45E  
                                    i2___flneg C4FC                                      i2___awmod B5D6  
                                    i2___flmul 7128                                      i2___flsub BDCE  
                                    i2___fltol AC86                               __CFG_FEXTOSC$OFF 000000  
                            i2___lwdiv@divisor 0008                                      i2___lldiv B4E2  
                                    i2___llmod B7E0                                      i2___lwdiv BB14  
                                    i2___lwmod C036                              i2___lwdiv@counter 000A  
                             ?_TMR5_WriteTimer 0200                           ??_EUSART2_Initialize 0203  
                      _printErrorHandlerStatus 96E2                                      i2__doprnt 1724  
                  getMinutesFromOnTime@minutes 0215                        TMR5_WriteTimer@timerVal 0200  
                  getSecondsFromOnTime@minutes 0219                    getSecondsFromOnTime@seconds 0215  
                       __size_of_ringBufferLUT 05AE                              OLED_WriteString@s 0221  
                                  ___flmul@grs 021C                                    _CCP2CONbits 000FA8  
                                 _EUSART2_Read C0B8                             i2___llmod@dividend 000E  
                                   ?_OLED_Init 0001                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit C852  
         __size_of_terminalTextAttributesReset 0010                            __size_of__div_to_l_ 00F6  
                            __size_of_INT1_ISR 000A                             _adc_result_scaling 00C1  
                            __size_of_INT2_ISR 000A         terminalTextAttributes@foreground_color 0500  
              __size_of_terminalTextAttributes 0366                        ?_LM73AcquisitionHandler 0001  
                   ??_printCurrentMeasurements 02BB                       __size_of_CCP2_Initialize 0022  
                 __end_of_INTERRUPT_Initialize C7F2           __end_of_TMR2_DefaultInterruptHandler CC3E  
        __size_of_TMR2_DefaultInterruptHandler 0002                   _TMR2_DefaultInterruptHandler CC3C  
                       ??_I2C2_BusCollisionISR 0100                 ??_ADCC_DefaultInterruptHandler 0001  
                               __end_of___flge A96C                                 __end_of___fleq B2CA  
                               ?i1_TMR3_Reload 0001                                  i2_TMR1_Reload CB6E  
                    i2TMR1_WriteTimer@timerVal 0001                     ??_I2C2_MasterWriteTRBBuild 0207  
                               __end_of___wmul C622             __size_of_ADC_PostProcessingHandler 0974  
                                i2_TMR3_Reload CB7C                              __size_of_TMR0_ISR 0028  
                            __size_of_TMR1_ISR 0034                              __size_of_TMR2_ISR 0028  
                   ?_ADC_PostProcessingHandler 0001                              __size_of_TMR3_ISR 0034  
                               _TMR1_StopTimer CC14            __size_of_IOCBF3_SetInterruptHandler 000E  
                                   ?_TMR2_Stop 0001                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07E8                            __end_of_getDeviceID C812  
                               __end_of_fround 833A              __size_of_ADCC_GetConversionResult 0014  
                    __size_of_I2C2_MasterWrite 0050                               ?_clearUARTErrors 0001  
                    ?_ADCC_GetConversionResult 0001                       __size_of_updateErrorLEDs 0046  
                             i2___wmul@product 0005                                 __end_of_printf C134  
                                  _adc_results 00DD                             _getMajorRevisionID C1EC  
                               __end_of_strcat B904                                 __end_of_strcmp BBB6  
                               __end_of_strcpy BD3E                                 __end_of_strlen C4FC  
                       ?_I2C2_FunctionComplete 0001                              __size_ofi2___flge 00D0  
                          start_initialization ADEE                              __size_ofi2___fleq 008A  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                          __end_of_LM73Convert 9008                                    ??_I2C2_Stop 0100  
                     __size_of_TMR0_Initialize 002A                __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of__tdiv_to_l_ A2E8                        _getNXQChargeStateString B904  
                                  __end_of_abs C57E                          __end_of_INT1_CallBack C72E  
                   ??_floatToEngineeringFormat 02A7                                     ?i1___fladd 010E  
                               _TMR2_StopTimer CBFA                                     ?i1___fldiv 011E  
                                   ?i1___flmul 0137                                      i2printf@f 00A4  
      OLED_UpdateFromRAMBuffer@char_index_4304 0224        OLED_UpdateFromRAMBuffer@char_index_4305 0225  
      OLED_UpdateFromRAMBuffer@char_index_4306 0226                                     ?i2___fladd 0052  
EUSART2_SetRxInterruptHandler@interruptHandler 0200  EUSART2_SetTxInterruptHandler@interruptHandler 0200  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 0001  
                                   ?i2___awmod 0001                                     ?i2___flmul 002C  
                                   ?i2___flsub 0064                                     ?i2___fltol 004E  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0201                                     ?i2___lwdiv 0006  
                        __end_of_INT2_CallBack C70A                                     ?i2___lwmod 0001  
                            __size_ofi2_printf 003C                          __end_of_EUSART2_Write BEE6  
                               _device_on_time 00C5                                     ?i2__doprnt 006C  
                      __end_ofi2_EUSART2_Write C036                                 _TMR3_StopTimer CC10  
                              ___llmod@divisor 0211                              _LM73_temp_results 02DB  
                              ___llmod@counter 0215                               _nxq_charge_state 018F  
              I2C2_MasterWriteTRBBuild@address 0205                       __size_of_PIN_MANAGER_IOC 0014  
                                   ?i2_isdigit 0001                           I2C2_MasterRead@pdata 0209  
                     ?_I2C2_MasterReadTRBBuild 0200                           I2C2_MasterRead@pflag 020E  
                   __end_of_getHoursFromOnTime A7B2                                    _getI2CError C5D2  
                             __CFG_LPBOREN$OFF 000000                                    _getADCError C97C  
                    __size_of_OLED_WriteString 0058                 __end_of_LM73AcquisitionHandler 96E2  
                     __size_of_TMR1_Initialize 0050                 _ADC_PostProcessingHandler$6430 0074  
               _ADC_PostProcessingHandler$6426 007B                 _ADC_PostProcessingHandler$6427 007F  
               _ADC_PostProcessingHandler$6428 006C                 _ADC_PostProcessingHandler$6429 0070  
                                     ??___flge 0254                          __size_of_OLED_Command 0066  
                                     ??___fleq 0208                               ??_PMD_Initialize 0200  
                       ?_terminalSetCursorHome 0001                                       ??___wmul 0204  
                            ??_CCP2_CaptureISR 0156                  I2C2_MasterWriteTRBBuild@pdata 0202  
                               ?i2_TMR1_Reload 0001                           I2C2_ISR@pi2c_buf_ptr 00CF  
                                  _CCPTMRSbits 000FAE                           ??_getMajorRevisionID 020B  
                                   OLED_YX@Row 0218                                    __doprnt@idx 0266  
                                  __doprnt@len 0279                                    __doprnt@val 0285  
                       __end_of_TMR1_StopTimer CC18                                    __pdataBANK0 00FB  
                                  __pdataBANK1 01A6                                    __pdataBANK2 02ED  
                               ?i2_TMR3_Reload 0001                                       ??_fround 022B  
                                _ringBufferLUT 503A                     __end_of_EXT_INT_Initialize C2D8  
                ?_TMR2_DefaultInterruptHandler 0001                          __size_of_OLED_PutChar 00C4  
                                     ??_printf 02B9              getCauseOfReset@return_reset_cause 0200  
                               _TMR5_StopTimer CC0C                       getSecondsFromOnTime@days 0217  
                                     ??_strcat 0204                                       ??_strcmp 0204  
                                     ??_strcpy 0207                                       ??_strlen 0202  
            __end_of_ADC_PostProcessingHandler 49F6                     __end_of_getMinorRevisionID C6C0  
                                    ___fladd@a 0238                                      ___fladd@b 0234  
                     __end_ofi2_TMR1_StopTimer CC24                                     fround@prec 0233  
                               _eusart2RxCount 0191                                  ?i2__div_to_l_ 0001  
                                    ___fldiv@a 022B                                      ___fldiv@b 0227  
          __end_of_getNXQChargeStateStringCaps B9BC                    _getNXQChargeStateStringCaps B960  
                       __end_of_TMR2_StopTimer CC00                               ?_I2C2_MasterRead 0209  
                        _qi_isns_average_index 00D5                                      ___flmul@a 0212  
                                    ___flmul@b 020E                               ?_I2C2_Initialize 0001  
                                    ___flsub@a 0250                                      ___flsub@b 024C  
                                     ?_OLED_YX 0214                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0200  
                                __pcstackBANK3 03D1                                  __pcstackBANK5 0500  
                 _live_measurement_enable_flag 00D7                         _terminalTextAttributes 671A  
                     __size_of_TMR2_Initialize 0032                  __size_of_getMinutesFromOnTime 0150  
                  ?_IOCBF2_SetInterruptHandler 0200                              i2___lwmod@divisor 0003  
                    ??_printErrorHandlerStatus 02BB                              __size_of___xxtofl 0144  
                            i2___lwmod@counter 0005                                   _isdigit$5463 0201  
           __size_of_QIIdleChargedTimerHandler 0020                            EUSART2_Write@txData 0200  
                   ?_QIIdleChargedTimerHandler 0001                                  _i2c2_tr_queue 01A0  
                       __end_of_TMR3_StopTimer CC14                                i1___xxtofl@sign 0108  
                         _freq_meas_start_flag 02DA                  ??_getNXQChargeStateStringCaps 0202  
                  __end_of_ADCC_StopConversion CC34                        ?_getStringSecondsAsTime 02A3  
                                     ?i2_scale 0045                ??_EUSART2_SetRxInterruptHandler 0203  
                 __size_of_terminalClearScreen 0010                                       ?i2_putch 0001  
                                    __doprnt@c 028F                                      __doprnt@f 025A  
                        _INT2_InterruptHandler 0183                                   _OLED_Command B77A  
                            i1___fldiv@new_exp 012F                                    ??_OLED_Init 0214  
                        _TMR0_InterruptHandler 00C9                                      __pnvBANK2 02FF  
                  getMinorRevisionID@REVID_RAW 020B                        _IOCBF3_InterruptHandler 0177  
                   ??_LM73TempSensorInitialize 0210                               ___lwdiv@dividend 0205  
                       _PIN_MANAGER_Initialize AFDE                   __end_of_rightCapTouchHandler C9BE  
             ??_IOCBF2_DefaultInterruptHandler 0001                ?_IOCBF2_DefaultInterruptHandler 0001  
                                 _OLED_PutChar AB06                     __end_of_OLED_updateHandler 4082  
                     __size_of_TMR3_Initialize 0050                      __size_of_QIIdleIOCHandler 0014  
                      ??_getCauseOfResetString 0202                                ??i1_TMR3_Reload 0102  
               __size_of_freqMeasStartCaptures 000A                                      __pintcode 0008  
                __end_of_freqMeasStartCaptures CBC4                                    _getDeviceID C7F2  
             __end_of_TMR1_SetInterruptHandler CAE2                                  __pmediumconst E4DA  
                                     ?___fladd 0234                                       ?___fldiv 0227  
                                     ?___awdiv 0206                                      __ptext100 C554  
                                    __ptext101 85E8                                      __ptext110 AD40  
                                    __ptext102 A0C6                                       ?___flneg 0200  
                                    __ptext111 927E                                      __ptext103 C4CE  
                                    __ptext200 9F86                                      __ptext120 CBC4  
                                    __ptext112 94B6                                      __ptext104 BF2A  
                                    __ptext201 BDCE                                      __ptext121 BAC2  
                                    __ptext113 8D84                                      __ptext105 BA16  
                                    __ptext210 CC30                                      __ptext202 7A96  
                                    __ptext130 C916                                      __ptext114 9CFE  
                                    __ptext106 B116                                      __ptext211 CBAE  
                                    __ptext203 7128                                      __ptext131 CC3C  
                                    __ptext123 C342                                      __ptext115 6A80  
                                    __ptext107 B77A                                      __ptext212 CA10  
                                    __ptext204 A96C                                      __ptext140 CBA2  
                                    __ptext132 CBFA                                      __ptext124 C812  
                                    __ptext116 BC56                                      __ptext108 C172  
                                    __ptext213 CC34                                      __ptext205 8AFC  
                                    __ptext141 C94A                                      __ptext133 CC1C  
                                    __ptext125 CC3A                                      __ptext117 BE5C  
                                    __ptext109 AB06                                      __ptext214 CA24  
                                    __ptext206 C264                                      __ptext150 C992  
                                    __ptext142 C078                                      __ptext134 CB60  
                                    __ptext126 CC18                                      __ptext118 BCA6  
                                    __ptext215 0000                                      __ptext207 C4FC  
                                    __ptext151 CC3E                                      __ptext143 AA3C  
                                    __ptext135 CBEC                                      __ptext127 CB52  
                                    __ptext119 AF3C                                      __ptext208 CC06  
                                    __ptext160 CB6E                                      __ptext152 CC20  
                                    __ptext144 9E42                                      __ptext136 CC00  
                                    __ptext128 C832                                      __ptext209 CC2C  
                                    __ptext161 C8C4                                      __ptext153 C64A  
                                    __ptext145 6DD4                                      __ptext137 9008  
                                    __ptext129 C622                                      __ptext170 C6E6  
                                    __ptext162 C5A8                                      __ptext154 CC40  
                                    __ptext146 8872                                      __ptext138 BF6E  
                                    __ptext171 CC46                                      __ptext163 CC44  
                                    __ptext155 9A50                                      __ptext147 7788  
                                    __ptext139 C930                                      __ptext180 1724  
                                    __ptext172 C9A8                                      __ptext164 C9FC  
                                    __ptext156 C9E8                                      __ptext181 5F5C  
                                    __ptext173 CBD8                                      __ptext165 CB7C  
                                    __ptext157 C57E                                      __ptext149 C376  
                                    __ptext190 A2E8                                      __ptext182 B5D6  
                                    __ptext174 C70A                                      __ptext166 C8E0  
                                    __ptext158 CC42                                      __ptext191 A4DC  
                                    __ptext183 B45E                                      __ptext175 CC48  
                                    __ptext167 CC24                                      __ptext159 C8A8  
                                    __ptext192 C6C0                                      __ptext184 CBE2  
                                    __ptext176 C9BE                                      __ptext168 CC28  
                                    __ptext193 B7E0                                      __ptext185 BFF4  
                                    __ptext177 C3DC                                      __ptext169 CBCE  
                                    __ptext194 B4E2                                      __ptext186 C852  
                                    __ptext178 AE98                                      __ptext195 AC86  
                                    __ptext187 833A                                      __ptext179 C228  
                                     ?___awmod 0200                                      __ptext196 B2CA  
                                    __ptext188 C036                                      __ptext197 C672  
                                    __ptext189 BB14                                      __ptext198 CC4A  
                                    __ptext199 4082                                       ?___flmul 020E  
                                     ?___flsub 024C                                       ?___fltol 0230  
                                     ?___lldiv 0200                                       ?___llmod 020D  
                                    __npowers_ E50F                                       ?___lwdiv 0205  
                              _getCauseOfReset B9BC                                       ?___lwmod 0200  
                               ?_ringBufferLUT 02BB                                      _getUserID C30E  
                              ?_TMR1_StopTimer 0001                         __end_of_TMR5_StopTimer CC10  
            _EUSART2_TxDefaultInterruptHandler 0180                                       ?__doprnt 0258  
                       OLED_PutChar@data_array 0214                                    __pintcodelo 0018  
                                     _I2C2_ISR 9008                      __size_ofi1_TMR3_StopTimer 0004  
                                  _LM73Convert 8D84                                    __tdiv_to_l_ A1E8  
                                  ??_TMR2_Stop 0100                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 0208                                       _BAUD2CON 000E9F  
                            ??_CCP2_Initialize 0200                      ??_getNXQChargeStateString 0202  
                   ??_INT2_SetInterruptHandler 0203                       __size_of_TMR1_StartTimer 0004  
                                     ?_isdigit 0001                                       ?_memmove 0200  
                  floatToEngineeringFormat@res 02B3                                ?_TMR2_StopTimer 0001  
                  getStringSecondsAsTime@hours 03E9                    getStringSecondsAsTime@years 03E7  
                             __CFG_WDTE$NSLEEP 000000             __end_of_IOCBF3_SetInterruptHandler CAFE  
                   _IOCBF3_SetInterruptHandler CAF0                                    ??i1___fladd 0116  
                       getHoursFromOnTime@days 0217                                    ??i1___fldiv 0126  
                                  ??i1___flmul 013F                                      _hexpowers E543  
            __size_of_OLED_UpdateFromRAMBuffer 0122                      ?_OLED_UpdateFromRAMBuffer 0001  
                             ___lwdiv@quotient 020A                        _OLED_updateHandler$6043 03F3  
                                  ??i2___fladd 005A                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0005  
                                  ??i2___awmod 0005                                       ?_sprintf 0290  
                                  ??i2___flmul 0034                                    ??i2___flsub 005E  
                                  ??i2___fltol 0052                              ??_updateErrorLEDs 0200  
                                  ??i2___lldiv 0009                                       _T2CLKCON 000FBF  
                               __size_of_scale 0434                                    ??i2___llmod 0016  
               __end_of_getStringSecondsAsTime 671A                                       ?_strncpy 0200  
                                  ??i2___lwdiv 000A                                    ??i2___lwmod 0005  
                               __size_of_putch 0014                           _INTERRUPT_Initialize C7D2  
                              ?_TMR3_StopTimer 0001                                    ??i2__doprnt 0072  
            __end_of_QIIdleChargedTimerHandler C832                __end_of_I2C2_MasterReadTRBBuild BB14  
                            ??_TMR0_Initialize 0203                   __size_of_leftCapTouchHandler 0016  
                 __size_of_EUSART2_Receive_ISR 00A4                       _pos12_isns_average_index 00D6  
                                     _INT1_ISR CBD8                                       _INT2_ISR CBCE  
                               ___wmul@product 0204                               i2__doprnt@tmpval 0091  
                             ?i2_EUSART2_Write 0001                                       _LATBbits 000F84  
                                     _LATCbits 000F85              __size_of_INT1_SetInterruptHandler 000E  
                    ?_INT1_SetInterruptHandler 0200                                    strncpy@from 0202  
                                     _IPR0bits 000EBA                                       _IPR1bits 000EBB  
                                     _PIE0bits 000EC2                                       _IPR3bits 000EBD  
                                     _PIE1bits 000EC3                                       _IPR4bits 000EBE  
                                  strncpy@size 0204                                       _PIE3bits 000EC5  
                                     _IPR6bits 000EC0                                       _PIE4bits 000EC6  
                                     _PIE6bits 000EC8                                    ??i2_isdigit 0001  
                     __size_of_TMR2_StartTimer 0006                            __CFG_BORV$VBOR_2P45 000000  
                     __size_of_TMR1_WriteTimer 0020            __end_of_ADC_acquisitionTimerHandler C930  
                  _ADC_acquisitionTimerHandler C916                          __end_of_CCP2_CallBack C0B8  
                   ??_TMR0_SetInterruptHandler 0203                                       _PIR0bits 000ECA  
                                     _PIR1bits 000ECB                             __end_of__div_to_l_ A4DC  
                             ??_FLASH_ReadByte 0204                                       _PIR3bits 000ECD  
                                     _PIR4bits 000ECE                                ??i2_TMR1_Reload 0003  
                   ??_TMR3_SetInterruptHandler 0203                                       _PIR6bits 000ED0  
                                     _PIR7bits 000ED1                __end_of_printErrorHandlerStatus 98D6  
                             ??_FLASH_ReadWord 0208                       __size_of_TMR5_Initialize 003C  
                __size_of_getSecondsFromOnTime 017A               __end_of_printCurrentMeasurements 5B28  
                                ??_TMR1_Reload 0202                              i2___fldiv@new_exp 0024  
                 OLED_updateHandler@dev_id_str 03D1                                ??i2_TMR3_Reload 0003  
                                     _SSP2CON1 000E96                                       _SSP2CON3 000E98  
                                     _TMR0_ISR C64A                        ??_heartbeatTimerHandler 005E  
                                     _TMR1_ISR C376                                  ??_TMR3_Reload 0202  
                                     _TMR2_ISR C622                                       _TMR3_ISR C342  
                        getDaysFromOnTime@days 0215                                       _SSP2STAT 000E95  
                            ??_PIN_MANAGER_IOC 0003                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 020B  
                      getYearsFromOnTime@years 0211                                ?_TMR5_StopTimer 0001  
                I2C2_MasterTRBInsert@ptrb_list 0200                  ??_ADC_acquisitionTimerHandler 0101  
                            ??_TMR1_Initialize 0203                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge A96C                                     _ADCON3bits 000F5B  
                                     i2___fleq B2CA                              ___wmul@multiplier 0200  
                             _I2C2_MasterWrite BC56                                       i2___wmul C6C0  
                      __size_of_FVR_Initialize 000C              getMinutesFromOnTime@input_seconds 020D  
                     __size_of_TMR3_StartTimer 0004                 ??_TMR2_DefaultInterruptHandler 0100  
            __size_of_TMR2_SetInterruptHandler 000E                              i2___awdiv@divisor 0009  
                                     i2_fround 833A               __end_of_floatToEngineeringFormat 503A  
                    ?_TMR2_SetInterruptHandler 0200                                     _I2C_STATUS 01A5  
                            i2___awdiv@counter 000B                     __end_of_QIChargeIOCHandler C8C4  
 ADC_PostProcessingHandler@current_adc_channel 0078                    __end_of_ADCC_GetFilterValue CA24  
                __size_of_EUSART2_Transmit_ISR 0032            __size_of_getCauseOfResetStringSmall 0030  
                                     i2_printf C228                               __size_of_OLED_YX 0044  
                                    copy_data0 AE02                                      copy_data1 AE22  
                 __end_of_I2C2_MasterTRBInsert AFDE                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001            getStringSecondsAsTime@return_string 0384  
                      ??_ADCC_ClearAccumulator 0100                              i1_TMR3_WriteTimer C832  
                           _getYearsFromOnTime C43E                              ??_TMR2_Initialize 0203  
             __size_of_terminal_ringBufferPull 00F2                               __size_ofi2_scale 0418  
                                     _OledFont E563                               __size_ofi2_putch 000A  
              __end_of_getNXQChargeStateString B960                             ?i1_TMR3_WriteTimer 0100  
                      __end_of_getCauseOfReset BA16                       __size_of_freqMeasConvert 00CA  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult CA38                       freqMeasConvert@qi_period 0150  
        __end_of_EUSART2_SetRxInterruptHandler CB44         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler CB36                       __size_of_TMR3_WriteTimer 0020  
                       OLED_PutChar@input_base 021D                               _OLED_WriteString BA16  
                            i2_TMR1_WriteTimer C8C4                            ?_getYearsFromOnTime 020D  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
               I2C2_MasterWriteTRBBuild@length 0204                                ??_ringBufferLUT 03FA  
                           ?i2_TMR1_WriteTimer 0001                            ??i1_TMR3_WriteTimer 0102  
                      LM73Convert@Ambient_Conv 0253              getSecondsFromOnTime@input_seconds 020D  
                      ??_OSCILLATOR_Initialize 0200                                      memmove@d1 0200  
                                    memmove@s1 0202                 getDaysFromOnTime@input_seconds 020D  
                             __size_of___fladd 030E                               __size_of___fldiv 028A  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0354  
                             __size_of___flsub 0048                               __size_of___fltol 00BC  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                               __size_of___lwdiv 0054  
                             __size_of___lwmod 0044                        ??_I2C2_FunctionComplete 0100  
                             __size_of__doprnt 1724                                    _fround$6045 022F  
                                  _fround$6046 022B                    ??_ADC_PostProcessingHandler 005E  
                            ??_TMR3_Initialize 0203                       _TMR1_SetInterruptHandler CAD4  
                        __end_ofi2__tdiv_to_l_ A3E6                                  ?_getUARTError 0001  
                              _putch$intlevel0 C9DA                            __end_of_TMR1_Reload CAB8  
                          ??i2_TMR1_WriteTimer 0003            __end_of_terminalTextAttributesReset CA6C  
                  _terminalTextAttributesReset CA5C                          _TMR1_InterruptHandler 016E  
                          __end_of_TMR3_Reload CAAA                                       ___xxtofl 9CFE  
                                   _T0CON0bits 000FD5                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0202                ??_INTERRUPT_InterruptManagerLow 0158  
                             __size_of_isdigit 0022                           ??_getYearsFromOnTime 0211  
                 __size_of_QIErrorTimerHandler 0016                               __size_of_memmove 00AE  
                    getSecondsFromOnTime@hours 0218                                ___lwdiv@divisor 0207  
                    getSecondsFromOnTime@years 0216                                ___lwdiv@counter 0209  
                         _rightCapTouchHandler C9A8                                       __ptext10 B8A6  
                                     __ptext11 B904                                       __ptext20 C5D2  
                                     __ptext12 C30E                                       __ptext21 C97C  
                                     __ptext13 B07E                                     _T1GCONbits 000FD0  
                                     __ptext30 CC10                                       __ptext22 C0B8  
                                     __ptext14 C40E                                       __ptext31 CA9C  
                                     __ptext23 CA7C                                       __ptext15 CB8A  
                                     __ptext40 C3AA                                       __ptext32 C792  
                                     __ptext24 CA8C                                       __ptext16 C870  
                                     __ptext41 CAC6                                       __ptext33 CC14  
                                     __ptext25 C0F6                                       __ptext17 CA6C  
                                     __ptext50 C964                                       __ptext42 BC06  
                                     __ptext34 CAAA                                       __ptext26 B9BC  
                                     __ptext18 BE16                                       __ptext51 C7D2  
                                     __ptext43 CAD4                                       __ptext35 C7B2  
                                     __ptext27 CBBA                                       __ptext19 CBF4  
                                     __ptext60 C72E                                       __ptext52 C2D8  
                                     __ptext44 C52A                                       __ptext36 C134  
                                     __ptext28 C772                                       __ptext61 B846  
                                     __ptext53 CB96                                       __ptext45 CAE2  
                                     __ptext37 C1B0                                       __ptext29 CC0C  
                                     __ptext70 C1EC                                       __ptext62 CB44  
                                     __ptext54 C2A0                                       __ptext46 C88C  
                                     __ptext38 BBB6                                       __ptext71 A6C2  
                                     __ptext63 2E3C                                       __ptext55 CB0C  
                                     __ptext47 AFDE                                       __ptext39 CAB8  
                                     __ptext80 5B28                                       __ptext72 C7F2  
                                     __ptext64 BCF6                                       __ptext56 CB1A  
                                     __ptext48 CAF0                                       __ptext81 B564  
                                     __ptext73 BFB2                                       __ptext65 C43E  
                                     __ptext57 B714                                       __ptext49 CAFE  
                                     __ptext90 A3E6                                       __ptext82 B354  
                                     __ptext74 C8FC                                       __ptext66 98D6  
                                     __ptext58 CB28                                       __ptext91 C5FA  
                                     __ptext83 C9D4                                       __ptext75 B1AE  
                                     __ptext67 B960                                       __ptext59 CB36  
                                     __ptext92 B646                                       __ptext84 BEA2  
                                     __ptext76 C46E                                       __ptext68 9BAE  
                                     __ptext93 B3DA                                       __ptext85 C750  
                                     __ptext77 49F6                                       __ptext69 C69A  
                                     __ptext94 ABCA                                       __ptext86 8078  
                                     __ptext78 BD3E                                       __ptext95 BD86  
                                     __ptext87 BEE6                                       __ptext79 0000  
                                     __ptext96 747A                                       __ptext88 BA6E  
                                     __ptext97 C49E                                       __ptext89 A1E8  
                                     __ptext98 A89A                                       __ptext99 B23E  
                                     __powers_ E4DB                      __end_ofi1_TMR3_WriteTimer C852  
                                 _SSP2CON1bits 000E96                                   _SSP2CON2bits 000E97  
                          ringBufferLUT@userID 03FC                              ??_TMR1_StartTimer 0001  
                             __size_of_sprintf 0048                                     _IOCBF2_ISR C5A8  
                                   _IOCBF3_ISR C57E                                     _T3GCONbits 000FCA  
          floatToEngineeringFormat@input_value 02A3                     getStringSecondsAsTime@days 03E8  
                   getStringSecondsAsTime@buff 03D1                        TMR3_WriteTimer@timerVal 0200  
                             __size_of_strncpy 0066                    __size_of_EUSART2_Initialize 0066  
                                   strcpy@from 0205                                 i2_isdigit$5463 0002  
                              _CCP2_CaptureISR C94A                                  __size_of_fabs 003C  
                                __size_of_main 02D4                                     _T5GCONbits 000FC4  
                 OLED_updateHandler@rev_id_str 03E2                                  OLED_Clear@col 0223  
                    __end_ofi2_TMR1_WriteTimer C8E0                           __end_ofi2__div_to_l_ A5D0  
                                OLED_Clear@row 0221           __end_of_TMR0_DefaultInterruptHandler CC42  
        __size_of_TMR0_DefaultInterruptHandler 0002                   _TMR0_DefaultInterruptHandler CC40  
                              i2__doprnt@width 009D                                  OLED_YX@Column 0214  
                         __CFG_WDTCWS$WDTCWS_7 000000                        __size_of_clearI2CErrors 001C  
                      ??_terminalSetCursorHome 02B9                                   ?_getI2CError 0001  
                      I2C2_MasterWrite@address 020C          terminalTextAttributes@input_attribute 02BA  
                                 ?_getADCError 0001                        __size_of_clearADCErrors 0010  
                     __size_of_TMR5_WriteTimer 0020                                 OLED_PutChar@ch 0220  
                            i2_TMR3_WriteTimer C8E0                               _QIIdleIOCHandler C9FC  
                                   _RC2STAbits 000E9D                      i1TMR3_WriteTimer@timerVal 0100  
                 __end_of_ADCC_StartConversion CB6E                                       int$flags 005F  
                           ?i2_TMR3_WriteTimer 0001                                    ??_getUserID 020D  
                            ??_TMR2_StartTimer 0001                        I2C2_MasterWrite@trBlock 019B  
                            ??_TMR1_WriteTimer 0202                               i1_TMR3_StopTimer CC18  
                               ??_getUARTError 0200                                 __doprnt@tmpval 027D  
         __end_of_TMR3_DefaultInterruptHandler CC3C          __size_of_TMR3_DefaultInterruptHandler 0002  
                 _TMR3_DefaultInterruptHandler CC3A                  __size_of_I2C2_BusCollisionISR 000C  
                          _terminalClearScreen CA8C           __end_of_INT1_DefaultInterruptHandler CC4A  
        __size_of_INT1_DefaultInterruptHandler 0002                   _INT1_DefaultInterruptHandler CC48  
                            ??_TMR5_Initialize 0200                             _getHoursFromOnTime A6C2  
                      ?_terminalTextAttributes 02B9               __size_of_I2C2_MasterReadTRBBuild 0052  
                            i2___awmod@divisor 0003                            ??i2_TMR3_WriteTimer 0003  
                            i2___awmod@counter 0005                              ?i2_TMR1_StopTimer 0001  
                            _getDaysFromOnTime B1AE                                     _INTCONbits 000FF2  
                                  _NVMCON1bits 000F81                                     _FVRCONbits 000F31  
                        ?_rightCapTouchHandler 0001                             ??i2_TMR1_StopTimer 0001  
                           ?_getDaysFromOnTime 020D                                       isdigit@c 0202  
                       ??_INTERRUPT_Initialize 0200                            ?_getHoursFromOnTime 020D  
            __size_of_printCurrentMeasurements 0540                                       memmove@d 0208  
                                     memmove@n 0204                                       memmove@s 020A  
                                     scale@scl 022F                      ?_printCurrentMeasurements 0001  
                           _EXT_INT_Initialize C2A0                       __size_of_clearUARTErrors 000C  
            __size_of_I2C2_MasterWriteTRBBuild 0046                    ??_QIIdleChargedTimerHandler 0102  
                    ?_I2C2_MasterWriteTRBBuild 0200           __end_of_ADCC_DefaultInterruptHandler CC4C  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler CC4A  
                            ??_TMR3_StartTimer 0001                                       intlevel1 0000  
                                     intlevel2 0000                                     _OLED_Clear C172  
                                    sprintf@ap 029C                                      sprintf@pb 029E  
                             __tdiv_to_l_@exp1 0210                                      sprintf@wh 0290  
                             __tdiv_to_l_@cntr 020F                                     _OLED_Frame 02D7  
                           _getMinorRevisionID C69A             __end_of_getCauseOfResetStringSmall C49E  
                   _getCauseOfResetStringSmall C46E                               __tdiv_to_l_@quot 020B  
                              i2___xxtofl@sign 000D                      _ADC_PostProcessingHandler 4082  
                         ?_terminalClearScreen 0001                            ??_getDaysFromOnTime 0211  
               floatToEngineeringFormat@result 03AC                               ___lwmod@dividend 0200  
                          I2C2_ISR@i2c_address 00F9                               ___lldiv@dividend 0200  
                      ?_PIN_MANAGER_Initialize 0001                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                      __end_ofi2_TMR3_WriteTimer C8FC  
                         LM73Convert@POS5_Conv 0251                                    _reset_cause 02FF  
                             ?_getCauseOfReset 0001                               ??_TMR1_StopTimer 0200  
                 __end_of_getMinutesFromOnTime 9CFE                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 0206                                      strncpy@to 0200  
            __size_of_floatToEngineeringFormat 0644                  ?_TMR0_DefaultInterruptHandler 0001  
                    ?_floatToEngineeringFormat 02A3                                _CCP2_Initialize C72E  
                         ??_getHoursFromOnTime 0211                                   ?_getDeviceID 020B  
                       I2C2_MasterWrite@length 020B                                _QI_current_edge 0190  
                                  _TMR1_Reload CAAA                                       printf@ap 03F3  
                                     printf@pb 03F5                         __size_of_INT1_CallBack 0024  
           terminalTextAttributes@print_string 0501                 __size_of_getCauseOfResetString 0030  
                                  _TMR3_Reload CA9C                  __end_of_getCauseOfResetString C43E  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult CA24  
                            ??_freqMeasConvert 0150                 ?_EUSART2_SetRxInterruptHandler 0200  
             __end_of_OLED_UpdateFromRAMBuffer A1E8                           _I2C2_MasterTRBInsert AF3C  
                             ??_TMR2_StopTimer 0100                              ??_TMR3_WriteTimer 0202  
       terminalTextAttributes@background_color 02B9                         __size_of_INT2_CallBack 0024  
                                 ?_LM73Convert 0001                 __end_of_terminalTextAttributes 6A80  
                                 ?__tdiv_to_l_ 0200                            _leftCapTouchHandler C9BE  
                       __size_of_EUSART2_Write 0044                            _EUSART2_Receive_ISR AE98  
                              _updateErrorLEDs BE16                      __end_of_getDaysFromOnTime B23E  
       __end_of_INTERRUPT_InterruptManagerHigh A89A        __size_of_INTERRUPT_InterruptManagerHigh A892  
               _INTERRUPT_InterruptManagerHigh 0008                    getMajorRevisionID@REVID_RAW 020E  
                               _FVR_Initialize CB96                           ??_EXT_INT_Initialize 0203  
                        CCP2_CaptureISR@module 0156                                       sprintf@f 0292  
                                     strcat@cp 0204                  ?_TMR3_DefaultInterruptHandler 0001  
                                     strcat@to 0200                  ?_INT1_DefaultInterruptHandler 0001  
                                     strcmp@s1 0200                                       strcmp@s2 0202  
                                   _SSP2DATPPS 000E90                              ringBufferLUT@line 02BB  
                             ___lldiv@quotient 0208                             _OLED_updateHandler 2E3C  
                                   _SSP2CLKPPS 000E8F                                ___lwmod@divisor 0202  
       __end_of_IOCBF2_DefaultInterruptHandler CC46        __size_of_IOCBF2_DefaultInterruptHandler 0002  
               _IOCBF2_DefaultInterruptHandler CC44                                _TMR0_Initialize C52A  
                                     strcpy@cp 0207                                       strlen@cp 0202  
                                     strcpy@to 0203                           ??_getMinorRevisionID 020B  
                              ___lwmod@counter 0204                               ??_TMR3_StopTimer 0200  
             __end_of_INT1_SetInterruptHandler CB28                        __end_of_CCP2_CaptureISR C964  
                            _getDeviceIDString B07E                    ?_IOCBF3_SetInterruptHandler 0200  
                                   _TMR2_Start CC2C                                     _TX2STAbits 000E9E  
                                ___fladd@signs 0240                     __size_ofi1_TMR3_WriteTimer 0020  
                          ?_OLED_updateHandler 0001                             ?_getDeviceIDString 020D  
        __end_of_INTERRUPT_InterruptManagerLow 00A2         __size_of_INTERRUPT_InterruptManagerLow 008A  
                _INTERRUPT_InterruptManagerLow 0018                                    ?_IOCBF2_ISR 0001  
                                  ?_IOCBF3_ISR 0001                   floatToEngineeringFormat@sign 02AF  
               ??_ADCC_SetADTIInterruptHandler 0203                 __end_of_PIN_MANAGER_Initialize B07E  
                            ??_ADCC_Initialize 0203                          ??_terminalClearScreen 02B9  
                            i2__div_to_l_@exp1 000E                       __size_of_I2C2_MasterRead 0050  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull A5D0  
                         ?_leftCapTouchHandler 0001                       __size_of_I2C2_Initialize 0036  
              ??_EUSART2_SetTxInterruptHandler 0203                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001                                   ___fladd@aexp 0241  
                                 ___fladd@bexp 0242                  ?_ADCC_DefaultInterruptHandler 0001  
                   ADC_PostProcessingHandler@i 0079                             __size_of_I2C2_Stop 0044  
                              _PIN_MANAGER_IOC C9E8                       __end_of_I2C2_MasterWrite BCA6  
                        _TMR2_InterruptHandler 0174                     __size_ofi2_TMR1_WriteTimer 001C  
                          ??_getDeviceIDString 020F                                _TMR1_Initialize BC06  
            _EUSART2_RxDefaultInterruptHandler 017D                               ??_TMR5_StopTimer 0200  
                 __size_of_ADCC_StopConversion 0004  
